[[{"text": ["ElementTree is much easier to use, because it represents an XML tree (basically) as a structure of lists, and attributes are represented as dictionaries."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["ElementTree needs much less memory for XML trees than DOM (and thus is faster), and the parsing overhead via iterparse is comparable to SAX.", "Additionally, iterparse returns partial structures, and you can keep memory usage constant during parsing by discarding the structures as soon as you process them."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "iterparse", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "iterparse", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["ElementTree, as in Python 2.5, has only a small feature set compared to full-blown XML libraries, but it's enough for many applications.", "If you need a validating parser or complete XPath support, lxml is the way to go.", "For a long time, it used to be quite unstable, but I haven't had any problems with it since 2.1."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["ElementTree deviates from DOM, where nodes have access to their parent and siblings.", "Handling actual documents rather than data stores is also a bit cumbersome, because text nodes aren't treated as actual nodes.", "In the XML snippet"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &lt;a&gt;This is &lt;b&gt;a&lt;/b&gt; test&lt;/a&gt;\n</code>\n</pre>\n", "senID": 4}, {"text": ["The string test will be the so-called tail of element b."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "test", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "tail", "childNum": 0, "tag": "code", "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["In general, I recommend ElementTree as the default for all XML processing with Python, and DOM or SAX as the solutions for specific problems."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["ElementTree's parse() is like DOM, whereas iterparse() is like SAX.", "In my opinion, ElementTree is better than DOM and SAX in that it provides API easier to work with."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["ElementTree has more pythonic API.", "It also is in standard library now so using it reduces dependencies."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I actually prefer lxml as it has API like ElementTree, but has also nice additional features and performs well."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "lxml", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codespeak.net/lxml/"}]}]]