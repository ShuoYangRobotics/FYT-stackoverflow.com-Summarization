[[{"text": ["math.isnan()"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "math.isnan()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/math.html#math.isnan"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import math\n&gt;&gt;&gt; x=float('nan')\n&gt;&gt;&gt; math.isnan(x)\nTrue\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The usual way to test for a NaN is to see if it's equal to itself:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def isNaN(num):\n    return num != num\n</code>\n</pre>\n", "senID": 1}], [{"text": ["numpy.isnan(float) tells you if it's NaN or not in Python 2.5"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["math.isnan()"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "math.isnan()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/math.html#math.isnan"}]}, {"text": ["or compare the number to itself.", "NaN is always != NaN, otherwise (e.g.", "if it is a number) the comparison should succeed."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["Another method if you're stuck on &lt;2.6, you don't have numpy, and you don't have IEEE 754 support:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def isNaN(x):\n    return str(x) == str(1e400*0)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["With python &lt; 2.6 I ended up with"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def isNaN(x):\n    return str(float(x)).lower() == 'nan'\n</code>\n</pre>\n", "senID": 1}, {"text": ["This works for me with python 2.5.1 on a Solaris 5.9 box and with python 2.6.5 on Ubuntu 10 "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here is how:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def isNaN(x):\n    try: float(x)\n    except ValueError: return True\n    return False\n</code>\n</pre>\n", "senID": 1}]]