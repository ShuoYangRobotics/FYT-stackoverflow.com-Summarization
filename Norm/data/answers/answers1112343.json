[[{"text": ["Register your handler with signal.signal like this:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "signal.signal", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\nimport signal\nimport sys\ndef signal_handler(signal, frame):\n        print 'You pressed Ctrl+C!'\n        sys.exit(0)\nsignal.signal(signal.SIGINT, signal_handler)\nprint 'Press Ctrl+C'\nsignal.pause()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Code adapted from here."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.linuxjournal.com/article/3946"}]}, {"text": ["More documentation on signal can be found here. "], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "signal", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://docs.python.org/library/signal.html", "text": "here", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You can treat it like an exception (KeyboardInterrupt), like any other.", "Make a new file and run it from your shell with the following contents to see what I mean:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import time, sys\n\nx = 1\nwhile True:\n    try:\n        print x\n        time.sleep(.3)\n        x += 1\n    except KeyboardInterrupt:\n        print \"Bye\"\n        sys.exit()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can handle Ctrl-C by catching the KeyboardInterrupt exception.", "You can implement any clean-up code in the exception handler."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "KeyboardInterrupt", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Btw, you answerers, instead of busy while-loops, you should just use signal.pause() to wait for Ctrl-C."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "signal.pause()", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["from the document"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "document", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/signal.html"}]}, {"code": "<pre>\n<code>\n import signal\nimport time\n\ndef handler(signum, frame):\n    print 'Here you go'\n\nsignal.signal(signal.SIGINT, handler)\n\ntime.sleep(10)#press Ctrl+c here\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use the functions in Python's built-in signal module to set up signal handlers in python.", "Specifically the signal.signal(signalnum, handler) function is used to register the handler function for signal signalnum."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "signal module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/signal.html"}, {"text": "signal.signal(signalnum, handler)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "handler", "childNum": 0, "tag": "code", "childList": []}, {"text": "signalnum", "childNum": 0, "tag": "code", "childList": []}]}]]