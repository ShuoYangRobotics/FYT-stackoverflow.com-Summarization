[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; x = \"Hello World!\"\n&gt;&gt;&gt; x[2:]\n'llo World!'\n&gt;&gt;&gt; x[:2]\n'He'\n&gt;&gt;&gt; x[:-2]\n'Hello Worl'\n&gt;&gt;&gt; x[-2:]\n'd!'\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Besides the direct answer that others have given, you can find all the other rules for slicing behavior explained in the Strings section of the official tutorial."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/introduction.html#strings"}]}], [{"text": ["Yes there is.", "Your example is very close:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n myString[2:]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["One example seems to be missing here: full (shallow) copy."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = \"Hello World!\"\n&gt;&gt;&gt; x\n'Hello World!'\n&gt;&gt;&gt; x[:]\n'Hello World!'\n&gt;&gt;&gt; x==x[:]\nTrue\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is a common idiom for creating a copy of sequence types (not of interned strings).", "[:] Shallow copies a list, See python-list-slice-used-for-no-obvious-reason."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "[:]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://stackoverflow.com/questions/323689/python-list-slice-used-for-no-obvious-reason", "text": "python-list-slice-used-for-no-obvious-reason", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["myString[2:] .. leave off the second index to go to the end"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "myString[2:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["mystring[2:] "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mystring[2:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You've got it right there except for \"end\".", "Its called slice notation.", "Your example should read."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n new_sub_string = myString[2:]\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you leave out the second param it is implicitly the end of the string."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]