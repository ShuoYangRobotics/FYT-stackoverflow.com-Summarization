[[{"text": ["First, regarding this solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # -*- coding: utf-8 -*-\nprint u\"\u00e5\u00e4\u00f6\".encode('utf-8')\n</code>\n</pre>\n", "senID": 1}, {"text": ["It's not practical to explicitly print with a given encoding every time.", "That would be repetitive and error-prone."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["A better solution is to change sys.stdout at the start of your program, to encode with a selected encoding.", "Here is one solution I found on Python: How is sys.stdout.encoding chosen?, in particular a comment by \"toka\":"], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "sys.stdout", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "sys.stdout", "tag": "code"}]}, {"text": "sys.stdout", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://drj11.wordpress.com/2007/05/14/python-how-is-sysstdoutencoding-chosen/", "text": "Python: How is sys.stdout.encoding chosen?", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n import sys\nimport codecs\nsys.stdout = codecs.getwriter('utf8')(sys.stdout)\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Your code works when run in an script because python encodes the output to whatever encoding your terminal application is using.", "If you are piping you must encode it yourself."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A rule of thumb is: Always use unicode internally.", "decode what you receive, encode what you send."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # -*- coding: utf-8 -*-\nprint u\"\u00e5\u00e4\u00f6\".encode('utf-8')\n</code>\n</pre>\n", "senID": 2}, {"text": ["Another didactic example is a python program to convert between iso8859-1 and utf-8, making everything uppercase in between."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import sys\nfor line in sys.stdin:\n    # decode what you receive:\n    line = line.decode('iso8859-1')\n\n    # work with unicode internally:\n    line = line.upper()\n\n    # encode what you send:\n    line = line.encode('utf-8')\n    sys.stdout.write(line)\n</code>\n</pre>\n", "senID": 4}, {"text": ["Setting system default encoding is a bad idea because some modules and libraries you use can rely on the fact it is ascii.", "Don't do it."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["You may want to try changing the environment variable \"PYTHONIOENCODING\" to \"utf_8.", "\" I have written a page on my ordeal with this problem."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "page on my ordeal with this problem", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://daveagp.wordpress.com/2010/10/26/what-a-character/"}]}], [{"text": ["export PYTHONIOENCODING=utf-8"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["do the job, but can't set it on python itself ... "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]