[[{"text": ["I'm a big fan of pod.", "Design your report templates in open office writer (or ms word + sun's odf plugin) and then combine it with your data in a simple and flexible way.", "Very abstract and of course just a few lines of code."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pod", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://appyframework.org/pod.html"}]}, {"text": ["You can generate odt documents this way with no external dependencies, for pdf generation you need to have open office running in server mode."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["When you looked at ReportLab, did you check out the Platypus section?", "It's really very easy to use (Platypus is high-level, whereas pdfgen is fairly low-level).", "There's a good \"Hello World\" example in the developer's FAQ."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "the developer's FAQ", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.reportlab.com/software/opensource/rl-toolkit/faq/#2.3.2"}]}], [{"text": ["Take a look at Sphinx.", "A lot of Python projects are starting to use Sphinx, including Python itself.", "You type your documentation in reStructuredText, and get good-looking HTML and PDF output.", "Now that Matplotlib is using Sphinx, it even has a TeX-like equation formatting engine; see this pdf file for some more information."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Sphinx", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sphinx.pocoo.org/"}, {"text": "Matplotlib", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net"}, {"href": "http://new.scipy.org/proceedings/SciPy2008/paper_6/full_text.pdf", "text": "this pdf file", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["I use pisa to generate PDF's from html files (which in turn get generated using xslt).", "It is very easy to use, but the official site is online last time i checked."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pisa", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/pisa/3.0.27"}]}], [{"text": ["I would second mmaibaum's suggestion of generating HTML.", "It, along with CSS, will allow for much better positioning and layout.", "You can then use an HTML->PDF engine, such as PrinceXML (not free, but the output is amazing... actually there is a free version but it will put a PrinceXML logo on at least one of the pages) or an XML/XHTML->XSL-FO->PDF engine, such as CSSToXSLFO.", "This second option offers a bit more flexability, but you'll still need to choose an XSL-FO processor to turn this intermediate output into a PDF.", "Fop from the Apache project is a free one, but I can't vouch for how good the output is."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "PrinceXML", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://princexml.com/"}, {"text": "CSSToXSLFO", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.re.be/css2xslfo/"}, {"text": "Fop", "tag": "a", "pos": 4, "childList": [], "childNum": 0, "href": "http://xmlgraphics.apache.org/fop/"}]}], [{"text": ["Is it feasible to generate your report content as reStructuredText?", "If so, check out the rst2pdf project."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "reStructuredText", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docutils.sourceforge.net/rst.html"}, {"text": "rst2pdf", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/rst2pdf/"}]}, {"text": ["Disclaimer: I have not used rst2pdf myself."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The only reason not to use LaTeX in this layer is that the installation is large and unwieldy, particularly on Windows.", "You are not going to get a reporting engine without either having a formatting system or working in low level graphics primitives.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you want a higher level formatting toolkit that's a bit more lightweight than LaTeX you might look at Lout."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Lout", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Lout_%28software%29"}]}], [{"text": ["If you don't like ReportLab I would suggest generating HTML - there are dozens of ways to do this and converting to PDF for final output (html2pdf for example). "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You can create PDFs easily (in my opinion) with just a Cairo binding."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Sure, it is low level: you don't have a GUI form editor and need to calculate coordinates by hand.", "But it also is extremely lightweight and direct; you have absolute control.", "Doing it via HTML does not give you that."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The outcome looks great and is very tiny file size wise."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You might also find this discussion helpful. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this discussion", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/126622/open-source-reporting-engines"}]}], [{"text": ["I worked on a system years ago that used ReportLab.", "It really wasn't too bad.", "All of our reports were pretty much of the same style so I created a base class that handled most of the formatting.", "The only thing sub classes had to do was set some properties and hand the data over to the base class.", "It worked out pretty well.", "After I did the ground work another programmer was able to come behind me and bang out a couple dozen reports in a couple weeks with no prior Python experience.", "So if most of your reports fit one or two formats using ReportLab should just require some up front work and then the rest is drudgery."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I recommend you take another look at ReportLab.", "It has high-level constructs for page layout and \"flowing\" text, images, frames etc.", "It also has a nice styles system and, most importantly, a nice python API.", "Sure, it also provides access to low-level pdf, but you don't need to use this until you need it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Of the other suggestions, they mostly suggest using some other format as an intermediary.", "This doesn't really help you.", "It just pushes the problem to finding a good library for writing the intermediate format. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've also tried the Eclipse \"BIRT\" report generator as another OSS reporting tool but it was hard to learn, a resource hog and a pain to deploy.", "Python + ReportLab was way easier."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you like ReportLab but think it's too low-level, try trml2pdf (or here).", "You write your report in RML (Report Markup Language) as described here with something like ElementTree and then use trml2pdf to convert it.", "You can use it from the command line or in a python script with something like the following:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "trml2pdf", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://packages.debian.org/squeeze/python-trml2pdf"}, {"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://ftp.debian.org/debian/pool/main/p/python-trml2pdf/"}, {"text": "here", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.reportlab.com/docs/rml2pdf-userguide.pdf"}]}, {"code": "<pre>\n<code>\n open('test.pdf', 'w').write(trml2pdf.parseString(xmlstring))\n</code>\n</pre>\n", "senID": 1}, {"text": ["I have found this to be the best way to go even though not all of the RML tags are supported by this open-source library."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If you are using this for Django you can simply mark up an .rml file with the template system and then render it."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["http://matplotlib.sourceforge.net/api/backend_pdf_api.html#matplotlib.backends.backend_pdf.PdfPages"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://matplotlib.sourceforge.net/api/backend_pdf_api.html#matplotlib.backends.backend_pdf.PdfPages", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/api/backend_pdf_api.html#matplotlib.backends.backend_pdf.PdfPages"}]}, {"text": ["There is an easy way to create multiple page PDF using matplotlib.", "If you need lots of plots, this would be quite useful.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from pylab import *\nfrom matplotlib.backends.backend_pdf import PdfPages\n\npp = PdfPages('twopages.pdf')\n\nx = arange(0, 10, 0.2)\ny = sin(x)\nplot(x, y)\npp.savefig()\n\nfigure()\nplot(x, -y)\npp.savefig()\n\npp.close()\n</code>\n</pre>\n", "senID": 2}], [{"text": ["There is also PyReport, but that uses Latex for pdf-generation."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PyReport", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://gael-varoquaux.info/computers/pyreport/"}]}]]