[[{"text": ["See Python PEP 8."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PEP 8", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"text": ["Variables..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Personally, I deviate from this because I also prefer mixedCase over lower_case for my own projects."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "mixedCase", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "lower_case", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["David Goodger (in \"Code Like a Pythonista\" here)  describes the PEP 8 recommendations as follows:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"}]}, {"tag": "ul", "num": 4, "lis": [{"text": ["joined_lower for functions, methods,\nattributes"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "joined_lower", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["joined_lower or ALL_CAPS for\nconstants"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "joined_lower", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "ALL_CAPS", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["StudlyCaps for classes"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "StudlyCaps", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["camelCase only to conform to\npre-existing conventions"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "camelCase", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]}], [{"text": ["Behold the Python Style Guide."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python Style Guide", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}], [{"text": ["There is PEP 8, as other answers show, but PEP 8 is only the styleguide for the standard library, and it's only taken as gospel therein.", "One of the most frequent deviations of PEP 8 for other pieces of code is the variable naming, specifically for methods.", "There is no single predominate style, although considering the volume of code that uses mixedCase, if one were to make a strict census one would probably end up with a version of PEP 8 with mixedCase.", "There is little other deviation from PEP 8 that is quite as common."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PEP 8", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}], [{"text": ["As mentioned, PEP 8 says to use lower_case_with_underscores for variables, methods and functions."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "lower_case_with_underscores", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I prefer using lower_case_with_underscores for variables and mixedCase for methods and functions makes the code more explicit and readable.", "Thus following the Zen of Python's \"explicit is better than implicit\" and \"Readability counts\""], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "lower_case_with_underscores", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "mixedCase", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Zen of Python's", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0020/"}]}], [{"text": ["Most python guys prefer underscores, but even I am using python since more than 5 years right now, I still do not like them.", "They just look ugly to me, but maybe that's all the Java in my head. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I simply like CamelCase better since it fits better with the way classes are named, It feels more logical to have SomeClass.doSomething() than SomeClass.do_something().", "If you look around in the global module index in python, you will find both, which is due to the fact that it's a collection of libraries from various sources that grew overtime and not something that was developed by one company like Sun with strict coding rules.", "I would say the bottom line is: Use whatever you like better, it's just a question of personal taste."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "SomeClass.doSomething()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "SomeClass.do_something()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["As the Style Guide for Python Code admits,"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Style Guide for Python Code", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"text": ["Note that this refers just to Python's standard library.", "If they can't get that consistent, then there hardly is much hope of having a generally-adhered-to convention for all Python code, is there?"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "standard library", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "that", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "all", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["From that, and the discussion here, I would deduct that it's not a horrible sin if one keeps using e.g.", "Java's or C#'s (clear and well-established) naming conventions for variables and functions when crossing over to Python.", "Keeping in mind, of course, that it is best to abide with whatever the prevailing style for a codebase / project / team happens to be.", "As the Python Style Guide points out, internal consistency matters most."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "not", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "internal consistency", "childNum": 0, "tag": "em", "pos": 3, "childList": []}]}, {"text": ["Feel free to dismiss me as a heretic.", ":-) Like the OP, I'm not a \"Pythonista\", not yet anyway."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Feel free to dismiss me as a heretic. :-) Like the OP, I'm not a \"Pythonista\", not yet anyway.", "childNum": 0, "tag": "sup", "pos": -1, "childList": []}]}], [{"text": ["Personally I try to use CamelCase for classes, mixedCase methods and functions.", "Variables are usually underscore separated (when I can remember).", "This way I can tell at a glance what exactly I'm calling, rather than everything looking the same."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Typically, one follow the conventions used in the language's standard library."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The coding style is usually part of an organization's internal policy/convention standards, but I think in general, the all-lower-case-underscore-separator style is most common in python. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]