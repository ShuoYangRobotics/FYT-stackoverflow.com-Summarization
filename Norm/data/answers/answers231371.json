[[{"text": ["Lettuce means to be a cucumber-like  tool for python: http://lettuce.it/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://lettuce.it/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lettuce.it/"}]}, {"text": ["You can grab the source at github.com/gabrielfalcao/lettuce"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Ian Bicking recommends using doctest for behavior driven design:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Ian Bicking", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.ianbicking.org/behavior-driven-programming.html"}, {"href": "http://docs.python.org/library/doctest.html?highlight=doctest#module-doctest", "text": "doctest", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["I personally tend to use nose and voidspace mock in a behavior driven design style.", "Specifically, the spec plugin for nose is excellent for BDD."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "nose", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.somethingaboutorange.com/mrl/projects/nose/"}, {"text": "voidspace mock", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.voidspace.org.uk/python/mock.html"}, {"text": "plugin", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://darcs.idyll.org/~t/projects/pinocchio/doc/#spec-generate-test-description-from-test-class-method-names"}]}], [{"text": ["I recommend you to use Pyramid.", "It's a set of tools developed to help programmers in the practice of BDD and TDD.", "It is basically composed by: pycukes, specloud, ludibrio and should-dsl."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"text": ["Should-dsl will give you RSpec-like expectations."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Everything you can do with RSpec expectation API, should-dsl does too."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You can grab the last version here: http://github.com/rodrigomanhaes/should-dsl/tree/matchers-as-functions"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://github.com/rodrigomanhaes/should-dsl/tree/matchers-as-functions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/rodrigomanhaes/should-dsl/tree/matchers-as-functions"}]}, {"text": ["Specloud helps you on running BDD-like unittests.", "You can install it by doing"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Ludibrio is a library for test doubles (Mocks, Stubs and Dummies).", "Install it via "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["And PyCukes is the main tool for BDD.", "It will run the Scenarios, etc.", "Again, "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["For more info please read the tools documentation at PyPi."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["The Pyccuracy project is an effort to provide a domain-specific language for BDD in Python.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Unlike doctest, which works at the API level, it encodes higher-level operations such as loading a web page and submitting a form.", "I haven't used it but it looks somewhat promising if that is what you're looking for."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Great post and answers.", "Just wanted to update to include Freshen in this list as I read pycukes is discontinued.", "A good post about using BDD and Django with Freshen is here."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Freshen", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "https://github.com/rlisagor/freshen"}, {"text": "here", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.franciscosouza.com/2010/06/making-development-with-django-more-fun-with-bdd-using-freshen/"}]}], [{"text": ["I am probably completely missing the point, but what I retained of the original BDD paper was that BDD was just TDD repackaged to emphasize some best practices."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "original BDD paper", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://dannorth.net/introducing-bdd"}, {"href": "http://c2.com/cgi/wiki?TestDrivenDevelopment", "text": "TDD", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["If my interpretation is correct, you can get a BDD framework just by renaming methods around in any xUnit implementation.", "So just go ahead and use the standard library's unittest."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "xUnit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.martinfowler.com/bliki/Xunit.html"}, {"text": "unittest", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/lib/module-unittest.html"}]}, {"text": ["EDIT: A quick google turned up a Behaviour module in the Cheese Shop.", "Further searching for BDD there did not find anything else."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "Behaviour", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/Behaviour"}, {"text": "Cheese Shop", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi"}, {"text": "searching", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi?%3Aaction=search&term=BDD&submit=search"}]}], [{"text": ["I like Pyccuracy a lot.", "I'm implementing it on a mid sized project these days."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pyccuracy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/heynemann/pyccuracy/wiki/"}]}]]