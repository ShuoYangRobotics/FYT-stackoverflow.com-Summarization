[[{"text": ["json is simplejson, added to the stdlib.", "Since json was only added in 2.6, simplejson has the advantage of working on more python versions (2.4+, rather than 2.6+).", "Also, simplejson is updated more frequently than Python is, so if you need (or want) the latest version, it's best to use simplejson itself, if possible."], "childNum": 7, "tag": "p", "senID": 0, "childList": [{"text": "json", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "is", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/whatsnew/2.6.html#the-json-module-javascript-object-notation"}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}, {"text": "json", "childNum": 0, "tag": "code", "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["A good practice, in my opinion, is to use one or the other as a fallback."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n try: import simplejson as json\nexcept ImportError: import json\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The builtin json module got included in Python 2.6.", "Any projects that support versions of Python &lt; 2.6 need to have a fallback.", "In many cases, that fallback is simplejson."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "json", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["Here's (a now outdated) comparison of Python json libraries:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Comparing JSON modules for Python"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Comparing JSON modules for Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://deron.meranda.us/python/comparing%5Fjson%5Fmodules/"}]}, {"text": ["Regardless of the results in this comparison you should use the standard library json if you are on Python 2.6.", "And.. might as well just use simplejson otherwise."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Another reason projects use simplejson is that the builtin json did not include its C speedups, so the performance difference is noticeable."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["simplejson module is simply 1,5 times faster than json (On my computer, with simplejson 2.1.1 and Python 2.7 x86)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you want, you can try the benchmark: http://abral.altervista.org/jsonpickle-bench.zip\nOn my PC simplejson is faster than cPickle.", "I would like to know also your benchmarks!"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://abral.altervista.org/jsonpickle-bench.zip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://abral.altervista.org/jsonpickle-bench.zip"}]}, {"text": ["Probably, as said Coady, the difference between simplejson and json is that simplejson includes _speedups.c.", "So, why don't python developers use simplejson?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I've been benchmarking json, simplejson and cjson."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "cjson is fastest", "tag": "none", "senID": 1}, {"text": "simplejson is almost on par with cjson", "tag": "none", "senID": 2}, {"text": "json is about 10x slower than simplejson", "tag": "none", "senID": 3}]}, {"text": ["http://pastie.org/1507411"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://pastie.org/1507411", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pastie.org/1507411"}]}]]