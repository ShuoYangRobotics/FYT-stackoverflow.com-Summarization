[[{"text": ["Subprocess.call will avoid problems with having to deal with quoting conventions of various shells.", "It accepts a list, rather than a string, so arguments are more easily delimited.", "ie"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import subprocess\nsubprocess.call(['C:\\\\Temp\\\\a b c\\\\Notepad.exe'])\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The outermost quotes are consumed by Python itself, and the Windows shell doesn't see it.", "As mentioned above, Windows only understands double-quotes.", "Python will convert forward-slashed to backslashes on Windows, so you can use"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.system('\"C:/Temp/a b c/Notepad.exe\"')\n</code>\n</pre>\n", "senID": 1}, {"text": ["The ' is consumed by Python, which then passes \"C:\\Temp\\a b c\\Notepad.exe\" (as a Windows path, no double-backslashes needed) to CMD.EXE"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here's a different way of doing it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you're using windows the following acts like double-clicking the file in Explorer, or giving the file name as an argument to the DOS \"start\" command:  the file is opened with whatever application (if any) its extension is associated."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import os\nos.startfile(filepath)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import os\nos.startfile(textfile.txt)\n</code>\n</pre>\n", "senID": 4}, {"text": ["This will open textfile.txt with notepad if notepad is associted with .txt files."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["At least in Windows 7 and Python 3.1, os.system in Windows wants the command line double-quoted if there are spaces in path to the command.", "For example:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "double-quoted", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n TheCommand = '\\\"\\\"C:\\\\Temp\\\\a b c\\\\Notepad.exe\\\"\\\"'\n  os.system(TheCommand)\n</code>\n</pre>\n", "senID": 1}, {"text": ["A real-world example that was stumping me was cloning a drive in Virtual box.", "The subprocess.call solution above didn't work because of some access rights issue, but when I double-quoted the command, os.system became happy:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n TheCommand = '\\\"\\\"C:\\\\Program Files\\\\Sun\\\\VirtualBox\\\\VBoxManage.exe\\\" ' \\\n                 + ' clonehd \\\"' + OrigFile + '\\\" \\\"' + NewFile + '\\\"\\\"'\n  os.system(TheCommand)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I suspect it's the same problem as when you use shortcuts in Windows...", "Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import os;\nos.system(\"\\\"C:\\\\Temp\\\\a b c\\\\Notepad.exe\\\" C:\\\\test.txt\");\n</code>\n</pre>\n", "senID": 1}], [{"text": ["import win32api # if active state python is installed or install pywin32 package seperately"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["try: win32api.WinExec('NOTEPAD.exe') # Works seamlessly\nexcept: pass"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]