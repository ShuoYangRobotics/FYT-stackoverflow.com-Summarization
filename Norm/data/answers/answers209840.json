[[{"text": ["Like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; keys = ['a', 'b', 'c']\n&gt;&gt;&gt; values = [1, 2, 3]\n&gt;&gt;&gt; dictionary = dict(zip(keys, values))\n&gt;&gt;&gt; print dictionary\n{'a': 1, 'b': 2, 'c': 3}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Voila :-)  The pairwise dict constructor and zip function are awesomely useful: http://www.python.org/doc/2.5.2/lib/built-in-funcs.html#dict"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://www.python.org/doc/2.5.2/lib/built-in-funcs.html#dict", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/lib/built-in-funcs.html#dict"}]}], [{"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import itertools\n&gt;&gt;&gt; keys = ('name', 'age', 'food')\n&gt;&gt;&gt; values = ('Monty', 42, 'spam')\n&gt;&gt;&gt; adict = dict(itertools.izip(keys,values))\n&gt;&gt;&gt; adict\n{'food': 'spam', 'age': 42, 'name': 'Monty'}\n</code>\n</pre>\n", "senID": 1}, {"text": ["It was the simplest solution I could come up with."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["--Mike Davis"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["PS It's also more economical in memory consumption compared to zip."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; keys = ('name', 'age', 'food')\n&gt;&gt;&gt; values = ('Monty', 42, 'spam')\n&gt;&gt;&gt; dict(zip(keys, values))\n{'food': 'spam', 'age': 42, 'name': 'Monty'}\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you need to transform keys or values before creating a dictionary then a generator expression could be used.", "Example:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "generator expression", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/ref/genexpr.html"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; adict = dict((str(k), v) for k, v in zip(['a', 1, 'b'], [2, 'c', 3]))\n</code>\n</pre>\n", "senID": 1}, {"text": ["Take a look Code Like a Pythonista: Idiomatic Python."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Code Like a Pythonista: Idiomatic Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"}]}]]