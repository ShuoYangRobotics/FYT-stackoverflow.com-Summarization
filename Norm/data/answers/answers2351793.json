[[{"text": ["I think one of the most important thing a beginner need to know about Python ecosystem is that it's a general purpose language surrounded by specialized libs.", "Experienced pythonistas know them, but a newbie can't:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 8, "lis": [{"text": "Don't stop to tkinter : go ", "tag": "none", "senID": 1}, {"text": "Don't dev web code by hands : use ", "tag": "none", "senID": 2}, {"text": "Don't parse HTML / XML with hard tools : use ", "tag": "none", "senID": 3}, {"text": "Don't make syscall to imagemagik : use ", "tag": "none", "senID": 4}, {"text": "Don't make advanced maths manually : use ", "tag": "none", "senID": 5}, {"text": "Don't access simple databases by hand : use ORM like ", "tag": "none", "senID": 6}, {"text": "Don't reinvent sysadmin wheels : use ", "tag": "none", "senID": 7}, {"text": "etc.", "tag": "none", "senID": 8}]}, {"text": ["The main ones should be listed in a book with guidances to choose among them."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}], [{"text": ["\"What confused you the most when you just started out with Python?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Rule 2 of learning Python: Any general-purpose module or framework you think you want has already been written.", "Several times."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Any general-purpose module or framework you think you want has already been written.  Several times.", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["The hard part is realizing that your idea is"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["So, code less and search more.", "Search widely and flexibly until you find things that are similar to what you want to do."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["Realize that you might have a name you think is descriptive.", "But other folks may call it something different.", "Join the community, adopt their naming.", "You may not like the phrase \"ORM\", but that's what it's called. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Realize that your idea, no matter how sound it seems, may be really poor.", "When you find a framework  that seems to have \"needless extra features\", you may be missing something from your idea.  "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Realize that your idea, no matter how \"intuitive\" it seems, may be really poor.", "When you find a framework that seems \"counter-intuitive\", the problem could be yours.", "Learn theirs first, then compare and contrast after you've mastered theirs.", "Until you've mastered theirs, keep searching and learning."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]}], [{"text": ["A few points related to the ecosystem and indirectly the community: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["I wished I had been reminded more about the Batteries included.", "I think people should be told to print-out the Table of Contents of the Standard Library and keep it under their pillow, for frequent reviews (that advice, I finally took, several years into it, from an online intro/beginner's video presentation!).", "The [relative] stability, extensive but relevant content of the Std Lib speaks to the thoughtful governance of the community leaders and its beloved BDFL."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "Batteries included", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Table of Contents of the Standard Library", "tag": "a", "pos": 1, "childList": [{"text": "Table of Contents of the Standard Library", "tag": "strong"}], "childNum": 1, "href": "http://docs.python.org/library/"}, {"text": "Table of Contents of the Standard Library", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["I think newcomers can also be \"warned\" (the word is maybe too strong, too unfair) about the extreme variety of PiPy.", "This reflects the vibrant, smart and diverse (in terms of background, domain of application, interests...) collective of users and contributors.", "This however can be overwhelming and possibly risky as all packages in there are not \"prime time ready\"  (But many are and \"saved my life\" many times over)."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "PiPy", "tag": "a", "pos": 0, "childList": [{"text": "PiPy", "tag": "strong"}], "childNum": 1, "href": "http://pypi.python.org/pypi"}, {"text": "PiPy", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["Even if you feel too new to Python, don't only use the libraries, do peek under the hood!", "This is true of many languages, but maybe particularly of Python, there's much to be learned from perusing various source code.", "The reasons this may be particular true for Python are intrinsic to the language itself (multi-paradigms, hi level of abstraction...) but also because of the relative uniformity of coding (and architecting) style and because of the general level of collaboration within the community."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "use", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "relative", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}]}], [{"text": ["explaining what a PEP is, how it is written and who wrote them, where we can find them.", "PEPs give a lot of background informations about a specific feature of the language.", "they also are the tool which shows how fast evolving python is."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["(i wish i had read some PEPs earlier, but i was not really aware of them, although they are frequently linked in the manual)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["\"What confused you the most when you just started out with Python?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Rule 1 of learning Python:  Use the Source, Luke."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Use the Source, Luke.", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["There are question on SO asking for \"good\" source from which to learn Python.", "The best answers amount to \"read the libraries that came with Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["One can say that the libraries that come with Python are quirky.", "In places.", "Which makes them all the better for learning from."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["From PEP 20: "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PEP 20:", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0020/"}]}, {"code": "<pre>\n<code>\n import this\n</code>\n</pre>\n", "senID": 1}, {"text": ["(aka, the Zen of Python)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["developing a python package that can be installed with easy_install etc...", "I consider it equivalent to developing a jar or dll etc.... "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["on the same token, developing said package(s) with virtualenv or buildout"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If I would have known those things sooner, I would have probably used python for more than just scripting way back when I first started using it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]