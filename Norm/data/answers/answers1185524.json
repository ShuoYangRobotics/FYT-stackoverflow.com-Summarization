[[{"text": ["Whitespace on the both sides:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n str = \"  \\t a string example\\t  \"\nstr = str.strip()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Whitespace on the right side:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n str = str.rstrip()\n</code>\n</pre>\n", "senID": 3}, {"text": ["Whitespace on the left side:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n str = str.lstrip()\n</code>\n</pre>\n", "senID": 5}, {"text": ["As thedz points out, you can provide an argument to strip arbitrary characters to any of these functions like this:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "thedz", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/users/84380/thedz"}]}, {"code": "<pre>\n<code>\n str = str.strip(' \\t\\n\\r')\n</code>\n</pre>\n", "senID": 7}, {"text": ["This will strip any space, \\t, \\n, or \\r characters from the left-hand side, right-hand side, or both sides of the string. "], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["For leading and trailing whitespace:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = '   foo    \\t   '\nprint s.strip()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Otherwise, a regular expression works:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import re\npat = re.compile(r'\\s+')\ns = '  \\t  foo   \\t   bar \\t  '\nprint pat.sub('', s)\n</code>\n</pre>\n", "senID": 3}]]