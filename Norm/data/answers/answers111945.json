[[{"code": "<pre>\n<code>\n import urllib2\nopener = urllib2.build_opener(urllib2.HTTPHandler)\nrequest = urllib2.Request('http://example.org', data='your_put_data')\nrequest.add_header('Content-Type', 'your/contenttype')\nrequest.get_method = lambda: 'PUT'\nurl = opener.open(request)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Httplib seems like a cleaner choice."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import httplib\nconnection =  httplib.HTTPConnection('1.2.3.4:1234')\nbody_content = 'BODY CONTENT GOES HERE'\nconnection.request('PUT', '/url/path/to/put/to', body_content)\nresult = connection.getresponse()\n# Now result.status and result.reason contains interesting stuff\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I needed to solve this problem too a while back so that I could act as a client for a RESTful API.", "I settled on httplib2 because it allowed me to send PUT and DELETE in addition to GET and POST.", "Httplib2 is not part of the standard library but you can easily get it from the cheese shop."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You should have a look at the httplib module.", "It should let you make whatever sort of HTTP request you want."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "httplib module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-httplib.html"}]}], [{"text": ["I also recommend httplib2 by Joe Gregario.", "I use this regularly instead of httplib in the standard lib."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "httplib2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/httplib2/"}]}], [{"text": ["You can of course roll your own with the existing standard libraries at any level from sockets up to tweaking urllib."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://pycurl.sourceforge.net/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pycurl.sourceforge.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pycurl.sourceforge.net/"}]}, {"text": ["\"PyCurl is a Python interface to libcurl."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["\"libcurl is a free and easy-to-use client-side URL transfer library, ... supports ... HTTP PUT\""], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["\"The main drawback with PycURL is that it is a relative thin layer over libcurl without any of those nice Pythonic class hierarchies.", "This means it has a somewhat steep learning curve unless you are already familiar with libcurl's C API."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Have you taken a look at put.py?", "I've used it in the past.", "You can also just hack up your own request with urllib."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "put.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://inamidst.com/proj/put/put.py"}]}]]