[[{"text": ["In Python 2.x, True is not a keyword, but just a built-in global constant that is defined to 1 in the bool type.", "Therefore, the interpreter still has to load the contents of True.", "In other words, True is reassignable:"], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "True", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "built-in global constant", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/constants.html#True"}, {"text": "bool", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "True", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "True", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n Python 2.7 (r27:82508, Jul  3 2010, 21:12:11) \n[GCC 4.0.1 (Apple Inc. build 5493)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; True = 4\n&gt;&gt;&gt; True\n4\n</code>\n</pre>\n", "senID": 1}, {"text": ["In Python 3.x, it truly becomes a keyword and a real constant:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "it truly becomes a keyword", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/py3k/reference/lexical_analysis.html#keywords"}]}, {"code": "<pre>\n<code>\n Python 3.1.2 (r312:79147, Jul 19 2010, 21:03:37) \n[GCC 4.2.1 (Apple Inc. build 5664)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; True = 4\n  File \"&lt;stdin&gt;\", line 1\nSyntaxError: assignment to keyword\n</code>\n</pre>\n", "senID": 3}, {"text": ["thus the interpreter can replace the while True: loop with an infinite loop."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "while True:", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]