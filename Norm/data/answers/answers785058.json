[[{"code": "<pre>\n<code>\n import os\nrandom_string = os.urandom(string_length)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Taken from the 1023290 bug report at Python.org:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "1023290", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bugs.python.org/issue1023290"}]}, {"code": "<pre>\n<code>\n junk_len = 1024\njunk =  ((\"%%0%dX\" % junk_len) % random.getrandbits(junk_len *\n8)).decode(\"hex\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["Also, see the issues 923643 and 1023290"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "923643", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bugs.python.org/issue923643"}, {"href": "http://bugs.python.org/issue1023290", "text": "1023290", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["It seems the fromhex() method expects an even number of hex digits.", "Your string is 75 characters long.", "Be aware that something[:-1] excludes the last element!", "Just use something[:]."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "fromhex()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "something[:-1]", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "excludes", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "something[:]", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}], [{"text": ["Regarding the last example, the following fix to make sure the line is even length, whatever the junk_len value:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n junk_len = 1024\njunk =  ((\"%%0%dX\" % (junk_len * 2)) % random.getrandbits(junk_len * 8)).decode(\"hex\")\n</code>\n</pre>\n", "senID": 1}]]