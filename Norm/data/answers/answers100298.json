[[{"text": ["For static analysis there is pylint and pychecker.", "Personally I use pylint as it seems to be more comprehensive than pychecker. "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pylint", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.logilab.org/857"}, {"text": "pychecker", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://pychecker.sourceforge.net/"}]}, {"text": ["For cyclomatic complexity you can try this perl program, or this article which introduces a python program to do the same"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "this perl program", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.journyx.com/curt/complexity.html"}, {"href": "http://www.traceback.org/2008/03/31/measuring-cyclomatic-complexity-of-python-code/", "text": "article", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["For measuring cyclomatic complexity, there's a nice tool available at traceback.org.", "The page also gives a good overview of how to interpret the results."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "traceback.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.traceback.org/2008/03/31/measuring-cyclomatic-complexity-of-python-code/"}]}, {"text": ["+1 for pylint.", "It is great at verifying adherence to coding standards (be it PEP8 or your own organization's variant), which can in the end help to reduce cyclomatic complexity."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "pylint", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.logilab.org/project/pylint"}, {"text": "PEP8", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}], [{"text": ["Pycana works like charm when you need to understand a new project!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["See how it works:\nhttp://pycana.sourceforge.net/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pycana.sourceforge.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pycana.sourceforge.net/"}]}, {"text": ["output:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"src": "http://pycana.sourceforge.net/relations.png", "tag": "img", "senID": 3}], [{"text": ["Thanks to Pydev, you can integrate pylint in the Eclipse IDE really easily and get a code report each time you save a modified file."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Pydev", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pydev.sourceforge.net/"}, {"href": "http://pydev.sourceforge.net/pylint.html", "text": "integrate pylint", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://www.eclipse.org/", "text": "Eclipse IDE", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Check out pyflakes from divmod."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pyflakes", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.divmod.org/trac/wiki/DivmodPyflakes"}, {"href": "http://divmod.org", "text": "divmod", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Pymetrics"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pymetrics", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pymetrics/"}]}], [{"text": ["The SD Python CloneDR is a tool for finding exact and near-miss copies of cloned code across large Python systems. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SD Python CloneDR", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.semanticdesigns.com/Products/Clone/PythonCloneDR.html"}]}, {"text": ["By parsing Python according to its grammar, the CloneDR can use the code structure itself to help find clones in spite of different indentation, reformatting, addition/change of comments, renamed variables, and some statement insertions/deletions."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["CloneDR also works for other langauges such as Java, C++, C#, ..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Sample clone detection reports can be found at the website."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Pypants - PyPi package analyzer (uses pylint and pychecker)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pypants", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypants.org/"}]}], [{"text": ["There is a tool called \nCloneDigger that helps you find similar code snippets."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "CloneDigger", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://clonedigger.sourceforge.net/"}]}], [{"text": ["I have used pylint which does some higher analysis, but mostly its things like empty except blocks and the kind."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pylint", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.logilab.org/project/pylint"}]}, {"text": ["A quick googeling also found this, a perl program that analysis cyclomatic complexity of python programs.", "I'm sceptic..."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.journyx.com/curt/complexity.html"}]}]]