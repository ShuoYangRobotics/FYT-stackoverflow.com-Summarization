[[{"text": ["I just had to figure this out myself."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["settings.py:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n MEDIA_ROOT = 'C:/Server/Projects/project_name/static/'\nMEDIA_URL = '/static/'\nADMIN_MEDIA_PREFIX = '/media/'\n</code>\n</pre>\n", "senID": 2}, {"text": ["urls.py:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from django.conf import settings\n...\nif settings.DEBUG:\n    urlpatterns += patterns('',\n        (r'^static/(?P&lt;path&gt;.*)$', 'django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),\n    )\n</code>\n</pre>\n", "senID": 4}, {"text": ["template file:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/style.css\" /&gt;\n</code>\n</pre>\n", "senID": 6}, {"text": ["With the file located here:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n \"C:/Server/Projects/project_name/static/css/style.css\"\n</code>\n</pre>\n", "senID": 8}, {"text": ["Note how the MEDIA_URL and the ADMIN_MEDIA_PREFIX are different?", "This is on purpose, they can't be the same!"], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "Note how the MEDIA_URL and the ADMIN_MEDIA_PREFIX are different? This is on purpose, they can't be the same!", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}], [{"text": ["Django already has a context process for MEDIA_URL, see Django's documentation."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django's documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/templates/api/#django-core-context-processors-media"}]}, {"text": ["It should be availbale by default (unless you've customized CONTEXT_PROCESSORS and forgot to add it) in a RequestContext."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I usually make my own Template simple tag because Django isn't giving CSS/JavaScript files.", "Apache does it so my media url is usually http://static.mysite.com."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://static.mysite.com", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://static.mysite.com"}]}, {"text": ["yourApp/templatetags/media_url.py:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "yourApp/templatetags/media_url.py:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n from django.template import Library\nfrom yourapp.settings import MEDIA_URL\nregister = Library()\n\n@register.simple_tag\ndef media_url():\n    return MEDIA_URL\n</code>\n</pre>\n", "senID": 2}, {"text": ["And in my template file:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "And in my template file:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n {% load media_url %}\n&lt;link href=\"{{ media_url }}css/main.css\" rel=\"stylesheet\" type=\"text/css\"&gt;\n</code>\n</pre>\n", "senID": 4}, {"text": ["You could also make your own context preprocessor to add the media_url variable in every template."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "your own context preprocessor", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/433162/can-i-access-constants-in-settings-py-from-templates-in-django#433209"}]}], [{"text": ["I just use absolute naming.", "Unless you're running the site in a deep path (or even if you are), I'd drop the .. and go for something like:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "..", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/media/styles.css\"&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I've got a couple of ideas, I don't know which one of them is working for me :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That's from http://docs.djangoproject.com/en/dev/ref/settings/#admin-media-prefix"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.djangoproject.com/en/dev/ref/settings/#admin-media-prefix", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/settings/#admin-media-prefix"}]}, {"text": ["Secondly, it may be that you're confusing directories on your filesystem with url paths.", "Try using absolute urls, and then refine them down."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Just thought I'd chime in quickly.", "While all the propositions here work just fine, and I do use Ty's example while developing, once you hit production you might want to opt to serve files via a straight Apache, or whichever else server you're using."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What I do is I setup a subdomain once I'm done developing, and replace all links to static media.", "For instance:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://static.mydomain.com/css/style.css\" /&gt;\n</code>\n</pre>\n", "senID": 2}, {"text": ["The reasons for doing this are two-fold.", "First, it just seems like it would be slower to have Django handle these requests when it's not needed.", "Second, since most browsers can actually download files simultaneously from 3 different domains, using a second sub-domain for your static files will actually speed up the download speed of your users."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Another thing to add is that if you have a separate media server on a subdomain/different domain, you can disable cookies for your static media.", "Saves a little processing and bandwidth."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]