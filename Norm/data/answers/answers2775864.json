[[{"text": ["Another way is to use time.mktime:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "time.mktime", "tag": "a", "pos": 0, "childList": [{"text": "time.mktime", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/time.html#time.mktime"}, {"text": "time.mktime", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n future = datetime.datetime.now() + datetime.timedelta(minutes = 5)\nreturn time.mktime(future.timetuple())\n</code>\n</pre>\n", "senID": 1}, {"text": ["It's also more portable than %s flag to strftime \u2014 latter is not supported on win32."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "%s", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "strftime", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Just found this, and its even shorter."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import time\ndef expires():\n    '''return a UNIX style timestamp representing 5 minutes from now'''\n    return int(time.time()+300)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use datetime.strftime to get the time in Epoch form, using the %s format string:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "datetime.strftime", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "%s", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n def expires():\n    future = datetime.datetime.now() + datetime.timedelta(seconds=5*60)\n    return int(future.strftime(\"%s\"))\n</code>\n</pre>\n", "senID": 1}]]