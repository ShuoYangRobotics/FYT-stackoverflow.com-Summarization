[[{"text": ["Break the file into 128-byte chunks and feed them to MD5 consecutively using update()."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "update()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["This takes advantage of the fact that MD5 has 128-byte digest blocks.", "Basically, when MD5 digest()s the file, this is exactly what it is doing."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "digest()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["If you make sure you free the memory on each iteration (i.e.", "not read the entire file to memory), this shall take no more than 128 bytes of memory."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["One example is to read the chunks like so:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n f = open(fileName)\nwhile not endOfFile:\n    f.read(128)\n</code>\n</pre>\n", "senID": 4}], [{"text": ["You need to read the file in chunks of suitable size:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def md5_for_file(f, block_size=2**20):\n    md5 = hashlib.md5()\n    while True:\n        data = f.read(block_size)\n        if not data:\n            break\n        md5.update(data)\n    return md5.digest()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["if you care about more pythonic (no 'while True') way of reading the file check this code:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import hashlib\nmd5 = hashlib.md5()\nwith open('myfile.txt','rb') as f: \n    for chunk in iter(lambda: f.read(8192), ''): \n         md5.update(chunk)\nreturn md5.digest()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["u can't get it's md5 without read full content.", "but u can use update function to read the files content block by block.", "m.update(a); m.update(b) is equivalent to m.update(a+b)"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "update", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/hashlib.html#hashlib.hash.update"}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}]}]]