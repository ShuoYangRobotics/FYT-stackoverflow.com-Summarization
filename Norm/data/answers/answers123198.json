[[{"text": ["shutil has many methods you can use.", "One of which is:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "shutil", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/current/lib/module-shutil.html"}]}, {"code": "<pre>\n<code>\n copyfile(src, dst)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Copy the contents of the file named src to a file named dst.", "The destination location must be writable; otherwise, an IOError exception will be raised.", "If dst already exists, it will be replaced.", "Special files such as character or block devices and pipes cannot be copied with this function.", "src and dst are path names given as strings. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n import shutil\nshutil.copy2('/dir/file.ext', '/new/dir/newname.ext')\n</code>\n</pre>\n", "senID": 0}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n shutil.copy2('/dir/file.ext', '/new/dir')\n</code>\n</pre>\n", "senID": 2}, {"text": ["copy2 is also often useful, it preserves the original modification and access info (mtime and atime) in the file metadata."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "copy2", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["In case you are stuck with Python 2.3 (as I am) you may notice that there is no shutils.", "But copying a file is a relatively straightforward operation."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "shutils", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def copyfile(source, dest, buffer_size=1024*1024):\n    \"\"\"\n    Copy a file from source to dest. source and dest\n    can either be strings or any object with a read or\n    write method, like StringIO for example.\n    \"\"\"\n    if not hasattr(source, 'read'):\n        source = open(source, 'rb')\n    if not hasattr(dest, 'write'):\n        dest = open(dest, 'wb')\n\n    while 1:\n        copy_buffer = source.read(buffer_size)\n        if copy_buffer:\n            dest.write(copy_buffer)\n        else:\n            break\n\n    source.close()\n    dest.close()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Look at module shutils.", "It contains function copyfile(src, dst) "], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "shutils", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "copyfile", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "src", "childNum": 0, "tag": "em", "childList": []}, {"text": "dst", "childNum": 0, "tag": "em", "childList": []}]}], [{"text": ["Use the shutils module.", "http://docs.python.org/lib/module-shutil.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/lib/module-shutil.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-shutil.html"}]}, {"code": "<pre>\n<code>\n copyfile(src, dst)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Copy the contents of the file named src to a file named dst.", "The destination location must be writable; otherwise, an IOError exception will be raised.", "If dst already exists, it will be replaced.", "Special files such as character or block devices and pipes cannot be copied with this function.", "src and dst are path names given as strings."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Take a look at http://docs.python.org/lib/filesys.html for all the file and directory handling functions available in standard Python modules."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://docs.python.org/lib/filesys.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/filesys.html"}]}], [{"text": ["shutil may have what your looking for."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "shutil", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-shutil.html"}]}], [{"text": ["http://docs.python.org/lib/module-shutil.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/lib/module-shutil.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-shutil.html"}]}], [{"text": ["Directory and File copy example - From Tim Golden's Python Stuff:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://timgolden.me.uk/python/win32_how_do_i/copy-a-file.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://timgolden.me.uk/python/win32_how_do_i/copy-a-file.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://timgolden.me.uk/python/win32_how_do_i/copy-a-file.html"}]}, {"code": "<pre>\n<code>\n import os\nimport shutil\nimport tempfile\n\nfilename1 = tempfile.mktemp (\".txt\")\nopen (filename1, \"w\").close ()\nfilename2 = filename1 + \".copy\"\nprint filename1, \"=&gt;\", filename2\n\nshutil.copy (filename1, filename2)\n\nif os.path.isfile (filename2): print \"Success\"\n\ndirname1 = tempfile.mktemp (\".dir\")\nos.mkdir (dirname1)\ndirname2 = dirname1 + \".copy\"\nprint dirname1, \"=&gt;\", dirname2\n\nshutil.copytree (dirname1, dirname2)\n\nif os.path.isdir (dirname2): print \"Success\"\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Here you copy all *.mp4 files from one directory to another         "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import shutil\n    import fnmatch\n    import os\n\n    Dir1 = \"/Volumes/VoigtKampff/Temp/TEST/\" #File Origin Directory - note this is for OSX\n    Dir2 = \"/Volumes/VoigtKampff/Temp/TEST/Destination/\" #File Destination Directory - note this is for OSX \n    dirList=os.listdir(Dir1)\n\n    for file1 in dirList: #file the files\n        if fnmatch.fnmatch(file1, '*.mp4'): #make sure they match the wildcard\n            print(file1) #echo the list of files to check \n            shutil.move(Dir1+file1, Dir2+'/'+file1) # move the files from origin to destination\n</code>\n</pre>\n", "senID": 1}]]