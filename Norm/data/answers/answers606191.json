[[{"text": ["You need to decode the bytes object to produce a string:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; b\"abcde\"\nb'abcde'\n&gt;&gt;&gt; b\"abcde\".decode(\"utf-8\")\n'abcde'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You need to decode the byte string and turn it in to a character (unicode) string. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n b'hello'.decode(encoding)\n</code>\n</pre>\n", "senID": 1}, {"text": ["or "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n str(b'hello', encoding)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I think what you actually want is this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from subprocess import *\n&gt;&gt;&gt; command_stdout = Popen(['ls', '-l'], stdout=PIPE).communicate()[0]\n&gt;&gt;&gt; command_text = command_stdout.decode(encoding='windows-1252')\n</code>\n</pre>\n", "senID": 1}, {"text": ["Aaron's answer was correct, except that you need to know WHICH encoding to use.", "And I believe that Windows uses 'windows-1252'.", "It will only matter if you have some unusual (non-ascii) characters in your content, but then it will make a difference."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["By the way, the fact that it DOES matter is the reason that Python moved to using two different types for binary and text data: it can't convert magically between them because it doesn't know the encoding unless you tell it!", "The only way YOU would know is to read the Windows documentation (or read it here)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]