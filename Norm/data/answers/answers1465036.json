[[{"text": ["You could also use the EPEL-repository, and then do sudo yum install python26 to install python 2.6"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "EPEL-repository", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://fedoraproject.org/wiki/EPEL"}]}], [{"text": ["When I've run into similar situations, I generally avoid the package manager, especially if it would be embarrassing to break something, i.e.", "a production server.", "Instead, I would go to Activestate and download their binary package:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["https://www.activestate.com/activepython/downloads/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "https://www.activestate.com/activepython/downloads/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://www.activestate.com/activepython/downloads/"}]}, {"text": ["This is installed by running a script which places everything into a folder and does not touch any system files.", "In fact, you don't even need root permissions to set it up.", "Then I change the name of the binary to something like apy26, add that folder to the end of the PATH and start coding.", "If you install packages with apy26 setup.py installor if you use virtualenv and easyinstall, then you have just as flexible a python environment as you need without touching the system standard python."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "apy26 setup.py install", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["Edits...", "Recently I've done some work to build a portable Python binary for Linux that should run on any distro with no external dependencies.", "This means that any binary shared libraries needed by the portable Python module are part of the build, included in the tarball and installed in Python's private directory structure.", "This way you can install Python for your application without interfering with the system installed Python."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["My github site has a build script which has been thoroughly tested on Ubuntu Lucid 10.04 LTS both 32 and 64 bit installs.", "I've also built it on Debian Etch but that was a while ago and I can't guarantee that I haven't changed something.", "The easiest way to do this is you just put your choice of Ubuntu Lucid in a virtual machine, checkout the script with git clone git://github.com/wavetossed/pybuild.git and then run the script. "], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "My github site", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/wavetossed/pybuild"}, {"text": "git clone git://github.com/wavetossed/pybuild.git", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["Once you have it built, use the tarball on any recent Linux distro.", "There is one little wrinkle with moving it to a directory other than /data1/packages/python272 which is that you have to run the included patchelf to set the interpreter path BEFORE you move the directory.", "This affects any binaries in /data1/packages/python272/bin"], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "/data1/packages/python272", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "patchelf", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "/data1/packages/python272/bin", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["All of this is based on building with RUNPATH and copying the dependent shared libraries.", "Even though the script is in several files, it is effectively one long shell script arranged in the style of /etc/rc.d directories."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["No, that's it.", "You might want to make sure you have all optional library headers installed too so you don't have to recompile it later.", "They are listed in the documentation I think."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Also, you can install it even in the standard path if you do make altinstall.", "That way it won't override your current default \"python\"."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "make altinstall", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Chris Lea provides a YUM repository for python26 RPMs that can co-exist with the 'native' 2.4 that is needed for quite a few admin tools on CentOS."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Chris Lea", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://chrislea.com/2009/09/09/easy-python-2-6-django-on-centos-5/"}]}, {"text": ["Quick instructions that worked at least for me:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n $ sudo rpm -Uvh http://yum.chrislea.com/centos/5/i386/chl-release-5-3.noarch.rpm\n$ sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CHL\n$ sudo yum install python26\n$ python26\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I've run in the same problem and here a very good guide on how to do that"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://blog.boxedice.com/2010/01/19/updating-python-on-rhelcentos/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://blog.boxedice.com/2010/01/19/updating-python-on-rhelcentos/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.boxedice.com/2010/01/19/updating-python-on-rhelcentos/"}]}], [{"text": ["If you want to make it easier on yourself, there are CentOS RPMs for new Python versions floating around the net.", "E.g.", "see:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.geekymedia.com/python%5F26%5Fcentos.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.geekymedia.com/python%5F26%5Fcentos.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.geekymedia.com/python%5F26%5Fcentos.html"}]}], [{"text": ["Late to the party, but the OP should have gone with Buildout or Virtualenv, and sidestepped the problem completely."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Buildout", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/zc.buildout/1.4.3"}, {"href": "http://pypi.python.org/pypi/virtualenv", "text": "Virtualenv", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["I am currently working on a Centos server, well, toiling away would be the proper term and I can assure everyone that the only way I am able to blink back the tears whilst using the software equivalents of fire hardened spears, is  buildout.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["No need to do yum or make your own RPM.", "Build python26 from source."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n wget http://www.python.org/ftp/python/2.6.6/Python-2.6.6.tgz\ntar -zxvf Python-2.6.6.tgz\ncd Python-2.6.6\n./configure &amp;&amp; make &amp;&amp; make install\n</code>\n</pre>\n", "senID": 1}, {"text": ["Add the install path (/usr/local/bin/python : by default) to ~/.bash_profile"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["It will not break yum or any other things which are dependent on python24."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["you can always make your own RPM:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.grenadepod.com/2009/12/26/building-python-2-6-4-rpm-for-centos-5-4/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.grenadepod.com/2009/12/26/building-python-2-6-4-rpm-for-centos-5-4/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.grenadepod.com/2009/12/26/building-python-2-6-4-rpm-for-centos-5-4/"}]}], [{"code": "<pre>\n<code>\n rpm -Uvh http://yum.chrislea.com/centos/5/i386/chl-release-5-3.noarch.rpm\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CHL\nrpm -Uvh ftp://ftp.pbone.net/mirror/centos.karan.org/el5/extras/testing/i386/RPMS/libffi-3.0.5-1.el5.kb.i386.rpm\nyum install python26\npython26\n</code>\n</pre>\n", "senID": 0}, {"text": ["for dos that just dont know :=)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Missing Dependency: libffi.so.5  is here : "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["ftp://ftp.pbone.net/mirror/centos.karan.org/el5/extras/testing/i386/RPMS/libffi-3.0.5-1.el5.kb.i386.rpm"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "ftp://ftp.pbone.net/mirror/centos.karan.org/el5/extras/testing/i386/RPMS/libffi-3.0.5-1.el5.kb.i386.rpm", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "ftp://ftp.pbone.net/mirror/centos.karan.org/el5/extras/testing/i386/RPMS/libffi-3.0.5-1.el5.kb.i386.rpm"}]}], [{"text": ["There isn't an accepted answer yet so I wrote you this blog which describes exactly how to compile Python 2.7 on CentOS 5.5 (Plesk) from the sources.", "It goes on to describe how to add MySQL support which is always handy!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Installing Python 2.7 with MySQL support on Plesk CentOS 5.5"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Installing Python 2.7 with MySQL support on Plesk CentOS 5.5", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.bigsoft.co.uk/blog/index.php/2011/07/07/installing-python-2-7-with-mysql-support-on-plesk-centos-5-5"}]}]]