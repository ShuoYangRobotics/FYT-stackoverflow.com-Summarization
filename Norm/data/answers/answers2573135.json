[[{"text": ["I thought the process of Python mastery went something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["One good way to further your Python knowledge is to dig into the source code of the libraries, platforms, and frameworks you use already."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "dig into the source code of the libraries, platforms, and frameworks you use already.", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["For example if you're building a site on Django, many questions that might stump you can be answered by looking at how Django implements the feature in question."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/"}]}, {"text": ["This way you'll continue to pick up new idioms, coding styles, and Python tricks.", "(Some will be good and some will be bad."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "pick up new idioms, coding styles, and Python tricks", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["And when you see something Pythony that you don't understand in the source, hop over to the #python IRC channel and you'll find plenty of \"language lawyers\" happy to explain."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "hop over to the #python IRC channel", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["An accumulation of these little clarifications over years leads to a much deeper understanding of the language and all of its ins and outs."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Understand (more deeply) Python's data types and their roles with regards to memory mgmt"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Understand (more deeply) Python's data types and their roles with regards to memory mgmt", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As some of you in the community are aware, I teach Python courses, the most popular ones being the comprehensive Intro+Intermediate course as well as an \"advanced\" course which introduces a variety of areas of application development."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "I teach Python courses", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cyberwebconsulting.com"}]}, {"text": ["Quite often, I get asked a question quite similar to, \"Should I take your intro or advanced course?", "I've already been programming Python for 1-2 years, and I think the intro one is too simple for me so I'd like to jump straight to the advanced... which course would you recommend?"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "you", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["To answer their question, I probe to see how strong they are in this area -- not that it's really the best way to measure whether they're ready for any advanced course, but to see how well their basic knowledge is of Python's objects and memory model, which is a cause of many Python bugs written by those who are not only beginners but those who have gone beyond that."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "many", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["To do this, I point them at this simple 2-part quiz question:\n"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "", "childNum": 0, "tag": "img", "pos": 0, "childList": []}]}, {"text": ["Many times, they are able to get the output, but the why is more difficult and much more important of an response...", "I would weigh the output as 20% of the answer while the \"why\" gets 80% credit.", "If they can't get the why, regardless how Python experience they have, I will always steer people to the comprehensive intro+intermediate course because I spend one lecture on objects and memory management to the point where you should be able to answer with the output and the why with sufficient confidence.", "(Just because you know Python's syntax after 1-2 years doesn't make you ready to move beyond a \"beginner\" label until you have a much better understanding as far as how Python works under the covers."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "why", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["A succeeding inquiry requiring a similar answer is even tougher, e.g.,"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Example 3"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Example 3", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n x = ['foo', [1,2,3], 10.4]\ny = list(x) # or x[:]\ny[0] = 'fooooooo'\ny[1][0] = 4\nprint x\nprint y\n</code>\n</pre>\n", "senID": 8}, {"text": ["The next topics I recommend are to understanding reference counting well, learning what \"interning\" means (but not necessarily using it), learning about shallow and deep copies (as in Example 3 above), and finally, the interrelationships between the various types and constructs in the language, i.e.", "lists vs. tuples, dicts vs. sets, list comprehensions vs. generator expressions, iterators vs. generators, etc.", "; however all those other suggestions are another post for another time.", "Hope this helps in the meantime!", ":-)"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["ps.", "I agree with the other responses for getting more intimate with introspection as well as studying other projects' source code and add a strong \"+1\" to both suggestions!"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["pps.", "Great question BTW.", "I wish I was smart enough in the beginning to have asked something like this, but that was a long time ago, and now I'm trying to help others with my many years of full-time Python programming!"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}], [{"text": ["Understand Introspection"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Understand Introspection", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 4, "lis": [{"text": "write a ", "tag": "none", "senID": 1}, {"text": "write a ", "tag": "none", "senID": 2}, {"text": "figure out how to ", "tag": "none", "senID": 3}, {"text": "use the ", "tag": "none", "senID": 4}]}, {"text": ["Doing these things will"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "give you some good theoretical knowledge about how python is implemented", "tag": "none", "senID": 6}, {"text": "give you some good practical experience in lower-level programming", "tag": "none", "senID": 7}, {"text": "give you a good intuitive feel for python data structures", "tag": "none", "senID": 8}]}], [{"text": ["Check out Peter Norvig's essay on becoming a master programmer in 10 years: http://norvig.com/21-days.html.", "I'd wager it holds true for any language. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://norvig.com/21-days.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://norvig.com/21-days.html"}]}], [{"text": ["I'll give you the simplest and most effective piece of advice I think anybody could give you: code."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "code", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["You can only be better at using a language (which implies understanding it) by coding.", "You have to actively enjoy coding, be inspired, ask questions, and find answers by yourself."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "coding", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Got a an hour to spare?", "Write code that will reverse a string, and find out the most optimum solution.", "A free evening?", "Why not try some web-scraping.", "Read other peoples code.", "See how they do things.", "Ask yourself what you would do."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["When I'm bored at my computer, I open my IDE and code-storm.", "I jot down ideas that sound interesting, and challenging.", "An URL shortener?", "Sure, I can do that.", "Oh, I learnt how to convert numbers from one base to another as a side effect!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["This is valid whatever your skill level.", "You never stop learning.", "By actively coding in your spare time you will, with little additional effort, come to understand the language, and ultimately, become a guru.", "You will build up knowledge and reusable code and memorise idioms."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "You never stop learning.", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"code": "<pre>\n<code>\n def apprentice():\n  read(diveintopython)\n  experiment(interpreter)\n  read(python_tutorial)\n  experiment(interpreter, modules/files)\n  watch(pycon)\n\ndef master():\n  refer(python-essential-reference)\n  refer(PEPs/language reference)\n  experiment()\n  read(good_python_code) # Eg. twisted, other libraries\n  write(basic_library)   # reinvent wheel and compare to existing wheels\n  if have_interesting_ideas:\n     give_talk(pycon)\n\ndef guru():\n  pass # Not qualified to comment. Fix the GIL perhaps?\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Google just recently released an online Python class (\"class\" as in \"a course of study\")."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://code.google.com/edu/languages/google-python-class/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.google.com/edu/languages/google-python-class/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/edu/languages/google-python-class/"}]}, {"text": ["I know this doesn't answer your full question, but I think it's a great place to start!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Download Twisted and look at the source code.", "They employ some pretty advanced techniques."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Twisted", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/trac/wiki/Downloads"}]}], [{"text": ["Thoroughly Understand All Data Types and Structures"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Thoroughly Understand All Data Types and Structures", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["For every type and structure, write a series of demo programs that exercise every aspect of the type or data structure.", "If you do this, it might be worthwhile to blog notes on each one... it might be useful to lots of people!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I learned python first by myself over a summer just by doing the tutorial on the python site (sadly, I don't seem to be able to find that anymore, so I can't post a link). "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Later, python was taught to me in one of my first year courses at university.", "In the summer that followed, I practiced with PythonChallenge and with problems from Google Code Jam.", "Solving these problems help from an algorithmic perspective as well as from the perspective of learning what Python can do as well as how to manipulate it to get the fullest out of python."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "PythonChallenge", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.pythonchallenge.com/"}, {"text": "Google Code Jam", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://code.google.com/codejam/"}]}, {"text": ["For similar reasons, I have heard that code golf works as well, but i have never tried it for myself."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "code golf", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codegolf.com/"}]}], [{"text": ["Have you seen the book \"Bioinformatics Programming using Python\"?", "Looks like you're an exact member of its focus group."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Bioinformatics Programming using Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://oreilly.com/catalog/9780596154516/"}]}], [{"text": ["If you're in and using python for science (which it seems you are)  part of that will be learning and understanding scientific libraries, for me these would be "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["numpy\nscipy\nmatplotlib\nmayavi/mlab\nchaco\nCython"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["knowing how to use the right libraries and vectorize your code is essential for scientific computing."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I wanted to add that, handling large numeric datasets in common pythonic ways(object oriented approaches, lists, iterators) can be extremely inefficient.", "In scientific computing, it can be necessary to structure your code in ways that differ drastically from how most conventional python coders approach data. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Not precisely what you're asking for, but I think it's good advice."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Learn another language, doesn't matter too much which.", "Each language has it's own ideas and conventions that you can learn from.", "Learn about the differences in the languages and more importantly why they're different.", "Try a purely functional language like Haskell and see some of the benefits (and challenges) of functions free of side-effects.", "See how you can apply some of the things you learn from other languages to Python.  "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "why", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["Learning algorithms/maths/file IO/Pythonic optimisation"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This won't get you guru-hood but to start out, try working through the Project Euler problems \nThe first 50 or so shouldn't tax you if you have decent high-school mathematics and know how to Google.", "When you solve one you get into the forum where you can look through other people's solutions which will teach you even more.", "Be decent though and don't post up your solutions as the idea is to encourage people to work it out for themselves. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Project Euler problems", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://projecteuler.net/"}]}, {"text": ["Forcing yourself to work in Python will be unforgiving if you use brute-force algorithms.", "This will teach you how to lay out large datasets in memory and access them efficiently with the fast language features such as dictionaries."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["From doing this myself I learnt:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "From doing this myself I learnt:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 6, "lis": [{"text": "File IO", "tag": "none", "senID": 4}, {"text": "Algorithms and techniques such as Dynamic Programming", "tag": "none", "senID": 5}, {"text": "Python data layout\n", "tag": "none", "senID": 6}, {"text": "Generators", "tag": "none", "senID": 7}, {"text": "Recursive functions", "tag": "none", "senID": 8}, {"text": "Developing Python libraries \n", "tag": "none", "senID": 9}]}, {"text": ["And also very importantly"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "And also very importantly", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 1, "lis": [{"text": "When to give up and use C or C++!", "tag": "none", "senID": 11}]}, {"text": ["All of this should be relevant to Bioinformatics"], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "All of this should be relevant to Bioinformatics", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Admittedly I didn't learn about the OOP features of Python from that experience."], "childNum": 0, "tag": "p", "senID": 13, "childList": []}], [{"text": ["You already have a lot of reading material, but if you can handle more, I recommend you\nlearn about the evolution of python by reading the Python Enhancement Proposals,  especially the \"Finished\" PEPs and the \"Deferred, Abandoned, Withdrawn, and Rejected\" PEPs."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["By seeing how the language has changed, the decisions that were made and their rationales, you will absorb the philosophy of Python and understand how \"idiomatic Python\" comes about."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["http://www.python.org/dev/peps/"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://www.python.org/dev/peps/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/"}]}], [{"text": ["I recommend starting with something that forces you to explore the expressive power of the syntax.", "Python allows many different ways of writing the same functionality, but there is often a single most elegant and fastest approach.", "If you're used to the idioms of other languages, you might never otherwise find or accept these better ways.", "I spent a weekend trudging through the first 20 or so Project Euler (http://projecteuler.net/) problems and made a simple webapp with Django on Google App Engine.", "This will only take you from apprentice to novice, maybe, but you can then continue to making somewhat more advanced webapps and solve more advanced Project Euler problems.", "After a few months I went back and solved the first 20 PE problems from scratch in an hour instead of a weekend."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Teaching to someone else who is starting to learn Python is always a great way to get your ideas clear and sometimes, I usually get a lot of neat questions from students that have me to re-think conceptual things about Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Go back on a regular basis to the Python challenge.", "You'll get better."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python challenge", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.pythonchallenge.com/"}]}]]