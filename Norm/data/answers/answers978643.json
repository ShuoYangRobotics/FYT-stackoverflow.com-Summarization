[[{"text": ["First off, thank you for asking this question, as it forced me to figure this out myself and it's great!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Here is the page I used as a reference: PySmell v0.6 released : orestis.gr"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "PySmell v0.6 released : orestis.gr", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/orestis/pysmell/tree/v0.6"}]}, {"text": ["I realize this is not a sustainable solution, but you should be able to use this as a start to getting it setup to always work (e.g., add the export to your .bashrc, add the :source to your .vimrc, setup autocmd FileType python set omnifunc=pysmell#Complete, etc."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "autocmd FileType python set omnifunc=pysmell#Complete", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Let me know if this is enough to get you started.", "It worked for me!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Edit\nI simply added this to my .vimrc and as long as the PYSMELLTAGS &amp; PYSMELLTAGS.django files are in my project root, it works fine without any other work:"], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "PYSMELLTAGS", "childNum": 0, "tag": "code", "childList": []}, {"text": "PYSMELLTAGS.django", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n python &lt;&lt; EOF\nimport os\nimport sys\nimport vim\nsys.path.append(\"/usr/local/python/lib/python2.5/site-packages\")\nEOF\nexe \":source ~/src/pysmell/pysmell.vim\"\nautocmd FileType python set omnifunc=pysmell#Complete\n</code>\n</pre>\n", "senID": 5}], [{"src": "http://blog.dispatched.ch/wp-content/uploads/2009/05/vim-as-python-ide.png", "tag": "img", "senID": 0}, {"text": ["You can set up VIM with buffers, buffer display, auto complete, even Py Doc display."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here you go"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Here you go", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/"}]}], [{"text": ["I've had good luck with exuberant-ctags for this."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I use this macro in my vimrc:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\nexecute 'map  :!/usr/bin/exuberant-ctags -f '.&tags.;' --recurse '.$_P4ROOT.' '\n</pre>\n", "senID": 2}, {"text": ["You'll want to modify that slightly, so that it includes your python /site-packages/django/ directory as well as your own code."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Then, hit F2 inside vim to update the tags, and use the regular vim tag bindings to navigate."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]]