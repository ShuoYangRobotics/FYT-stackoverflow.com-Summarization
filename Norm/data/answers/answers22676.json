[[{"text": ["One more, using urlretrieve"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import urllib\nurllib.urlretrieve (\"http://www.example.com/songs/mp3.mp3\", \"mp3.mp3\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["Yet another one, with a \"progressbar\""], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import urllib2\n\nurl = \"http://download.thinkbroadband.com/10MB.zip\"\n\nfile_name = url.split('/')[-1]\nu = urllib2.urlopen(url)\nf = open(file_name, 'wb')\nmeta = u.info()\nfile_size = int(meta.getheaders(\"Content-Length\")[0])\nprint \"Downloading: %s Bytes: %s\" % (file_name, file_size)\n\nfile_size_dl = 0\nblock_sz = 8192\nwhile True:\n    buffer = u.read(block_sz)\n    if not buffer:\n        break\n\n    file_size_dl += len(buffer)\n    f.write(buffer)\n    status = r\"%10d  [%3.2f%%]\" % (file_size_dl, file_size_dl * 100. / file_size)\n    status = status + chr(8)*(len(status)+1)\n    print status,\n\nf.close()\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Use urllib2 which comes with the standard library."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import urllib2\nresponse = urllib2.urlopen('http://www.example.com/')\nhtml = response.read()\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is the most basic way to use the library, minus any error handling.", "You can also do more complex stuff such as changing headers.", "The documentation can be found here."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "here.", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-urllib2.html"}]}], [{"code": "<pre>\n<code>\n import urllib2\nmp3file = urllib2.urlopen(\"http://www.example.com/songs/mp3.mp3\")\noutput = open('test.mp3','wb')\noutput.write(mp3file.read())\noutput.close()\n</code>\n</pre>\n", "senID": 0}, {"text": ["the 'wb' in open('test.mp3','wb') opens a (and erases any existing) file, binaraly, so you can save data with it, instead of just text."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I agree with Corey, urllib2 is more complete than urllib and should likely be the module used if you want to do more complex things, but to make the answers more complete, urllib is a simpler module if you want just the basics:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "urllib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-urllib.html"}]}, {"code": "<pre>\n<code>\n import urllib\nresponse = urllib.urlopen('http://www.example.com/sound.mp3')\nmp3 = response.read()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Will work fine.", "Or, if you don't want to deal with the \"response\" object you can call read() directly:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "read()", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import urllib\nmp3 = urllib.urlopen('http://www.example.com/sound.mp3').read()\n</code>\n</pre>\n", "senID": 3}]]