[[{"text": ["There's a few ways to do it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["sys.stdin is a file-like object on which you can call functions read or readlines if you want to read everything or you want to read everything and split it by newline automatically."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "sys.stdin", "tag": "a", "pos": 0, "childList": [{"text": "sys.stdin", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/sys.html#sys.stdin"}, {"text": "sys.stdin", "childNum": 0, "tag": "code", "childList": []}, {"text": "read", "childNum": 0, "tag": "code", "childList": []}, {"text": "readlines", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If you want to prompt the user for input, you can use raw_input in Python 2.X, and just input in Python 3.  "], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "prompt", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "raw_input", "childNum": 0, "tag": "code", "childList": []}, {"text": "input", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If you actually just want to read command-line options, you can access them via the sys.argv list."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "sys.argv", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/sys.html#sys.argv"}]}, {"text": ["You will probably find this Wikibook article on I/O in Python to be a useful reference as well."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "this Wikibook article on I/O in Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikibooks.org/wiki/Python%5FProgramming/Input%5Fand%5Foutput"}]}], [{"text": ["This is something I learnt from StackOverflow"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import fileinput\n\nfor line in fileinput.input():\n    pass\n</code>\n</pre>\n", "senID": 1}, {"text": ["Fileinput will run over all lines in the input; it takes the files given as command-line arguments, or if missing, the standard input."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here's from Learning Python:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Learning Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://oreilly.com/catalog/lpython/chapter/ch09.html#16308"}]}, {"code": "<pre>\n<code>\n import sys\ndata = sys.stdin.readlines()\nprint \"Counted\", len(data), \"lines.\"\n</code>\n</pre>\n", "senID": 1}, {"code": "<pre>\n<code>\n % cat countlines.py | python countlines.py \nCounted 3 lines.\n</code>\n</pre>\n", "senID": 2}, {"code": "<pre>\n<code>\n C:\\&gt; type countlines.py | python countlines.py \nCounted 3 lines.\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n import sys\n\nfor line in sys.stdin:\n    print line\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Python also has built-in functions input() and raw_input().", "See the python documentation under Built-in Functions"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "input()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "raw_input()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Built-in Functions", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html"}]}, {"text": ["For example,"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n name = raw_input(\"Enter your name: \")\n</code>\n</pre>\n", "senID": 2}], [{"text": ["A more useful example.", "Input are three columns separated by tabs:    "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for line in sys.stdin:\n    [user,time,query] = line.split('\\t')\n    if \"hello\" in query:  # query contains hello\n        print user,'\\t',query\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The answer proposed by others:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for line in sys.stdin:\n  print line\n</code>\n</pre>\n", "senID": 1}, {"text": ["is very simple and pythonic, but it must be noted that the script will wait until EOF before starting to iterate on the lines of input."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This means that \"tail -f error_log | myscript.py\" will not process lines as expected."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The correct script for such a use case would be:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n while 1:\n    try:\n        line = sys.stdin.readline()\n    except KeyboardInterrupt:\n        break\n\n    if not line:\n        break\n\n    print line\n</code>\n</pre>\n", "senID": 5}]]