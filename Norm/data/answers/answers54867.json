[[{"text": ["From http://docs.python.org/ref/node33.html :"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/ref/node33.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/ref/node33.html"}]}], [{"text": ["Declaration-wise:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Declaration-wise:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["New-style classes inherit from object."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class NewStyleClass(object):\n    pass\n</code>\n</pre>\n", "senID": 2}, {"text": ["Old-style classes don't."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class OldStyleClass():\n    pass\n</code>\n</pre>\n", "senID": 4}], [{"text": ["The short answer: old-style classes are only there for backwards compatibility, and will go away in Python 3.0.", "You should always use new-style classes."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Old style classes are still marginally faster for attribute lookup.", "This is not usually important, but may be useful in performance-sensitive Python 2.x code:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\nIn [3]: class A:\n   ...:     def __init__(self):\n   ...:         self.a = 'hi there'\n   ...: \n\nIn [4]: class B(object):\n   ...:     def __init__(self):\n   ...:         self.a = 'hi there'\n   ...: \n\nIn [6]: aobj = A()\nIn [7]: bobj = B()\n\nIn [8]: %timeit aobj.a\n10000000 loops, best of 3: 78.7 ns per loop\n\nIn [10]: %timeit bobj.a\n10000000 loops, best of 3: 86.9 ns per loop\n</pre>\n", "senID": 1}], [{"text": ["Or rather, you should always use new-style classes, unless you have code that needs to work with versions of Python older than 2.2."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "unless", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["New-style classes inherit from object and must be written as such in Python 2.2 onwards (i.e.", "'class Classname(object):' instead of 'class Classname:').", "The core change is to unify types and classes, and the nice side-effect of this is that it allows you to inherit from built-in types."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Read descrintro for more details."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "descrintro", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/download/releases/2.2.3/descrintro/"}]}], [{"text": ["1) What about mro (very important)\n2) super support in new class types\n3) and as i can recall new is also introduced in new type of classes"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "mro", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "new", "childNum": 0, "tag": "strong", "childList": []}]}]]