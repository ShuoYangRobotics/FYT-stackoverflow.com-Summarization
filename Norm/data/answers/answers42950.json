[[{"text": ["I didn't notice this earlier when I was looking at the documentation for the calendar module, but a method called monthrange provides this information:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "documentation for the calendar module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-calendar.html"}, {"href": "http://docs.python.org/library/calendar.html#calendar.monthrange", "text": "monthrange", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import calendar\n&gt;&gt;&gt; calendar.monthrange(2002,1)\n(1, 31)\n&gt;&gt;&gt; calendar.monthrange(2008,2)\n(4, 29)\n&gt;&gt;&gt; calendar.monthrange(2100,2)\n(0, 28)\n</code>\n</pre>\n", "senID": 1}, {"text": ["so:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n calendar.monthrange(year, month)[1]\n</code>\n</pre>\n", "senID": 3}, {"text": ["seems like the simplest way to go."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["My previous answer still works, but is clearly suboptimal."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "My previous answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/42950/get-last-day-of-the-month-in-python#43088"}]}], [{"text": ["EDIT: See @Blair Conrad's answer for a cleaner solution"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Blair Conrad's answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "#43663"}]}, {"tag": "hr", "senID": 1}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import datetime\n&gt;&gt;&gt; datetime.date (2000, 2, 1) - datetime.timedelta (days = 1)\ndatetime.date(2000, 1, 31)\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 2}], [{"text": ["EDIT: see my other answer.", "It has a better implementation than this one, which I leave here just in case someone's interested in seeing how one might \"roll your own\" calculator."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["@John Millikin gives a good answer, with the added complication of calculating the first day of the next month."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "John Millikin", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "#42997"}]}, {"text": ["The following isn't particularly elegant, but to figure out the last day of the month that any given date lives in, you could try:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def last_day_of_month(date):\n    if date.month == 12:\n        return date.replace(day=31)\n    return date.replace(month=date.month+1, day=1) - datetime.timedelta(days=1)\n\n&gt;&gt;&gt; last_day_of_month(datetime.date(2002, 1, 17))\ndatetime.date(2002, 1, 31)\n&gt;&gt;&gt; last_day_of_month(datetime.date(2002, 12, 9))\ndatetime.date(2002, 12, 31)\n&gt;&gt;&gt; last_day_of_month(datetime.date(2008, 2, 14))\ndatetime.date(2008, 2, 29)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Another solution would be to do something like this: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from datetime import datetime\n\ndef last_day_of_month(year, month):\n        \"\"\" Work out the last day of the month \"\"\"\n        last_days = [31, 30, 29, 28, 27]\n        for i in last_days:\n                try:\n                        end = datetime(year, month, i)\n                except ValueError:\n                        continue\n                else:\n                        return end.date()\n        return None\n</code>\n</pre>\n", "senID": 1}, {"text": ["And use the function like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \n&gt;&gt;&gt; last_day_of_month(2008, 2)\ndatetime.date(2008, 2, 29)\n&gt;&gt;&gt; last_day_of_month(2009, 2)\ndatetime.date(2009, 2, 28)\n&gt;&gt;&gt; last_day_of_month(2008, 11)\ndatetime.date(2008, 11, 30)\n&gt;&gt;&gt; last_day_of_month(2008, 12)\ndatetime.date(2008, 12, 31)\n</code>\n</pre>\n", "senID": 3}]]