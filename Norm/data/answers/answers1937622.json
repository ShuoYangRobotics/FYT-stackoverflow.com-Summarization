[[{"text": ["You can use datetime.combine(date, time); for the time you create a datetime.time object initialized to midnight."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "datetime.combine(date, time)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "datetime.time", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["yeah, you pretty much do.", "you can use the timetuple() method and varargs though:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n datetime.datetime(*(d.timetuple()[:6]))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["There are several ways, although I do believe the one you mention (and dislike) is the most readable one."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; t=datetime.date.today()\n&gt;&gt;&gt; datetime.datetime.fromordinal(t.toordinal())\ndatetime.datetime(2009, 12, 20, 0, 0)\n&gt;&gt;&gt; datetime.datetime(t.year, t.month, t.day)\ndatetime.datetime(2009, 12, 20, 0, 0)\n&gt;&gt;&gt; datetime.datetime(*t.timetuple()[:-4])\ndatetime.datetime(2009, 12, 20, 0, 0)\n</code>\n</pre>\n", "senID": 1}, {"text": ["and so forth -- but basically they all hinge on appropriately extracting info from the date object and ploughing it back into the suitable ctor or classfunction for datetime."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "date", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "datetime", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["If you need something quick:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["datetime_object.date()"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Gives you a date of a datetime object."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]