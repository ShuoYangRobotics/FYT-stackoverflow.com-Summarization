[[{"text": ["What is the line?", "You can just have arguments on the next line without any problems:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a = dostuff(blahblah1, blahblah2, blahblah3, blahblah4, blahblah5, \n            blahblah6, blahblah7)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Otherwise you can do somthing like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if a = True and \\\n   b = False\n</code>\n</pre>\n", "senID": 3}, {"text": ["Check the Style Guide for more info."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Style Guide", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"text": ["(edit)"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "(edit)", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["From your example line:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n a = '1' + '2' + '3' + \\\n    '4' + '5'\n</code>\n</pre>\n", "senID": 7}, {"text": ["Or:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n a = ('1' + '2' + '3' +\n    '4' + '5')\n</code>\n</pre>\n", "senID": 9}, {"text": ["Note that the style guide says that using the implicit continuation with parentheses is preferred, but in this particular case just adding parentheses around your expression is probably the wrong way to go."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}], [{"text": ["@Harley"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Harley", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "#53180"}]}, {"text": ["From Style Guide for Python Code:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Style Guide for Python Code", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"code": "<pre>\n<code>\n class Rectangle(Blob):\n\n    def __init__(self, width, height,\n                 color='black', emphasis=None, highlight=0):\n        if width == 0 and height == 0 and \\\n           color == 'red' and emphasis == 'strong' or \\\n           highlight &gt; 100:\n            raise ValueError(\"sorry, you lose\")\n        if width == 0 and height == 0 and (color == 'red' or\n                                           emphasis is None):\n            raise ValueError(\"I don't think so -- values are %s, %s\" %\n                             (width, height))\n        Blob.__init__(self, width, height,\n                      color, emphasis, highlight)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The danger in using a backslash to end a line is that if whitespace is added after the backslash (which, of course, is very hard to see), the backslash is no longer doing what you thought it was."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["See Python Idioms and Anti-Idioms for more."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python Idioms and Anti-Idioms", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/dev/howto/doanddont.html#using-backslash-to-continue-statements"}]}], [{"text": ["You can break lines in between parenthesises and braces.", "Additionally, you can append the backslash character \\ to a line to explicitly break it:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "\\", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n x = (tuples_first_value,\n     second_value)\ny = 1 + \\\n    2\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Put a \\ at the end of your line or enclose the statement in parens ( .. ).", "From IBM:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "\\", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "( .. )", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "IBM", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.ibm.com/developerworks/opensource/library/os-python5/"}]}, {"code": "<pre>\n<code>\n b = ((i1 &lt; 20) and\n     (i2 &lt; 30) and\n     (i3 &lt; 40))\n</code>\n</pre>\n", "senID": 1}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n b = (i1 &lt; 20) and \\\n    (i2 &lt; 30) and \\\n    (i3 &lt; 40)\n</code>\n</pre>\n", "senID": 3}], [], [{"text": ["Style guide is just a guide.", "Do it however you prefer to do it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]