[[{"text": ["To help you choose from the various modules available, I think this talk (at pycon 2009), is what you're looking for (the guy has lots of experience on the matter).", "And he points out the good and the bad from most of available modules ."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["Scrape the Web: Strategies for\nprogramming websites that don't\nexpect it (Part 1 of 3)"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}, {"text": ["Scrape the Web: Strategies for programming\nwebsites that don't expect it (Part 2\nof 3)"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["Scrape the Web: Strategies for\nprogramming websites that don't\nexpect it (Part 3 of 3)"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}]}, {"text": ["From the PYCON 2009 schedule:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Update:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Asheesh Laroia has updated his presentation for pycon 2010"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Asheesh Laroia has updated his presentation for pycon 2010", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.mirocommunity.org/video/1616/pycon-2010-scrape-the-web-stra"}]}, {"tag": "ul", "num": 1, "lis": [{"text": ["PyCon 2010: Scrape the Web:\nStrategies for programming websites\nthat don't expected it"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "PyCon 2010: Scrape the Web:\nStrategies for programming websites\nthat don't expected it", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.mirocommunity.org/video/1616/pycon-2010-scrape-the-web-stra"}]}]}], [{"text": ["just use urllib2 in combination with the brilliant BeautifulSoup library:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "BeautifulSoup", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/"}]}, {"code": "<pre>\n<code>\n import urllib2\nfrom BeautifulSoup import BeautifulSoup\n\nsoup = BeautifulSoup(urllib2.urlopen('http://www.timeanddate.com/worldclock/astronomy.html?n=78').read())\n\nfor row in soup('table', {'class' : 'spad'})[0].tbody('tr'):\n  tds = row('td')\n  print tds[0].string, tds[1].string\n  # will print date and sunrise\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use urllib2 to make the HTTP requests, and then you'll have web content."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "urllib2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/urllib2.html"}]}, {"text": ["You can get it like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import urllib2\nresponse = urllib2.urlopen('http://www.timeanddate.com/worldclock/astronomy.html?n=78')\nhtml = response.read()\n</code>\n</pre>\n", "senID": 2}, {"text": ["Beautiful Soup is a python HTML parser that is supposed to be good for screen scraping."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Beautiful Soup", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/"}]}, {"text": ["In particular, here is their tutorial on parsing an HTML document."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/documentation.html#Parsing%20a%20Document"}]}, {"text": ["Good luck!"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Python has several options for web scraping.", "I enumerated some of the options here in response to a similar question."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/2861/options-for-html-scraping/1970411#1970411"}]}], [{"text": ["All this is cool but how do we interact with the target web page to get it to the real place we want to extract the data from.", "Many web pages encode session ids within their dynamically-generated urls, for example.", "As well, many pages can sense whether the visitor is a bot or a real person (I don't know how) - so what do we do?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]