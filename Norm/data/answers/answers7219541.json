[[{"text": ["Semicolons in Python are totally optional (unless you want to have multiple statements in a single line, of course).", "I personally think Python code with semicolons at the end of every statement looks very ugly."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Now in Javascript, if you don't write a semicolon, one is automatically inserted1 at the end of line.", "And this can cause problems.", "Consider:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "1", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n function add(a, b) {\n  return\n    a + b\n}\n</code>\n</pre>\n", "senID": 2}, {"text": ["You'd think this returns a + b, but Javascript just outsmarted you and sees this as:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "a + b", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n function add() {\n  return;\n    a + b;\n}\n</code>\n</pre>\n", "senID": 4}, {"text": ["Returning undefined instead."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "undefined", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["1 See page 27, item 7.9 - Automatic Semicolon Insertion on ECMAScript Language Specification for more details and caveats."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "1", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"href": "http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf", "text": "ECMAScript Language Specification", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["This had me confused for the longest time.", "I thought it was just a cultural difference, and that everyone complaining about semicolon insertion being the worst feature in the language was an idiot.", "The oft-repeated example from NullUserException's answer didn't sway me because, disregarding indentation, Python behaves the same as JavaScript in that case."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "idiot", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "NullUserException's answer", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/q/7219549/1114"}]}, {"text": ["Then one day, I wrote something vaguely like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n alert(2)\n(x = $(\"#foo\")).detach()\n</code>\n</pre>\n", "senID": 2}, {"text": ["I expected it to be interpreted like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n alert(2);\n(x = $(\"#foo\")).detach();\n</code>\n</pre>\n", "senID": 4}, {"text": ["It was actually interpreted like this:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n alert(2)(x = $(\"#foo\")).detach();\n</code>\n</pre>\n", "senID": 6}, {"text": ["I now use semicolons."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["JavaScript will only1 treat a newline as a semicolon in these cases:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "1", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 4, "lis": [{"text": "It's a syntax error not to.", "tag": "none", "senID": 9}, {"text": "The newline is between the ", "tag": "none", "senID": 10}, {"text": "The newline is between the ", "tag": "none", "senID": 11}, {"text": "The newline is between a variable and a postfix ", "tag": "none", "senID": 12}]}, {"text": ["This cases like this where the behaviour is not what you'd expect.", "Some people2 have adopted conventions that only use semicolons where neccessary.", "I prefer to follow the standard convention of always using them, now that I know it's not pointless."], "childNum": 1, "tag": "p", "senID": 13, "childList": [{"text": "2", "childNum": 0, "tag": "sup", "pos": 1, "childList": []}]}, {"text": ["1 I've omitted a few minor details, consult ECMA-262 5e Section 7.9 for the exact description.", "2 I remember reading that some quite-popular JS library was written like this, but I can't remember which and Google is failing me.", "If you know which it is, please comment."], "childNum": 4, "tag": "p", "senID": 14, "childList": [{"text": "1", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"text": "ECMA-262 5e Section 7.9", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://ecma262-5.com/ELS5_Section_7.htm#Section_7.9"}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "2", "childNum": 0, "tag": "sup", "pos": -1, "childList": []}]}], [{"text": ["The answer why you don't see them in Python code is: no one needs them, and the code looks cleaner without them."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Generally speaking, semicolons is just a tradition.", "Many new languages have just dropped them for good (take Python, Ruby, Scala, Go, Groovy, Io for example).", "Programmers don't need them, neither do compilers.", "If a language lets you not type an extra character you never needed, you will want to take advantage of that, won't you?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It's just that JavaScript's attempt to drop them wasn't very successful, and many prefer the convention to always use them, because that makes code less ambiguous."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Aside from the syntactical issues, it is partly cultural.", "In Python culture any extraneous characters are an anathema, and those that are not white-space or alphanumeric, doubly so."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["So things like leading $ signs, semi-colons, and curly braces, are not liked.", "What you do in your code though, is up to you, but to really understand a language it is not enough just to learn the syntax. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["JavaScript is designed to \"look like C\", so semicolons are part of the culture.", "Python syntax is different enough to not make programmers feel uncomfortable if the semicolons are \"missing\"."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["It is mostly that python looks nothing like java, and javascript does, which leads people to treat it that way.", "It is very simple to not get into trouble using semicolons with javascript (http://mislav.uniqpath.com/2010/05/semicolons/), anything else is FUD."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://mislav.uniqpath.com/2010/05/semicolons/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://mislav.uniqpath.com/2010/05/semicolons/"}]}], [{"text": ["I always thought this convention had less to do with edge cases and more to do with the fact that Javascript is frequently compressed/minified in order to save bandwidth.", "Such minified code would almost certainly break without semicolons. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a = 2\nb = 3\nreturn a + b\n\n// minified\na=2b=3return a+b\n</code>\n</pre>\n", "senID": 1}]]