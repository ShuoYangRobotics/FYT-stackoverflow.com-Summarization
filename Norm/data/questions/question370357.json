[{"text": ["Python variable scope question"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've been programming for many years, and recently started learning Python.", "The following code works as expected in both python 2.5 and 3.0 (on OS X if that matters):"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n a, b, c = (1, 2, 3)\n\nprint(a, b, c)\n\ndef test():\n    print(a)\n    print(b)\n    print(c)    # (A)\n    #c+=1       # (B)\ntest()\n</code>\n</pre>\n", "senID": 2}, {"text": ["However, when I uncomment line (B), I get an UnboundLocalError: 'c' not assigned at line (A).", "The values of a and b are printed correctly.", "This has me completely baffled for two reasons:"], "childNum": 5, "tag": "p", "senID": 3, "childList": [{"text": "(B)", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "UnboundLocalError: 'c' not assigned", "childNum": 0, "tag": "i", "pos": -1, "childList": []}, {"text": "(A)", "childNum": 0, "tag": "b", "pos": -1, "childList": []}, {"text": "a", "childNum": 0, "tag": "i", "pos": 1, "childList": []}, {"text": "b", "childNum": 0, "tag": "i", "pos": 2, "childList": []}]}, {"text": ["1) Why is there an runtime error thrown at line (A) because of a later statement on line (B)?"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "(A)", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "(B)", "childNum": 0, "tag": "b", "childList": []}]}, {"text": ["2) Why are variables a and b printed as expected, while c raises an error?"], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "a", "childNum": 0, "tag": "i", "pos": 0, "childList": []}, {"text": "b", "childNum": 0, "tag": "i", "childList": []}, {"text": "c", "childNum": 0, "tag": "i", "childList": []}]}, {"text": ["The only explanation I can come up with is that a local variable c is created by the assignment c+=1, which takes precedent over the \"global\" variable c even before the local variable is created.", "Of course, it doesn't make sense for a variable to \"steal\" scope before it exists."], "childNum": 4, "tag": "p", "senID": 6, "childList": [{"text": "local", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "c", "childNum": 0, "tag": "i", "pos": 1, "childList": []}, {"text": "c+=1", "childNum": 0, "tag": "i", "childList": []}, {"text": "c", "childNum": 0, "tag": "i", "childList": []}]}, {"text": ["Could someone please explain this behavior?", "Thank you very much,\nbrainfsck"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]