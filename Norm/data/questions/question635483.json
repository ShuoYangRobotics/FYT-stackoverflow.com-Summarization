[{"text": ["What is the best way to implement nested dictionaries in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a data structure which essentially amounts to a nested dictionary.", "Let's say it looks like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n {'new jersey': {'mercer county': {'plumbers': 3,\n                                  'programmers': 81},\n                'middlesex county': {'programmers': 81,\n                                     'salesmen': 62}},\n 'new york': {'queens county': {'plumbers': 9,\n                                'salesmen': 36}}}\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now, maintaining and creating this is pretty painful; every time I have a new state/county/profession I have to create the lower layer dictionaries via obnoxious try/catch blocks.", "Moreover, I have to create annoying nested iterators if I want to go over all the values. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I could also use tuples as keys, like such:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n {('new jersey', 'mercer county', 'plumbers'): 3,\n ('new jersey', 'mercer county', 'programmers'): 81,\n ('new jersey', 'middlesex county', 'programmers'): 81,\n ('new jersey', 'middlesex county', 'salesmen'): 62,\n ('new york', 'queens county', 'plumbers'): 9,\n ('new york', 'queens county', 'salesmen'): 36}\n</code>\n</pre>\n", "senID": 5}, {"text": ["This makes iterating over the values very simple and natural, but it is more syntactically painful to do things like aggregations and looking at subsets of the dictionary (e.g.", "if I just want to go state-by-state)."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Basically, sometimes I want to think of a nested dictionary as a flat dictionary, and sometimes I want to think of it indeed as a complex hierarchy.", "I could wrap this all in a class, but it seems like someone might have done this already.", "Alternatively, it seems like there might be some really elegant syntactical constructions to do this. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["How could I do this better?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Addendum: I'm aware of setdefault() but it doesn't really make for clean syntax.", "Also, each sub-dictionary you create still needs to have setdefault() manually set."], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "setdefault()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "setdefault()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}]