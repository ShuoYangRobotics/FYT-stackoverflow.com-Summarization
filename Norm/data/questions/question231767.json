[{"text": ["The Python yield keyword explained"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What is the use of the yield keyword in Python?", "What does it do?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example, I'm trying to understand this code (**):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def node._get_child_candidates(self, distance, min_dist, max_dist):\n    if self._leftchild and distance - max_dist &lt; self._median:\n        yield self._leftchild\n    if self._rightchild and distance + max_dist &gt;= self._median:\n        yield self._rightchild\n</code>\n</pre>\n", "senID": 3}, {"text": ["And this is the caller:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n result, candidates = list(), [self]\nwhile candidates:\n    node = candidates.pop()\n    distance = node._get_dist(obj)\n    if distance &lt;= max_dist and distance &gt;= min_dist:\n        result.extend(node._values)\n        candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))\n        return result\n</code>\n</pre>\n", "senID": 5}, {"text": ["What happens when the method _get_child_candidates is called?", "A list is returned?", "A single element is returned?", "Is it called again?", "When subsequent calls do stop?"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "_get_child_candidates", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["** The code comes from Jochen Schulz (jrschulz), who made a great Python library for metric spaces.", "This is the link to the complete source: http://well-adjusted.de/~jrschulz/mspace/."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "http://well-adjusted.de/~jrschulz/mspace/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://well-adjusted.de/~jrschulz/mspace/"}]}]