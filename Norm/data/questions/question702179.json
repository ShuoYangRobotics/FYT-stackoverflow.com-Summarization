[{"text": ["Django vs other Python web frameworks?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've pretty much tried every Python web framework that exists, and it took me a long time to realize there wasn't a silver bullet framework, each had its own advantages and disadvantages.", "I started out with Snakelets and heartily enjoyed being able to control almost everything at a lower level without much fuss, but then I discovered TurboGears and I have been using it (1.x) ever since.", "Tools like Catwalk and the web console are invaluable to me."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Snakelets", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://snakelets.sf.net"}, {"text": "TurboGears", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://turbogears.org"}]}, {"text": ["But with TurboGears 2 coming out which brings WSGI support, and after reading up on the religious debates between the Django and WSGI camps, I'm really torn between \"doing it the right way\", e.g., learning WSGI, spending valuable time writing functionality that already exists in Django and other full-stack frameworks, as opposed to using Django or some high-level framework that does everything for me.", "The downsides with the latter that I can see are pretty obvious: "], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "\"doing it the right way\"", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "\"doing it the right way\"", "tag": "em"}]}, {"text": "\"doing it the right way\"", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["So, I guess my question is, which is the better choice, or is it just a matter of opinion, and should I suck it up and use Django if it achieves what I want with minimal fuss (I want authentication and a CRUD interface to my database)?", "I tried Werkzeug, Glashammer, and friends, but AuthKit and Repoze scared me off, as well as the number of steps involved to just setup basic authentication.", "I looked at Pylons, but the documentation seems lacking, and when referencing simple features like authentication or a CRUD interface, various wiki pages and documentation seemed to contradict each other, with different hacks for versions and such. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "hr", "senID": 4}, {"text": ["Thanks to S. Lott for pointing out that I wasn't clear enough.", "My question is: which of the following is worthwhile in the long run, but not painful in the short (e.g., some sort of middle ground, anyone?", ") - Learn WSGI, or stick with a \"batteries-included\" framework?", "If the latter, I would appreciate a suggestion as to whether I should give Django another try, stick with TurboGears 1.x, or venture into some other framework. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Also, I have tried CherryPy, but couldn't seem to find a good enough CRUD application that I could plop in and use right away."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]