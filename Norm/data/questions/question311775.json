[{"text": ["Python - Create a list with initial capacity"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Code like this often happens:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = []\nwhile foo:\n    #baz\n    l.append(bar)\n    #qux\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is really slow if you're about to append thousands of elements to your list, as the list will have to constantly be re-initialized to grow.", "(I understand that lists aren't just wrappers around some array-type-thing, but something more complicated.", "I think this still applies, though; let me know if not)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["In Java, you can create an ArrayList with an initial capacity.", "If you have some idea how big your list will be, this will be a lot more efficient."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I understand that code like this can often be re-factored into a list comprehension.", "If the for/while loop is very complicated, though, this is unfeasible.", "Is there any equivalent for us python programmers?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]