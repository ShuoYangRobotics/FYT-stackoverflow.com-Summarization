[{"text": ["Why is printing to stdout so slow?", "Can it be sped up?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've always been amazed/frustrated with how long it takes to simply output to the terminal with a print statement.", "After some recent painfully slow logging I decided to look into it and was quite surprised to find that almost all the time spent is waiting for the terminal to process the results."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "all", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["Can writing to stdout be sped up somehow?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I wrote a script ('print_timer.py' at the bottom of this question) to compare timing when writing 100k lines to stdout, to file, and with stdout redirected to /dev/null.", "Here is the timing result:"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "print_timer.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "/dev/null", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n$python print_timer.py\nthis is a test\nthis is a test\n&lt;snipped 99997 lines&gt;\nthis is a test\n-----\ntiming summary (100k lines each)\n-----\nprint                         :11.950 s\nwrite to file (+ fsync)       : 0.122 s\nprint with stdout = /dev/null : 0.050 s\n</pre>\n", "senID": 4}, {"text": ["Wow.", "To make sure python isn't doing something behind the scenes like recognizing that I reassigned stdout to /dev/null or something, I did the redirection outside the script..."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n$ python print_timer.py > /dev/null\n-----\ntiming summary (100k lines each)\n-----\nprint                         : 0.053 s\nwrite to file (+fsync)        : 0.108 s\nprint with stdout = /dev/null : 0.045 s\n</pre>\n", "senID": 6}, {"text": ["So it isn't a python trick, it is just the terminal.", "I always knew dumping output to /dev/null sped things up, but never figured it was that significant!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["It amazes me how slow the tty is.", "How can it be that writing to physical disk is WAY faster than writing to the \"screen\" (presumably an all-RAM op), and is effectively as fast as simply dumping to the garbage with /dev/null?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["This link talks about how the terminal will block I/O so it can \"parse [the input], update its frame buffer, communicate with the X server in order to scroll the window and so on\"... but I don't fully get it.", "What can be taking so long?"], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "This link", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.linusakesson.net/programming/tty/index.php"}, {"text": "\"parse [the input], update its frame buffer, communicate with the X server in order to scroll the window and so on\"", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["I expect there is no way out (short of a faster tty implementation?", ") but figure I'd ask anyway."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["UPDATE: after reading some comments I wondered how much impact my screen size actually has on the print time, and it does have some significance.", "The really slow numbers above are with my Gnome terminal blown up to 1920x1200.", "If I reduce it very small I get..."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n-----\ntiming summary (100k lines each)\n-----\nprint                         : 2.920 s\nwrite to file (+fsync)        : 0.121 s\nprint with stdout = /dev/null : 0.048 s\n</pre>\n", "senID": 12}, {"text": ["That is certainly better (~4x), but doesn't change my question.", "It only adds to my question as I don't understand why the terminal screen rendering should slow down an application writing to stdout.", "Why does my program need to wait for screen rendering to continue?"], "childNum": 1, "tag": "p", "senID": 13, "childList": [{"text": "adds", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Are all terminal/tty apps not created equal?", "I have yet to experiment.", "It really seems to me like a terminal should be able to buffer all incoming data, parse/render it invisibly, and only render the most recent chunk that is visible in the current screen configuration at a sensible frame rate.", "So if I can write+fsync to disk in ~0.1 seconds, a terminal should be able to complete the same operation in something of that order (with maybe a few screen updates while it did it)."], "childNum": 0, "tag": "p", "senID": 14, "childList": []}, {"text": ["I'm still kind of hoping there is a tty setting that can be changed from the application side to make this behaviour better for programmer.", "If this is strictly a terminal application issue, then this maybe doesn't even belong on StackOverflow?"], "childNum": 0, "tag": "p", "senID": 15, "childList": []}, {"text": ["What am I missing?"], "childNum": 0, "tag": "p", "senID": 16, "childList": []}, {"text": ["Here is the python program used to generate the timing:"], "childNum": 0, "tag": "p", "senID": 17, "childList": []}, {"code": "<pre>\n<code>\n import time, sys, tty\nimport os\n\nlineCount = 100000\nline = \"this is a test\"\nsummary = \"\"\n\ncmd = \"print\"\nstartTime_s = time.time()\nfor x in range(lineCount):\n    print line\nt = time.time() - startTime_s\nsummary += \"%-30s:%6.3f s\\n\" % (cmd, t)\n\n#Add a newline to match line outputs above...\nline += \"\\n\"\n\ncmd = \"write to file (+fsync)\"\nfp = file(\"out.txt\", \"w\")\nstartTime_s = time.time()\nfor x in range(lineCount):\n    fp.write(line)\nos.fsync(fp.fileno())\nt = time.time() - startTime_s\nsummary += \"%-30s:%6.3f s\\n\" % (cmd, t)\n\ncmd = \"print with stdout = /dev/null\"\nsys.stdout = file(os.devnull, \"w\")\nstartTime_s = time.time()\nfor x in range(lineCount):\n    fp.write(line)\nt = time.time() - startTime_s\nsummary += \"%-30s:%6.3f s\\n\" % (cmd, t)\n\nprint &gt;&gt; sys.stderr, \"-----\"\nprint &gt;&gt; sys.stderr, \"timing summary (100k lines each)\"\nprint &gt;&gt; sys.stderr, \"-----\"\nprint &gt;&gt; sys.stderr, summary\n</code>\n</pre>\n", "senID": 18}]