[{"text": ["How can I use Python for large scale development?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I would be interested to learn about large scale development in Python and especially in how do you maintain a large code base?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": ["When you make incompatibility changes to the signature of a method, how do you find all the places where that method is being called.", "In C++/Java the compiler will find it for you, how do you do it in Python?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["When you make changes deep inside the code, how do you find out what operations an instance provides, since you don't have a static type to lookup?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["How do you handle/prevent typing errors (typos)?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Are UnitTest's used as a substitute for static type checking?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]}, {"text": ["As you can guess I almost only worked with statically typed languages (C++/Java), but I would like to try my hands on Python for larger programs.", "But I had a very bad experience, a long time ago, with the clipper (dBase) language, which was also dynamically typed."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]