[{"text": ["Lexical closures in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["While I was investigating a problem I had with lexical closures in Javascript code, I came along this problem in Python:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n flist = []\n\nfor i in xrange(3):\n    def func(x): return x * i\n    flist.append(func)\n\nfor f in flist:\n    print f(2)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Note that this example mindfully avoids lambda.", "It prints \"4 4 4\", which is surprising.", "I'd expect \"0 2 4\". "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "lambda", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["This equivalent Perl code does it right:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n my @flist = ();\n\nforeach my $i (0 .. 2)\n{\n    push(@flist, sub {$i * $_[0]});\n}\n\nforeach my $f (@flist)\n{\n    print $f-&gt;(2), \"\\n\";\n}\n</code>\n</pre>\n", "senID": 5}, {"text": ["\"0 2 4\" is printed."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Can you please explain the difference ?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"tag": "hr", "senID": 8}, {"text": ["Update: "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["The problem is not with i being global.", "This displays the same behavior:"], "childNum": 2, "tag": "p", "senID": 10, "childList": [{"text": "is not", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "i", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n flist = []\n\ndef outer():\n    for i in xrange(3):\n        def inner(x): return x * i\n        flist.append(inner)\n\nouter()\n#~ print i   # commented because it causes an error\n\nfor f in flist:\n    print f(2)\n</code>\n</pre>\n", "senID": 11}, {"text": ["As the commented line shows, i is unknown at that point.", "Still, it prints \"4 4 4\"."], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]