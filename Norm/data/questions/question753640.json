[{"text": ["Inheritance and Overriding __init__ in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I was reading 'Dive Into Python' and in the chapter on classes it gives this example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class FileInfo(UserDict):\n    \"store file metadata\"\n    def __init__(self, filename=None):\n        UserDict.__init__(self)\n        self[\"name\"] = filename\n</code>\n</pre>\n", "senID": 2}, {"text": ["The author then says that if you want to override the __init__ method, you must explicitly call the parent __init__ with the correct parameters.", "What if that FileInfo class had more than one ancestor class?", "Do I have to explicitly call all of the ancestor classes' __init__ methods?", "Also, do I have to do this to any other method I want to override?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]