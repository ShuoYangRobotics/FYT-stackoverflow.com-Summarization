[{"text": ["Standard way to embed version into python package?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a standard way to associate version string with a python package in such way that I could do the following?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import foo\nprint foo.version\n</code>\n</pre>\n", "senID": 2}, {"text": ["I would imagine there's some way to retrieve that data without any extra hardcoding, since minor/major strings are specified in setup.py already.", "Alternative solution that I found was to have import __version__ in my foo/__init__.py and then have __version__.py generated by setup.py "], "childNum": 5, "tag": "p", "senID": 3, "childList": [{"text": "setup.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "import __version__", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "foo/__init__.py", "childNum": 0, "tag": "code", "childList": []}, {"text": "__version__.py", "childNum": 0, "tag": "code", "childList": []}, {"text": "setup.py", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Thanks,"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]