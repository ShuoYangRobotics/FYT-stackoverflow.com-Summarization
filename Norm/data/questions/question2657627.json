[{"text": ["Why does python use 'magic methods'?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've been playing around with Python recently, and one thing I'm finding a bit odd is the extensive use of 'magic methods', e.g.", "to make its length available an object implements a method def __len__(self) and then it is called when you write len(obj)."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "def __len__(self)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "len(obj)", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["I was just wondering why objects don't simply define a len(self) method and have it called directly as a member of the object, e.g.", "obj.len()?", "I'm sure there must be good reasons for Python doing it the way it does, but as a newbie I haven't worked out what they are yet."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "len(self)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "obj.len()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}]