Question (ID-231371): Practicing BDD with python Which are the most advanced frameworks and tools there are available for python for practicing Behavior Driven Development? Especially finding similar tools as rspec and mocha for ruby would be great. 
 Answers (Total-7): #0 Lettuce means to be a cucumber-like tool for python: http://lettuce.it/ 

 You can grab the source at github.com/gabrielfalcao/lettuce 
 #1 Ian Bicking recommends using doctest for behavior driven design: 

 I personally tend to use nose and voidspace mock in a behavior driven design style. Specifically, the spec plugin for nose is excellent for BDD. 
 #2 I recommend you to use Pyramid. It's a set of tools developed to help programmers in the practice of BDD and TDD. It is basically composed by: pycukes, specloud, ludibrio and should-dsl. 

 Should-dsl will give you RSpec-like expectations. 

 Everything you can do with RSpec expectation API, should-dsl does too. 

 You can grab the last version here: http://github.com/rodrigomanhaes/should-dsl/tree/matchers-as-functions 

 Specloud helps you on running BDD-like unittests. You can install it by doing 

 
 pip install specloud 
 

 Ludibrio is a library for test doubles (Mocks, Stubs and Dummies). Install it via 

 
 pip install ludibrio 
 

 And PyCukes is the main tool for BDD. It will run the Scenarios, etc. Again, 

 
 pip install pycukes 
 

 For more info please read the tools documentation at PyPi. 
 #3 The Pyccuracy project is an effort to provide a domain-specific language for BDD in Python. 

 Unlike doctest, which works at the API level, it encodes higher-level operations such as loading a web page and submitting a form. I haven't used it but it looks somewhat promising if that is what you're looking for. 
 #4 Great post and answers. Just wanted to update to include Freshen in this list as I read pycukes is discontinued. A good post about using BDD and Django with Freshen is here . 
 #5 I am probably completely missing the point, but what I retained of the original BDD paper was that BDD was just TDD repackaged to emphasize some best practices. 

 If my interpretation is correct, you can get a BDD framework just by renaming methods around in any xUnit implementation. So just go ahead and use the standard library's unittest . 

 EDIT: A quick google turned up a Behaviour module in the Cheese Shop . Further searching for BDD there did not find anything else. 
 #6 I like Pyccuracy a lot. I'm implementing it on a mid sized project these days.