Question (ID-1854): How can I tell What OS I am running on from Python? What do I need to look at to see if I'm on Windows, Unix, etc? 
 Answers (Total-9): #0 &gt;&gt;&gt; import os &gt;&gt;&gt; print os.name posix &gt;&gt;&gt; import platform &gt;&gt;&gt; platform.system() 'Linux' &gt;&gt;&gt; platform.release() '2.6.22-15-generic' 

 See: http://docs.python.org/lib/node441.html #1 Dang -- lbrandy beat me to the punch, but that doesn't mean I can't provide you with the system results for Vista! 

 &gt;&gt;&gt; import os &gt;&gt;&gt; print os.name nt &gt;&gt;&gt; import platform &gt;&gt;&gt; platform.system() 'Windows' &gt;&gt;&gt; platform.release() 'Vista'  #2 Thanks all, for the record here's the results on Mac: 

 &gt;&gt;&gt; import os
&gt;&gt;&gt; os.name
'posix'
&gt;&gt;&gt; import platform
&gt;&gt;&gt; platform.system()
'Darwin'
&gt;&gt;&gt; platform.release()
'8.11.1'
 #3 You can also use sys.platform if you already have imported sys and you don't want to import another module 

 &gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.platform
'linux2'
 
 #4 I do this 

 import sys
print sys.platform
 

 Docs here : http://docs.python.org/library/sys.html#sys.platform . Everything you need is probably in the sys module. 
 #5 This question has already been answered before: http://stackoverflow.com/questions/1854/python-how-do-i-tell-what-os-im-running-on 
 #6 I am using the WLST tool that comes with weblogic, and it doesn't implement the platform package. 

 wls:/offline&gt; import os
wls:/offline&gt; print os.name
java 
wls:/offline&gt; import sys
wls:/offline&gt; print sys.platform
'java1.5.0_11'
 

 Apart from patching the system javaos.py ( http://osdir.com/ml/lang.jython.devel/2006-08/msg00035.html ) (which I can't do, I have to use weblogic out of the box), this is what I use: 

 def iswindows():
 os = java.lang.System.getProperty( "os.name" )
 return os.lower().find("win") &gt; -1
 
 #7 &gt;&gt;&gt; import platform
&gt;&gt;&gt; platform.system()
 
 #8 in the same vein.... 

 import platform
is_windows=(platform.system().lower().find("win") &gt; -1)

if(is_windows): lv_dll=LV_dll("my_so_dll.dll")
else:   lv_dll=LV_dll("./my_so_dll.so")