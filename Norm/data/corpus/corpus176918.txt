Question (ID-176918): In Python, how do I find the index of an item given a list containing it? For a list ["foo","bar","baz"] and a variable "bar", what's the cleanest way to get its index 1 in python? 
 Answers (Total-3): #0 &gt;&gt;&gt; ["foo","bar","baz"].index('bar')
 

 1; 
 #1 One thing that is really helpful in learning Python is to use the interactive help function: 

 &gt;&gt;&gt; help(["foo", "bar", "baz"])
Help on list object:

class list(object)
 ...

 |
 | index(...)
 |  L.index(value, [start, [stop]]) -&gt; integer -- return first index of value
 |
 

 which will often lead you to the method you are looking for. 
 #2 index() returns the first index of value! 

 
 | index(...) 
 |  L.index(value, [start, [stop]]) -> integer -- return first index of value 
 

 def all_indices(value, qlist):
 indices = []
 idx = -1
 while 1:
  try:
   idx = qlist.index(value, idx+1)
   indices.append(idx)
  except ValueError:
   break
 return indices

all_indices("foo", ["foo","bar","baz","foo"])