Question (ID-538346): Iterating over a String (Python) In C++, I could do: 

 for(int i = 0; i &lt; str.length(); ++i)
 std::cout &lt;&lt; str[i] &lt;&lt; std::endl;
 

 How do I iterate over a string in Python? 
 Answers (Total-5): #0 As Johannes pointed out, 

 for c in "string":
 #do something with c
 

 You can iterate pretty much anything in python using the for loop construct, 

 for example, open("file.txt") returns a file object (and opens the file), iterating over it iterates over lines in that file 

 for line in open(filename):
 # do something with line
 

 If that seems like magic, well it kinda is, but the idea behind it is really simple. 

 There's a simple iterator protocol that can be applied to any kind of object to make the for loop work on it. 

 Simply implement an iterator that defines a next() method, and implement an __iter__ method on a class to make it iterable. (the __iter__ of course, should return an iterator object, that is, an object that defines next() ) 

 See official documentation 
 #1 even easier: 

 for c in "test":
 print c
 

 :-) 
 #2 Just to make a more comprehensive answer, the C way of iterating over a string can apply in Python, if you really wanna force a square peg into a round hole. 

 i = 0
while i &lt; len(str):
 print str[i]
 i += 1
 

 But then again, why do that when strings are inherently iterable? 

 for i in str:
 print i
 
 #3 If you need access to the index as you iterate through the string, use enumerate() : 

 &gt;&gt;&gt; for i, c in enumerate('test'):
...  print i, c
... 
0 t
1 e
2 s
3 t
 
 #4 Strings are just "sequences" in python and, as such, can be iterated in loops, as Johannes pointed out.