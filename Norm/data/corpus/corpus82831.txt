Question (ID-82831): How do I check if a file exists using Python? How do I check if a file exists, using Python. without using a try: statement? 
 Answers (Total-12): #0 Just to add to the answers - you're almost always better off using the 

 try:
 open()
except IOError as e:
 print 'Oh dear.'
 

 approach. 

 os.path.exists() only tells you that the file existed at that point. In the tiny interval between that and running code that depends on it, it is possible that someone will have created or deleted the file. 

 This is a race condition that can often lead to security vulnerabilities. An attacker can create a symlink to an arbitrary file immediately after the program checks no file exists. This way arbitrary files can be read or overwritten with the privilege level your program runs with. 
 #1 You can also use 

 import os.path
os.path.isfile(fname)
 

 if you need to be sure it's a file. 
 #2 You have the os.path.exists function: 

 import os.path
os.path.exists(file_path)
 
 #3 Unlike isfile(), exists() will yield True for directories. So depending if you want only plain files or also directories, you'll use isfile() or exists() 

 &gt;&gt;&gt; print os.path.isfile("/etc/passwd")
True
&gt;&gt;&gt; print os.path.isfile("/etc")
False
&gt;&gt;&gt; print os.path.isfile("/does/not/exist")
False
&gt;&gt;&gt; print os.path.exists("/etc/passwd")
True
&gt;&gt;&gt; print os.path.exists("/etc")
True
&gt;&gt;&gt; print os.path.exists("/does/not/exist")
False
 
 #4 Prefer the try/catch. It's considered better style and avoids race conditions. 

 Don't take my word for it. There's plenty of support for this theory. Here's a couple: 

 
 Style: Section "Handling unusual conditions" of http://allendowney.com/sd/notes/notes11.txt 
 Race condition: http://www.pubbs.net/python/200909/105975/ 
 
 #5 os.path.exists(filename) 
 #6 Additionally, os.access() . 
 #7 You could try this: (safer) 

 try:
 fh = open('whatever.txt')
except IOError as e:
 print("({})".format(e))
 

 the ouput would be: 

 
 ([Errno 2] No such file or directory:
 'whatever.txt') 
 

 then, depending on try/except result your program can just keep running from there or you can code to stop it if you want.
The print statement print("({})".format(e)) is for Pythonv3.2 only. For v3.1 use {0}. 
 #8 Just to add to the confusion, it seems that the try: open() approach suggested above doesn't work in Python, as file access isn't exclusive, not even when writing to files, c.f. What is the best way to open a file for exclusive access in Python? . 
 #9 @if os.path.exists(filename): 
 #10 root,dirs,files = os.walk(LOCATION).next()
if myfile in files:
 print "yes it exists"
 

 This is helpful when checking for several files. Or you want to do a set intersection/ subtraction with an existing list. 
 #11 You could try this: 

 while(True):
    if os.path.exists("path\to\file.jpeg"):
     break 

 or to avoid always checking put a sleep condition 

 import time 

 while os.path.exists(fname) == False:
 time.sleep(10)