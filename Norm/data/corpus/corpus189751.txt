Question (ID-189751): Google App Engine and 404 error I've setup a static website on GAE using hints found elsewhere, but can't figure out how to return a 404 error. My app.yaml file looks like 

 - url: (.*)/
 static_files: static\1/index.html
 upload: static/index.html

- url: /
 static_dir: static
 

 with all the static html/jpg files stored under the static directory. The above works for files that exist, but returns a null length file if they don't. The answer is probably to write a python script to return a 404 error, but how do you set things up to serve the static files that exist but run the script for files that don't? 

 Here is the log from fetching a non-existent file (nosuch.html) on the development application server: 

 ERROR 2008-11-25 20:08:34,084 dev_appserver.py] Error encountered reading file "/usr/home/ctuffli/www/tufflinet/static/nosuch.html":
[Errno 2] No such file or directory: '/usr/home/ctuffli/www/tufflinet/static/nosuch.html'
INFO  2008-11-25 20:08:34,088 dev_appserver.py] "GET /nosuch.html HTTP/1.1" 404 -
 
 Answers (Total-5): #0 You need to register a catch-all script handler. Append this at the end of your app.yaml: 

 - url: /.*
 script: main.py
 

 In main.py you will need to put this code: 

 from google.appengine.ext import webapp
from google.appengine.ext.webapp.util import run_wsgi_app

class NotFoundPageHandler(webapp.RequestHandler):
 def get(self):
  self.error(404)
  self.response.out.write('&lt;Your 404 error html page&gt;')

application = webapp.WSGIApplication([('/.*', NotFoundPageHandler)],
          debug=True)

def main():
 run_wsgi_app(application)

if __name__ == "__main__":
 main()
 

 Replace &lt;Your 404 error html page&gt; with something meaningful. Or better use a template, you can read how to do that here . 

 Please let me know if you have problems setting this up. 
 #1 google app engine now has Custom Error Responses 

 so you can now add an error_handlers section to your app.yaml, as in this example: 

 error_handlers:

- file: default_error.html

- error_code: over_quota
 file: over_quota.html
 
 #2 A significantly simpler way to do this without requiring any CPU cycles is to place this handler at the bottom of your app.yaml 

 - url: /.*
 static_files: views/404.html
 upload: views/404.html
 

 This then allows you to place a static 404.html file in your views directory. No need for a python handler. Anything that isn't handled in your app.yaml already will hit that. 
 #3 The dev_appserver is already returning 404 responses for anything that doesn't match the mapping, or does match the mapping but doesn't exist. The 404 response itself has no body, but it's still a 404: 

 $ wget -O - http://127.0.0.1:8080/foo
--2010-10-28 10:54:51-- http://127.0.0.1:8080/foo
Connecting to 127.0.0.1:8080... connected.
HTTP request sent, awaiting response... 404 
2010-10-28 10:54:51 ERROR 404: (no description).

$ wget -O - http://127.0.0.1:8080/foo/
--2010-10-28 10:54:54-- http://127.0.0.1:8080/foo/
Connecting to 127.0.0.1:8080... connected.
HTTP request sent, awaiting response... 404 
2010-10-28 10:54:54 ERROR 404: (no description).
 

 If you want to return a more user-friendly error page, follow jonmiddleton's advice and specify a custom 404 page. 
 #4 I can't comment on jonmiddleton's answer, but the custom error responses is for App engine specific errors by the look of it.
I don't see a way to specify a custom 404 page. 

 Django let's you specify one though.