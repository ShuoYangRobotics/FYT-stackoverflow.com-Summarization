Question (ID-842059): Is there a portable way to get the current username in Python? Is there a portable way to get the current user's username in Python (i.e., one that works under both Linux and Windows, at least). It would work like os.getuid : 

 &gt;&gt;&gt; os.getuid()
42
&gt;&gt;&gt; os.getusername()
'slartibartfast'
 

 I googled around and was surprised not to find a definitive answer (although perhaps I was just googling poorly). The pwd module provides a relatively easy way to achieve this under, say, Linux, but it is not present on Windows. Some of the search results suggested that getting the username under Windows can be complicated in certain circumstances (e.g., running as a Windows service), although I haven't verified that. 
 Answers (Total-6): #0 Look at getpass module 

 &gt;&gt;&gt; import getpass
&gt;&gt;&gt; getpass.getuser()
'kostya'
 

 Availability: Unix, Windows 
 #1 You best bet would be to combine os.getuid() with pwd.getpwuid() : 

 import os
import pwd

def get_username():
 return pwd.getpwuid( os.getuid() )[ 0 ]
 

 Refer to the pwd docs for more details: 

 http://docs.python.org/library/pwd.html 
 #2 You can also use: 

 os.getlogin()
 
 #3 You can probably use: 

 os.getenv('USERNAME')
 

 But it's not going to be safe because environment variables can be changed. 
 #4 I wrote the plx module some time ago to get the user name in a portable way on Unix and Windows (among other things):
 http://www.decalage.info/en/python/plx 

 Usage: 

 import plx

username = plx.get_username()
 

 (it requires win32 extensions on Windows) 
 #5 These might work. I don't know how they behave when running as a service. They aren't portable, but that's what "os.name" and "if" statements are for. 

 win32api.GetUserName() 

 win32api.GetUserNameEx(...) 

 See:
 http://timgolden.me.uk/python/win32_how_do_i/get-the-owner-of-a-file.html