Question (ID-1602934): What is a good way to test if a Key exists in Python Dictionary I wanted to test if a key exists in a dictionary before updating the value for the key.
I wrote the following code: 

 if 'key1' in dict.keys():
 print "blah"
else:
 print "boo"
 

 I think this is not the best way to accomplish this task. Is there a better way to test for a key in the dictionary? 
 Answers (Total-5): #0 You don't have to call keys: 

 if 'key1' in dict:
 print "blah"
else:
 print "boo"
 

 That will be much faster as it uses the dictionary's hashing as opposed to doing a linear search, which calling keys would do. 
 #1 in is the intended way to test for the existence of a key in a dict . 

 d = dict()

for i in xrange(100):
 key = i % 10
 if key in d:
  d[key] += 1
 else:
  d[key] = 1
 

 If you wanted a default, you can always use dict.get() : 

 d = dict()

for i in xrange(100):
 key = i % 10
 d[key] = d.get(key, 0) + 1
 

 ... and if you wanted to always ensure a default value for any key you can use defaultdict from the collections module, like so: 

 from collections import defaultdict

d = defaultdict(lambda: 0)

for i in xrange(100):
 d[i % 10] += 1
 

 ... but in general, the in keyword is the best way to do it. 
 #2 There are two different ways to do it: 

 
  key in dict 
  dict.has_key(key) 
 

 You might also want to check out the Python Quick Reference . 

 EDIT: 

 As noted, "has_key" is deprecated in Python 3.0+. 
 #3 I would recommend using the setdefault method instead. It sounds like it will do everything you want. 

 &gt;&gt;&gt; d = {'foo':'bar'}
&gt;&gt;&gt; q = d.setdefault('foo','baz') #Do not override the existing key
&gt;&gt;&gt; print q #The value takes what was originally in the dictionary
bar
&gt;&gt;&gt; print d
{'foo': 'bar'}
&gt;&gt;&gt; r = d.setdefault('baz',18) #baz was never in the dictionary
&gt;&gt;&gt; print r #Now r has the value supplied above
18
&gt;&gt;&gt; print d #The dictionary's been updated
{'foo': 'bar', 'baz': 18}
 
 #4 You can shorten this: 

 if 'key1' in dict:
 ...
 

 However, this is at best a cosmetic improvement. Why do you believe this is not the best way?