Question (ID-123198): How do I copy a file in python? How do I copy a file in python? I couldn't find anything under os. 
 Answers (Total-9): #0 shutil has many methods you can use. One of which is: 

 copyfile(src, dst)
 

 Copy the contents of the file named src to a file named dst. The destination location must be writable; otherwise, an IOError exception will be raised. If dst already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function. src and dst are path names given as strings. 
 #1 import shutil
shutil.copy2('/dir/file.ext', '/new/dir/newname.ext')
 

 or 

 shutil.copy2('/dir/file.ext', '/new/dir')
 

 copy2 is also often useful, it preserves the original modification and access info (mtime and atime) in the file metadata. 
 #2 In case you are stuck with Python 2.3 (as I am) you may notice that there is no shutils . But copying a file is a relatively straightforward operation. 

 def copyfile(source, dest, buffer_size=1024*1024):
 """
 Copy a file from source to dest. source and dest
 can either be strings or any object with a read or
 write method, like StringIO for example.
 """
 if not hasattr(source, 'read'):
  source = open(source, 'rb')
 if not hasattr(dest, 'write'):
  dest = open(dest, 'wb')

 while 1:
  copy_buffer = source.read(buffer_size)
  if copy_buffer:
   dest.write(copy_buffer)
  else:
   break

 source.close()
 dest.close()
 
 #3 Look at module shutils . 
It contains function copyfile ( src , dst ) 
 #4 Use the shutils module. http://docs.python.org/lib/module-shutil.html 

 copyfile(src, dst)
 

 Copy the contents of the file named src to a file named dst. The destination location must be writable; otherwise, an IOError exception will be raised. If dst already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function. src and dst are path names given as strings. 

 Take a look at http://docs.python.org/lib/filesys.html for all the file and directory handling functions available in standard Python modules. 
 #5 shutil may have what your looking for. 
 #6 http://docs.python.org/lib/module-shutil.html 
 #7 Directory and File copy example - From Tim Golden's Python Stuff: 

 http://timgolden.me.uk/python/win32_how_do_i/copy-a-file.html 

 import os
import shutil
import tempfile

filename1 = tempfile.mktemp (".txt")
open (filename1, "w").close ()
filename2 = filename1 + ".copy"
print filename1, "=&gt;", filename2

shutil.copy (filename1, filename2)

if os.path.isfile (filename2): print "Success"

dirname1 = tempfile.mktemp (".dir")
os.mkdir (dirname1)
dirname2 = dirname1 + ".copy"
print dirname1, "=&gt;", dirname2

shutil.copytree (dirname1, dirname2)

if os.path.isdir (dirname2): print "Success"
 
 #8 Here you copy all *.mp4 files from one directory to another   

  import shutil
 import fnmatch
 import os

 Dir1 = "/Volumes/VoigtKampff/Temp/TEST/" #File Origin Directory - note this is for OSX
 Dir2 = "/Volumes/VoigtKampff/Temp/TEST/Destination/" #File Destination Directory - note this is for OSX 
 dirList=os.listdir(Dir1)

 for file1 in dirList: #file the files
  if fnmatch.fnmatch(file1, '*.mp4'): #make sure they match the wildcard
   print(file1) #echo the list of files to check 
   shutil.move(Dir1+file1, Dir2+'/'+file1) # move the files from origin to destination