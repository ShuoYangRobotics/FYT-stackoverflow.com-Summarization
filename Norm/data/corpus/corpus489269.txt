Question (ID-489269): python super() raises TypeError ! Why? The following code raises a TypeError : 

 
>>> class X:
... def a(self):
...  print "a"
...
>>> class Y(X):
... def a(self):
...  super(Y,self).a()
...  print "b"
...
>>> c = Y()
>>> c.a()
Traceback (most recent call last):
 File "", line 1, in 
 File "", line 3, in a
TypeError: super() argument 1 must be type, not classobj
 

 If , however I replace class X with class X(object) , the same code will work . I am using python 2.5.2 .What's the explanation for this ? 
 Answers (Total-2): #0 The reason is that super() only operates on new-style classes, which in the 2.x series means extending from object. 
 #1 In addition, don't use super() unless you have to. It's not the general-purpose "right thing" to do with new-style classes that you might suspect. 

 There are times when you're expecting multiple inheritance and you might possibly want it, but until you know the hairy details of the MRO, best leave it alone and stick to: 

 X.a(self)