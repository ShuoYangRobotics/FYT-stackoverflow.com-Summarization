Question (ID-3220404): Why use pip over easy_install? A tweet reads: 

 
 Don't use easy_install, unless you
 like stabbing yourself in the face.
 Use pip. 
 

 Why use pip over easy_install? Doesn't the fault lie with PyPI and package authors mostly ? If an author uploads crap source tarball (eg: missing files, no setup.py) to PyPI, then both pip and easy_install will fail. Other than cosmetic differences, why do Python people (like in the above tweet) seem to strongly favor pip over easy_install? 

 (Let's assume that we're talking about easy_install from the Distribute package, that is maintained by the community) 
 Answers (Total-5): #0 From Ian Bicking's own introduction to pip : 

 
 
 All packages are downloaded before installation. Partially-completed installation doesn’t occur as a result. 
 Care is taken to present useful output on the console. 
 The reasons for actions are kept track of. For instance, if a package is being installed, pip keeps track of why that package was required. 
 Error messages should be useful. 
 The code is relatively concise and cohesive, making it easier to use programmatically. 
 Packages don’t have to be installed as egg archives, they can be installed flat (while keeping the egg metadata). 
 Native support for other version control systems (Git, Mercurial and Bazaar) 
 Uninstallation of packages. 
 Simple to define fixed sets of requirements and reliably reproduce a set of packages. 
 
 
 #1 Two reasons, there may be more: 

 
 pip provides an uninstall command 
 if an installation fails in the middle, pip will leave you in a clean state. 
 
 #2 Another—as of yet unmentioned—reason for favoring pip is because it is the new hotness and will continue to be used in the future. 

 The infographic below—from the Current State of Packaging section in the The Hitchhiker's Guide to Packaging v1.0 —shows that setuptools/easy_install will go away in the future. 

 

 Here's another infographic from distribute's documentation showing that setuptools and easy_install will be replaced by the new hotness— distribute and pip . 

 
 #3 pip won't install binary packages and isn't well tested on Windows. 

 As Windows doesn't come with a compiler by default pip often can't be used there. easy_install can install binary packages for Windows. 
 #4 REQUIREMENTS files. 

 Seriously, I use this in conjunction with virtualenv every day.