Question (ID-269795): How do I find the location of Python module sources? How do I learn where the source file for a given Python module is installed? (Is the method is different on Windows than Linux?) 

 (I want to look at the datetime module sources, but I thought I'd ask a more general question.) 
 Answers (Total-8): #0 For a pure python module you can find the source by looking at themodule.__file__ .
The datetime module, however, is written in C, and therefore datetime.__file__ points to a .so file (there is no datetime.__file__ on Windows), and therefore, you can't see the source. 

 If you download a python source tarball and extract it, the modules' code can be found in the Modules subdirectory. 

 For example, if you want to find the datetime code for python 2.6, you can look at 

 Python-2.6/Modules/datetimemodule.c
 

 You can also find the latest svn version on the web at 
 http://svn.python.org/projects/python/trunk/Modules/datetimemodule.c 
 #1 Running python -v from the command line should tell you what is being imported and from where. This works for me on Windows and Mac OS X. 

 C:\&gt;python -v
# installing zipimport hook
import zipimport # builtin
# installed zipimport hook
# C:\Python24\lib\site.pyc has bad mtime
import site # from C:\Python24\lib\site.py
# wrote C:\Python24\lib\site.pyc
# C:\Python24\lib\os.pyc has bad mtime
import os # from C:\Python24\lib\os.py
# wrote C:\Python24\lib\os.pyc
import nt # builtin
# C:\Python24\lib\ntpath.pyc has bad mtime
...
 

 I'm not sure what those bad mtime's are on my install! 
 #2 datetime is a builtin module, so there is no (Python) source file. 

 For modules coming from .py (or .pyc ) files, you can use mymodule.__file__ , e.g. 

 &gt; import random
&gt; random.__file__
'C:\\Python25\\lib\\random.pyc'
 
 #3 Check out this nifty "cdp" command to cd to the directory containing the source for the indicated Python module: http://chris-lamb.co.uk/2010/04/22/locating-source-any-python-module/ 
 #4 New in Python 3.2, you can now use e.g. code_info() from the dis module:
 http://docs.python.org/dev/whatsnew/3.2.html#dis 
 #5 In the python interpreter you could import the particular module and then type help(module). This gives details such as Name, File, Module Docs, Description et al. 

 Ex: 

 import os

help(os)


Help on module os:

NAME

os - OS routines for Mac, NT, or Posix depending on what system we're on.

FILE

/usr/lib/python2.6/os.py

MODULE DOCS

http://docs.python.org/library/os

DESCRIPTION

This exports:

- all functions from posix, nt, os2, or ce, e.g. unlink, stat, etc.

- os.path is one of the modules posixpath, or ntpath

- os.name is 'posix', 'nt', 'os2', 'ce' or 'riscos'
 

 et al 
 #6 The sys.path list contains the list of directories which will be searched for modules at runtime: 

 &gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.path
['', '/usr/local/lib/python25.zip', '/usr/local/lib/python2.5', ... ]
 
 #7 Not all python modules are written in python. Datetime happens to be one of them, and (on linux) is datetime.so. 

 You would have to download the source code to the python standard library to get at it.