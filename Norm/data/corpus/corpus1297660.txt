Question (ID-1297660): PySide vs. PyQt? Has anyone tried the new Python Qt binding - PySide yet? 

 I wonder about its matureness and compatibility with PyQt. What are your experiences on this matter? I know it has only been released this week, but it's such great news for Python development of Qt-based GUIs - there's a lot of interest in this thing. 
 Answers (Total-8): #0 A quick try revealed that PySide was compatible with my PyQt applications with minor or no modifications at all. Seems to be in a pretty good shape already. 
 #1 Just discovered PySide today. I am developing closed-source software using the commercial PyQt license. I tested PySide on some of my code. Replace PyQt4 by PySide everywhere and the code works as is. Only exceptions are pyqtSIGNAL and pyqtsignature, recent additions to PyQt4 which I (unfortunately) use to some extent. I will probably try to run my existing code (now roughly 17.000 lines) with PySide and see what happens. So far I am impressed. 
 #2 There's basically three pivot points that I think about when it comes to PyQt vs. PySide. 

 Longevity: 

 
 PySide is still being updated and maintained, commercial support is
available. With Nokia's future somewhat in question it is difficult to say what the future of PySide is. 
 PyQt is still being developed and maintained, commercial support is available. I could be wrong, but I'm pretty sure its maintained by one guy - or at most a small consulting firm. They've got a good track record and don't appear to be going away any time soon. But, at the same time, lets hope he/they don't get hit by a bus. 

 Winner: draw 
 

 Activity: 

 
 PySide is being actively developed, there seems to be community support. 
 PyQt is being actively developed, and has a good + long track record. 

 Winner: PyQt - One could say PyQt has an advantage for activity - but if Nokia drops Qt, PyQt's might not have the upstream Qt supply to continue the project. It'll just get stale. If that even happens. Alternatively, PySide could just dry up someday and maybe nobody would maintain it. 
 

 License: 

 
 PySide is distributed under LGPL license 
 PyQt is distributed under GPL license with an option for commercial support 

 Winner: PySide - LGPL trumps GPL for any business use. Not even a competition. 
 

 The license issue alone got me to switch to PySide, but everyone has different criteria. 
 #3 Haven't used it yet, but from their site I gather that it is not yet production ready. (Only supports Linux/X11 for starters.) But they claim that a goal of their first release is to be API compatible with PyQt, you just need to change your imports. 

 So for now it's probably best to develop for PyQt. It'll be easy to switch in the future. 

 Update: As mentioned in the comments, this is no longer the case. PySide is ready for use. 
 #4 One thing is if you are developing for mobile platforms, PySide has started on a Python version of the Mobility APIs. PyQt doesn't seem to have anything going on on that sector. 
 #5 PyQt is licensed via GPL or the PyQT commercial license. PyQt supports Python 3.x. PySide is licensed via LGPL but does not support Python 3.x (asthough this support is expected to make it in the future. 
 #6 A recent caveat that's come up is that Nokia has sold Qt. This puts PySide's development in a bit of limbo. PySide was started by and is primarily developed by Nokia, so if Nokia is moving away from Qt then that makes PySide's future uncertain. 
 #7 What about licenses and license incompatibilities between the two? Some care to explain briefly what you are allowed to do with one and the other?