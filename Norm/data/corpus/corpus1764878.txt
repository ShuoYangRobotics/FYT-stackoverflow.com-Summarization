Question (ID-1764878): Favorite 3rd-party Python Libraries? The more I've learned about Python, The more I've heard about several external libraries that are available, and I was wondering what are some of your favorite python libraries that are availible. 

 A few of my favorites I've discovered: 

 
 Beautiful Soup - for scraping web sites 
 PyGame - for game development 
 MySQLdb - for interacting with a MySQL database. absolutely essential for some projects. 
 

 so what are some of your favorites? 
 Answers (Total-30): #0 
 Twisted , event-driven framework very useful for writing asynchronous network services. 
 Django , the favorite MVC web application framework of many Python developers. 
 Numpy , a fast math library for performing limited-precision calculations on large arrays/matrices. 
 
 #1 For my work it has to be numpy and scipy , with matplotlib coming in a close second. Traits and Pytables are also strong contenders! 
 #2 dateutil - Everything that the standard Python Date library lacks. 
 #3 My favorites are 

 
 Werkzeug - wsgi stack 
 SQLAlchemy - db orm 
 Pygments - syntax highlighting 
 Jinja2 - Sandboxed template engine 
 WTForms - Web forms library 
 Fabric - helps simplify deployment and server management. 
 

 Note: I use Werkzeug/SQLAlchemy/Jinja2/WTForms as a mix for MVC web development. We also use a light weight framework named Gypsy to tie those together. 

 Also I don't think I'd ever want to change my db scheme without SqlAchemy Migrations I can't express enough how much easier it makes my life when it comes to deployment time (or when it's time to revert!). 
 #4 I am going to nominate these: 

 
 lxml - ok, we all know, that built-in xml support is terrible (yes, it is). 
 pexpect . It is not crossplatform, though. 
 pyparsing 
 

 And django, of course. 
 #5 I nominate antigravity . 
 #6 Parallel Python , for being the easiest way I've found to utilize multiple processor cores and distribute my data analysis tasks across multiple machines. 
 #7 PIL is my favorite. 

 PIL 1.1.7 is about to be released. It will be available to Python 3. 
 #8 
 for the texts: the Natural Language Toolkit 
 
 #9 I also state PyGame but for another reason. I do use it for the occasional game development fix but I also find it very, very useful for all kinds of interactive and/or dynamic visualizations. 
 #10 Python for Windows extensions is useful for Windows users. 
 #11 
 for the web >> web.py (you literally write: import web ) 
 and for the DB >> sqlalchemy 
 
 #12 pyinotify allows you to write programs which react to changes in the filesystem. It can alert you when mail arrives, or recompile a program or TeX document every time it changes. It can process files as they are dropped into a directory. 

 pyinotify uses Linux's inotify mechanism, however, so it only works with Linux. 
 #13 For when you need to quickly read or write an Excel file, http://www.python-excel.org/ has some excellent modules. These modules don't require Windows or COM objects! 

 http://www.python-excel.org/ 
 #14 I'm partial to pysistence . Of course, that could have something to do with the fact that I wrote it. 
 #15 
 matplotlib 
 pywin32 
 numpy 
 wxPython 
 
 #16 I use the following: 

 pyserial - cross-platform serial port access; simple to use and very stable. This should be added to the default python libraries! 

 pygtk - python interface for GTK+, an API for cross-platform GUI apps. Works great with Glade for rapid development and testing of user interfaces. 
 #17 Two I commonly end up using are: 

 Suds - for SOAP related web service calls: 

 https://fedorahosted.org/suds/ 

 Psycopg - for Python-PostgreSQL database work: 

 http://initd.org/pub/software/psycopg/ 
 #18 For building desktop GUI apps both wxPython and PyQt are excellent. 

 IMHO PyQt is more polished but is not open source for commercial use (it is for non-commercial use though). 

 Nokia (owners of Qt) are working on Pyside , a fully open-source competitor to PyQt. 
 #19 lxml . Fantastic. Does everything you need for XML/HTML manipulation (and it's fast). 
 #20 To add some that others have not mentioned: 

 
 South (for data migrations in Django) 
 Psyco (for instantly improving the performance of Windows python scripts 5-10 times) 
 

 To reiterate other packages: 

 
 Django 
 Twisted 
 BeautifulSoup 
 MySQLdb 
 Fabric 
 dateutil 
 PIL 
 Numpy and scipy 
 Natural Language Toolkit (NLTK) 
 
 #21 I'm very fond of opster . It makes turning a collection of functions into a command-line script a breeze. There are many players in this area, but its command and argument definition is very similar to how Mercurial does it, which in my opinion is excellent. 
 #22 
 PyQt - the best GUI toolkit bindings for the best GUI toolkit in the world 
 Docutils (for restructured text processing) - an excellently designed library 
 pyserial - great serial (COM) port bindings 
 Pygame 
 PyYAML - I really like the YAML format, and PyYAML is a good, fast binding for it 
 PLY - for coding complex lexers and parsers easily 
 
 #23 
 PyGame: already mentioned before, but worth mentioning again. 
 PyCrypto : great for cryptography, also has a handy probabilistic prime checker. 
 
 #24 I use PIL , python-twitter , django , simplejson , BeautifulSoup , and django-tagging often in projects. I highly recommend each of them. 
 #25 Almost all my favorites have already been mentioned, but not yet some specialized ones such as pytz (best way to handle timezones) and pymox (for testing in the mock-objects way). 
 #26 ImageMagick! http://wiki.python.org/moin/ImageMagick 
 #27 A lot of my favorites have already been mentioned. 

 Still I would like to nominate: 

 
 mod_wsgi A great project to connect your Python web applications to Apache 
 pyclutter With these Python bindings for Clutter you can create cool OpenGL powered applications easily 
 
 #28 The ones I use frequently: 

 
 zope 3 
 Python Imaging Library 
 reportlab (and z3c.rml) 
 Sphinx (its a tool not a library) 
 elementtree 
 wxPython 
 
 #29 rdflib for manipulation of rdf data.