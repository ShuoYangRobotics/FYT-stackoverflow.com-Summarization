Question (ID-251464): How to get the function name as string in Python? In Python, How do I get the function name as a string without calling the function? 

 def my_function():
.
.
.


print get_function_name_as_string(my_function) # my_function is not in quotes
output =&gt; "my_function"
 

 is this available in python? if not, any idea how to write get_function_name_as_string in python? 
 Answers (Total-3): #0 my_function.__name__
 

 Using __name__ is the preferred method as it applies uniformly. Unlike func_name , it works on built-in functions as well: 

 &gt;&gt;&gt; import time
&gt;&gt;&gt; time.time.func_name
Traceback (most recent call last):
 File "&lt;stdin&gt;", line 1, in ?
AttributeError: 'builtin_function_or_method' object has no attribute 'func_name'
&gt;&gt;&gt; time.time.__name__ 
'time'
 

 Also the double underscores indicate to the reader this is a special attribute. As a bonus, classes and modules have a __name__ attribute too, so you only have remember one special name. 
 #1 my_function.func_name
 

 There are also other fun properties of functions. Type dir(func_name) to list them. func_name.func_code.co_code is the compiled function, stored as a string. 

 import dis
dis.dis(my_function)
 

 will display the code in almost human readable format. :) 
 #2 http://stackoverflow.com/questions/245304/how-do-i-get-the-name-of-a-function-or-method-from-within-a-python-function-or