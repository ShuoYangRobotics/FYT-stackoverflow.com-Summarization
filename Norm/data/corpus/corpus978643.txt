Question (ID-978643): Vim, Python, and Django autocompletion (pysmell?) Does anyone know how to set up auto completion to work nicely with python, django, and vim? 

 I've been trying to use pysmell, but I can't seem to get it set up correctly (or maybe I don't know how it works). Right now, I run pysmell in the django directory (I'm using the trunk) and move the resulting tags to my project directory, then I also run pysmell in the project directory. Vim doesn't pick up the django tags, though, and they don't get auto completed. 

 Does anyone know how to set up auto completion in vim so that it will complete the long django functions (like get_object_or_404) as well as classes/functions in my own code? I have poked around on google but haven't found any good resources. 

 Thanks. 
 Answers (Total-3): #0 First off, thank you for asking this question, as it forced me to figure this out myself and it's great! 

 Here is the page I used as a reference: PySmell v0.6 released : orestis.gr 

 
 Install PySmell using the setup.py install command. 
 Generate the PYSMELLTAGS file for django by going to your site-packages/django directory and running: pysmell . -o ~/PYSMELLTAGS.django 
 Copy that file to your project directory, and then ran pysmell . to generate the project PYSMELLTAGS file 
 Make sure pysmell is in your PYTHONPATH ( export PYTHONPATH=${PYTHONPATH}:/path/to/pysmell/ ) 
 Run vim ( vim . ) 
 Source pysmell.vim ( :source /path/to/pysmell/pysmell.vim ) 
 Set the autocomplete command ( :set omnifunc=pysmell#Complete ) 
 Type ^x^o to autocomplete and it should work 
 

 I realize this is not a sustainable solution, but you should be able to use this as a start to getting it setup to always work (e.g., add the export to your .bashrc, add the :source to your .vimrc, setup autocmd FileType python set omnifunc=pysmell#Complete , etc.) 

 Let me know if this is enough to get you started. It worked for me! 

 Edit 
I simply added this to my .vimrc and as long as the PYSMELLTAGS &amp; PYSMELLTAGS.django files are in my project root, it works fine without any other work: 

 python &lt;&lt; EOF
import os
import sys
import vim
sys.path.append("/usr/local/python/lib/python2.5/site-packages")
EOF
exe ":source ~/src/pysmell/pysmell.vim"
autocmd FileType python set omnifunc=pysmell#Complete
 
 #1  

 You can set up VIM with buffers, buffer display, auto complete, even Py Doc display. 

 Here you go 
 #2 I've had good luck with exuberant-ctags for this. 

 I use this macro in my vimrc: 

 
execute 'map :!/usr/bin/exuberant-ctags -f '.&tags.' --recurse '.$_P4ROOT.' '
 

 You'll want to modify that slightly, so that it includes your python /site-packages/django/ directory as well as your own code. 

 Then, hit F2 inside vim to update the tags, and use the regular vim tag bindings to navigate.