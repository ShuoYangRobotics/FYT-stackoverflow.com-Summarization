Question (ID-663171): Is there a way to substring a string in Python? Is there a way to substring a string in Python, to get a new string from the 3rd character to the end of the string? 

 Maybe like myString[2:end] ? 

 EDIT: If leaving the second part means 'till the end', if you leave the first part, does it start from the start? 
 Answers (Total-7): #0 &gt;&gt;&gt; x = "Hello World!"
&gt;&gt;&gt; x[2:]
'llo World!'
&gt;&gt;&gt; x[:2]
'He'
&gt;&gt;&gt; x[:-2]
'Hello Worl'
&gt;&gt;&gt; x[-2:]
'd!'
 
 #1 Besides the direct answer that others have given, you can find all the other rules for slicing behavior explained in the Strings section of the official tutorial . 
 #2 Yes there is. Your example is very close: 

 myString[2:]
 
 #3 One example seems to be missing here: full (shallow) copy. 

 &gt;&gt;&gt; x = "Hello World!"
&gt;&gt;&gt; x
'Hello World!'
&gt;&gt;&gt; x[:]
'Hello World!'
&gt;&gt;&gt; x==x[:]
True
&gt;&gt;&gt;
 

 This is a common idiom for creating a copy of sequence types (not of interned strings). [:] Shallow copies a list, See python-list-slice-used-for-no-obvious-reason . 
 #4 myString[2:] .. leave off the second index to go to the end 
 #5 mystring[2:] 
 #6 You've got it right there except for "end". Its called slice notation. Your example should read. 

 new_sub_string = myString[2:]
 

 If you leave out the second param it is implicitly the end of the string.