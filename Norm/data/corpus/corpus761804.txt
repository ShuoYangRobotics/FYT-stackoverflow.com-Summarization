Question (ID-761804): Trimming a string in Python I need to write a function in python that gets a string- 

 If the first or last characters in the string are spaces, then they should be removed (both). If not than nothing should be done. 

 " Hello " ----> "Hello" 

 " Hello" -----> "Hello" 

 "Hello " -----> "Hello" 

 "Bob has a cat" ----> "Bob has a cat" (none of the spaces in the middle are removed.) 
 Answers (Total-4): #0 Just one space, or all such spaces? If the second, then strings already have a .strip() method: 

 &gt;&gt;&gt; ' Hello '.strip()
'Hello'
&gt;&gt;&gt; ' Hello'.strip()
'Hello'
&gt;&gt;&gt; 'Bob has a cat'.strip()
'Bob has a cat'
&gt;&gt;&gt; '   Hello  '.strip() # ALL spaces at ends removed
'Hello'
 

 If you need only to remove one space however, you could do it with: 

 def strip_one_space(s):
 if s.endswith(" "): s = s[:-1]
 if s.startswith(" "): s = s[1:]
 return s

&gt;&gt;&gt; strip_one_space(" Hello ")
' Hello'
 

 Also, note that str.strip() removes other whitespace characters as well (eg. tabs and newlines). To remove only spaces, you can specify the character to remove as an argument to strip. ie: 

 &gt;&gt;&gt; " Hello\n".strip(" ")
'Hello\n'
 
 #1 myString.strip()
 
 #2 As pointed out in answers above 

 myString.strip()
 

 will remove all the leading and trailing whitespace characters such as \n, \r, \t, \f, space. 

 For more flexibility use the following 

 
 Removal of only leading whitespace chars: myString.lstrip() 
 Removal of only trailing whitespace chars: myString.rstrip() 
 Removal of specific whitespace chars: myString.strip('\n') or myString.lstrip('\n\r') or myString.rstrip('\n\t') and so on. 
 

 These details are also available at http://docs.python.org/release/2.3/lib/module-string.html 
 #3 You want strip(): 

 myphrases = [ " Hello ", " Hello", "Hello ", "Bob has a cat" ]

for phrase in myphrases:
 print phrase.strip()