Question (ID-606191): Convert byte array to Python string I'm using this code to get standard output from an external program: 

 &gt;&gt;&gt; from subprocess import *
&gt;&gt;&gt; command_stdout = Popen(['ls', '-l'], stdout=PIPE).communicate()[0]
 

 The communicate() method returns an array of bytes: 

 &gt;&gt;&gt; command_stdout
b'total 0\n-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file1\n-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file2\n'
 

 However, I'd like to work with the output as a normal Python string. So that I could print it like this: 

 &gt;&gt;&gt; print(command_stdout)
-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file1
-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file2
 

 I thought that's what the binascii.b2a_qp() method is for, but when I tried it, I got the same byte array again: 

 &gt;&gt;&gt; binascii.b2a_qp(command_stdout)
b'total 0\n-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file1\n-rw-rw-r-- 1 thomas thomas 0 Mar 3 07:03 file2\n'
 

 Anybody knows how to convert the byte array back to string? I mean, using the "batteries" instead of doing it manually. 
And I'd like it to be ok with Python 3. 

 Thanks! 
 Answers (Total-3): #0 You need to decode the bytes object to produce a string: 

 &gt;&gt;&gt; b"abcde"
b'abcde'
&gt;&gt;&gt; b"abcde".decode("utf-8")
'abcde'
 
 #1 You need to decode the byte string and turn it in to a character (unicode) string. 

 b'hello'.decode(encoding)
 

 or 

 str(b'hello', encoding)
 
 #2 I think what you actually want is this: 

 &gt;&gt;&gt; from subprocess import *
&gt;&gt;&gt; command_stdout = Popen(['ls', '-l'], stdout=PIPE).communicate()[0]
&gt;&gt;&gt; command_text = command_stdout.decode(encoding='windows-1252')
 

 Aaron's answer was correct, except that you need to know WHICH encoding to use. And I believe that Windows uses 'windows-1252'. It will only matter if you have some unusual (non-ascii) characters in your content, but then it will make a difference. 

 By the way, the fact that it DOES matter is the reason that Python moved to using two different types for binary and text data: it can't convert magically between them because it doesn't know the encoding unless you tell it! The only way YOU would know is to read the Windows documentation (or read it here).