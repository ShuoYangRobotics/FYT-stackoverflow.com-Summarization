Question (ID-510972): Getting the class name of an instance in Python How do I find out a name of class that created an instance of an object in Python if the function I am doing this from is the base class of which the class of the instance has been derived? 

 Was thinking maybe the inspects module might have helped me out here, but it doesn't seem to give me what I want and short of parsing the __class__ member, I'm not sure how to get at this information. 

 Thanks
Dan 
 Answers (Total-3): #0 Have you tried the __name__ attribute of the class? ie x.__class__.__name__ will give you the name of the class, which I think is what you want. 

 &gt;&gt;&gt; import itertools
&gt;&gt;&gt; x = itertools.count(0)
&gt;&gt;&gt; x.__class__.__name__
'count'
 

 It should work similarly from wherever you call it. 
 #1 Do you want the name of the class as a string? 

 instance.__class__.__name__
 
 #2 type() ? 

 &gt;&gt;&gt; class A(object):
... def whoami(self):
...  print type(self).__name__
...
&gt;&gt;&gt;
&gt;&gt;&gt; class B(A):
... pass
...
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; o = B()
&gt;&gt;&gt; o.whoami()
'B'
&gt;&gt;&gt;