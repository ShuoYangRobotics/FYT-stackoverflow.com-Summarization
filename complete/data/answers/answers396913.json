[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; import time\n&gt;&gt;&gt; time.asctime(time.strptime('2008 50 1', '%Y %W %w'))\n'Mon Dec 15 00:00:00 2008'\n</code>\n</pre>\n", "senID": 0}, {"text": ["Assuming the first day of your week is Monday, use %U instead of %W if the first day of your week is Sunday.", "See the documentation for strptime for details."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "%U", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "%W", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "strptime", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/time.html#time.strptime"}]}, {"text": ["Update: Fixed week number.", "The %W directive is 0-based so week 51 would be entered as 50, not 51."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "%W", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Week 51 of 2008 started with Monday December 15:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; d = date(2008, 1, 1)\n&gt;&gt;&gt; d + timedelta(days=-d.weekday(), weeks=50)\ndatetime.date(2008, 12, 15)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Week 1 of 2009 started on December 29:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; d = date(2009, 1, 1)\n&gt;&gt;&gt; d + timedelta(days=-d.weekday(), weeks=0)\ndatetime.date(2008, 12, 29)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Found a web calendar that shows week numbers.", "And then there's always vecka.nu (Vecka means week in Swedish, nu means now."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "web calendar that shows week numbers", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.timeanddate.com/calendar/custom.html?year=2008&country=21&wno=1&moon=on&hol=25"}, {"text": "vecka.nu", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://vecka.nu"}]}], [{"text": ["PEZ's and Gerald Kaszuba's solutions work under assumption that January 1st will always be in the first week of a given year.", "This assumption is not correct for ISO calendar, see Python's docs for reference.", "For example, in ISO calendar, week 1 of 2010 actually starts on Jan 4, and Jan 1 of 2010 is in week 53 of 2009.", "An ISO calendar-compatible solution:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python's docs", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html#datetime.date.isocalendar"}]}, {"code": "<pre>\n<code>\n from datetime import date, timedelta\n\ndef week_start_date(year, week):\n    d = date(year, 1, 1)    \n    delta_days = d.isoweekday() - 1\n    delta_weeks = week\n    if year == d.isocalendar()[0]:\n        delta_weeks -= 1\n    delta = timedelta(days=-delta_days, weeks=delta_weeks)\n    return d + delta\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This seems to work, assuming week one can have a Monday falling on a day in the last year.    "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from datetime import date, timedelta\n\ndef get_first_dow(year, week):\n    d = date(year, 1, 1)\n    d = d - timedelta(d.weekday())\n    dlt = timedelta(days = (week - 1) * 7)\n    return d + dlt\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Anybody interested in these sorts of questions should check out the smash-hit bestseller Calendrical Calculations by Reingold and Dershowitz.", "Before there were books there was a journal paper, which is the most requested reprint in the history ofSoftware---Practice &amp; Experience."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Calendrical Calculations", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://emr.cs.iit.edu/home/reingold/calendar-book/index.shtml"}, {"text": "most requested reprint in the history ofSoftware---Practice &amp; Experience", "childNum": 1, "tag": "strong", "pos": 1, "childList": [{"text": "Software---Practice &amp; Experience", "tag": "em"}]}, {"text": "Software---Practice &amp; Experience", "childNum": 0, "tag": "em", "childList": []}]}], [{"code": "<pre>\n<code>\n from datetime import date, timedelta\n\ndef first_monday(year, week):\n    d = date(year, 1, 4)  # The Jan 4th must be in week 1  according to ISO\n    return d + timedelta(weeks=(week-1), days=-d.weekday())\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I have slightly modified the script of Vaidas K. in a way that it will return the beginning of the week and the end day of the week."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from datetime import datetime, date, timedelta\n\ndef weekbegend(year, week):\n    \"\"\"\n    Calcul du premier et du dernier jour de la semaine ISO\n    \"\"\"\n    d = date(year, 1, 1)    \n    delta_days = d.isoweekday() - 1\n    delta_weeks = week\n    if year == d.isocalendar()[0]:\n        delta_weeks -= 1\n    # delta for the beginning of the week\n    delta = timedelta(days=-delta_days, weeks=delta_weeks)\n    weekbeg = d + delta\n    # delta2 for the end of the week\n    delta2 = timedelta(days=6-delta_days, weeks=delta_weeks)\n    weekend = d + delta2\n    return weekbeg, weekend\n</code>\n</pre>\n", "senID": 1}, {"text": ["Soyou can use it that way."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n weekbeg, weekend = weekbegend(2009, 1)\nbegweek = weekbeg.strftime(\"%A %d %B %Y\")\nendweek = weekend.strftime(\"%A %d %B %Y\")\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Use the string formatting found in the time module.", "Detailed explanation of the formats used"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Detailed explanation of the formats used", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/current/library/time.html#time.strftime"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import time\n&gt;&gt;&gt; time.strptime(\"51 08 1\",\"%U %y %w\")\n(2008, 12, 22, 0, 0, 0, 0, 357, -1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["The date returned is off by one week according to the calendar on my computer, maybe that is because weeks are indexed from 0?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Look at the documentation here"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/time.html"}]}, {"text": ["The rest is up to you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]