[[{"text": ["Have a look at Invent Your Own Computer Games with Python from Albert Sweigart.", "It has been written for little noobs.", "It is available in the website of the link, but you can also buy the book if you prefer.", "There is a blog with extra material with nice games as the classic gorillas or tetris.  "], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "Invent Your Own Computer Games with Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://inventwithpython.com/chapters/"}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "blog", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://inventwithpython.com/blog/"}]}], [{"text": ["yeah,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["ths might work.. \nim currently just for fun reading some stuff on encryption, i don't know what he is into exactly, but what he might like is to use python to be able to encrypt message's and do some string manipulations."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["something simple to demonstrate what i mean:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n plaintext    = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\nencrytedtext = list('DEFGHIJKLMNOPQRSTUVWXYZABC')\n\ndef message(text, plain, encryp):\n    dictionary = dict(zip(plain, encryp))\n    newmessage = ''\n    for char in text:\n        try:\n            newmessage += dictionary[char]\n        except:\n            newmessage += ' '\n    print text, '\\nhas been encrypted to:'\n    print newmessage\n</code>\n</pre>\n", "senID": 3}, {"text": ["message('SEND THE MATERIAL NOW')"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["outputs: LTFR ZIT DQZTKOQS FGV"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["not md5 strength etc, but just basic letter replacement scheme's"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["now also get random sequences and then try to crack them"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "now", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["for example:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["\u201cEKNHZGUKQHIN OL ZIT LEOTFET ZIQZ EKTQZTL ZIT EOHITK\nLNLZTDL XLTR ZG IORT DTLLQUTL YKGD XFOFZTFRTR KTEOHOTFZL\u201d."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "\u201cEKNHZGUKQHIN OL ZIT LEOTFET ZIQZ EKTQZTL ZIT EOHITK\nLNLZTDL XLTR ZG IORT DTLLQUTL YKGD XFOFZTFRTR KTEOHOTFZL\u201d.", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n Notice first that the most frequent cipher letter is T, probably replacing the E. \nThe 3-character stretch ZIT which appears twice could very well be THE and since Z \nstands for T in that case, the word ZIQZ might be THAT. The 6th word now reads **EATE* \nwhose completion CREATES appears as a good choice. At this point, these successive guesses yield\nthe following partial decryption scheme, \n\n Alphabet: ACEHRST\n Substitution: QETIKLZ\n</code>\n</pre>\n", "senID": 10}], [{"text": ["A game is clearly a nice thing.", "Maybe Tetris or Snake-like?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["While commandline stuff are great to learn as you don't have to worry about graphical stuff they might be boring for a kid."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Teach him map, reduce , lambda and other simple stuff :)\n\nAnd then show him this code to find factorial of a series of number in one line."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"code": "<pre>\n(lambda k: reduce(int.__mul__, range(1,k+1),1))(8)\n</pre>\n", "senID": 1}, {"text": ["He will surely get excited"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If he's into math, http://projecteuler.net/ might be worth checking out with him. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://projecteuler.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://projecteuler.net/"}]}], [{"text": ["You could try using the built-in turtle module to create some fractals, such as the Koch snowflake."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "turtle", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/turtle.html"}, {"href": "http://en.wikipedia.org/wiki/Koch_snowflake", "text": "Koch snowflake", "childNum": 0, "tag": "a", "childList": []}]}]]