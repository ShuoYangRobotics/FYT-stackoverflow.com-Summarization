[[{"text": ["Starting a number with a zero marks it as octal in Python 2.", "This has been recognized as confusing, surprising and also inconsistent, as starting with 0x will mark it as hexadecimal.", "Therefore, in Python 3, starting with 0 is invalid, and you get octal by starting with 0o.", "You can also start with 0b to mark it as binary."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 10\n10\n&gt;&gt;&gt; 0x10\n16\n&gt;&gt;&gt; 0o10\n8\n&gt;&gt;&gt; 0b10\n2\n&gt;&gt;&gt; 010\n  File \"&lt;stdin&gt;\", line 1\n    010\n      ^\nSyntaxError: invalid token\n</code>\n</pre>\n", "senID": 1}, {"text": ["0x, 0o and 0b also works in Python 2.6 and Python 2.7."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["That's the old notation for octal numbers in Python."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "old notation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-3127/#removal-of-old-octal-syntax"}]}, {"text": ["In Python 2.6 and newer you should use the syntax 0o10 for octal and 0b10010 for binary numbers."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "0o10", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "0b10010", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["In older versions of Python you enter binary numbers as strings and parse them to integers:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = int(\"10010\", 2)\n&gt;&gt;&gt; print x\n18\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Preceding an integer literal with 0 marks it as octal."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "0", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["This has changed in Python 3 and is not recommended from Python 2.6 onwards: use 0o... instead."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "changed", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/dev/whatsnew/2.6.html#pep-3127-integer-literal-support-and-syntax"}, {"text": "0o...", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 0b1010 == 012 == 0xA == 10\nTrue\n</code>\n</pre>\n", "senID": 2}], [{"text": ["When you append 0 to the left of the number, it is interpreted as an octal number.", "So 10 in octal equals 8 in decimal, and 100 in octal equals 64 in decimal and so on."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you want to deal with binary number, you should use bit-wise operators to play with the bits."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Like in most programming languages, Python follows the C tradition of numbers starting with 0 being octal (base 8) numbers."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["It's interpreting them as octal (base 8) numbers, not binary."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Definitely not base2.", "It's Octal - base 8."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Numbers starting with 0 are interpreted as octal.", "For binary numbers the 'start sequence' is 0b."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; print 0b10\n2\n&gt;&gt;&gt; print 010\n8\n&gt;&gt;&gt; print 0x10\n16\n</code>\n</pre>\n", "senID": 1}]]