[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; x=['a','a','b','c','c','c']\n&gt;&gt;&gt; map(x.count,x)\n[2, 2, 1, 3, 3, 3]\n&gt;&gt;&gt; dict(zip(x,map(x.count,x)))\n{'a': 2, 'c': 3, 'b': 1}\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 0}], [{"text": ["This coding should give the result:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from collections import defaultdict\n\nmyDict = defaultdict(int)\n\nfor x in mylist:\n  myDict[x] += 1\n</code>\n</pre>\n", "senID": 1}, {"text": ["Of course if you want the list inbetween result, just get the values from the dict (mydict.values())."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Use a set to only count each item once, use the list method count to count them, store them in a dict with the item as key and the occurrence is value."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "set", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "count", "childNum": 0, "tag": "code", "childList": []}, {"text": "dict", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n l=[\"a\",\"a\",\"b\",\"c\",\"c\",\"c\"]\nd={}\n\nfor i in set(l):\n    d[i] = l.count(i)\n\nprint d\n</code>\n</pre>\n", "senID": 1}, {"text": ["Output:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n {'a': 2, 'c': 3, 'b': 1}\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n a = ['a','a','b','c','c','c']\nb = [a.count(x) for x in a]\nc = dict(zip(a, b))\n</code>\n</pre>\n", "senID": 0}, {"text": ["I've included Wim answer.", "Great idea"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Second one could be just"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n dict(zip(['a','a','b','c','c','c'], [2, 2, 1, 3, 3, 3]))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["On Python \u22652.7 or \u22653.1, we have a built-in data structure collections.Counter to tally a list"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "collections.Counter", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/collections.html#collections.Counter"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; l = ['a','a','b','c','c','c']\n&gt;&gt;&gt; Counter(l)\nCounter({'c': 3, 'a': 2, 'b': 1})\n</code>\n</pre>\n", "senID": 1}, {"text": ["It is easy to build [2, 2, 1, 3, 3, 3] afterwards."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "[2, 2, 1, 3, 3, 3]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; c = _\n&gt;&gt;&gt; [c[i] for i in l]   # or map(c.__getitem__, l)\n[2, 2, 1, 3, 3, 3]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["For the first one:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["l = ['a','a','b','c','c','c']"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["map(l.count,l)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n d=defaultdict(int)\nfor i in list_to_be_counted: d[i]+=1\nl = [d[i] for i in list_to_be_counted]\n</code>\n</pre>\n", "senID": 0}]]