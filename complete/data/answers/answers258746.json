[[{"text": ["Use the urlparse module.", "Check this function:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "urlparse", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import urlparse\n\ndef process_url(url, keep_params=('CONTENT_ITEM_ID=',)):\n    parsed= urlparse.urlsplit(url)\n    filtered_query= '&amp;'.join(\n        qry_item\n        for qry_item in parsed.query.split('&amp;')\n        if qry_item.startswith(keep_params))\n    return urlparse.urlunsplit(parsed[:3] + (filtered_query,) + parsed[4:])\n</code>\n</pre>\n", "senID": 1}, {"text": ["In your example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; process_url(a)\n'http://www.domainname.com/page?CONTENT_ITEM_ID=1234'\n</code>\n</pre>\n", "senID": 3}, {"text": ["This function has the added bonus that it's easier to use if you decide that you also want some more query parameters, or if the order of the parameters is not fixed, as in:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; url='http://www.domainname.com/page?other_value=xx&amp;param3&amp;CONTENT_ITEM_ID=1234&amp;param1'\n&gt;&gt;&gt; process_url(url, ('CONTENT_ITEM_ID', 'other_value'))\n'http://www.domainname.com/page?other_value=xx&amp;CONTENT_ITEM_ID=1234'\n</code>\n</pre>\n", "senID": 5}], [{"text": ["The quick and dirty solution is this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"http://something.com/page?CONTENT_ITEM_ID=1234&amp;param3\".split(\"&amp;\")[0]\n'http://something.com/page?CONTENT_ITEM_ID=1234'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Another option would be to use the split function, with &amp; as a parameter.", "That way, you'd extract both the base url and both parameters."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n url.split(\"&amp;\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["returns a list with"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n ['http://www.domainname.com/page?CONTENT_ITEM_ID=1234', 'param2', 'param3']\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I figured it out below is what I needed to do:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n url = \"http://www.domainname.com/page?CONTENT_ITEM_ID=1234&amp;param2&amp;param3\"\nurl = url[: url.find(\"&amp;\")]\nprint url\n'http://www.domainname.com/page?CONTENT_ITEM_ID=1234'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Parsin URL is never as simple I it seems to be, that's why there are the urlparse and urllib modules."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["E.G :"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import urllib\nurl =\"http://www.domainname.com/page?CONTENT_ITEM_ID=1234&amp;param2&amp;param3\"\nquery = urllib.splitquery(url)\nresult = \"?\".join((query[0], query[1].split(\"&amp;\")[0]))\nprint result\n'http://www.domainname.com/page?CONTENT_ITEM_ID=1234'\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is still not 100 % reliable, but much more than splitting it yourself because there are a lot of valid url format that you and me don't know and discover one day in error logs."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"code": "<pre>\n<code>\n import re\nurl = 'http://www.domainname.com/page?CONTENT_ITEM_ID=1234&amp;param2&amp;param3'\nm = re.search('(.*?)&amp;', url)\nprint m.group(1)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Look at the urllib2 file name question for some discussion of this topic."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "urllib2 file name", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/163009/urllib2-file-name"}]}, {"text": ["Also see the \"Python Find Question\" question."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python Find Question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/229352/python-find-question"}]}], [{"text": ["This method isn't dependent on the position of the parameter within the url string.", "This could be refined, I'm sure, but it gets the point across."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n url = 'http://www.domainname.com/page?CONTENT_ITEM_ID=1234&amp;param2&amp;param3'\nparts = url.split('?')\nid = dict(i.split('=') for i in parts[1].split('&amp;'))['CONTENT_ITEM_ID']\nnew_url = parts[0] + '?CONTENT_ITEM_ID=' + id\n</code>\n</pre>\n", "senID": 1}], [{"text": ["An ancient question, but still, I'd like to remark that query string paramenters can also be separated by ';' not only '&amp;'."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]