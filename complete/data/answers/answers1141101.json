[[{"text": ["Here's a complete guess at some code that might load the type of file this is an example of, but which should be a little robust: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f = open(\"mdata.txt\")\n\ndata_dict = {}\nsection = None\ndata_for_section = \"\"\nfor line in f:\n    line = line.strip() #remove whitespace at start and end\n\n    if section != None and (line[0] == \"*\" or line == \"///\"):\n        # if we've just finished a section, put whatever we got into the data dict\n        data_dict[section] = [bit for bit in data_for_section.split(\",\") if bit != \"\"]\n\n    if line[0] == \"*\":\n        # \"*\" denotes the start of a new section, probably, so remember the name\n        section = line [2:]\n        data_for_section = \"\"\n        continue\n    data_for_section += line\n\nf.close()\n#got the data, now for some output\nprint \"loaded file. Found headings: %s\"%(\", \".join(data_dict.keys()))\n\nfor key in data_dict.keys():\n    if len(data_dict[key])&gt;5:\n        print key, \": array of %i entries\"%len(data_dict[key])\n    else:\n        print key, \": \", data_dict[key]\n</code>\n</pre>\n", "senID": 1}, {"text": ["which outputs for your file:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\nloaded file. Found headings: ABC Names, Data, Starting position\nABC Names :  ['A-06', 'B-18']\nData : array of 40 entries\nStarting position :  ['-.5000E+01']\n</pre>\n", "senID": 3}, {"text": ["of course, you'd probably want to convert the list of data strings to floating point numbers in the case of data and starting position:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n startingPosition = float(data_dict[\"Starting position\"][0])\ndata_list_of_floats = map(float, data_dict[\"Data\"])\n</code>\n</pre>\n", "senID": 5}, {"text": ["But as to the ABC Names and how they combine with the rest of the file, we'd need some more information for that."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Suppose the file's named \"abc.txt\" and is in the current directory; then the following Python script:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f = open(\"abc.txt\")\nall_lines = f.readlines()\n</code>\n</pre>\n", "senID": 1}, {"text": ["will read all the lines into list of strings all_lines, each with its ending \\n and all."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "all_lines", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "\\n", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["What you want to do after that we can't guess unless you tell us, but the part you're asking about, the reading, should be satisfied."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Assuming you want to get the block from *Data to *Starting Position, "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f=0\nfor line in open(\"file\"):\n    line=line.strip()\n    if \"Starting\" in line:\n        f=0\n    if \"Data\" in line:\n        f=1\n        continue\n    if f:\n        print line\n</code>\n</pre>\n", "senID": 1}, {"text": ["the idea is to set a flag.", "if *Data is hit, set flag.", "the print all lines if flag is set.", "If *Starting is hit, turn off the flag."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["This ought to work for files with block names 'a', 'b', and 'c'.", "It will create a dictionary with keys as block titles like so:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n {'a':['line1','line2'],'b':['line1'],'c':['line1','line2','line3']}\n</code>\n</pre>\n", "senID": 1}, {"text": ["code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n block_names = ['b','a','c']\n\nfor line in open('file.txt'):\n    block_dict = {}  #dict to populate with lists of lines\n    block = []  # dummy block in case there is data or lines before first block\n    ck_nm = [blk_nm for blk_nm in block_names if line.startswith(blk_nm)]  #search block names for a match\n    if ck_nm: # did we find a match?\n        block_dict[ck_nm[0]] = block = []  # set current block\n    else:\n        block.append(line)  #..or line.split(',') ..however you want to parse the data\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Without any other information..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n data = [\n1.727e-01, 1.258e-01, 2.724e-01, 2.599e-01,-3.266e-01,-9.425e-02,-6.213e-02, 1.479e-01,\n1.219e-01, 1.174e-01, 2.213e-01, 2.875e-01,-2.306e-01,-3.900e-03,-5.269e-02, 7.420e-02,\n2.592e-01, 2.513e-01, 2.242e-01, 2.620e-01,-1.346e-01,-6.844e-02,-4.139e-02, 9.502e-02,\n1.981e-01, 1.937e-01, 2.336e-01, 1.617e-01,-4.240e-02, 2.285e-02, 1.878e-02, 1.064e-01,\n9.562e-02, 6.727e-02, 1.135e-01, 6.765e-02,-7.850e-02, 6.711e-02, 1.317e-02, 8.367e-02,\n]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Thank you for your reply.", "However, I attempted to start with Markus's code but failed when between this line and that line exist empty.", "Example:\n///\n\"filename.txt\" have:\n* ABC Names\nA-06,B-18,\n* Data\n 1.727e-01, 1.258e-01, 2.724e-01, 2.599e-01,-3.266e-01,-9.425e-02,-6.213e-02, 1.479e-01,\n 1.219e-01, 1.174e-01, 2.213e-01, 2.875e-01,-2.306e-01,-3.900e-03,-5.269e-02, 7.420e-02,\n 2.592e-01, 2.513e-01, 2.242e-01, 2.620e-01,-1.346e-01,-6.844e-02,-4.139e-02, 9.502e-02,\n 1.981e-01, 1.937e-01, 2.336e-01, 1.617e-01,-4.240e-02, 2.285e-02, 1.878e-02, 1.064e-01,\n 9.562e-02, 6.727e-02, 1.135e-01, 6.765e-02,-7.850e-02, 6.711e-02, 1.317e-02, 8.367e-02, \n* Starting position\n     -.5000E+01"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["Total number of clicks (modified)\n  18"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Clicker times (modified)\n448\n748\n///\nError when  between \"Starting position\" and \"Total number of clicks (modified)\" have empty line.", "I need data:\n1.727e-01, 1.258e-01, 2.724e-01, 2.599e-01,-3.266e-01,-9.425e-02,-6.213e-02, 1.479e-01,\n1.219e-01, 1.174e-01, 2.213e-01, 2.875e-01,-2.306e-01,-3.900e-03,-5.269e-02, 7.420e-02,\n2.592e-01, 2.513e-01, 2.242e-01, 2.620e-01,-1.346e-01,-6.844e-02,-4.139e-02, 9.502e-02,\n1.981e-01, 1.937e-01, 2.336e-01, 1.617e-01,-4.240e-02, 2.285e-02, 1.878e-02, 1.064e-01,\n9.562e-02, 6.727e-02, 1.135e-01, 6.765e-02,-7.850e-02, 6.711e-02, 1.317e-02, 8.367e-02, \nin block \"* Data\"\nand sometime need data\n448\n748\nin block \"* Clicker times (modified)\""], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}]}]]