[[{"text": ["Here are some ideas:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from glob import glob\nimport subprocess\n\nelif RetouchOption == \"04\":\n    ColorMethod = input(\"What method will you use (options are gamma, recolor, none)?: \")\n    ClipMode = input(\"What clipping mode will you use (options are together or separate)?: \")\n    script = [\"sh\", \"~/autocolor.sh\"]\n    method = \"-m %s\" % ColorMethod\n    clipmode = \"-c %s\" % ClipMode\n    for filename in glob(\"*.jpg\"):\n        subprocess.call(script + [method, clipmode, filename, filename])\n</code>\n</pre>\n", "senID": 1}, {"text": ["glob is great, and subprocess is preferred over os.system as you surmised."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "glob", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/glob.html"}, {"href": "http://docs.python.org/library/subprocess.html", "text": "subprocess", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Note that glob without your WorkingDirectory uses the 'current working directory of the script'.", "To make it use WorkingDirectory, try something like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import os\n\nfor filename in glob(os.path.join(WorkingDirectory, '*.jpg')):\n    ...\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Isn't it better to use bash?for f in *.jpg; do ./autocolor.sh $f; done"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "for f in *.jpg; do ./autocolor.sh $f; done", "childNum": 1, "tag": "pre", "pos": 0, "childList": [{"text": "for f in *.jpg; do ./autocolor.sh $f; done", "tag": "code"}]}, {"text": "for f in *.jpg; do ./autocolor.sh $f; done", "childNum": 0, "tag": "code", "childList": []}]}], [{"code": "<pre>\n<code>\n for f in glob.glob('*.jpg'):\n    do_something()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["This is a suggestion for coding.", "I write a lot of Python code that works with MySQL.", "I have found it helpful as a debugging aid to create the string in a variable and print it out, so you can see what the script is doing. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You will do well with earlier answers to your question.", "They are quite helpful."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Have you considered using os.listdir to get all the files in the directory?"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "os.listdir", "tag": "a", "pos": 0, "childList": [{"text": "os.listdir", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/os.html"}, {"text": "os.listdir", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Once you have a listing of all files in the directory, you can pull out all the JPGs and use the following code to to remove the \".jpg\" from the end of the filename:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; f = 'firstPic.jpg'\n&gt;&gt;&gt; f. replace(\".jpg\", '')\n'firstPic'\n</code>\n</pre>\n", "senID": 2}, {"text": ["Hope this helps"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["The Python glob module makes it easy to create lists that match a pattern."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import glob\n    glob.glob(\"*txt\")\n</code>\n</pre>\n", "senID": 2}, {"text": ["The above code would return a list of all \"txt\" files in the current directory."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["http://docs.python.org/library/glob.html"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://docs.python.org/library/glob.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/glob.html"}]}]]