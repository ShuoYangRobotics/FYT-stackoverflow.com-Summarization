[[{"text": ["I would not do this - in my opinion these questions weaken the security, so as a user I always try to provide another semi-password as an answer - for you it would like mashed.", "Well, it is mashed, but that is exactly what I want to do."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Btw.", "I am not sure about the fact, that you can query the answers.", "Since they overcome your password protection they should be handled like passwords = stored as a hash!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I have always found people put security answers weaker than the passwords they use.", "Security questions are just one more link in a security chain -- the weaker link!  "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "people put security answers weaker than the passwords they use", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}, {"text": ["IMO, a better way to go would be to allow the user to request a new-password sent to their registered e-mail id.", "This has two advantages."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "allow the user to request a new-password sent to their registered e-mail id", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["If you MUST have secret questions, let them trigger a re-generated (never send the user's password, regenerate a temporary, preferably one-time forced) password dispatch to the e-mail id they registered with -- and, do not show that at all."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Another trick is to make the secret question ITSELF their registered e-mail id.", "If they put it right, you send a re-generated temporary password to that e-mail id."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "make the secret question ITSELF their registered e-mail id", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "re-generated", "childNum": 0, "tag": "strong", "childList": []}]}], [{"text": ["There's no way to do this with a regex.", "Actually, I can't think of a reasonable way to do this at all -- where would you draw the line between suspicious and unsuspicious?", "I, for once, often answer the security questions with an obfuscated answer.", "After all, my mother's maiden name isn't the hardest thing to find out."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If you can find a list of letter-pair probabilities in English, you could construct an approximate probability for the word not being a \"real\" English word, using the least possible pairs and pairs that are not in the list.", "Unfortunately, if you have names or other \"non-words\" then you can't force them to be English words."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You're probably better off analyzing n-gram distribution, similar to language detection."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["This code is an example of language detection using trigrams.", "My guess is the keyboard smashing trigrams are pretty unique and don't appear in normal language."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "This code", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/326576/"}]}], [{"text": ["Maybe you could check for an abundance of consonants.", "So for example, in your example lakdsjflkaj there are 2 vowels ( a ) and 9 consonants.", "Usually the probability of hitting a vowel when randomly pressing keys is much lower than the one of hitting a consonant. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "lakdsjflkaj", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["You could check for a capital letter at the start.... that will get you some false positives for sure."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A quick google gave me this, you could compare each against a name in that list."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.namebase.org/csvdump.html"}]}, {"text": ["Obviously only works for the security question you stated."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Have you also seen this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Anatomy of the twitter attack"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Anatomy of the twitter attack", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.techcrunch.com/2009/07/19/the-anatomy-of-the-twitter-attack/"}]}, {"text": ["I'm going to think hard next time i implement a security question."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["If your question is ever something related to a real, human name, this is impossible.", "Consider Asian names typed with roman characters; they may very well trip whatever filter you come up with, but are still perfectly legitimate."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You could look for patterns that don't make sense phonetically.", "Such as:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["'q' not followed by a 'u'."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["asdf"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["qwer"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["zxcv"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["asdlasd"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Basically, try mashing on your own keyboard, see what you get, and plug that in your filter.", "Also plug in various grammatical rules.", "However, since it's names you're dealing with, you'll always get 'that guy' with the weird name who will cause a false positive."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Instead of regular expressions, why not just compare with a list of known good values?", "For example, compare Mother's maiden name with census data, or pet name with any of the pet name lists you can find online.", "For a much simpler version of this, just do a Google search for whatever is entered.", "Legitimate names should have plenty of results, while keyboard mashing should result in very few if any."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As with any other method, you will still need to handle false positives."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]