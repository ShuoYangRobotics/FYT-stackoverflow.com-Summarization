[[{"text": ["Word has a little marker thingy that it puts at the end of every cell of text in a table. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It is used just like an end-of-paragraph marker in paragraphs: to store the formatting for the entire paragraph."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Just use the Left() function to strip it out, i.e. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n Left(Target, Len(Target)-1))\n</code>\n</pre>\n", "senID": 3}, {"text": ["By the way, instead of "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n num_rows = Application.ActiveDocument.Tables(2).Rows.Count\n For n = 1 To num_rows\n      Descr = Application.ActiveDocument.Tables(2).Cell(n, 2).Range.Text\n</code>\n</pre>\n", "senID": 5}, {"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n For Each row in Application.ActiveDocument.Tables(2).Rows\n      Descr = row.Cells(2).Range.Text\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Well, I've never scripted Word, but it's pretty easy to do simple stuff with win32com.", "Something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from win32com.client import Dispatch\nword = Dispatch('Word.Application')\ndoc = word.Open('d:\\\\stuff\\\\myfile.doc')\ndoc.SaveAs(FileName='d:\\\\stuff\\\\text\\\\myfile.txt', FileFormat=?)  # not sure what to use for ?\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is untested, but I think something like that will just open the file and save it as plain text (provided you can find the right fileformat) \u2013 you could then read the text into python and manipulate it from there.", "There is probably a way to grab the contents of the file directly, too, but I don't know it off hand; documentation can be hard to find, but if you've got VBA docs or experience, you should be able to carry them across."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Have a look at this post from a while ago: http://mail.python.org/pipermail/python-list/2002-October/168785.html Scroll down to COMTools.py; there's some good examples there."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://mail.python.org/pipermail/python-list/2002-October/168785.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mail.python.org/pipermail/python-list/2002-October/168785.html"}]}, {"text": ["You can also run makepy.py (part of the pythonwin distribution) to generate python \"signatures\" for the COM functions available, and then look through it as a kind of documentation."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["You could use OpenOffice.", "It can open word files, and also can run python macros."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I'd say look at the related questions on the right -->\nThe top one seems to have some good ideas for going the python route."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "top one", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/125222/extracting-text-from-ms-word-files-in-python"}]}], [{"text": ["how about saving the file as xml.", "then using python or something else and pull the data out of word and into the database.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["It is possible to programmatically save a Word document as HTML and to import the table(s) contained into Access.", "This requires very little effort."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]