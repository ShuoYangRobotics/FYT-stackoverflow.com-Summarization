[[{"code": "<pre>\n<code>\n next(s for s in list_of_string if s)\n</code>\n</pre>\n", "senID": 0}, {"text": ["Edit: py3k proof version as advised by Stephan202 in comments, thanks. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n def get_nonempty(list_of_strings):\n    for s in list_of_strings:\n        if s:\n            return s\n</code>\n</pre>\n", "senID": 0}], [{"text": ["To remove all empty strings,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["[s for s in list_of_strings if s]"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "[s for s in list_of_strings if s]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["To get the first non-empty string, simply create this list and get the first element, or use the lazy method as suggested by wuub."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here's a short way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n filter(None, list_of_strings)[0]\n</code>\n</pre>\n", "senID": 1}, {"text": ["EDIT:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here's a slightly longer way that is better:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from itertools import ifilter\nifilter(None, list_of_strings).next()\n</code>\n</pre>\n", "senID": 4}], [{"text": ["to get the first non empty string in a list, you just have to loop over it and check if its not empty.", "that's all there is to it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n arr = ['','',2,\"one\"]\nfor i in arr:\n    if i:\n        print i\n        break\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Based on your question I'll have to assume a lot, but to \"get\" the first non-empty string:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n (i for i, s in enumerate(x) if s).next()\n</code>\n</pre>\n", "senID": 1}, {"text": ["which returns its index in the list.", "The 'x' binding points to your list of strings."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]