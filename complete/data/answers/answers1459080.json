[[{"text": ["Try this in Python:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import zipfile\nz = zipfile.ZipFile('c:/a_zip_file')\nprint 'total files size=', sum(e.file_size for e in z.infolist())\nz.close()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Zip is, erm, an \"interesting\" format.", "A robust solution is to stream the data out, and stop when you have had enough.", "In Java, use ZipInputStream rather than ZipFile.", "The latter also requires you to store the data in a temporary file, which is also not the greatest of ideas."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "ZipInputStream", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "ZipFile", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Check a zip header first :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Reading over the description on Wikipedia - "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Deny any compressed files that contain compressed files.", "&nbsp;&nbsp;&nbsp;&nbsp; Use ZipFile.entries() to retrieve a list of files, then ZipEntry.getName() to find the file extension.", "Deny any compressed files that contain files over a set size, or the size can not be determined at startup.", "&nbsp;&nbsp;&nbsp;&nbsp; While iterating over the files use ZipEntry.getSize() to retrieve the file size."], "childNum": 6, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "ZipFile.entries()", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://java.sun.com/javase/6/docs/api/java/util/zip/ZipFile.html#entries%28%29"}, {"text": "ZipEntry.getName()", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://java.sun.com/javase/6/docs/api/java/util/zip/ZipEntry.html#getName%28%29"}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}, {"href": "http://java.sun.com/javase/6/docs/api/java/util/zip/ZipEntry.html#getSize%28%29", "text": "ZipEntry.getSize()", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["If the ZIP decompressor you use can provide the data on original and compressed size you can use that data.", "Otherwise start unzipping and monitor the output size - if it grows too much cut it loose."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Don't allow the upload process to write enough data to fill up the disk, ie solve the problem, not just one possible cause of the problem."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Make sure you are not using your system drive for temp storage.", "I am not sure if a virusscanner will check it if it encounters it. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Also you can look at the information inside the zip file and retrieve a list of the content.", "How to do this depends on the utility used to extract the file, so you need to provide more information here"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Download files only from trusted sources."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]