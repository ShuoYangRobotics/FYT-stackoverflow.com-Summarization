[[{"text": ["List comprehension is the way to go:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list1 = [1,2,3,4,5]\nlist2 = [i for i in list1 if i%2 == 0]\nprint list2 # =&gt; [2, 4]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you want to extend an existing list2 (not necessarily initially empty):"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "list2", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n list2.extend(v for v in list1 if v % 2 == 0)\n</code>\n</pre>\n", "senID": 1}, {"text": ["If there's no \"initial value\" for list2, and you just want to build it from scratch:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "list2", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n list2 = [v for v in list1 if v % 2 == 0]\n</code>\n</pre>\n", "senID": 3}, {"text": ["You'll notice that the inner part is identical -- you can use that part in different ways (inside brackets to create a new list, as argument to .extend to extend an existing list, and so forth)."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": ".extend", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You can use list comprehensions:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "list comprehensions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/datastructures.html#list-comprehensions"}]}, {"code": "<pre>\n<code>\n list2 = [x for x in list1 if x % 2 == 0]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n list2 = [x for x in list1 if x%2 == 0]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n list2 = [i for i in list1 if not i%2]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I find this to be the most readable solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list2 = filter(lambda x: x % 2 == 0: list1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["or if you have to use this function multiple times:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n is_even = lambda x: x % 2 == 0\n\nlist2 = filter(is_even, list1)\n</code>\n</pre>\n", "senID": 3}]]