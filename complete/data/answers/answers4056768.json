[[{"code": "<pre>\n<code>\n buckets = [0] * 100\n</code>\n</pre>\n", "senID": 0}], [{"text": ["As this is the first result on Google and here for some searches, I'd like to include same declaration, but for multidimensional array:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n buckets = [ [0] * 100 ] * 100\n</code>\n</pre>\n", "senID": 1}, {"text": ["it's a 100x100 array filled with zero's"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["buckets = [0]*100"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The simplest solution would be"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \"\\x00\" * size # for a buffer of binary zeros\n[0] * size # for a list of integer zeros\n</code>\n</pre>\n", "senID": 1}, {"text": ["In general you should use more pythonic code like list comprehension (in your example: [0 for unused in xrange(100)]) or using string.join for buffers."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "[0 for unused in xrange(100)]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "string.join", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["use numpy"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import numpy\nzarray = numpy.zeros(100)\n</code>\n</pre>\n", "senID": 1}, {"text": ["And then use the Histogram library function"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Histogram", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html"}]}], [{"text": ["Just for completeness: To declare a multidimensional list of zeros in python you have to use a list comprehension like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n buckets = [[0 for col in range(5)] for row in range(10)]\n</code>\n</pre>\n", "senID": 1}, {"text": ["to avoid reference sharing between the rows."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This looks more clumsy than chester1000's code, but is essential if the values are supposed to be changed later.", "See the Python FAQ for more details."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Python FAQ", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/faq/programming.html#how-do-i-create-a-multidimensional-list"}]}], [{"text": ["Depending on what you're actually going to do with the data after it's collected, collections.defaultdict(int) might be useful."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]