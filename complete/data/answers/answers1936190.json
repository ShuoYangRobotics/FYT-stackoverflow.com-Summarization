[[{"code": "<pre>\n<code>\n if foo: #{\n    print \"it's true\"\n#}\nelse: #{\n    print \"it's false!\"\n#}\n</code>\n</pre>\n", "senID": 0}, {"text": ["(Obviously, this is a joke."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You can try to add support for braces using a future import statement, but it's not yet supported, so you'll get a syntax error:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "future import", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.org/doc/2.5.2/ref/future.html"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from __future__ import braces\n  File \"&lt;stdin&gt;\", line 1\nSyntaxError: not a chance\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Yes.", "Curly braces are not used.", "Instead, you use the : symbol to introduce new blocks, like so:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": ":", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n if True:\n    DoSomething()\n    SomethingElse()\nelse:\n    Something()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Yup.", "However, you define dictionaries in Python using curly braces:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n dict = {\n    'key': 'value',\n}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Ahhhhhh."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Yes."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if True:\n    #dosomething\nelse:\n    #dosomething else\n\n#continue on with whatever you were doing\n</code>\n</pre>\n", "senID": 1}, {"text": ["Basically, wherever you would've had an opening curly brace, use a colon instead.", "Unindent to close the region.", "It doesn't take long for it to feel completely natural."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Yup :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["And there's (usually) a difference between 4 spaces and a tab, so make sure you standardize the usage .."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["As others have mentioned, you are correct, no curly braces in Python.", "Also, you do not have no  end or endif or endfor or anything like that (as in pascal or ruby).", "All code blocks are indentation based."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "end", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "endif", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "endfor", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}], [{"text": ["Use Whyton:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://writeonly.wordpress.com/2010/04/01/whython-python-for-people-who-hate-whitespace/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://writeonly.wordpress.com/2010/04/01/whython-python-for-people-who-hate-whitespace/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://writeonly.wordpress.com/2010/04/01/whython-python-for-people-who-hate-whitespace/"}]}]]