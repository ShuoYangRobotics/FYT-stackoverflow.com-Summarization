[[{"text": ["Some platforms may support width and precision specification between % and the letter (such as 'd' for day of month), according to http://docs.python.org/library/time.html -- but it's definitely a non-portable solution (e.g.", "doesn't work on my Mac;-).", "Maybe you can use a string replace (or RE, for really nasty format) after the strftime to remedy that?", "e.g."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "%", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "http://docs.python.org/library/time.html", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/time.html"}, {"text": "strftime", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; y\n(2009, 5, 7, 17, 17, 17, 3, 127, 1)\n&gt;&gt;&gt; time.strftime('%Y %m %d', y)\n'2009 05 07'\n&gt;&gt;&gt; time.strftime('%Y %m %d', y).replace(' 0', ' ')\n'2009 5 7'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use left strip to remove the leading zero's"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "left strip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.lstrip"}]}, {"code": "<pre>\n<code>\n day = day.lstrip('0')\n\n&gt;&gt;&gt; day = '01'\n&gt;&gt;&gt; day.lstrip('0')\n'1'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here is the documentation of the modifiers supported by strftime() in the GNU C library.", "(Like people said before, it might not be portable.", ") Of interest to you might be:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.gnu.org/software/libc/manual/html%5Fnode/Formatting-Calendar-Time.html#index-strftime-2660"}, {"text": "strftime()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"tag": "ul", "num": 1, "lis": [{"text": ["%e"], "childNum": 0, "tag": "code", "senID": 1, "childList": []}]}, {"text": ["It works on my Python (on Linux).", "I don't know if it will work on yours."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I find the Django template date formatting filter to be quick and easy.", "It strips out leading zeros.", "If you don't mind importing the Django module, check it out."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date"}]}, {"code": "<pre>\n<code>\n from django.template.defaultfilters import date as django_date_filter\nprint django_date_filter(mydate, 'P, D M j, Y')\n</code>\n</pre>\n", "senID": 2}], [{"text": ["actually I had the same problem, and I realized that if you add a hyphen between the '%' and the letter, you can remove the leading zero.", "For example '%Y/%-m/%-d'."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Because Python really just calls the C language strftime(3) function on your platform, it might be that there are format characters you could use to control the leading zero; try \"man strftime\" and take a look.", "But, of course, the result will not be portable, as the Python manual will remind you.", ":-)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I would try using a new-style \"datetime\" object instead, which has attributes like \"t.year\" and \"t.month\" and \"t.day\", and put those through the normal, high-powered formatting of the \"%\" operator, which does support control of leading zeros.", "See http://docs.python.org/library/datetime.html for details.", "Better yet, use the \"\".format() operator if your Python has it and be even more modern; it has lots of format options for numbers as well.", "See: http://docs.python.org/library/string.html#string-formatting"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/datetime.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html"}, {"text": "http://docs.python.org/library/string.html#string-formatting", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/string.html#string-formatting"}]}], [{"text": ["for %d you can convert to integer using   int()  then it'll automatically remove leading '0' and becomes integer.", "You can then convert back to string using str()"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; import datetime\n&gt;&gt;&gt; d = datetime.datetime.now()\n&gt;&gt;&gt; d.strftime('X%d/X%m/%Y').replace('X0','X').replace('X','')\n'5/5/2011'\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Take a look at \"-\" bellow:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; datetime.now().strftime('%d-%b-%Y')\n&gt;&gt;&gt; '08-Oct-2011'\n&gt;&gt;&gt; datetime.now().strftime('%-d-%b-%Y')\n&gt;&gt;&gt; '8-Oct-2011'\n&gt;&gt;&gt; today = datetime.date.today()\n&gt;&gt;&gt; today.strftime('%d-%b-%Y')\n&gt;&gt;&gt; print(today)\n</code>\n</pre>\n", "senID": 1}]]