[[{"text": ["The best way would probably be to use a coded querystring on the redirect URL... its an old school approach."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You could do something like"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["/page/?m=1, /page/?m=2, etc"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You would then parse that variable with request.GET in the view code and show the appropriate message."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["if you are using auth and have a logged in user you could: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.djangoproject.com/en/dev/topics/auth/#django.contrib.auth.models.User.message_set.create"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.djangoproject.com/en/dev/topics/auth/#django.contrib.auth.models.User.message_set.create", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/topics/auth/#django.contrib.auth.models.User.message_set.create"}]}, {"text": ["GET params are also hackable.", "Teh querystring, as mentioned in other answers."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I think that the most choice way would be to use the sessions framework.", "That way you can load up whatever you want in the context and get"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n {{ request.session.foo }}\n</code>\n</pre>\n", "senID": 4}, {"text": ["could be the message or you could "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n {% ifequal request.session.foo 1 %} Nice work! {% else %} Almost! {% endifequal %}\n</code>\n</pre>\n", "senID": 6}, {"text": ["and other fun stuff."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["http://docs.djangoproject.com/en/dev/topics/http/sessions/#using-sessions-in-views"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "http://docs.djangoproject.com/en/dev/topics/http/sessions/#using-sessions-in-views", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/topics/http/sessions/#using-sessions-in-views"}]}], [{"text": ["You can't.", "HttpResponseRedirect sends a client-side redirect (HTTP status code 302) to the browser, and then the browser re-requests another page."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You can set a URL query string on the redirect, though that will be visible to the user and anyone intercepting HTTP requests (i.e.", "proxies), and is therefore not suitable for sensitive information."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The only way I know of to pass any data with a redirect is to add GET parameters to the URL you're passing in.", "To avoid XSS hacks you'd want to pass a specific constant like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["[current path you're passing in]?message=saved"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["And then process the message=saved parameter in the handler for the path you passed in."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["A somewhat more complicated way would be not passing the data in the redirect, and instead using something like http://code.google.com/p/django-notify/ to store session-based data that is displayed to the user following the redirect."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://code.google.com/p/django-notify/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/django-notify/"}]}], [{"text": ["You add ?saved=1 to the query string and check for it with something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n saved = request.GET.get('saved', False)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["From your views.py you hast have to put a key/value-pair into the session and then read it from the HTML template."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["views.py"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "views.py", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n # your code here\nrequest.session['vote'] = 1\nreturn HttpResponseRedirect(request.path)\n</code>\n</pre>\n", "senID": 3}, {"text": ["your_template.html"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "your_template.html", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n {% ifequal request.session.vote 1 %}\n    &lt;!-- Your action here --&gt;\n{% endifequal  %}\n</code>\n</pre>\n", "senID": 5}]]