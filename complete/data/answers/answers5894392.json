[[{"text": ["You can use the regular expression module's split function:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n re.split(\"['-]\", \"pete - he's a boy\")\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n string = \"pete - he's a boy\"\nresult = string.replace(\"'\", \"-\").split(\"-\")\nprint result\n\n['pete ', ' he', 's a boy']\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; import re\n&gt;&gt;&gt; string = \"pete - he's a boy\"\n&gt;&gt;&gt; re.split('[\\'\\-]', string)\n['pete ', ' he', 's a boy']\n</code>\n</pre>\n", "senID": 0}, {"text": ["Hope this helps :)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["This feels kind of hacky but you could do:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n string.replace(\"-\", \"'\").split(\"'\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use the split method on string ( and using list comprehensions - effectively the same as @C\u00e9dric Julien's solution)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["First to split once then split each element of the array"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = [x.split(\"'\") for x in \"pete - he's a boy\".split('-')]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Then flattern this lists"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n print ( [item for m in l for item in m ] )\n</code>\n</pre>\n", "senID": 4}, {"text": ["gives\n    ['pete ', ' he', 's a boy']"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"code": "<pre>\n<code>\n import re\nstring = \"pete - he's a boy\"\nprint re.findall(\"[^'-]+\",string)\n</code>\n</pre>\n", "senID": 0}, {"text": ["result"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n ['pete ', ' he', 's a boy']\n</code>\n</pre>\n", "senID": 2}, {"text": [], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["and if you want no blank before nor after each item after spliting:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import re\nstring = \"pete - he's a boy\"\nprint re.findall(\"[^'-]+\",string)\nprint re.findall(\"(?! )[^'-]+(?&lt;! )\",string)\n</code>\n</pre>\n", "senID": 5}, {"text": ["result"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n ['pete', 'he', 's a boy']\n</code>\n</pre>\n", "senID": 7}]]