[[{"text": ["Among other things, bash is useful when most of what you're doing is communicating and piping between various programs (many of which are also standard).", "And there are many environments where bash (or at least a POSIX shell) is available but Perl and Python are not."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "most", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "POSIX shell", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html"}]}, {"text": ["And of course, you should distinguish between interactive bash and scripted bash.", "Ubuntu recently switched their default scripted shell (#!/bin/sh) to dash because it was much faster.", "However, bash has useful interactive features dash does not (zsh is still better, IMHO)."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "#!/bin/sh", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "dash", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Debian_Almquist_shell"}, {"href": "http://en.wikipedia.org/wiki/Bash", "text": "bash", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://en.wikipedia.org/wiki/Z_shell", "text": "zsh", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["See also Is it worth learning BASH when I know Perl?"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Is it worth learning BASH when I know Perl?", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/199331/is-it-worth-learning-bash-when-i-know-perl"}]}], [{"text": ["Bash is incredibly useful in system administration, web application deployment, data crunching, sutomated backups, even getting-things-done day by day management just to name really few of them.", "I think It's too early for you to judge a \"veteran IT soldier\" like BASH. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "getting-things-done day by day management", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://smarterware.org/1471/happy-birthday-todotxt-cli"}]}, {"text": ["EDIT googling around:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": ["comprehensive list of nice examples"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["Useful bash tip and tricks"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["18 useful scripts for Web Devel."], "childNum": 0, "tag": "a", "senID": 4, "childList": []}, {"text": ["two minutes bash coding to improve your git usage"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}]}, {"text": ["I'd like also to mention that TextMate a successful OS-X program has a lot of Bash machinery inside."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "TextMate", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.macromates.com/2005/shell-variables/"}]}], [{"text": ["The real difference between bash and python is that python is a general purpose scripting language, while bash is simply a way to run a myriad of small (and often very fast) programs in a series.", "Python can do this, but it is not optimized for it.", "The programs (sort, find, uniq, scp) might do very complex tasks very simply, and bash allows these tasks to interoperate very simply with piping, flushing output in and out from files or devices etc. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["While Python can run the same programs, you will be forced to do bash scripting in the python script to accomplish the same thing, and then you are stuck with both python and bash.", "Both are fine by them self, but a mix of these don't improve anything IMHO."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Bash scripts allow you to automate command line tasks by using the same language you would if you type the commands out manually."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "automate command line tasks", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "same language", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["Trivial Example to list $PATH"], "childNum": 0, "tag": "h2", "senID": 1, "childList": []}, {"text": ["Bash"], "childNum": 0, "tag": "h2", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n #!/bin/sh\necho $PATH\n</code>\n</pre>\n", "senID": 3}, {"text": ["Python"], "childNum": 0, "tag": "h2", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n print os.getenv(\"path\")\n</code>\n</pre>\n", "senID": 5}], [{"text": ["Well, when writing with bash, you can directly use every possible tool you have on the command line for your script.", "With any other language you would first have to execute that command and get some result etc.", "A simple script that (for example) gets a list of processes, runs through grep and gets some result would be a lot more complicated in other languages.", "As such, bash is still a good tool for writing quick things."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Many startup scripts are traditionally written as shell scripts and there doesn't seem to be a trend to move away from those."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Shell scripts are perfectly suited for starting other processes and gluing their input/output together.", "That's an area where the other scripting languages are not as powerful."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Apart from that: even if languages like Perl, Python and Ruby become more and more ubiquitous, the only language that you're practically guaranteed on every unix-like system is the bourne shell ('though not necessarily in the form of bash) ."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "guaranteed", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"href": "http://en.wikipedia.org/wiki/Bourne_shell", "text": "bourne shell", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29", "text": "bash", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Apart from what others have said, I'd like to point out what's in my opinion the main reason to learn Bash: it's the (almost) standard Linux shell."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "shell", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "shell", "tag": "em"}]}, {"text": "shell", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["Other scripting languages are surely useful, and maybe a lot more powerful, but what you'll be dealing with when you have a terminal in front of you is... Bash."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Being able to manage I/O, pipes and processes, assing and use variables, and do at least some loop and condition evaluation is a must, if you want to manage a Linux system."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Easier, probably not.", "I actually prefer perl to bash scripting in many cases.", "Bash does have one advantage, though, especially on Linux systems: it's all but guaranteed to be installed.", "And if it's not, its largely-compatible father (sh) will be, cause almost all system scripts are written for sh.", "Even perl isn't that ubiquitous, and it's everyfreakingwhere."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Bash is not only a scripting language, but it is a shell."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Python, Ruby and Perl are great, but are more general tools; in certain cases (embedded devices or other minimalistic systems) they can be considered bloat or in other situations they might pose a security risk (for environments where you want very high security and try to eliminate any unnecessary package)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In some cases shell scripts will perform much better due to closer integration with OS."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Also, bash is production proven for myriad of administrative tasks and it is easy to find scripts that will cover very complicated scenarios (exceptions) and handle them gracefully."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["If you do lots of GUI stuff, you'll probably only meet bash whenever you're doing some sort of customization on your own machine.", "Various hacks and stuff.", "If you use the command line to do stuff, bash is just indispensable.", "In fact, being good on the command line requires bash or some other shell familiarity."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I get miles out of having learned Bash when I wanted to navigate around my harddrive quickly.", "I wrote a navigation/menu interface that let me beam to different folders and files quickly and easily.", "Writing it in bash was simple and easy.", "And there's lots of easily accessed, and free, stuff that'll show you how."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Also, learning Bash is great for understanding how Unix and some of the core stuff really works -- and how far we've come with tools like Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["In my experience, Perl meets something like 99% of any need that might require a shell script.", "As a bonus, it is possible to write code that runs on Windows sans Cygwin.", "If I won't have a Perl install on a Windows box I want to target, I can use PAR::Packer or PerlApp to produce an executable.", "Python, Ruby and others should work just as well, too."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["However, shell scripting isn't all that complicated--at least things that you should be scripting in a shell aren't all that complicated.", "You can do what you need to do with a fairly shallow level of knowledge."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Learn how to read and set variables.", "How to create and call functions.", "How to source other files.", "Learn how flow control works."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["And most important, learn to read the shell man page.", "This may sound facetious, but I am 100% serious--don't worry about cramming every detail of shell scripting into your brain, instead learn to find what you need to know in the man page quickly and efficiently.", "If you find yourself using shell scripting often, the pertinent info will naturally stick in your brain."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["So, yes, basic shell is worth learning."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["For a lot of tasks, bash can be very very concise.", "Code to search for a string in all the files of the current directory and print those lines:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In bash:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n grep -ir \"search_term\" .\n</code>\n</pre>\n", "senID": 2}, {"text": ["In Python:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for file in os.listdir('.'):\n  file_content = open(file).readlines().split('\\n')\n  for line in file_content:\n    if line.count(\"search_term\") &gt; 0:\n      print file, \": \", line\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Bash (and the original Bourne sh and myriad derivatives) is - from one perspective - an incredibly high-level language.", "Where many languages use simple primitives, shell primitives are entire programs."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That it might not be the best language to express your tasks, doesn't mean it is dead, dying, or even moribund."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You may get a true bournesh over at freshmeat (on Mac OS X, for example, /bin/sh is not a true bournesh)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["see: http://www.in-ulm.de/~mascheck/bourne/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.in-ulm.de/~mascheck/bourne/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.in-ulm.de/~mascheck/bourne/"}]}], [{"text": ["I'm a perl guy, but the number of the bash (or ksh) functions I use and create on a daily basis is quite significant.", "For anything involved, I'll write a perl script, but for navigating the directory structure, and specifically for manipulating environment variables bash/ksh/... are indispensable. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "manipulating environment variables", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Again, especially for environment variables nothing beats shell, and quite a few programs use environment variables.", "In Perl, I have to write a bash alias or function that calls the Perl script, which writes out a temporary bash script, which then gets sourced after Perl exits in order to make the change in the same environment I'm launching from. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've done this, especially for heavy-lifting on path variables.", "But there's no way to do it in just Perl (or python or ruby... or C-code for that matter). "], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "just Perl", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["As mentioned, the GNU tools are great, and are easiest to use within the shell.", "It is especially nice if your data is already in a linear or tabular form of plain text.", "Just as an example, the other day I was able to build a script to create an XHTML word cloud of any text file in 8 lines of Bourne Shell, which is even less powerful (but more widely supported) than Bash."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "8", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}], [{"text": ["What I don't get is why people say bash when they mean any bourne-shell compatible shell."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "bash", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "bourne-shell", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["When writing shell scripts: always try to use constructs that also work in older bourne shell interpreters as well.", "It will save you lots of trouble some day."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "always", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["And yes, there is plenty of use for shell scripts today, as the shell always exist on all unixes, out of the box, contrary to perl, python, csh, zsh, ksh (possibly?", "), and so on.", "Most of the time they only add extra convenience or different syntax for constructs like loops and tests.", "Some have improved redirection features."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Most of the time, I would say that ordinary bourne shell works equally well."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Typical pitfall:\nif !", "test $x -eq $y works as expected in bash that has a more clever builtin \"if\" operator, but the \"correct\" if test !", "$x -eq $y should work in all environments."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "if ! test $x -eq $y", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "if test ! $x -eq $y", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["I think that a strong argument that python is not as natural as bash for many tasks is the simple fact that no one uses the python interpreter as their shell.", "Clearly this is possible:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n python&gt; import os, subprocess\npython&gt; os.chdir(\"~/work\")\npython&gt; subprocess.call([\"vim\",\"README\"])\n</code>\n</pre>\n", "senID": 1}, {"text": ["Clearly using python for a shell is absurd.", "Bash was designed for running other programs.", "Python was designed for doing computations.", "While, most things can be done in either language, there will always be tasks that can be done more easily in bash than in python and vice versa."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]