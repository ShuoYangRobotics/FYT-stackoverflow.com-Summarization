[[{"text": ["You should look at the web2py online documentation (http://web2py.com/book).", "It comes with a Role Based Access Control (the most general access control mechanism) and it is very granular, you can grant access for specific operation on specific records.", "It comes with a web based IDE but you can use WingIDE and Eclipse too.", "It comes with  helper system that allows you to generate HTML without using HTML.", "Here is an example of a complete app that requires users to register/login/post messages:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://web2py.com/book", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://web2py.com/book"}]}, {"code": "<pre>\n<code>\n db.define_table('message',Field('body'),Field('author',db.auth_user))\n@auth.requires_login()\ndef index():\n    db.message.author.default=auth.user.id\n    db.message.author.writable=False\n    return dict(form=crud.create(db.message),\n                messages=db(db.message.id&gt;0).select())\n</code>\n</pre>\n", "senID": 1}, {"text": ["The web2py project is very active as you can see from the list of changes http://code.google.com/p/web2py/source/list"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://code.google.com/p/web2py/source/list", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/web2py/source/list"}]}, {"text": ["If you have web2py related questions I strongly suggest you join the web2py mailing list:\nhttp://groups.google.com/group/web2py/topics"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://groups.google.com/group/web2py/topics", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://groups.google.com/group/web2py/topics"}]}, {"text": ["We are very active and your questions will be answered very quickly."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I'd recommend Django."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 5, "lis": [{"text": "Built-In Authentication and easy to use extensions for ", "tag": "none", "senID": 1}, {"text": "Very good documentation", "tag": "none", "senID": 2}, {"text": "You probable write your HTML templates mostly in ", "tag": "none", "senID": 3}, {"text": "In contrast to Turbogears, Django is more 'out-of-the-box'", "tag": "none", "senID": 4}, {"text": "I don't have any experience with web2py, but from my impression, it tries to do a little to much 'out-of-the-box'", "tag": "none", "senID": 5}]}], [{"text": ["If you \"don't want to see any HTML while building it\" then you can forget Django.", "It is not focused on \"point-click-done,\" it is focused on pros going from concept to production in the shortest time possible.", "The hierarchical nature of the templating language can lead to some very clean overall site layouts.", "I use Django for all of my larger sites and I love it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Although it's written in PHP, not Python, you might take a look at the major new version of WordPress that came out about 2 or 3 months ago.", "In 3.0 they have come a long way from being a \"blogs only\" environment and there are tons of ready-made templates for it.", "Of course if you want to tweak a template, well, there's that nasty old HTML again.", "I am considering using it for my smaller clients that can't deal with the admin of a dedicated server, etc., that tends to come with a Django site."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "WordPress", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wordpress.org/"}]}, {"text": ["Update:\nAh, I missed the semi-joke -- I was up too early and that tends to make me tone deaf to humor.", "As far as using templates from existing sites, I have done this quite successfully with a couple of sites, both those that were static and those originally driven by well-written PHP scripts.", "I recommend a careful reading of the {% extends %} and {% include %} docs.", "Both take either a string literal or a variable.", "I have used the later method and it can be quite useful for a site that has strong hierarchy distinguished by style changes across branches."], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "{% extends %}", "tag": "a", "pos": 2, "childList": [{"text": "{% extends %}", "tag": "code"}], "childNum": 1, "href": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#extends"}, {"text": "{% extends %}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "{% include %}", "tag": "a", "pos": -1, "childList": [{"text": "{% include %}", "tag": "code"}], "childNum": 1, "href": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#include"}, {"text": "{% include %}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "or", "childNum": 0, "tag": "em", "pos": 3, "childList": []}]}, {"text": ["It is also worth the time to understand the search order for templates -- it can be used to good effect, but it can be puzzling if you don't grok it.", "See the template-related items in the settings.py file for this and other useful goodies."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "settings.py", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/settings/?from=olddocs#template-context-processors"}]}], [{"tag": "ul", "num": 3, "lis": [{"text": ["Django: Heard it has the best administrative\ninterface.", "But uses it's own ORM, i.e.", "doesn't use SQL-Alchemy."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Web2py: Didn't research this."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": "Turbogears2:\nUses SQL-Alchemy by default, uses Catwalk for admin\ninterface, but documentation isn't as\ngreat.", "tag": "none", "senID": 2}]}, {"text": ["I chose Turbogears2 because it uses popular components, so I didn't have to learn anything new..."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I have to say as not particularly skilled developer, the speed at which I have been able to create using web2py has blown my mind.", "In large part due to the amazing community and the core value Massimo has of making the framework accessible."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["When I started I had written 0 lines of code in Python\nNever heard of web2py"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've been at it seriously for about a month and have progressed (in my usual fashion) from asking questions that no one could answer (because they didn't make any sense) to coding for hours at a time without picking up a book or asking a question."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I'm really impressed."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["If you decide to go with Django, make sure that you use its Generic Views.", "They will save you from writing lots of code, both Python and HTML."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Also, unless there is a very specific reason for you to use MySQL, I advise you to switch to PostgreSQL.", "Django is much more oriented towards PostgreSQL and it's a much better database anyway."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The online Django documentation is great, this is what put it apart from all the other frameworks.", "I also recommend the book Practical Django Projects by James Bennett"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Practical Django Projects", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://apress.com/book/view/9781590599969"}]}]]