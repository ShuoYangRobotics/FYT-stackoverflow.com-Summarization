[[{"code": "<pre>\n$ python\nPython 2.5.1 (r251:54863, May 18 2007, 16:56:43)\n[GCC 3.4.4 (cygming special, gdc 0.12, using dmd 0.125)] on cygwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n</pre>\n", "senID": 0}, {"text": ["Hope that helps."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Pythonic means a program conforms to the idioms of the Python programming language.", "Every language has its own particular idiom (as Jeff said, you can write FORTRAN in any language), but Python has a particularly strong idiom built around the idea that, \"there should be one\u2014and preferably only one\u2014obvious way to do it\".", "Perhaps more than most languages, Python has structures and tools that make programs much cleaner and easier to write when you use Python idioms, hence, all the interest in things being Pythonic."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "you can write FORTRAN in any language", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.codinghorror.com/blog/archives/000272.html"}]}], [{"text": ["In a Python interpreter you can type this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import this\n</code>\n</pre>\n", "senID": 1}, {"text": ["It is a sort of \"easter egg\" that will spell out some of the Python ideals..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here are a couple of pages that I have found to help.", "Code Like a Pythonista and something similar in a slideshow format."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Code Like a Pythonista", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"}, {"href": "http://www.chrisarndt.de/talks/rupy/2008/output/slides.html", "text": "similar in a slideshow", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You may also wish to read PEP 8 (Style Guide for Python Code), which isn't exactly about what's pythonic (\"pythonic\" is higher level than style), but is along the same lines."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PEP 8 (Style Guide for Python Code)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.org/dev/peps/pep-0008/"}]}], [{"text": ["The answers here are good, but it should also be noted that, since the definition is rather elastic, plenty of people will use \"pythonic\" to mean \"the style I prefer\".", "More heat than light has been generated in discussions over what style is \"more pythonic\", in my experience."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["Isn't it the opposite of TIMTOWTDI ?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Guido van Rossum (the inventor of Python) is writing a blog on the history of Python, and the second article is about the philosophy."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "philosophy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python-history.blogspot.com/2009/01/pythons-design-philosophy.html"}]}], [{"text": ["Pythonic for me means a programming language feature or syntax that is very concise, elegant, powerful and obvious to use.", "Meaning it always does what you expect it to and does not trip you up (ever)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "obvious", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Not all Python stuff is \"pythonic\", but because the language's features generally reflect this ideal, the adjective \"pythonic\" has come to stand for such."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Python best practices -- examples of pythonic code (along the line with  Code Like a Pythonista)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Python best practices", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.fantascienza.net/leonardo/ar/python_best_practices.html"}, {"href": "http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html", "text": "Code Like a Pythonista", "childNum": 0, "tag": "a", "childList": []}]}]]