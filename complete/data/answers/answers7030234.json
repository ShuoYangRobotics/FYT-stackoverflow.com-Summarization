[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; mess = 'Cube1[visible:true, mode:Normal]{r:Cube1.R, g:Cube1.G, b:Cube1.B, a:Cube1.A},\\nGround[visible:true, mode:Normal]{r:Ground.R, g:Ground.G, b:Ground.B, a:Ground.A},\\nCube3[visible:true, mode:Normal]{r:Cube3.R, g:Cube3.G, b:Cube3.B, a:Cube3.A},\\nCube4[visible:true, mode:Normal]{r:Cube4.R, g:Cube4.G, b:Cube4.B, a:Cube4.A},\\nSphere[visible:true, mode:Normal]{r:Sphere.R, g:Sphere.G, b:Sphere.B, a:Sphere.A},\\nOilTank[visible:true, mode:Normal]{r:OilTank.R, g:OilTank.G, b:OilTank.B, a:OilTank.A},\\nCube2[visible:true, mode:Normal]{r:Cube2.R, g:Cube2.G, b:Cube2.B, a:Cube2.A}'\n&gt;&gt;&gt; names = \"\\n\".join(line.split(\"[\", 1)[0] for line in mess.split(\"\\n\"))\n&gt;&gt;&gt; print names\nCube1\nGround\nCube3\nCube4\nSphere\nOilTank\nCube2\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If the data is indeed formated like that: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\n    i = [the listed string] \n    names = [j.strip('[') for j in re.findall(\"\\w+\\[\\.*\", i)]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Output: "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n ['Cube1', 'Ground', 'Cube3', 'Cube4', 'Sphere', 'OilTank', 'Cube2']\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I don't know a lot about python, but my thoughts in terms of logic would be this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Sorry I don't know the specific commands for doing this.", "Hope it helps!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If you just need the left-most portion, I would use:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n name, _ = line.split(\"[\", 1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you need something more complex, I'd look into using regular expressions with the re module\u2026 Let me know and I can suggest something."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "re", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Regexes are unecessary, assuming that really is the exact format of your data."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [i.split('[', 1)[0] for i in lst]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["With string split:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n names = [ x.split('[')[0] for x in your_text.split('\\n') ]\n</code>\n</pre>\n", "senID": 1}, {"text": ["With regular expressions:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import re\nnames = re.findall(r'^\\w+', your_text, re.MULTILINE)\n</code>\n</pre>\n", "senID": 3}]]