[[{"text": ["You should use the subprocess module instead.", "See this little doc for how to rewrite os.system calls to use subprocess."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/subprocess.html#subprocess-replacements"}]}], [{"text": ["Even it's a good idea to use subprocess.Popen(), this does not solve the issue."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "subprocess.Popen()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Your problem is not the 255 characters limit, this was true on DOS times, later increased to 2048 for Windows NT/2000, and increased again to 8192 for Windows XP+."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Your problem is not the 255 characters limit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["The real solution is to workaround a very old bug in Windows APIs: _popen() and _wpopen(). "], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "real solution", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://msdn.microsoft.com/en-us/library/96ayss4b.aspx", "text": "_popen() and _wpopen()", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["If you ever use quotes during the command line you have to add the entire command in quoates or you will get the The input line is too long error message."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "The input line is too long", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["All Microsoft operating systems starting with Windows XP had a 8192 characters limit which is now enough for any decent command line usage but they forgot to solve this bug. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["To overcome their bug just include your entire command in double quotes, and if you want to know more real the MSDN comment on _popen(). "], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "just include your entire command in double quotes", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://msdn.microsoft.com/en-us/library/96ayss4b.aspx", "text": "MSDN comment on _popen()", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Be careful because these works:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n prog\n\"prog\"\n\"\"prog\" param\"\n\"\"prog\" \"param\"\"\n</code>\n</pre>\n", "senID": 7}, {"text": ["But these will not work:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n \"\"prog param\"\"\n</code>\n</pre>\n", "senID": 9}, {"text": ["If you need a function that does add the quotes when they are needed you can take the one from http://github.com/ssbarnea/tendo/blob/master/tendo/tee.py"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "http://github.com/ssbarnea/tendo/blob/master/tendo/tee.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/ssbarnea/tendo/blob/master/tendo/tee.py"}]}], [{"text": ["You should use subprocess instead of os.system."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "subprocess", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/subprocess.html"}]}, {"text": ["subprocess has the advantage of being able to change the directory for you:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import subprocess\nmy_cwd = r\"..\\folder\\\"\nmy_process = subprocess.Popen([\"command name\", \"option 1\", \"option 2\"], cwd=my_cwd)\nmy_process.wait() # wait for process to end\nif my_process.returncode != 0:\n    print \"Something went wrong!\"\n</code>\n</pre>\n", "senID": 2}, {"text": ["The subprocess module contains some helper functions as well if the above looks a bit verbose."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Assuming you're using windows, from the backslashes, you could write a .bat file from python and then os.system() on that.", "It's a hack."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "os.system()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Make sure when you're using '\\' in your strings that they're being properly escaped."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Python uses the '\\' as the escape character, so the string \"..\\folder\\filename\" evaluates to \"..folderfilename\" since an escaped f is still an f."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "\"..\\folder\\filename\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "\"..folderfilename\"", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["You probably want to use"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n r\"..\\folder\\filename\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["or "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n \"..\\\\folder\\\\filename\"\n</code>\n</pre>\n", "senID": 5}], [{"text": ["I got the same message but it was strange because the command was not that long (130 characters) and it used to work, it just stopped working one day.", "I just closed the command window and opened a new one and it worked.", "I have had the command window opened for a long time (maybe months, it's a remote virtual machine).", "I guess is some windows bug with a buffer or something."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]