[[{"text": ["Closest thing I know about is cgi.escape."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "cgi.escape", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/cgi.html#cgi.escape"}]}], [{"text": ["try this..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/library/htmllib.html#module-htmlentitydefs"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/htmllib.html#module-htmlentitydefs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/htmllib.html#module-htmlentitydefs"}]}], [{"code": "<pre>\n<code>\n from django.utils.html import escape\nprint escape('&lt;div class=\"q\"&gt;Q &amp; A&lt;/div&gt;')\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You probably want xml.sax.saxutils.escape:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "xml.sax.saxutils.escape", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.sax.utils.html#xml.sax.saxutils.escape"}]}, {"code": "<pre>\n<code>\n from xml.sax.saxutils import escape\nescape(unsafe, {'\"':'&amp;quot;'}) # ENT_COMPAT\nescape(unsafe, {'\"':'&amp;quot;', '\\'':'&amp;#039;'}) # ENT_QUOTES\nescape(unsafe) # ENT_NOQUOTES\n</code>\n</pre>\n", "senID": 1}, {"text": ["Have a look at xml.sax.saxutils.quoteattr, it might be more useful for you"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "xml.sax.saxutils.quoteattr", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.sax.utils.html#xml.sax.saxutils.quoteattr"}]}], [{"text": ["The html.entities module (htmlentitydefs for python 2.x) contains a dictionary codepoint2name which should do what you need."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "html.entities", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "htmlentitydefs", "childNum": 0, "tag": "code", "childList": []}, {"text": "codepoint2name", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import html.entities\n&gt;&gt;&gt; html.entities.codepoint2name[ord(\"&amp;\")]\n'amp'\n&gt;&gt;&gt; html.entities.codepoint2name[ord('\"')]\n'quot'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you are using django 1.0 then your template variables will already be encoded and ready for display.", "You also use the  safe operator {{ var|safe }} if you don't want it globally turned on."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "safe", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "{{ var|safe }}", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I think the simplest way is just to use replace:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n text.replace(\"&amp;\", \"&amp;amp;\").replace('\"', \"&amp;quot;\").replace(\"&lt;\", \"&amp;lt;\").replace(\"&gt;\", \"&amp;gt;\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["PHP only escapes those four entities with htmlspecialchars.", "Note that if you have ENT_QUOTES set in PHP, you need to replace quotes with &amp;#039; rather than &amp;quot;."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]