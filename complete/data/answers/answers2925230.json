[[{"text": ["Nothing built-in to datetime will do it.", "You'll need to use something like:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "datetime", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n datetime.time(1).strftime('%I:%M%p').lstrip('0')\n</code>\n</pre>\n", "senID": 1}], [{"text": ["While I'm partial to Mike DeSimone's answer, for voting purposes I think this might be a worthwhile contribution... "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Mike DeSimone's answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/2925230/get-235pm-instead-of-0235pm-from-python-date-time/2925280#2925280"}]}, {"text": ["The Django project contains a \"PHP Compatible\" date formatting class in django/utils/dateformat.py (trunk).", "It's used like so (shell example): "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "django/utils/dateformat.py (trunk)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.djangoproject.com/browser/django/trunk/django/utils/dateformat.py"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import datetime\n&gt;&gt;&gt; from django.utils.dateformat import DateFormat\n&gt;&gt;&gt; d = datetime.datetime.now()\n&gt;&gt;&gt; df =  DateFormat(d)\n&gt;&gt;&gt; df.format('g:ia') # Format for Hour-no-leading-0, minutes, lowercase 'AM/PM'\nu'9:10a.m.'\n</code>\n</pre>\n", "senID": 2}, {"text": ["It fulfills the requirement here, and may be worth including in your project.", "With that, I'll say that you should verify the license permits such use... Any comments to clarify are welcome. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I know it's pretty cheap, but you could just discard the first character if it's a zero :)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "could", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["datetime.time objects expose the hour, minute and second fields.", "Making your own formatting with these is pretty trivial.", "Something like this:"], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "datetime.time", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "hour", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "minute", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "second", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n return \"%d:%02d %s\" % (foo.hour % 12 + 0 if foo.hour % 12 else 12, #ugh\n                       foo.minute,\n                       \"pm\" if foo.hour &gt;= 12 else \"am\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use %l to get the hour as a number between 1..12:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "%l", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n In [2]: datetime.time(hour=14,minute=35).strftime('%l:%M%p')\nOut[2]: ' 2:35PM'\n</code>\n</pre>\n", "senID": 1}, {"text": ["For more format codes, see http://au2.php.net/strftime."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://au2.php.net/strftime", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://au2.php.net/strftime"}]}], [{"text": ["A little hack that I've used:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # a time object\nmytime = time(hour=time_hour, minute=time_minute)\n# return a time as a string without a leading zero in hours.\nreturn \"%s:%s\" % (mytime.hour, mytime.strftime(\"%M\"))\n</code>\n</pre>\n", "senID": 1}]]