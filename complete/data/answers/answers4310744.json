[[{"code": "<pre>\n<code>\n def unanimous(it):\n  it1, it2 = itertools.tee(it)\n  return all(it1) or not any(it2)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n def all_bools_equal(lst):\n    return all(lst) or not any(lst)\n</code>\n</pre>\n", "senID": 0}, {"text": ["See: http://docs.python.org/library/functions.html#all"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/functions.html#all", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#all"}]}, {"text": ["See: http://docs.python.org/library/functions.html#any"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/library/functions.html#any", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#any"}]}], [{"text": ["Piggybacking on Ignacio Vasquez-Abram's method, but will stop after first mismatch:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def unanimous(s):\n  it1, it2 = itertools.tee(iter(s))\n  it1.next()\n  return not any(bool(a)^bool(b) for a,b in itertools.izip(it1,it2))\n</code>\n</pre>\n", "senID": 1}, {"text": ["While using not reduce(operators.xor, s) would be simpler, it does no short-circuiting."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "not reduce(operators.xor, s)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n def all_equals(xs):\n    x0 = next(iter(xs), False)\n    return all(bool(x) == bool(x0) for x in xs)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Not so brief, but shortcuts without messing around with 'tee' or anything like that."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def unanimous(s):\n   s = iter(s)\n   if s.next():\n       return all(s)\n   else:\n       return not any(s)\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n def AllTheSame(iterable):\n    return any(iterable) is all(iterable)\n</code>\n</pre>\n", "senID": 0}]]