[[{"text": ["Guido once said that \"we are all consenting adults here\".", "Here's the longer explanation from long ago: http://mail.python.org/pipermail/tutor/2003-October/025932.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://mail.python.org/pipermail/tutor/2003-October/025932.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://mail.python.org/pipermail/tutor/2003-October/025932.html"}]}, {"text": ["There's an agreement that underscores mean private elements and you should not use them.", "Unless you know what you're doing and you really want to."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The link also mentions another way to put it in case of Perl:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Python doesn't support strong encapsulation, which is only one of many features associated with the term \"object-oriented\"."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "encapsulation", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["The answer is simply philosophy.", "Guido doesn't like hiding things, and many in the Python community agree with him."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I believe Python is more of a very practical, pragmatic language. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Concepts which offer value to the developer are put in, without too much consideration about theological concepts like \"proper OO design\" and stuff.", "It's a language for people who have real work to do."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I think Python is suitable for all kinds of environments, though Desktop is a bit difficult due to the lack of a single framework.", "For all applications it's handy to use a framework,\nlike NumPy for computational stuff, Twisted or Django for web stuff, and WxWidgets or other for Desktop stuff."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Access modifiers (public, private, protected, etc) are not required for class-based programming.", "They are just a feature, like multiple inheritance."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "class-based programming", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Class-based_programming"}, {"text": "multiple inheritance", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Multiple_inheritance"}]}], [{"text": ["it does support public and private. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["See http://diveintopython.org/object_oriented_framework/private_functions.html ,found from 5 seconds on google."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://diveintopython.org/object_oriented_framework/private_functions.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://diveintopython.org/object_oriented_framework/private_functions.html"}]}], [{"text": ["I think Python is designed to be a hybrid.", "You can write in object oriented or functional styles.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The hallmarks of object-orientation are abstraction, encapsulation, inheritance, and polymorphism.", "Which of these are missing from Python?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Object-orientation is a continuum.", "We might say that Smalltalk is the purest of the pure, and all others occupy different places on the scale.  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["No one can say what the value of being 100% pure is.", "It's possible to write very good object-oriented code in languages that aren't Smalltalk, Python included."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Python is useful in all those areas: scientific (NumPy), web (Django), and desktop."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["What exactly is full object oriented?", "Alan Kay said \"Actually I made up the term \"object-oriented\", and I can tell you I did not have C++ in mind.\".", "Admittedly, he probably did not have python in mind either, but it is worth noting that Smalltalk also protects classes by convention, no mandate."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["A language is said to Full Objective Oriented if it has no primitive data tipes.", "Each data type we need to construct."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]