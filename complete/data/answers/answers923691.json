[[{"text": ["nohup for starters (at least on *nix boxes) - and redirect the output to some log file where you can come back and monitor it of course."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["So now that I understand what you really want, I think the best solution would be to create a lite daemon to run whatever process you want.", "The daemon could then dump the output to a log file so if it takes a shorter amount of time to run than you expect, you can still get the output.", "This would be more reliable than fiddling with screen.", "It should be pointed out however, that this could potentially be a security risk.", "If this is a task you run every N time periods, cron would work much better."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Original Answer"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Original Answer", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["GNU Screen is a good way to handle this."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "GNU Screen", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.gnu.org/software/screen/"}]}, {"text": ["Edit: After re-reading your question, I think I misunderstood you.", "Are you looking to run a python script on the local machine that will connect to a remote one and run some arbitrary process and then be able to connect to the remote machine again and examine a log or something?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["For a quick, lightweight solution you can't beat screen.", "If you want to automate things completely it makes sense to set up the process to run as a daemon and write to the system log using syslog.", "Your system may have a start-stop-daemon script, and for C code it may also have a daemon(3) call in the C library."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "screen", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.gnu.org/software/screen/"}, {"text": "run as a daemon", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "syslog", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "start-stop-daemon", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "daemon(3)", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["If you want a script to continue after you leave, you could call it through \"nohup\" (man nohup).", "You could also put code in the script you call to have it daemonize itself... it forks, makes the child into a daemon, and then exits.", "A quick search turned up: http://code.activestate.com/recipes/278731/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.activestate.com/recipes/278731/", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/278731/"}]}], [{"text": ["As @Gandalf mentions, you'll need nohup in addition to the backgrounding &amp;, or the process will be SIGKILLed when the login session terminates.", "If you redirect your output to a log file, you'll be able to look at it later easily (and not have to install screen on all your machines)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "nohup", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Most commercial products install an \"Agent\" on the remote machines."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In the linux world, you have numerous such agents.", "rexec and rlogin and rsh all jump to mind."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["These are all clients that communication with daemons running on the remote hosts."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If you don't want to use these agents, you can read about them and reinvent these wheels in pure Python.", "Essentially, the client (rexec for example) communicates with the server (rexecd) to send work requests."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Instead of screen, since it's for a single process, I would suggest its lightweight sibling, dtach."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "dtach", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://dtach.sourceforge.net/"}]}, {"text": ["For a fairly complete recipe of d\u00e6monizing a process in Python, see the Creating a daemon the Python way from the ActiveState cookbook."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Creating a daemon the Python way", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/278731/"}]}]]