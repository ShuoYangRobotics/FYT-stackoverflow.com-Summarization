[[{"text": ["How about this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n INSERT INTO PROGRAMME ( GENREID, PROGTITLE, YR, DIRECTOR, PERFORMERS, FILM, WIDESCREEN, BNW, CERTIFICATE, DESCRIPTION)\nSELECT G.GENREID, T.PROGTITLE, T.YR, T.DIRECTOR, T.PERFORMERS, T.FILM, T.WIDESCREEN, T.BNW, T.CERTIFICATE, T.DESCRIPTION\nFROM TVTEMPTABLE T,GENRE G\nWHERE G.GENRENAME = T.GENRE\nAND T.PROGTITLE NOT IN ( SELECT DISTINCT P.PROGTITLE FROM PROGRAMME P)\n</code>\n</pre>\n", "senID": 1}, {"text": ["I believe your NOT EXISTS has to execute for each selected row.", "Replace it with a single static subquery and check NOT IN on it."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "NOT EXISTS", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "NOT IN", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["You are doing a (possibly large) sub-select for each row."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I would suggest doing a LEFT JOIN against PROGRAMME, and then only inserting rows where the join result is NULL, as follows:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n INSERT INTO PROGRAMME (\n    GENREID, PROGTITLE, YR, DIRECTOR,\n    PERFORMERS, FILM, WIDESCREEN, BNW,\n    CERTIFICATE, DESCRIPTION)\nSELECT\n    G.GENREID, T.PROGTITLE, T.YR, T.DIRECTOR,\n    T.PERFORMERS, T.FILM, T.WIDESCREEN, T.BNW,\n    T.CERTIFICATE, T.DESCRIPTION\nFROM\n    TVTEMPTABLE T\n    INNER JOIN GENRE G ON G.GENRENAME=T.GENRE\n    LEFT JOIN PROGRAMME P ON P.PROGTITLE=T.PROGTITLE\nWHERE\n    P.PROGTITLE IS NULL\n</code>\n</pre>\n", "senID": 2}, {"text": ["As an aside: have you considered (a) pretty-printing your code to be more readable and (b) not using all-caps field names?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["i would first look at the performance of the embedded select statement in your insert, especially the NOT EXISTS clause.", "Make sure you have good indexes there."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["another thought is to break it into smaller chunks so you do not have rollback space problems.", "So see if you can insert only 1000 or 10,000 rows at a time, then commit, then run again.", "etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["wrap your insert statement in a transaction."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n start transaction;\n\ninsert into programme (...) select ... from tvtemptable ...\n\ncommit;\n</code>\n</pre>\n", "senID": 1}, {"text": ["if it's still slow then post the explain plan of the select portion of your insert statement so we can see what's going on :P"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["index P.PROGTITLE and T.PROGTITLE"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["This was a combination of using left/inner join and the distinct keyword."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]