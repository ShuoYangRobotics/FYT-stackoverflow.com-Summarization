[[{"text": ["You only need this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n MCs = [[x[0]] for x in MCs]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Strings are iterable, and list(iterable) returns a list of elements yielded by the argument (i.e.", "characters, in this case)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "list(iterable)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["That's because x[0] is e.g.", "'foo' and list turns an iterable into a list containing the items of the iterable - iterating a string yields its characters one at a time.", "It's unrelated to the list comprehension, the same thing would happen if you used list('foo').", "To make a singleton list, just wrap the expression in square brackes, i.e.", "[[mc[0]] for mc in mcs]."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "x[0]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "'foo'", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "list('foo')", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "[[mc[0]] for mc in mcs]", "childNum": 0, "tag": "code", "pos": 4, "childList": []}]}], [{"text": ["Use this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [[x[0]] for x in MCs]\n</code>\n</pre>\n", "senID": 1}, {"text": ["list(c) takes a collection of something and makes it into a list.", "A string is a collection of characters, so that's what you get, a list of characters."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "list(c)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "something", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}], [{"text": ["To get precisely what you ask for do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; [[x[0]] for x in MCs]\n[['foo'], ['bar'], ['noo']]\n</code>\n</pre>\n", "senID": 1}, {"text": ["But perhaps what you really want is this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; [x[0] for x in MCs]\n['foo', 'bar', 'noo']\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Try this for your answer."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [[x[0],] for x in MCs]\n</code>\n</pre>\n", "senID": 1}, {"text": ["So dissecting what your list comprehension:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for x in  [['foo', 180.9], ['bar', 163.5], ['noo', 140.3]]:\n# x = ['foo', 180.9] first time through\n# x[0] = 'foo'\n# list(x[0]) = ['f','o','o']\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Using zip:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [[x] for x in zip(*MCs)[0]]\n</code>\n</pre>\n", "senID": 1}]]