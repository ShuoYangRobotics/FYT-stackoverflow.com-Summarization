[[{"text": ["If it were me, I'd consider doing the work by hand.", "A couple thousand lines of code isn't a lot of code, and by rewriting it yourself (rather than translating it automatically), you'll be in a position to decide how to take advantage of Python idioms appropriately.", "(FWIW, I worked Java almost exclusively for 9 years, and I'm now working in Python, so I know the kind of translation you'd have to do."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Code is always better the second time you write it anyway....\nPlus a few thousand lines of Java can probably be translated into a few hundred of Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Have a look at Jython.", "It can fairly seamlessly integrate Python on top of Java, and provide access to Java libraries but still let you act on them dynamically."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Jython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jython.org/Project/"}]}], [{"text": ["Automatic translators (f2c, j2py, whatever) normally emit code you wouldn't want to touch by hand.", "This is fine when all you need to do is use the output (for example, if you have a C compiler and no Fortran compiler, f2c allows you to compile Fortran programs), but terrible when you need to do anything to the code afterwards.", "If you intend to use this as anything other than a black box, translate it by hand.", "At that size, it won't be too hard."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I would write it again by hand.", "I don't know of any automated tools that would generate non-disgusting looking Python, and having ported Java code to Python myself, I found the result was both higher quality than the original and considerably shorter."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You gain quality because Python is more expressive (for example, anonymous inner class MouseAdapters and the like go away in favor of simple first class functions), and you also gain the benefit of writing it a second time. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It also is considerably shorter: for example, 99% of getters/setters can just be left out in favor of directly accessing the fields.", "For the other 1% which actually do something you can use property()."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "property()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["However as David mentioned, if you don't ever need to read or maintain the code, an automatic translator would be fine."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Jython's not what you're looking for in the final solution, but it will make the porting go much smoother."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "will", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["My approach would be:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've this in the past with great success."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I've used Java2Python.", "It's not too bad, you still need to understand the code as it doesn't do everything correctly, but it does help."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]