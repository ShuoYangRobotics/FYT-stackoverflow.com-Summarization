[[{"text": ["There's multiple questions here:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Technically Python is compiled to bytecode and then interpreted in a VM, as John Millikin said.", "If the Python compiler is able to write out the bytecode into a .pyc file, it will (usually) do so."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["On the other hand, there's no explicit compilation step in Python as there is with Java or C. From the point of view of the developer, it looks like Python is just interpreting the .py file directly.", "Plus, Python offers an interactive prompt where you can type Python statements and have them executed immediately.", "So the workflow in Python is much more similar to that of an interpreted language than that of a compiled language.", "To me (and a lot of other developers, I suppose), that distinction of workflow is more important than whether there's an intermediate bytecode step or not."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["As the varied responses will tell you, the line between interpreted and compiled is no longer as clear as it was when such terms were coined.", "In fact, it's also something of a mistake to consider langauges as being either interpreted or compiled, as different implementations of languages may do different things.", "These days you can find both C interpreters and Javascript compilers."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "langauges", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "implementations", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "C interpreters", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://root.cern.ch/drupal/content/cint"}, {"href": "https://developer.mozilla.org/en/Rhino%5FJavaScript%5FCompiler", "text": "Javascript compilers", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Even when looking at an implementation, things still aren't clear-cut.", "There are layers of interpretation.", "Here are a few of the gradations between interpreted and compiled:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Yes, Python is interpreted, but you can also run them as long-running applications."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Python is an interpreted language but it is the bytecode which is interpreted at run time.", "There are also many tools out there that can assist you in making your programs run as a windows service / UNIX daemon."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Yes, it's interpreted, its main implementation compiles bytecode first and then runs it though (kind of if you took a java source and the JVM compiled it before running it).", "Still, you can run your application in background.", "Actually, you can run pretty much anything in background."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["There is something that's close to it called Psyco.", "I never worked with this Python compiler, and I suggest you peruse the Python mailing list and the web for possible pitfalls if you are using it on a mission-critical app in production. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Psyco", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://psyco.sourceforge.net/introduction.html"}]}]]