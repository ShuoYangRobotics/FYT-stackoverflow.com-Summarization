[[{"text": ["Working solution with slightly different logic:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n PkgInfo={}\nTags=['Package', 'Section', 'Name']\n\n\nfor line in reader.readlines():\n    entry = line.strip().split(': ', 2)\n    if len(entry) != 2:\n        continue\n    element, value = entry[0], entry[1]\n    if element in Tags:\n        PkgInfo[element] = value\n\nprint PkgInfo\n</code>\n</pre>\n", "senID": 1}, {"text": ["And pay attention to the fact that iteration over elements was not only one problem.", "'Package' in Tags was defined as 'Package: ', Tags in loop referenced as tags, split.line instead line.split(), value isn't stripped."], "childNum": 5, "tag": "p", "senID": 2, "childList": [{"text": "Tags", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "Tags", "childNum": 0, "tag": "code", "childList": []}, {"text": "tags", "childNum": 0, "tag": "code", "childList": []}, {"text": "split.line", "childNum": 0, "tag": "code", "childList": []}, {"text": "line.split()", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I would suggest you just split line at : and then test whether the first part is one of your keywords.", "This can easily be done by using a set and the in operator:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": ":", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "set", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "in", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n tags = set(['Package', 'Section', 'Name'])\npkgInfo = {k: v.strip() for k, v in (line.split(':') for line in reader) if k in tags}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or the longer version:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n tags = set(['Package', 'Section', 'Name'])\npkgInfo = {}\n\nfor line in reader:\n    k, v = line.split(':')\n    if k in tags:\n        pkgInfo[k] = v.strip()\n</code>\n</pre>\n", "senID": 3}, {"text": ["But note that this will fail if there is not exactly one colon in each line."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n PkgInfo = {}\nTags = ['Package', 'Section', 'Name']\n\nfor line in reader.readlines():\n    for element in Tags:\n        if line.startswith(element):\n            PkgInfo[element] = line.split(': ')[1]\n            break\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The problem with all solutions based on split() is that they will probably break if colon appears more than once.", "This is less elegant but more robust:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n PkgInfo = {}\nTags = ['Package','Section','Name']\nsplitter = ': '\nsplitLen = len(splitter)\nfor line in reader.readlines():\n  firstColon = line.find(splitter)\n  if firstColon &gt; 0: \n    key = line[:firstColon]\n    if key in Tags:\n      pkgInfo[key] = line[firstColon + splitLen:]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You need to iterate over Tags:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n PkgInfo={}\nTags=['Package: ', 'Section', 'Name']\nfor line in reader.readlines():\n    for tag in Tags:\n        if line.startswith(tag):\n            PkgInfo[tag]=line.split(': ')[1]\n            break\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I'd try something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n PkgInfo={}\n #I assume it should be 'Package' not 'Package: '\n Tags=['Package', 'Section', 'Name']\n\n for line in reader.readlines()\n    k, v = line.split(': ')\n    if k in Tags:\n        PkgInfo[k] = v\n</code>\n</pre>\n", "senID": 1}, {"text": ["or even quickier and dirtier two liner:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n #I assume it should be 'Package' not 'Package: '\n Tags=['Package', 'Section', 'Name']\n\n PkgInfo = dict(line.split(': ') for line in reader.readlines() if line.split(': ')[0] in Tags)\n</code>\n</pre>\n", "senID": 3}]]