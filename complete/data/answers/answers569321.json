[[{"text": ["The MIDIUtil Library (hosted here at Google Code) does what you want: write MIDI Files from a pure Python library.", "Once nice thing about it (and full disclosure: I'm the author) is that you don't have to keep track of lower-level MID events such as note-on and note-off: it handles them for you."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/midiutil/"}]}, {"text": ["As an example to write a note, you would do something like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n MyMIDI = MIDIFile(1)\ntrack = 0\nchannel = 0\npitch = 60\ntime = 0\nduration = 1\nvolume = 100\nMyMIDI.addNote(track,channel,pitch,time,duration,volume)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Hope this helps"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["pyPortMidi is a Python wrapper of PortMidi, which is described as a \"a cross-platform C library for realtime MIDI control\".", "I haven't used it myself, but it looks very promising.", "Explicit mention of being able to send MIDI data in realtime."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyPortMidi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://alumni.media.mit.edu/~harrison/code.html"}]}], [{"text": ["Midi support (in and out) has been added to pyGame 1.9, though it's mainly in the development stage and isn't very well documented yet, but it works."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Midi support is also being developed in the pyGame successor, pgreloaded (or pygame2)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Also note that even though pyGame has 'game' in the title, its uses stretch far beyond just game design."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I was looking for a pure-Python library to generate a MIDI file, mxm's Python MIDI library is exactly that."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mxm's Python MIDI library", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.mxm.dk/products/public/pythonmidi"}]}, {"text": ["From this dzone snippet, there is a single-file version of the above library, smidi.py (gist'd here for posterity)"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "this dzone snippet", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://snippets.dzone.com/posts/show/572"}, {"href": "http://larndham.net/service/pys60/smidi.py", "text": "smidi.py", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://gist.github.com/202595", "text": "gist'd here", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Usage is quite simple:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import smidi\n&gt;&gt;&gt; m = smidi.MidiOutFile('out.mid')\n&gt;&gt;&gt; m.header()\n&gt;&gt;&gt; m.start_of_track()\n&gt;&gt;&gt; m.update_time(0)\n&gt;&gt;&gt; m.note_on(note=0x40)  # single note\n&gt;&gt;&gt; m.update_time(192)\n&gt;&gt;&gt; m.note_off(note=0x40) # stop it after 192\n&gt;&gt;&gt; m.update_time(0)\n&gt;&gt;&gt; m.end_of_track()\n&gt;&gt;&gt; m.eof()\n</code>\n</pre>\n", "senID": 3}, {"text": ["Presumably works on Windows (as the original example uses C:\\out.mid as the output filename), and I've tested it on OS X"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "C:\\out.mid", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["If you only need to generate Midi or process midi files, try mingus,\nIt's a great package and it also allows much higher abstractions such as chords, chord progressions, scales and so on."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mingus", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/mingus/"}]}], [{"text": ["Look at cSounds."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "cSounds", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.csounds.com/"}]}]]