[[{"text": ["On windows i added the '.py' extension to the 'PATHEXT' environment variable and that works for me - if the .py file is stored in an directory that is part of the 'PATH' environment variable."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n C:\\&gt;echo %PATHEXT%\n.COM;.EXE;.BAT;.CMD;.PY;.JS;.JSE\n</code>\n</pre>\n", "senID": 1}], [{"text": ["So far I came up with this solution that seams to work.", "Create a file yourname.py with this content:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "yourname.py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import os, sys\nfilename = os.path.splitext(os.path.basename(sys.argv[0]))[0]\nif not os.path.exists(filename):\n    # filename does not exists, we will emulate cmd behaviour\n    sys.stderr.write(\"'%s' is not recognized as an internal or external command,\\noperable program or batch file.\" % filename)\n    sys.exit(9009)\nret = os.system(\"python %s %s\" % (\n        filename,\n        \" \".join(sys.argv[1:])\n        ))\nexit(ret)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["you can always call your script with the Python interpreter.", "You get the same consistency in *nix, when you use the interpreter."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Windows"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n c:\\&gt; python c:\\path\\to\\myscript\n</code>\n</pre>\n", "senID": 2}, {"text": ["*nix"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n $ python /path/to/myscript\n</code>\n</pre>\n", "senID": 4}, {"text": ["If its not what you want, then i am mis-interpreting your question."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["You can use distutils to install scripts into the Python installation (the easy_install tool is installed like that, for example)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For Windows, you can use py2exe to create a script that can be executed without file extension.", "On Linux you can simply use a file without extension, but including a shebang line."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "py2exe", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/py2exe/"}]}], [{"text": ["Write your main Python module with a .py extension.", "Set up PATHEXT correctly, and it will run on Windows without having to type the extension."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "PATHEXT", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["On Unix, write a second Python program that simply imports the first, using she-bang syntax.", "No extension on this file - it's a shell script.", "Like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\nimport do\n</code>\n</pre>\n", "senID": 2}, {"text": ["This will have the effect of importing do.py."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "do.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Only do needs to be marked as executable for Unix.", "do.py is a module in that environment."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "do", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "do.py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["When you import a module, the code in the module is run once."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["It doesn't completely remove redundancy, but it's close.", "And it is probably the best solution possible for cross-platform scripting."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["On Windows you can use the normal file association methods and the PATHEXT environment variable to be able to call scripts without their extensions."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]