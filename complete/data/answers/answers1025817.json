[[{"text": ["I see now that Daff mentioned the simple HTTP server, but I made an example on how you'd solve your problem (using BaseHTTPServer):"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "BaseHTTPServer", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import BaseHTTPServer\n\nHOST_NAME = 'localhost'\nPORT_NUMBER = 1337\n\nclass MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):\n    def do_GET(s):\n        s.send_response(200)\n        s.send_header('Content-Type', 'text/html')\n        s.end_headers()\n\n        # Get parameters in query.\n        params = {}\n        index = s.path.rfind('?')\n        if index &gt;= 0:\n            parts = s.path[index + 1:].split('&amp;')\n            for p in parts:\n                try:\n                    a, b = p.split('=', 2)\n                    params[a] = b\n                except:\n                    params[p] = ''\n\n        # !!!\n        # Check if there is a color parameter and send to controller...\n        if 'color' in params:\n            print 'Send something to controller...'\n        # !!!\n\n        s.wfile.write('&lt;pre&gt;%s&lt;/pre&gt;' % params)\n\nif __name__ == '__main__':\n    server_class = BaseHTTPServer.HTTPServer\n    httpd = server_class((HOST_NAME, PORT_NUMBER), MyHandler)\n\n    try:\n        httpd.serve_forever()\n    except KeyboardInterrupt:\n        pass\n\n    httpd.server_close()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Now, from your JavaScript, you'd call http://localhost:1337/?color=ffaabb"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://localhost:1337/?color=ffaabb", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Python has a small built in Web server.", "If you already already got Python to run with the RS232 you might need to read here on how to set up a very simple and basic webserver.", "An even easier one can look like this:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://fragments.turtlemeat.com/pythonwebserver.php"}, {"text": "this", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://effbot.org/librarybook/simplehttpserver.htm"}]}, {"code": "<pre>\n<code>\n import SimpleHTTPServer\nimport SocketServer\n\nport = 8000\nHandler = SimpleHTTPServer.SimpleHTTPRequestHandler\nhttpd = SocketServer.TCPServer((\"\", port), Handler)\nhttpd.serve_forever()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Try so separate you source as good as possible, to that you won't have too much trouble to move it to a production ready Python capable webserver."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you want an an HTML page to have some sort of server-side programming then you will need a webserver of some sort to do the processing."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["My suggestion would be to get a web server running on your development box, or try to accomplish what you need to do with a local desktop application or script."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["another quick solution is https://addons.mozilla.org/en-US/firefox/addon/3002\nPOW, it's a firefox extension that adds a simple web server with Server Side JS built in. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You'd be able to access a command line and call a python script from there."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["No you need some kind of server.", "Wh not try out the portable webservers?", "You can run them from your usb drive."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "portable webservers", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.google.co.uk/search?q=usb%2Bweb%2Bserver&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-GB:official&client=firefox-a"}]}], [{"text": ["Try also XML-RPC it gives you a simple way to pass remote procedure calls from YUI towards a simple XMLRPC server and from that towards your rs232 device"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I see no reason why you can't setup a handler for .py/.bat/.vbs files in your browser.", "This should result in your chosen application running a script when you link to it.", "This won't work when you migrate to the server but as a testing platform it would work.", "Just remember to turn it off when you're done or you expose yourself to viruses from other sites."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]