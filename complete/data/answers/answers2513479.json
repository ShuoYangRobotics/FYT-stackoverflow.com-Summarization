[[{"text": ["You should take a look at python logging module"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python logging module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/logging.html"}]}], [{"tag": "ul", "num": 3, "lis": [{"text": ["Next time, you'll be happier if instead of using print statements at all you use the logging module from the start.", "It provides the control you want and you can have it write to stdout while that's still where you want it."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "print", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "logging", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Many people here have suggested redirecting stdout.", "This is an ugly solution.", "It mutates a global and\u2014what's worse\u2014it mutates it for this one module's use.", "I would sooner make a regex that changes all print foo to print &gt;&gt;my_file, foo and set my_file to either stdout or an actual file of my choosing."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "This is an ugly solution.", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "print foo", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "print &gt;&gt;my_file, foo", "childNum": 0, "tag": "code", "childList": []}, {"text": "my_file", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["os.system is virtually always inferior to using the subprocess module.", "The latter needn't invoke the shell, doesn't pass signals in a way that usually is unwanted, and can be used in a non-blocking manner."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "os.system", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "subprocess", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]}], [{"text": ["Putting your own file-like in sys.stdout will let you capture the text output via print."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "sys.stdout", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "print", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Python lets you capture and assign sys.stdout - as mentioned - to do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n old_stdout = sys.stdout\n\nlog_file = open(\"message.log\",\"w\")\n\nsys.stdout = log_file\n\nprint \"this will be written to message.log\"\n\nsys.stdout = old_stdout\n\nlog_file.close()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can redirect replace sys.stdout with any object which has same interface as sys.stdout, in that object's write you can print to terminal and to file too.", "e.g.", "see this recipe http://code.activestate.com/recipes/119404-print-hook/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.activestate.com/recipes/119404-print-hook/", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/119404-print-hook/"}]}], [{"text": ["A simple way to redirect stdout and stderr using the logging module is here:\nhttp://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python/2216517#2216517"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python/2216517#2216517", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/616645/how-do-i-duplicate-sys-stdout-to-a-log-file-in-python/2216517#2216517"}]}]]