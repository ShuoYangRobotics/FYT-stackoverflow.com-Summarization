[[{"text": ["You nearly have it; you just need to swap these two lines. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n elif choice.lower() == \"m\":\n    break\n    loop = 0\n\nelif choice.lower() == \"m\":\n     loop = 0\n     break\n</code>\n</pre>\n", "senID": 1}, {"text": ["You break out of the nested loop before setting loop.", ":)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "loop", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Change"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n break\nloop = 0\n</code>\n</pre>\n", "senID": 1}, {"text": ["to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n loop = 0\nbreak\n</code>\n</pre>\n", "senID": 3}, {"text": ["in your elif blocks."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Use two distinct variables for both loops, eg loop1 and loop2."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "loop1", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "loop2", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["When you first press m in the inner loop you just break outside, and then you can handle q separately."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["By the way you shouldn't need the inner variable to keep looping, just go with an infinite loop until key 'm' is pressed.", "Then you break out from inner loop while keeping first one."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Rename your top loop to something like mainloop, and set mainloop = 0 when q is received."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n while mainloop == 1:\n    choice = main_menu()\n    if choice == \"1\":\n        os.system(\"clear\")\n\n        while loop == 1:\n            choice = app_menu()\n\n            if choice == \"1\":\n                source = '%s/%s/external' % (app_help_path,app_version_10)\n                target = '%s/%s' % (target_app_help_path,app_version_10)\n\n            elif choice == \"2\":\n                source = '%s/%s/external' % (app_help_path,app_version_8)\n                target = '%s/%s' % (target_app_help_path,app_version_8)\n            elif choice.lower() == \"m\":\n                loop = 0\n                break\n            elif choice.lower() == \"q\":\n                mainloop = 0break\n                break\n            sendfiles(source, target)\n\n    # Internal files\n\n    elif choice == \"q\":\n        mainloop = 0\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use an exception."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class Quit( Exception ): pass\n\nrunning= True\nwhile running:\n    choice = main_menu()\n\n    if choice == \"1\":\n        os.system(\"clear\")\n\n        try:\n            while True:\n                choice = app_menu()\n\n                if choice == \"1\":\n\n                elif choice == \"2\":\n\n                elif choice.lower() == \"m\":\n                    break\n                    # No statement after break is ever executed.\n                elif choice.lower() == \"q\":\n                    raise Quit\n                sendfiles(source, target)\n\n         except Quit:\n             running= False\n\n    elif choice == \"q\":\n        running= False\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You could put this into a function and return:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import os.path\ndef do_whatever():\n    while True:\n        choice = main_menu()\n\n        if choice == \"1\":\n            os.system(\"clear\")\n\n        while True:\n            choice = app_menu()\n\n            if choice in (\"1\", \"2\"):\n                app_version = app_version_10 if choice == \"1\" else app_version_8\n                source = os.path.join(app_help_path, app_version, \"external\")\n                target = os.path.join(target_app_help_path, app_version)\n                sendfiles(source, target)\n            elif choice.lower() == \"m\":\n                break\n            elif choice.lower() == \"q\":\n                return\n</code>\n</pre>\n", "senID": 1}, {"text": ["Admittedly, I don't quite get when you want to break the inner loop and when you want to quit both loops, but this will give you the idea."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]