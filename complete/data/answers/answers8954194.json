[[{"text": ["RGL is a visualization device system for R, using OpenGL as the rendering backend.", "An rgl device at its core is a real-time 3D engine written in C++.", "It provides an interactive viewpoint navigation facility (mouse + wheel support) and an R programming interface. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "RGL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rgl.neoscientists.org/gallery.shtml"}]}, {"src": "http://i.stack.imgur.com/5M81p.jpg", "tag": "img", "senID": 1}, {"text": ["GGobi is an open source visualization program for exploring high-dimensional data.", "It provides highly dynamic and interactive graphics such as tours, as well as familiar graphics such as the scatterplot, barchart and parallel coordinates plots.", "Plots are interactive and linked with brushing and identification."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "GGobi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.ggobi.org/"}]}, {"src": "http://i.stack.imgur.com/txl6Z.jpg", "tag": "img", "senID": 3}, {"text": ["There's a tutorial that covers both of the above systems here. "], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lookingatdata.com/jsm-2009/"}]}, {"text": ["RPy is a very simple, yet robust, Python interface to the R Programming Language.", "It can manage all kinds of R objects and can execute arbitrary R functions (including the graphic functions).", "All errors from the R language are converted to Python exceptions.", "Any module installed for the R system can be used from within Python. "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "RPy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rpy.sourceforge.net/"}]}], [{"text": ["You might want to look at outputting SVG with animation, in which case this question might interest you.", "I suspect the animation aspects will require a lot of work on your part.", "Another option is maybe visualizing the data as a graph, although I'm don't know enough about your data to know whether this would be useful to you.", "If it is, cytoscape is python scriptable"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "this question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/634964/svg-diagrams-using-python"}, {"text": "python scriptable", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://wiki.cytoscape.org/ScriptingPlugins#Python_.28New.21.29"}]}], [{"text": ["If all you want is an animated surface, then gnuplot can do it.", "A quick intro on it can be found here, or from the gnuplot FAQ.", "More detail can obviously be found in the gnuplot docs."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "can be found here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "https://enteropia.wordpress.com/2011/04/19/animation-with-gnuplot-animating-pendulum/"}, {"text": "from the gnuplot FAQ", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.gnuplot.info/faq/faq.html#SECTION00056000000000000000"}]}], [{"text": ["You could try guiqwt.", "It's aimed for 2D graphs, but targets more specifically interactive plots (as opposed to Matplotlib, although it can handle some degree of interaction too).", "From the guiqwt documentation:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "guiqwt", "tag": "a", "pos": 0, "childList": [{"text": "guiqwt", "tag": "code"}], "childNum": 1, "href": "http://packages.python.org/guiqwt/"}, {"text": "guiqwt", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "guiqwt", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["(I haven't tried it, so I can't comment on these claims."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Sounds like Mayavi might fit your needs.", "It is written in Python, can be used interactively and supports 3D graphs and animations.", "You can have a look at this tutorial to see if it fits your needs."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Mayavi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.enthought.com/mayavi/mayavi/"}, {"text": "this tutorial", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://github.enthought.com/mayavi/mayavi/application.html#tutorial-examples-to-learn-mayavi"}]}, {"text": ["I have done an interactive 3D visualization with animation in Python using the older version 1 of mayavi, see this page."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "this page", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mayavi.sourceforge.net/"}]}, {"text": ["Edit"], "childNum": 0, "tag": "h2", "senID": 2, "childList": []}, {"text": ["Unfortunately, most Mayavi examples show off too much advanced functionality.", "Here are two examples that demonstrate more basic applications.", "If these two do not fit your needs, then Mayavi may not be a good choice in your case.", "My understanding is that you have arrays of floats that you want to visualize."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Example 1"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Example 1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Here is a specific example from the older page on what you can do with a 3D array of floats: 3D data example.", "This example shows the use of isocontour surfaces, one solid cut plane through the data and another cut plane with isocontour lines.", "You can interactively move the cut planes around or choose different visualization tools.", "(In my case I had added another dimension and an animation that presented the data as 3D-cube slices through the hypercube."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "3D data example", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mayavi.sourceforge.net/screenshots/heart.gif"}]}, {"text": ["Example 2"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Example 2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Here is another example of what a more \"conventional\" plot with Mayavi could look like: Fourier transform example.", "This is quite similar to what the many other plotting libraries do."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Fourier transform example", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sam.math.ethz.ch/~hheumann/Tutorial/html/mayavi2_tips.html"}]}], [{"text": ["Okay, now that I understand your data I can definitely suggest a method of visualisation.", "A coloured 3D surface density plot.", "Use a0, a1 and a2 as standard x,y,z axes, use a3 as the time axis, and plot different colours over a monochromatic range (or cold to hot).", "That way the only thing that needs an interactive slider is a3."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As far as tools to do this are concerned"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Go download a free trial of Tableau (www.tableausofware.com).", "It will encode your data on X, Y, size, color and shape, and you can create small multiples any other dimensions you have -- i.e.", "you can look at lots of dimensions at once.", "You can try lots and lots of visualizations very rapidly.", "There is free training on the company website."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "www.tableausofware.com", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.tableausoftware.com/"}]}, {"text": ["Disclaimer: I work for them."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The simplest visualization for 3+dimensions is bubble chart or motion chart.", "On top of the x and y axis you can use the bubble size and the bubble color for the extra dimensions."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Google visualization (http://code.google.com/apis/chart/interactive/docs/gallery/motionchart.html) and its google spreadsheet interactive mode give a simple interface to play with which of the dimensions is on which of the axis/size/color."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It is not aimed at handling too many data points, but you can use it to identify patterns on samples of the data with ease."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]