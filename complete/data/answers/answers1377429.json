[[{"text": ["Who cares?", "Seriously.", "If you want to know, use timeit package (you can invoke it from command line with -m)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["But it doesn't matter at all, because the difference is negligible.", "And in general, Python is not a language that you choose if you want speed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I am sure the while version is slower.", "Python will have to lookup the add operation for the integer object on each turn of the loop etc, it is not pure C just because it looks like it!"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "while", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["And if you want a pythonic version of exactly the above, use:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n print \" \".join(str(i) for i in xrange(10))\n</code>\n</pre>\n", "senID": 2}, {"tag": "hr", "senID": 3}, {"text": ["Edit: My timings look like this.", "This is just a silly running loop without printing, just to show you what writing out \"i += 1\" etc costs in Python."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n $ python -mtimeit \"i=0\" \"while i &lt; 1000: i+=1\"\n1000 loops, best of 3: 303 usec per loop\n$ python -mtimeit \"for i in xrange(1000): pass\"\n10000 loops, best of 3: 120 usec per loop\n</code>\n</pre>\n", "senID": 5}], [{"text": ["The first one."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You mean, faster to develop, right?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["PS: It doesn't matter, machines these days are so fast that it is meaningless to ponder on micro optimizations, prior to identifying the bottlenecks using a thorough profiler."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["They are both to avoid :-)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "both", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Generally speaking, each time I see an iteration over numbers, I see some non-pythonic code, that could be expressed in a better way using iterations over lists or generators.", "Actually, I've said \"pythonic\", but it is all about readability.", "Using idiomatic code will increase readability, and ultimately also performance, because the compiler will better know how to optimize it."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "readability", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}], [{"text": ["Well, if you are after efficiency in numerical code, you ought to use numpy and scipy.", "Your integration can be quickly written as numpy.sum( numpy.arange( 10 ) )"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "numpy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://numpy.scipy.org"}, {"text": "scipy", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.scipy.org"}, {"text": "numpy.sum( numpy.arange( 10 ) )", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["If your program is too slow, try using psyco."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "psyco", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://psyco.sourceforge.net/"}]}, {"text": ["Don't worry about the kind of micro-optimisation in your question.", "Write your program to be maintainable (which includes following standard Python style so other programmers can read it easier)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["In Python, the shorter and clearer version is always better.", "If I am not mistaken the range and xrange functions are not native, if you try xrange(sys.maxint+1) you will get an overflow error."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Besides, what the hell could this be useful for?", "If you are just printing 10 numbers, then surely readability counts a thousand times more - and I don't think you're going to print over a million numbers..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]