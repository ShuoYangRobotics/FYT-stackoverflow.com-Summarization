[[{"text": ["There's a couple of problems here, both to do with your symbolic link."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Firstly, the source and target needed to be the other way round (I always get that wrong myself)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Secondly, you have used a completely different path to the one you've specified in your Apache conf - djangotest/sgelections vs django/sgel."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "djangotest/sgelections", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "django/sgel", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Do it like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n cd /home/django/sgel/media/\nln -s /usr/lib/python2.6/site-packages/django/contrib/admin/media/ admin\n</code>\n</pre>\n", "senID": 4}], [{"text": ["In addition to correcting the symbolic link as Daniel Roseman suggested, you'll need to make sure that the user that is running Apache has read access to the admin media."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "If you do ", "tag": "none", "senID": 1}, {"text": "If you ", "tag": "none", "senID": 2}, {"text": "Does the user that runs Apache have read access to the admin media?", "tag": "none", "senID": 3}]}, {"text": ["If all those things work, then please update your question with your current configuration and results of those commands and we'll take another look."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Response to Update: Ok, the permissions look ok.", "It looks like you've got the directory structure in your media directory a little bit wrong."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Response to Update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["The fact that /usr/lib/python2.6/site-packages/django/contrib/admin/media/ was empty is disturbing, too.", "Once you solve the immediate problem you may want to look into reinstall django in the expected place."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "/usr/lib/python2.6/site-packages/django/contrib/admin/media/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Anyways, here's how the structure should look:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n $ cd media\n$ ls -la\ndrwxr-xr-x 2 root root 4096 Apr 13 03:33 .\ndrwxr-xr-x 3 root root 4096 Apr  8 09:02 ..\nlrwxrwxrwx 1 root root   60 Apr 13 03:33 admin -&gt; /usr/lib/python2.6/site-packages/django/contrib/admin/media/\n-rw-r--r-- 1 root root    9 Apr  8 09:02 test.txt\n</code>\n</pre>\n", "senID": 8}, {"text": ["That is, inside of the media/ directory their should be a link called admin directly to the /admin/media directory of your django installation."], "childNum": 3, "tag": "p", "senID": 9, "childList": [{"text": "media/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "admin", "childNum": 0, "tag": "code", "childList": []}, {"text": "/admin/media", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["To fix what you've got, inside of the media/admin/ directory run:"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "media/admin/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n rm media\ncd ..\nrmdir admin\n</code>\n</pre>\n", "senID": 11}, {"text": ["and then re-create the symlink as suggested in Daniel Roseman's answer."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}], [{"text": ["Try to add"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Options FollowSymLinks\n</code>\n</pre>\n", "senID": 1}, {"text": ["to your"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &lt;Directory /home/django/sgel/media&gt;\n    Order deny,allow\n    Allow from all\n&lt;/Directory&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["so that you end up with"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &lt;Directory /home/django/sgel/media&gt;\n    Options FollowSymLinks\n    Order deny,allow\n    Allow from all\n&lt;/Directory&gt;\n</code>\n</pre>\n", "senID": 5}], [{"text": ["i used to have the same problem, i solved it by using the FireFox plugin firebug, which tells you where is your site looking for the media files, also how did you check the contents of the admin/media folder to see if they were empty ?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["In Firebug, use the Net tab and see the requests being made by your browser for the css files.", "see the response for your requests there itself.", "I think you will find the problem there.", "I recently had the same problem.", "The problem was when my browser requests for the css files, the response contained the contents of my project's login html page.", "I don't remember now that how i solved my problem.", "I will try to recollect and post the solution here.", "Let me know if you have the same problem."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}], [{"text": ["can you run "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n pyton\n&gt;&gt;&gt; import django\n&gt;&gt;&gt; print django.__file__\n</code>\n</pre>\n", "senID": 1}, {"text": ["the other question - does your normal media placed into the /home/django/sgel/media/ work (i.e.", "served by apache as expected?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I'm not sure if this will help but in my config file I have:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Alias /adminmedia/ /var/lib/python-support/python2.6/django/contrib/admin/media/   \n\n    &lt;Directory \"/var/lib/python-support/python2.6/django/contrib/admin/media\"&gt; \n            AllowOverride None                                                 \n            Options FollowSymLinks                                             \n            Order allow,deny                                                   \n            Allow from all                                                     \n    &lt;/Directory&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["It works but I have my server set up for development/testing only."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Did you try setting the value for "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["MEDIA_ROOT \nMEDIA_URL \nADMIN_MEDIA_PREFIX "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["correctly?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I mean that the MEDIA_ROOT url and ADMIN_MEDIA_PREFX should have a different value.", "Please check these values in your settings.py and try again."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Hope this helps."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I encountered the same problem while running the Bitnami Django Stack on Win32  (builtin development server)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I solved the issue by finding the missing CSS folders in the installation and changing settings.py. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # Additional locations of static files\nSTATICFILES_DIRS = (\n    'C:/Program Files/BitNami DjangoStack/apps/django/django/contrib',\n)\n</code>\n</pre>\n", "senID": 2}, {"text": ["This will help you get started developing...", "It's not optimal.", "Don't forget the trailing comma :) "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Another method I just found, and it looks like a properly supported method."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Make sure you have the staticfiles module in your settings.", "Also configure the STATIC_ROOT option."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#module-django.contrib.staticfiles"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#module-django.contrib.staticfiles", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#module-django.contrib.staticfiles"}]}, {"text": ["Create your /static/ folder and set permissions."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Configure apache with a /static/ alias."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n alias /static &lt;path to project root&gt;/static/\n&lt;Directory \"&lt;path to project root&gt;/static/\"&gt;\n    Order deny,allow\n    Allow from all\n&lt;/Directory&gt;\n</code>\n</pre>\n", "senID": 5}, {"text": ["then from your project folder run"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n sudo python manage.py collectstatic [-n to do a dry run]\n</code>\n</pre>\n", "senID": 7}, {"text": ["All this looks like it does is copy the admin static files to your projects folder for web serving."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["I know it's been solved but I think it's worthy to share my solution."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I simply added the alias in apache and it worked so far."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n Alias /static/admin/ /usr/local/lib/python2.6/dist-packages/django/contrib/admin/media/\n    Alias admin/media/ /usr/local/lib/python2.6/dist-packages/django/contrib/admin/media/\n</code>\n</pre>\n", "senID": 2}], [{"text": ["If nothing helps, add the following in urls.py"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["url(r'^media/(?P.", "*)$', 'django.views.static.serve', { \n            'document_root': '/usr/lib/python2.4/site-packages/django/contrib/admin/media/', \n           'show_indexes' : True, \n        }), "], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["This is independent of apache or nginx :)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]