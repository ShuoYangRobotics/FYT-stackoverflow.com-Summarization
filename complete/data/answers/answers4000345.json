[[{"text": ["That would be a deep copy, not a shallow one."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Lists copy shallow by default.", "That's why there's a deepcopy command in the copy module."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "deepcopy", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://docs.python.org/library/copy.html", "text": "copy module", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["B = copy.deepcopy(A)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "B = copy.deepcopy(A)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Optionally, B = A[:] will do.", "But keep deepcopy in mind for future.", "More complex data types can benefit from it."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "B = A[:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Added Info about copy:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["A shallow copy:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n b = [1,2]\na = b\nb[0] = 11\nprint a  // [1,11]\n</code>\n</pre>\n", "senID": 6}, {"text": ["A deep copy:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n b = [1,2]\na = b[:]\nb[0] = 11\nprint a  // [1,2]\n</code>\n</pre>\n", "senID": 8}, {"text": ["But, furthermore:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = [[1,2]]\n&gt;&gt;&gt; b = a[:]\n&gt;&gt;&gt; b\n[[1, 2]]\n&gt;&gt;&gt; a\n[[1, 2]]\n&gt;&gt;&gt; a[0][0] = 11\n&gt;&gt;&gt; a\n[[11, 2]]\n&gt;&gt;&gt; b\n[[11, 2]]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 10}, {"text": ["So, the elements themselves are shallow copies in this case."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}], [{"text": ["Here are 3 ways to make a copy of list A:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Use slice notation:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n copy_of_A = A[:]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Use the list constructor:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n copy_of_A = list(A)\n</code>\n</pre>\n", "senID": 4}, {"text": ["Use the copy module:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n from copy import copy\ncopy_of_A = copy(A)\n</code>\n</pre>\n", "senID": 6}, {"text": ["As you requested these copies are all shallow copies.", "To learn about the difference between shallow copy and deep copy read the documentation of the copy module."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "documentation of the copy module", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/copy.html"}]}], [{"text": ["B=A[:] suffices:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "B=A[:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n In [22]: A=[1,2]\n\nIn [23]: B=A[:]\n\nIn [24]: B[0]=100\n\nIn [25]: A\nOut[25]: [1, 2]\n\nIn [26]: B\nOut[26]: [100, 2]\n</code>\n</pre>\n", "senID": 1}, {"text": ["A[:] uses slice notation to get the slice with all the elements of A.", "Since slices of Python lists always return new lists, you get a copy of A."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "A[:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "A", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "always", "childNum": 0, "tag": "em", "childList": []}, {"text": "A", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Note that the elements inside B are identical to the elements inside A.", "If the elements are mutable, mutating them through B will affect A."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n B = A[:]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can perform that copy in the following way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n B = A[:]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n import copy\nA=[1,2,3,4,5]\nB=copy.copy(A)\nB[0]=9999\nprint B[0]\nprint A[0]\n</code>\n</pre>\n", "senID": 0}, {"text": ["import copy and use copy.copy() for copying.", "see this for reference."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "import copy", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "copy.copy()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "this", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/copy.html"}]}]]