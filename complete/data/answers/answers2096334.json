[[{"text": ["If you're vector-munging, give numpy a try first.", "Chances are you will get speeds not far from C if you utilize numpy's vector manipulation functions wisely."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "numpy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://numpy.scipy.org/"}]}, {"text": ["Other than that, your question is very heuristic.", "If your code is too slow:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["First measure then optimize"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You should never optimize anything, be it in C or any other language, without timing your code before and after your optimization:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "and", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": "your clever optimization could in fact induce a slow down", "tag": "none", "senID": 1}, {"text": "optimizing something that takes 1% of the total execution time will never give you more than 1% performance", "tag": "none", "senID": 2}]}, {"text": ["The common approach is:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you can't find hotspots it could mean that your app is already optimized, or that you are not using the good algorithm for your problem.", "In both cases profiling helps understanding what your code does."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["For profiling python code under Linux, you can use pyprof2calltree which works in conjunction with kcachegrind, and is totally awesome."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "pyprof2calltree", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/pyprof2calltree/"}, {"href": "http://kcachegrind.sourceforge.net/html/Home.html", "text": "kcachegrind", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["A nice Profiler I use on Linux is pycallgraph - however, as your program gets bigger it starts to create much larger images which are harder to trace.", "I'm pretty sure you can exclude modules, though."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pycallgraph", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pycallgraph.slowchop.com/"}]}], [{"text": ["Common wisdom is \"profile\", \"measure\", etc.", "Well - maybe.", "Just get in the debugger and take 10 stackshots.", "If more than one of them terminates in your wrapper code, then it is costing more than 10% roughly, so you should consider re-doing it in C, to save that time.", "Chances are you will find other things also that are costing more than that."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "stackshots", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/406760/whats-your-most-controversial-programming-opinion/1562802#1562802"}]}], [{"text": ["Never.", "Use Cython if you must."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Cython", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.cython.org/"}]}]]