[[{"text": ["One-line functional style:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print '\\n'.join(','.join(x) for x in k)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["1)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for x in k:\n    print(','.join(x))\n</code>\n</pre>\n", "senID": 1}, {"text": ["2)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for x,y in l:\n    print('%.8f,%s' % (x[0], y))\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n for a,b,c in k: print \"%s,%s,%s\" % (a,b,c)\n\nfor a,b in l: print \"%s,%s\" % (a[0],b)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; print k\n[['1', '7', 'U1'], ['1.5', '8', 'U1'], ['2', '5.5', 'U1']]\n&gt;&gt;&gt; for a, b, c in k:\n...     print '%s,%s,%s' % (a, b, c)\n...\n1,7,U1\n1.5,8,U1\n2,5.5,U1\n</code>\n</pre>\n", "senID": 0}, {"text": ["Now, you try!", "(for the second one)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I'm going to venture a guess as to what you actually mean in terms of syntax"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For the first one:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n k=[['1','7', 'U1'],\n ['1.5', '8', 'U1'],\n ['2', '5.5', 'U1']]\n\nfor l in k:\n    print ', '.join(l)\n</code>\n</pre>\n", "senID": 2}, {"text": ["For the second one:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for l in k:\n    print l[0][0], l[1]\n</code>\n</pre>\n", "senID": 4}, {"text": ["Hope this helps"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"code": "<pre>\n<code>\n for a in k: print \",\".join (a)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Here is a single solution that will work for both 1 and 2:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "2", "childNum": 0, "tag": "strong", "childList": []}]}, {"code": "<pre>\n<code>\n k = [['1', '7', 'U1'], ['1.5', '8', 'U1'], ['2', '5.5', 'U1']]\nl = [[[4.2423154199999997], 'U1'], [[3.4142481899999999], 'U1'], [[2.17214734], 'U1']]\n\nmake_string = lambda x: \",\".join(map(make_string, x)) if isinstance(x, list) else str(x)\n\nprint \"\\n\".join(map(make_string, k))\nprint \"\\n\".join(map(make_string, l))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Using map:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n k = [['1','7', 'U1'], ['1.5', '8', 'U1'], ['2', '5.5', 'U1']]\n\nmap(','.join, k) # returns ['1,7,U1', '1.5,8,U1', '2,5.5,U1']\n</code>\n</pre>\n", "senID": 1}]]