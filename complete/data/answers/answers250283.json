[[{"text": ["You could also check  out paramiko.", "There's no scp module (yet), but it fully supports sftp."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "paramiko", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.lag.net/paramiko/"}]}, {"text": ["[EDIT]\nSorry, missed the line where you mentioned paramiko.", "The following module is simply an implementation of the scp protocol for paramiko.", "If you don't want to use paramiko or conch (the only ssh implementations I know of for python), you could rework this to run over a regular ssh session using pipes."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["scp.py for paramiko"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "scp.py for paramiko", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/jbardin/scp.py"}]}], [{"text": ["You might be interested in trying Pexpect (SourceForge project).", "This would allow you to deal with interactive prompts for your password."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Pexpect", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.noah.org/wiki/Pexpect"}, {"text": "SourceForge project", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pexpect/"}]}, {"text": ["Here's a snip of example usage (for ftp) from the main website:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n# This connects to the openbsd ftp site and\n   # downloads the recursive directory listing.\n   import pexpect\n   child = pexpect.spawn ('ftp ftp.openbsd.org')\n   child.expect ('Name .*: ')\n   child.sendline ('anonymous')\n   child.expect ('Password:')\n   child.sendline ('noah@example.com')\n   child.expect ('ftp> ')\n   child.sendline ('cd pub')\n   child.expect('ftp> ')\n   child.sendline ('get ls-lR.gz')\n   child.expect('ftp> ')\n   child.sendline ('bye')\n</pre>\n", "senID": 2}], [{"text": ["Try this module https://code.launchpad.net/~jbardin/paramiko/paramiko_scp, It's very easy to use.", "See the following Example"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "https://code.launchpad.net/~jbardin/paramiko/paramiko_scp", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://code.launchpad.net/~jbardin/paramiko/paramiko_scp"}]}, {"code": "<pre>\n<code>\n def createSSHClient(server, port, user, password):\n    client = paramiko.SSHClient()\n    client.load_system_host_keys()\n    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    client.connect(server, port, user, password)\n    return client\n\nssh = createSSHClient(server, port, user, password)\nscp = SCPClient(ssh.get_transport())\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then call scp.get() or scp.put() to do scp operations"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["if you install putty on win32 you get an pscp (putty scp)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["so you can use the os.system hack on win32 too."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(and you can use the putty-agent for key-managment)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "hr", "senID": 3}, {"text": ["sorry it is only a hack \n(but you can wrap it in a python class)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Hmmm, perhaps another option would be to use something like sshfs (there an sshfs for Mac too).", "Once your router is mounted you can just copy the files outright.", "I'm not sure if that works for your particular application but it's a nice solution to keep handy."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "sshfs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://fuse.sourceforge.net/sshfs.html"}, {"text": "sshfs", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/macfuse/wiki/MACFUSE_FS_SSHFS"}]}], [{"text": ["Have a look at fabric."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "fabric", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.fabfile.org/en/1.3.2/index.html"}]}], [{"text": ["I don't think there's any one module that you can easily download to implement scp, however you might find this helpful:  http://www.ibm.com/developerworks/linux/library/l-twist4.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.ibm.com/developerworks/linux/library/l-twist4.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.ibm.com/developerworks/linux/library/l-twist4.html"}]}]]