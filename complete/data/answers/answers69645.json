[[{"text": ["This works without having to use scrot or ImageMagick."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import gtk.gdk\n\nw = gtk.gdk.get_default_root_window()\nsz = w.get_size()\nprint \"The size of the window is %d x %d\" % sz\npb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,False,8,sz[0],sz[1])\npb = pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1])\nif (pb != None):\n    pb.save(\"screenshot.png\",\"png\")\n    print \"Screenshot saved to screenshot.png.\"\nelse:\n    print \"Unable to get the screenshot.\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["Borrowed from http://ubuntuforums.org/showpost.php?p=2681009&amp;postcount=5"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://ubuntuforums.org/showpost.php?p=2681009&amp;postcount=5", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://ubuntuforums.org/showpost.php?p=2681009&postcount=5"}]}], [{"text": ["This one works on X11, and perhaps on Windows too (someone, please check).", "Needs PyQt4:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PyQt4", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.riverbankcomputing.co.uk/software/pyqt/intro"}]}, {"code": "<pre>\n<code>\n import sys\nfrom PyQt4.QtGui import QPixmap, QApplication\napp = QApplication(sys.argv)\nQPixmap.grabWindow(QApplication.desktop().winId()).save('test.png', 'png')\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n import ImageGrab\nimg = ImageGrab.grab()\nimg.save('test.jpg','JPEG')\n</code>\n</pre>\n", "senID": 0}, {"text": ["this requires Python Imaging Library"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Cross platform solution using wxPython:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "wxPython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wxpython.org"}]}, {"code": "<pre>\n<code>\n import wx\nwx.App()  # Need to create an App instance before doing anything\nscreen = wx.ScreenDC()\nsize = screen.GetSize()\nbmp = wx.EmptyBitmap(size[0], size[1])\nmem = wx.MemoryDC(bmp)\nmem.Blit(0, 0, size[0], size[1], screen, 0, 0)\ndel mem  # Release bitmap\nbmp.SaveFile('screenshot.png', wx.BITMAP_TYPE_PNG)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Compile all answers in one class.", "Outputs PIL image."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n# encoding: utf-8\n\"\"\"\nscreengrab.py\n\nCreated by Alex Snet on 2011-10-10.\nCopyright (c) 2011 CodeTeam. All rights reserved.\n\"\"\"\n\nimport sys\nimport os\n\nimport Image\n\n\nclass screengrab:\n    def __init__(self):\n        try:\n            import gtk\n        except ImportError:\n            pass\n        else:\n            self.screen = self.getScreenByGtk\n\n        try:\n            import PyQt4\n        except ImportError:\n            pass\n        else:\n            self.screen = self.getScreenByQt\n\n        try:\n            import wx\n        except ImportError:\n            pass\n        else:\n            self.screen = self.getScreenByWx\n\n        try:\n            import ImageGrab\n        except ImportError:\n            pass\n        else:\n            self.screen = self.getScreenByPIL\n\n\n    def getScreenByGtk(self):\n        import gtk.gdk      \n        w = gtk.gdk.get_default_root_window()\n        sz = w.get_size()\n        pb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB,False,8,sz[0],sz[1])\n        pb = pb.get_from_drawable(w,w.get_colormap(),0,0,0,0,sz[0],sz[1])\n        if (pb != None):\n            return False\n        else:\n            width,height = pb.get_width(),pb.get_height()\n            return Image.fromstring(\"RGB\",(width,height),pb.get_pixels() )\n\n    def getScreenByQt(self):\n        from PyQt4.QtGui import QPixmap, QApplication\n        from PyQt4.Qt import QBuffer, QIODevice\n        import StringIO\n        app = QApplication(sys.argv)\n        buffer = QBuffer()\n        buffer.open(QIODevice.ReadWrite)\n        QPixmap.grabWindow(QApplication.desktop().winId()).save(buffer, 'png')\n        strio = StringIO.StringIO()\n        strio.write(buffer.data())\n        buffer.close()\n        del app\n        strio.seek(0)\n        return Image.open(strio)\n\n    def getScreenByPIL(self):\n        import ImageGrab\n        img = ImageGrab.grab()\n        return img\n\n    def getScreenByWx(self):\n        import wx\n        wx.App()  # Need to create an App instance before doing anything\n        screen = wx.ScreenDC()\n        size = screen.GetSize()\n        bmp = wx.EmptyBitmap(size[0], size[1])\n        mem = wx.MemoryDC(bmp)\n        mem.Blit(0, 0, size[0], size[1], screen, 0, 0)\n        del mem  # Release bitmap\n        #bmp.SaveFile('screenshot.png', wx.BITMAP_TYPE_PNG)\n        myWxImage = wx.ImageFromBitmap( myBitmap )\n        PilImage = Image.new( 'RGB', (myWxImage.GetWidth(), myWxImage.GetHeight()) )\n        PilImage.fromstring( myWxImage.GetData() )\n        return PilImage\n\nif __name__ == '__main__':\n    s = screengrab()\n    screen = s.screen()\n    screen.show()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["A short search turned up gtkShots looks like it might help you, as it's a GPLed python screenshot program, so should have what you need in it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "gtkShots", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://linux.softpedia.com/get/System/Monitoring/gtkShots-10809.shtml"}]}], [{"text": ["I have a wrapper project (pyscreenshot) for scrot, imagemagick, pyqt, wx and pygtk.", "If you have one of them, you can use it.", "All solutions are included from this discussion."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyscreenshot", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/ponty/pyscreenshot"}]}, {"text": ["Install:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n easy_install pyscreenshot\n</code>\n</pre>\n", "senID": 2}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import pyscreenshot as ImageGrab\n\n# fullscreen\nim=ImageGrab.grab()\nim.show()\n\n# part of the screen\nim=ImageGrab.grab(bbox=(10,10,500,500))\nim.show()\n\n# to file\nImageGrab.grab_to_file('im.png')\n</code>\n</pre>\n", "senID": 4}], [{"text": ["First page on google search for python screen shot.", "It assumes you have the graphics module available of of course."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python screen shot", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://snippets.dzone.com/posts/show/398"}]}, {"text": ["/Allan"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]