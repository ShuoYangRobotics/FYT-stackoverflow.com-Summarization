[[{"text": ["You can use a generator expression:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "generator expression", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0289/"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; dicts = [\n...     { \"name\": \"Tom\", \"age\": 10 },\n...     { \"name\": \"Mark\", \"age\": 5 },\n...     { \"name\": \"Pam\", \"age\": 7 }\n... ]\n\n&gt;&gt;&gt; (item for item in dicts if item[\"name\"] == \"Pam\").next()\n{'age': 7, 'name': 'Pam'}\n</code>\n</pre>\n", "senID": 1}], [{"text": ["My first thought would be that you might want to consider creating a dictionary of these dictionaries ... if, for example, you were going to be searching it more a than small number of times."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["However that might be a premature optimization.", "What would be wrong with:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def get_records(key, store=dict()):\n    '''Return a list of all records containing name==key from our store\n    '''\n    assert key is not None\n    return [d for d in store if d['name']==key]\n</code>\n</pre>\n", "senID": 2}], [{"code": "<pre>\n<code>\n people = [\n{name: \"Tom\", age: 10},\n{name: \"Mark\", age: 5},\n{name: \"Pam\", age: 7}\n]\n\ndef search(name):\n    for p in people:\n        if p['name'] == name:\n            return p\n\nsearch(\"Pam\")\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You can use a list comprehension:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "list comprehension", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/datastructures.html#list-comprehensions"}]}, {"code": "<pre>\n<code>\n def search(name, people):\n    return [element for element in people if element['name'] == name]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n names = [{'name':'Tom', 'age': 10}, {'name': 'Mark', 'age': 5}, {'name': 'Pam', 'age': 7}]\nresultlist = [d    for d in names     if d['name'] == 'Pam']\nfirst_result = resultlist[0]\n</code>\n</pre>\n", "senID": 0}, {"text": ["This is one way..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You have to go through all elements of the list.", "There is not a shortcut!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Unless somewhere else you keep a dictionary of the names pointing to the items of the list, but then you have to take care of the consequences of popping an element from your list. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n dicts=[\n{\"name\": \"Tom\", \"age\": 10},\n{\"name\": \"Mark\", \"age\": 5},\n{\"name\": \"Pam\", \"age\": 7}\n]\n\nfrom collections import defaultdict\ndicts_by_name=defaultdict(list)\nfor d in dicts:\n    dicts_by_name[d['name']]=d\n\nprint dicts_by_name['Tom']\n\n#output\n#&gt;&gt;&gt;\n#{'age': 10, 'name': 'Tom'}\n</code>\n</pre>\n", "senID": 0}]]