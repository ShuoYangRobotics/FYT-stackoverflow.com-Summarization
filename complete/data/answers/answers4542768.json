[[{"text": ["Try random.sample:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "random.sample", "tag": "a", "pos": 0, "childList": [{"text": "random.sample", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/random.html#random.sample"}, {"text": "random.sample", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; sides = 6\n&gt;&gt;&gt; dice = random.sample(range(1, sides + 1), 3)\n[3, 6, 1]\n</code>\n</pre>\n", "senID": 1}, {"text": ["I'd advise that you reconsider whether it is a good idea to have variables called die1, die2, die3."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "die1", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "die2", "childNum": 0, "tag": "code", "childList": []}, {"text": "die3", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["It is usually better to use a list as in the above example."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["This will work:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a = range(1,7)\nrandom.shuffle(a)\na[:3]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["A simplistic approach would be"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import random\ndie1, die2, die3 = random.sample([1,2,3,4,5,6], 3)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Random Documentation"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Random Documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/random.html"}]}], [{"text": ["This isn't the usual behaviour of three dice, but you could do:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import random\n[die1, die2, die3] = random.sample(xrange(1, 7), 3)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Here's the documentation on random.sample() and xrange() for your reference."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "random.sample()", "tag": "a", "pos": 0, "childList": [{"text": "random.sample()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/random.html#random.sample"}, {"text": "random.sample()", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://docs.python.org/library/functions.html?highlight=range#xrange", "text": "xrange()", "childNum": 1, "tag": "a", "childList": [{"text": "xrange()", "tag": "code"}]}, {"text": "xrange()", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Thanks, I am using johnsyweb's advice.", "I will try them all eventually to see which one I like the best."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If you are going to roll multiple times, is better to store the range(1,7) somewhere and use the sample function instead of the shuffle one (obvously because 'shuffle' shuffles all the range)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["take a look on this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import random,time\nN=80000\na = range(1,7)\nt= time.clock()\nfor i in xrange(N):\n    random.shuffle(a)\n    a[:3]\nt= time.clock()-t\nprint t\n\nt= time.clock()\nfor i in xrange(N):\n    dice = random.sample(range(1, 6 + 1), 3)\nt= time.clock()-t\nprint t\n\nt= time.clock()\nfor i in xrange(N):\n    dice = random.sample(a, 3)\nt= time.clock()-t\nprint t\n</code>\n</pre>\n", "senID": 2}]]