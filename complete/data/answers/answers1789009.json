[[{"text": ["This regex finds question marks following a word character, and followed by either whitespace or the end of the string/line.", "Not perfect, but should catch most cases..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \\w\\?[$\\s]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Edit (lack of caffeine strikes...):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["That should have been:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n \\w\\?(\\s|$)\n</code>\n</pre>\n", "senID": 4}, {"text": ["In the original, $ is interpreted as a literal character.", "(Thanks Gumbo)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["If question mark is always there, you could check like"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if question.strip().endswith(\"?\") and \"://\" not in question:\n    # do something ?\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you really want to parse real sentence, you may need nltk, I am not sure for that case."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["p.s this is just an sample if the text is fixed, nobody can parse real English grammar with regex."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Essentially what others say is correct.", "There should be no whitespace before the ?.", "If the question is entered by a user, things get more ambiguous however."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "?", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["In that case a proper parser using a context free grammar may yield better results.", "Even with questions not having a question mark at the end.", "But it may not recognize all questions.", "Covering all possible structure variations, inflections and whatnot is not straight-forward."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But, if you are certain that the questions always end with a question mark, you could do something as simple as"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "certain", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "always", "childNum": 0, "tag": "em", "childList": []}]}, {"code": "<pre>\n<code>\n if question_text.strip().endswith(\"?\"):\n    print `question_text`, \"is a question\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["Or:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import re\np = re.compile( r\"\\w+\\?\\s*\" )\nif p.search( question_text ):\n    print `question_text`, \"contains a question\"\n</code>\n</pre>\n", "senID": 5}, {"text": ["Not tested, but should work for most cases."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["You can for example check if the question mark is immediately followed by a non-space, non-line break character.", "But I guess that a more safe way would be to strip any possible URL from the string before searching the question mark on it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The question mark will not have white space either side or a line break/end-of-string after it, if it is in a url"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["A probably not very robust approach that you might be able to get some traction with would be to look for \"question words\" in strings that end with question marks.", "In English, most question sentences or clauses (i.e.", "following a comma) start with \"who\", \"what\", \"where\", \"when\", \"how\", \"why\", \"can\", \"may\", \"will\", \"won't, \"does\", \"doesn't\", etc.", "You could probably build up a pretty good heuristic this way that might work better than a regex (or could be incorporated into one or more regexes)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]