[[{"text": ["If you want to use capitals only"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;line = ' What AboutMe '\n&gt;&gt;&gt;filter(str.isupper, line)\n'WAM'\n</code>\n</pre>\n", "senID": 1}, {"text": ["What about words that may not be Leading Caps."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;line = ' What is Up '\n&gt;&gt;&gt;''.join(w[0].upper() for w in line.split())\n'WIU'\n</code>\n</pre>\n", "senID": 3}, {"text": ["What about only the Caps words."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;line = ' GNU is Not Unix '\n&gt;&gt;&gt;''.join(w[0] for w in line.split() if w[0].isupper())\n'GNU'\n</code>\n</pre>\n", "senID": 5}], [{"text": ["Try"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print \"\".join(e[0] for e in x.split())\n</code>\n</pre>\n", "senID": 1}, {"text": ["Your loop actually loops over all characters in the string x.", "If you would like to loop over the words, you can use x.split()."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "x", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "x.split()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Without re:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "re", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; names = 'Vincent Vega Jules Winnfield'\n&gt;&gt;&gt; ''.join(x[0] for x in names.split())\n'VVJW'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Now for something a little bit different..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n words = \"There ain't no such thing as a free lunch.\"\nacronym = ''.join(word[0] for word in words.upper().split())\nprint acronym\n# TANSTAAFL\n</code>\n</pre>\n", "senID": 1}, {"text": ["(TANSTAAFL is a fairly well-know one, BTW)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "TANSTAAFL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/The_Moon_is_a_Harsh_Mistress#Book_3%3a_TANSTAAFL.21"}]}], [{"code": "<pre>\n<code>\n s = 'First Second Third'\nx = s.split(' ')\nfor e in x:\n    print e[0]\n</code>\n</pre>\n", "senID": 0}, {"text": ["should do the trick."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Also you could use "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["re.split('\\W') "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "re.split('\\W')", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["to split the line/text on non-word characters.", "This might be a little bit more robust. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you want to do things the way that is grammatically correct (regardless of locale), use title(), then filter():"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "title()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "filter()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n acronym = filter(str.isupper, my_string.title())\n</code>\n</pre>\n", "senID": 1}, {"text": ["title() is pretty awesome; it makes a string titlecased and is correct according to locale."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "title()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]