[[{"text": ["Actually, pywin32 and ctypes seem to be an overkill for this simple task.", "Tkinter is a cross-platform GUI framework, which ships and installs with Python (by default) and has clipboard accessing methods among with other cool stuff."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "pywin32", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "ctypes", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Tkinter", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["If all you need is to put some text to system clipboard, this will do it:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from Tkinter import Tk\nr = Tk()\nr.withdraw()\nr.clipboard_clear()\nr.clipboard_append('i can has clipboardz?')\nr.destroy()\n</code>\n</pre>\n", "senID": 2}, {"text": ["And that's all, no need to mess around with platform-specific third-party libraries."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Looks like you need to add win32clipboard to your site-packages.", "It's part of the pywin32 package"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pywin32 package", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pywin32/"}]}], [{"text": ["You can also use ctypes to tap into the windows API and avoid the massive pywin32 package.", "This is what I use, (excuse the poor style, but the idea is there.", ") "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import ctypes\n\n#Get required functions, strcpy..\nstrcpy = ctypes.cdll.msvcrt.strcpy\nocb = ctypes.windll.user32.OpenClipboard    #Basic Clipboard functions\necb = ctypes.windll.user32.EmptyClipboard\ngcd = ctypes.windll.user32.GetClipboardData\nscd = ctypes.windll.user32.SetClipboardData\nccb = ctypes.windll.user32.CloseClipboard\nga = ctypes.windll.kernel32.GlobalAlloc    # Global Memory allocation\ngl = ctypes.windll.kernel32.GlobalLock     # Global Memory Locking\ngul = ctypes.windll.kernel32.GlobalUnlock\nGMEM_DDESHARE = 0x2000 \n\ndef Get( ):\n  ocb(None) # Open Clip, Default task\n\n  pcontents = gcd(1) # 1 means CF_TEXT.. too lazy to get the token thingy ... \n\n  data = ctypes.c_char_p(pcontents).value\n\n  #gul(pcontents) ?\n  ccb()\n\n  return data\n\ndef Paste( data ):\n  ocb(None) # Open Clip, Default task\n\n  ecb()\n\n  hCd = ga( GMEM_DDESHARE, len( bytes(data,\"ascii\") )+1 )\n\n  pchData = gl(hCd)\n\n  strcpy(ctypes.c_char_p(pchData),bytes(data,\"ascii\"))\n\n  gul(hCd)\n\n  scd(1,hCd)\n\n  ccb()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Do you have the extensions installed?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "the extensions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pywin32/"}]}], [{"text": ["What Options do I have with Python 2.5?", "I want to put stuff into the clipboard from Maya 2009 on Win7."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Python 2.5", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "Maya 2009 on Win7", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["The Tk thing fails on import: Module was not found:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Tk thing", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n File \"C:\\Program Files (x86)\\Autodesk\\Maya2009\\bin\\python25.zip\\lib-tk\\Tkinter.py\", line 38, in &lt;module&gt;\nImportError: DLL load failed: Das angegebene Modul wurde nicht gefunden. #\n</code>\n</pre>\n", "senID": 2}, {"text": ["In the py-file it reads:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import _tkinter # If this fails your Python may not be configured for Tk\n</code>\n</pre>\n", "senID": 4}, {"text": ["ctypes works up to the point where bytes() is used.", "Its probably not in 2.5 right?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "ctypes", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Installing modules is not a good option I'd want this to work on the stations of my co-workers to without having them to install something."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["pardon me.", "No I don't have them installed and I'd actually need it without anything extra installed :/"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I use a little exe-compiled Autohotkey helper script now.", "Its maybe not elegant but SO easy that way!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]