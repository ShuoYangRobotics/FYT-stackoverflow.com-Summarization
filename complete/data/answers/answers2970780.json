[[{"text": ["A slightly faster approach than looping on xrange(N) is:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "xrange(N)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import itertools\n\nfor _ in itertools.repeat(None, N):\n    do_something()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use the _ variable, as I learned when I asked this question"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1885868/pythonic-way-to-read-a-set-number-of-lines-from-a-file"}]}], [{"text": ["since function is first-class citizen, you can write small wrapper (from Alex answers)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def repeat(f, N):\n    for _ in itertools.repeat(None, N): f()\n</code>\n</pre>\n", "senID": 1}, {"text": ["then you can pass function as argument."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I just use for _ in range(n), it's straight to the point.", "It's going to generate the entire list for huge numbers in Python 2, but if you're using Python 3 it's not a problem."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "for _ in range(n)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Assume that you've defined do_something as a function, and you'd like to perform it N times.", "Maybe you can try the following:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "do_something", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "N", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n todos = [do_something] * N  \nfor doit in todos:  \n    doit()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The _ is the same thing as x however it's just a python idiom that's used to indicate an identifier that you don't intend to make use of at all.", "In python these identifiers don't takes memory or allocate space like variables do in other languages.", "It's easy to forget that.", "They're just names that point to objects, in this case an integer on each iteration."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["What about a simple while loop?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n while times &gt; 0:\n    do_something()\n    times -= 1\n</code>\n</pre>\n", "senID": 1}, {"text": ["You already have the variable; why not use it?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]