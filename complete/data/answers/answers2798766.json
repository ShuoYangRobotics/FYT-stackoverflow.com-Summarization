[[{"code": "<pre>\n<code>\n codeList = [\"||:::\", \":::||\", \"::|:|\", \"::||:\", \":|::|\",\n    \":|:|:\", \":||::\", \"|:::|\", \"|::|:\", \"|:|::\" ]\nbarcode = \"\".join(codeList[int(digit)] for digit in str(zipcode))\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Perhaps use a dictionary:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n barcode = {'0':\"||:::\",\n           '1':\":::||\",\n           '2':\"::|:|\",\n           '3':\"::||:\",\n           '4':\":|::|\",\n           '5':\":|:|:\",\n           '6':\":||::\",\n           '7':\"|:::|\",\n           '8':\"|::|:\",\n           '9':\"|:|::\",\n           }\n\ndef encodeFive(zipcode):\n    return ''.join(barcode[n] for n in str(zipcode))\n\nprint(encodeFive(72353))\n# |:::|::|:|::||::|:|:::||:\n</code>\n</pre>\n", "senID": 1}, {"text": ["PS.", "It is better not to name a variable zip, since doing so overrides the builtin functionzip.", "And similarly, it is better to avoid naming a variable code, since codeis a module in the standard library."], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": "zip", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "builtin functionzip.", "tag": "a", "pos": -1, "childList": [{"text": "zip", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html#zip"}, {"text": "zip", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "code", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"href": "http://docs.python.org/library/code.html#module-code", "text": "codeis a module", "childNum": 1, "tag": "a", "childList": [{"text": "code", "tag": "code"}]}, {"text": "code", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["You're just adding i (the character in digits) to the string where I think you want to be adding codeList[int(i)]. "], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "digits", "childNum": 0, "tag": "code", "childList": []}, {"text": "codeList[int(i)]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["The code would probably be much simpler by just using a dict for lookups."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I find it easier to use split() to create lists of strings:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n codes = \"||::: :::|| ::|:| ::||: :|::| :|:|: :||:: |:::| |::|: |:|::\".split()\n\ndef zipencode(numstr): \n    return ''.join(codes[int(x)] for x in str(numstr))\n\nprint zipencode(\"32345\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I don't know what language you are usingm so I made an example in C#:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n int zip = 72353;\n\nstring[] codeList = {\n  \"||:::\", \":::||\", \"::|:|\", \"::||:\", \":|::|\",\n  \":|:|:\", \":||::\", \"|:::|\", \"|::|:\", \"|:|::\"\n};\nstring code = String.Empty;\nwhile (zip &gt; 0) {\n  code = codeList[zip % 10] + code;\n  zip /= 10;\n}\nreturn code;\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note: Instead of converting the zip code to a string, and the convert each character back to a number, I calculated the digits numerically."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Just for fun, here's a one-liner:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n return String.Concat(zip.ToString().Select(c =&gt; \"||::::::||::|:|::||::|::|:|:|::||::|:::||::|:|:|::\".Substring(((c-'0') % 10) * 5, 5)).ToArray());\n</code>\n</pre>\n", "senID": 4}], [{"text": ["This is made in python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n number = [\"||:::\",\n    \":::||\",\n    \"::|:|\",\n    \"::||:\",\n    \":|::|\",\n    \":|:|:\",\n    \":||::\",\n    \"|:::|\",\n    \"|::|:\",\n    \"|:|::\"\n    ]\ndef encode(num):\n    return ''.join(map(lambda x: number[int(x)], str(num)))\n\nprint encode(32345)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["It appears you're trying to generate a \"postnet\" barcode.", "Note that the five-digit ZIP postnet barcodes were obsoleted by ZIP+4 postnet barcodes, which were obsoleted by ZIP+4+2 delivery point postnet barcodes, all of which are supposed to include a checksum digit and leading and ending framing bars.", "In any case, all of those forms are being obsoleted by the new \"intelligent mail\" 4-state barcodes, which require a lot of computational code to generate and no longer rely on straight digit-to-bars mappings.", "Search USPS.COM for more details."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]