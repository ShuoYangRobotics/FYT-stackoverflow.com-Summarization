[[{"text": ["Assuming bidsrc = string, you need to escape both the $ and the () since they have a special meaning to the regex compiler.", "You'll also want to use .", "*?, or better [\\d.", "]+, to match the actual amount."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "bidsrc = string", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "$", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": ".*?", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "[\\d.]+", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n r\"\"\"value=\"full_review\"&gt;Detailed review \\(Up to \\$([\\d.]+)\\)&lt;/option&gt;\"\"\"\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Pretty straightforward."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import re\n&gt;&gt;&gt; s = \"Detailed review (Up to $20.00)\"\n&gt;&gt;&gt; re.findall(\"(\\d+)\\.\",s)\n['20']\n</code>\n</pre>\n", "senID": 1}, {"text": ["I'm sure you've already checked, but the python docs on the subject is very helpful.", "Also look into the special characters that python uses, like $, (, and )."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "subject", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/re.html"}, {"text": "$", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "(", "childNum": 0, "tag": "code", "childList": []}, {"text": ")", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["To explain in more detail, in the regex above, (\\d+) is the capturing group which captures 1 or more digits before a period (here, escaped as \\.).", "that's why it matches 20 and not 00. "], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "(\\d+)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "\\.", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "20", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "00", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Remember that '$' has a special meaning in regular expressions, so as '.", "', '(', ')', '*' and many others.", "You have to escape (eg.", "'\\$') them if you don't want them to be processed specially"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Try this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\nstring = '&lt;option value=\"full_review\"&gt;Detailed review (Up to $20.00)&lt;/option&gt;'\nfinded = re.findall(\"\"\"value=\"full_review\"&gt;Detailed review \\(Up to \\$([\\d.].*)\\)&lt;/option&gt;\"\"\",string)\nprint finded\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Since (, ) and $ are special characters in regex paterns, you need to escape them with \\ in your pattern as following:"], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "(", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ")", "childNum": 0, "tag": "code", "childList": []}, {"text": "$", "childNum": 0, "tag": "code", "childList": []}, {"text": "\\", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n detailint = re.findall(\"\"\"value=\"full_review\"&gt;Detailed review \\(Up to \\$(.*)\\)&lt;/option&gt;\"\"\", bidsrc)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Another thing is using .", "* is not the best choice, since it will capture any character.", "It's much better to use [\\d]+ instead, which will capture at least one number (* is 0 or more, + is 1 or more; \\d means any numeric character, and [] is character set):"], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": ".*", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "[\\d]+", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "*", "childNum": 0, "tag": "code", "childList": []}, {"text": "+", "childNum": 0, "tag": "code", "childList": []}, {"text": "\\d", "childNum": 0, "tag": "code", "childList": []}, {"text": "[]", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n detailint = re.findall(\"\"\"value=\"full_review\"&gt;Detailed review \\(Up to \\$([\\d]+)\\)&lt;/option&gt;\"\"\", bidsrc)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Read more on python re library on: http://docs.python.org/library/re.html"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://docs.python.org/library/re.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/re.html"}]}], [{"code": "<pre>\n<code>\n import re\ns = \"Detailed review (Up to $20.00)\"\n re.findall(\"\\$\\d+\\.\\d+\",s)[0][1:]\n</code>\n</pre>\n", "senID": 0}, {"text": ["Gives you 20.00 (includes decimal as well)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]