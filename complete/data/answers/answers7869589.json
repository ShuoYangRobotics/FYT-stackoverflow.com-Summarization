[[{"text": ["I would take PyQT with QGraphicsView or QGraphicsScene.", "Sadly there isn\u00b4t a Clanlib python binding like for perl and ruby.", "That would be, probably, the ideal choice."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "PyQT", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.riverbankcomputing.co.uk/news"}, {"text": "QGraphicsView or QGraphicsScene", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.rkblog.rk.edu.pl/w/p/qgraphicsview-and-qgraphicsscene/"}, {"text": "Clanlib", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://clanlib.org/wiki/Main_Page"}, {"text": "perl", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/clanperl/"}, {"text": "ruby", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://clanruby.sourceforge.net/"}]}], [{"text": ["You can use the popular Pyglet game library along with wxPython, the cross platform GUI library.", "An example of how to do this:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Pyglet", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.pyglet.org"}, {"text": "wxPython", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.wxpython.org"}]}, {"text": ["http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py"}]}, {"text": ["Additionally, if you want to use pure Pyglet, you can use Kytten, a pure Python GUI library built on the top of Pyglet."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Kytten", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/kytten/"}]}], [{"text": ["Not sure if it fits your use, but PGU is fit for pygame because it lets you use your own render loop, and tie into it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PGU", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pygame.org/project/108/"}]}], [{"text": ["http://code.google.com/p/librpg/ maybe what you need"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.google.com/p/librpg/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/librpg/"}]}], [{"text": ["tkinter is one choice.", "It has a canvas widget that is very easy to use -- you can draw objects (lines, circles, etc) as well as embed images (for tiles, for example).", "And of course it comes with a standard collection of widgets (buttons, comboboxes, listboxes, menus, etc) that can either be embedded in a canvas or used in the more traditional sense. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Take a look at librocket.", "It supports python scripting as well.."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "librocket", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://librocket.com/"}]}]]