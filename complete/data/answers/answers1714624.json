[[{"text": ["Java serialisation is a representation of the class/data structures and tightly tied to the virtual machine.", "Consequently that's going to be difficult to translate to the Python world."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Java binary serialization is really designed to be used with Java.", "To do it in Python you'd have to have all the relevant Java classes available for inspection, and create Python objects appropriately - it would be pretty hideous and fragile."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You're better off using a cross-platform serialization format such as Thrift, Protocol Buffers, JSON or XML.", "If you can't change which serialization format is used in the Java code, I'd suggest writing new Java code which deserializes from the binary format and then reserializes to a cross-platform format."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You don't say whether you have control over the serialization of the data or not, but if you do, JSON seems to be a nice format which is cross platform and has a good balance between human readable and machine readable.", "For java and distributed with python."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "JSON", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://json.org/"}, {"text": "For java", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://json.org/java/"}, {"href": "http://docs.python.org/library/json.html", "text": "distributed with python", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["If you are using Java classes, then I don't even know what it would mean to deserialize a Java class in a Python environment.", "If you are only using simple primitives (ints, floats, strings), then it probably wouldn't be too hard to build a Python library that could deserialize the Java format."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["But as others have said, there are better cross-platform solutions."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If I were you, I'd read the data with Jython, and either reserialize it with pickle ( so that you can read it from Python ), or in a language neutral format, like XML."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Jython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jython.org/"}, {"text": "pickle", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["An other option is to use Perspective Broker from Twisted.", "Their's a Java implementation.", "If you just need serialisation/deserialisation you can use only Banana (protocol) or Jelly (persistence) directly.", "Jelly is a S-expression-based persistence of objects."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "Perspective Broker", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/projects/core/documentation/howto/pb-intro.html"}, {"text": "Twisted", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/trac/"}, {"text": "Java implementation", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://itamarst.org/software/twistedjava/"}, {"text": "Banana", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/documents/current/api/twisted.spread.banana.html"}, {"text": "Jelly", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/documents/current/api/twisted.spread.jelly.html"}]}]]