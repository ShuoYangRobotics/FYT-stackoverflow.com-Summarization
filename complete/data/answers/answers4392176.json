[[{"text": ["You are being misled by Python's output.", "Try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = \"test\\\\ing\"\n&gt;&gt;&gt; print(a)\ntest\\ing\n&gt;&gt;&gt; print(repr(a))\n'test\\\\ing'\n&gt;&gt;&gt; a\n'test\\\\ing'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can do a couple of things.", "The first is to escape the backslash with another backslash, so:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a = 'test\\\\ing'\n</code>\n</pre>\n", "senID": 1}, {"text": ["You can also declare it as a Raw String like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a = r'test\\ing'\n</code>\n</pre>\n", "senID": 3}, {"text": ["And you should end up with the back slash."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["If you want double slashes because the shell will escape \\ again, use a raw string:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n b = a[:3] + r'\\\\' + a[3:]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["'tes\\\\ting' is correct, but you are viewing the repr output for the string, which will always show escape characters."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "'tes\\\\ting'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "repr", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; print 'tes\\\\ting'\ntes\\ting\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The second example is correct.", "There are two slashes because you are printing the Python representation of the string."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python representation", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["If you want to see the actual string, call print a."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "print a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["b is fine in the second example, you see two slashes because you're printing the representation of b, so slashes are escaped in it too."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; b\n'tes\\\\ting'\n&gt;&gt;&gt; print b\ntes\\ting\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Python's quoting the backslash again when it shows you the representation of the string (in such a way that you could paste it in and get the string with an escaped backslash)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you print the string, you'll see there's only one."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]