[[{"text": ["You can use is:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "is", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n if SQLParameters[i] is True:\n    SQLParameters[i] = 'T'                \nelif SQLParameters[i] is False:\n    SQLParameters[i] = 'F'\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n if isinstance(SQLParameters[i], bool):\n    SQLParameters[i] = 'T' if SQLParameters[i] else 'F'\n</code>\n</pre>\n", "senID": 0}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if isinstance(SQLParameters[i], bool):\n    SQLParameters[i] = 'FT'[SQLParameters[i]]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Try using"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if SQLParameters[i] is True:\n     SQLParameters[i] = 'T'                \nelif SQLParameters[i] is False:\n     SQLParameters[i] = 'F'\n</code>\n</pre>\n", "senID": 1}, {"text": ["\"is\" captures identities.", "http://docs.python.org/reference/expressions.html"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/reference/expressions.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html"}]}, {"text": ["True Pythonic (weak datatyping and abbreviated code) would be\nSQLParameters[i]  = 'T' if SQLParameters[i] else 'F'"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["There is no need to explicitly test against the identity or value of SQLParameters[i] being True or False.", "In Python anything that is unset (such as empty sequences), None, 0, or False evaluates to False; everything else evaluates to True."], "childNum": 8, "tag": "p", "senID": 0, "childList": [{"text": "SQLParameters[i]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "True", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "False", "childNum": 0, "tag": "code", "childList": []}, {"text": "None", "childNum": 0, "tag": "code", "childList": []}, {"text": "0", "childNum": 0, "tag": "code", "childList": []}, {"text": "False", "childNum": 0, "tag": "code", "childList": []}, {"text": "False", "childNum": 0, "tag": "code", "childList": []}, {"text": "True", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["So with that in mind you could simply do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if SQLParameters[i]:\n    SQLParameters[i] = 'T'\nelse:\n    SQLParameters[i] = 'F'\n</code>\n</pre>\n", "senID": 2}], [{"text": ["You could check the type of the object:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n In [8]: isinstance(True, bool)\nOut[8]: True\n\nIn [9]: isinstance(1, bool)\nOut[9]: False\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I do recommend that you use 0 and 1.", "The SQLite libary does it that way.", "I would explicitly set the new value to False and then change it to true (or vice versa)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n convertedvalue = 0\n   if SQLParameters[i] is True:\n      convertedvalue = 1\nSQLParameters[i] = convertedvalue\n</code>\n</pre>\n", "senID": 1}]]