[[{"text": ["Don't throw away your code!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It's the single worst mistake you can make (on a large codebase).", "See Things You Should Never Do, Part 1."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Things You Should Never Do, Part 1", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.joelonsoftware.com/articles/fog0000000069.html"}]}, {"text": ["You've invested a lot of effort into that old code and worked out many bugs.", "Throwing it away is a classic developer mistake (and one I've done many times).", "It makes you feel \"better\", like a spring cleaning.", "But you don't need to buy a new apartment and all new furniture to outfit your house.", "You can work on one room at a time... and maybe some things just need a new paintjob.", "Hence, this is where refactoring comes in."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["For new functionality in your app, write it in C# and call it from your classic ASP.", "You'll be forced to be modular when you rewrite this new code.", "When you have time, refactor parts of your old code into C# as well, and work out the bugs as you go.", "Eventually, you'll have replaced your app with all new code."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "write it in C# and call it from your classic ASP", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.danbartels.com/articles/322.aspx"}]}, {"text": ["You could also write your own compiler.", "We wrote one for our classic ASP app a long time ago to allow us to output PHP.", "It's called Wasabi and I think it's the reason Jeff Atwood thought Joel Spolsky went off his rocker.", "Actually, maybe we should just ship it, and then you could use that.  "], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Wasabi", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.joelonsoftware.com/items/2006/09/01b.html"}]}, {"text": ["It allowed us to switch our entire codebase to .NET for the next release while only rewriting a very small portion of our source.", "It also caused a bunch of people to call us crazy, but writing a compiler is not that complicated, and it gave us a lot of flexibility."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Also, if this is an internal only app, just leave it.", "Don't rewrite it - you are the only customer and if the requirement is you need to run it as classic asp, you can meet that requirement."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Use this as an opportunity to remove unused features!", "Definitely go with the new language.", "Call it 2.0.", "It will be a lot less work to rebuild the 80% of it that you really need."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Start by wiping your brain clean of the whole application.", "Sit down with a list of its overall goals, then decide which features are needed based on which ones are used.", "Then redesign it with those features in mind, and build."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(I love to delete code."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["It works out better than you'd believe. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Recently I did a large reverse-engineering job on a hideous old collection of C code.", "Function by function I reallocated the features that were still relevant into classes, wrote unit tests for the classes, and built up what looked like a replacement application.", "It had some of the original \"logic flow\" through the classes, and some classes were poorly designed [Mostly this was because of a subset of the global variables that was too hard to tease apart."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It passed unit tests at the class level and at the overall application level.", "The legacy source was mostly used as a kind of \"specification in C\" to ferret out the really obscure business rules."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Last year, I wrote a project plan for replacing 30-year old COBOL.", "The customer was leaning toward Java.", "I prototyped the revised data model in Python using Django as part of the planning effort.", "I could demo the core transactions before I was done planning."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Note:  It was quicker to build a the model and admin interface in Django than to plan the project as a whole."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Note", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Because of the \"we need to use Java\" mentality, the resulting project will be larger and more expensive than finishing the Django demo.", "With no real value to balance that cost."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Also, I did the same basic \"prototype in Django\" for a VB desktop application that needed to become a web application.", "I built the model in Django, loaded legacy data, and was up and running in a few weeks.", "I used that working prototype to specify the rest of the conversion effort."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Note:  I had a working Django implementation (model and admin pages only) that I used to plan the rest of the effort."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Note", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["The best part about doing this kind of prototyping in Django is that you can mess around with the model, unit tests and admin pages until you get it right.", "Once the model's right, you can spend the rest of your time fiddling around with the user interface until everyone's happy."], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "right", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["Whatever you do, see if you can manage to follow a plan where you do not have to port the application all in one big bang.", "It is tempting to throw it all away and start from scratch, but if you can manage to do it gradually the mistakes you do will not cost so much and cause so much panic."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Half a year ago I took over a large web application (fortunately already in Python) which had some major architectural deficiencies (templates and code mixed, code duplication, you name it...)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["My plan is to eventually have the system respond to WSGI, but I am not there yet.", "I found the best way to do it, is in small steps.", "Over the last 6 month, code reuse has gone up and progress has accelerated. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["General principles which have worked for me:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Progress can be painstakingly slow, but should be worth it. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I would not recommend JScript as that is definitely the road less traveled.", "ASP.NET MVC is rapidly maturing, and I think that you could begin a migration to it, simultaneously ramping up on the ASP.NET MVC framework as its finalization comes through.", "Another option would be to use something like ASP.NET w/Subsonic or NHibernate."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Don't try and go 2.0 ( more features then currently exists or scheduled) instead build your new platform with the intent of resolving the current issues with the code base (maintainability/speed/wtf) and go from there.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["A good place to begin if you're considering the move to Python is to rewrite your administrator interface in Django.", "This will help you get some of the kinks worked out in terms of getting Python up and running with IIS (or to migrate it to Apache).", "Speaking of which, I recommend isapi-wsgi.", "It's by far the easiest way to get up and running with IIS."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "isapi-wsgi", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.google.com/p/isapi-wsgi/"}]}], [{"text": ["I agree with Michael Pryor and Joel that it's almost always a better idea to continue evolving your existing code base rather than re-writing from scratch.", "There are typically opportunities to just re-write or re-factor certain components for performance or flexibility."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]