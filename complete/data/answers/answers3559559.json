[[{"text": ["This is probably the best way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n original = \"EXAMPLE\"\nremoved = original.replace(\"M\", \"\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["Don't worry about shifting characters and such.", "Most python takes place on a much higher level of abstraction."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["In Python, strings are immutable, so you have to create a new string.", "You have a few options of how to create the new string.", "If you want to remove the 'M' wherever it appears:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n newstr = oldstr.replace(\"M\", \"\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you want to remove the central character:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n midlen = len(oldstr)/2\nnewstr = oldstr[:midlen] + oldstr[midlen+1:]\n</code>\n</pre>\n", "senID": 3}, {"text": ["You asked if strings end with a special character.", "No, you are thinking like a C programmer.", "In Python, strings are stored with their length, so any byte value, including \\0, can appear in a string."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "\\0", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["You can't, because strings in Python are immutable."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "immutable", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Immutable_object"}]}, {"text": ["No.", "They are similar to lists of characters; the length of the list defines the length of the string, and no character acts as a terminator."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You cannot modify the existing string, so you must create a new one containing everything except the middle character."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["To replace a specific position:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = s[:pos] + s[(pos+1):]\n</code>\n</pre>\n", "senID": 1}, {"text": ["To replace a specific character:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n s = s.replace('M','')\n</code>\n</pre>\n", "senID": 3}], [{"text": ["UserString.MutableString"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "UserString.MutableString", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/userdict.html#UserString.MutableString"}]}, {"text": ["mutable way:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import UserString\n\ns = UserString.MutableString(\"EXAMPLE\")\n\n&gt;&gt;&gt; type(s)\n&lt;type 'str'&gt;\n\n#del 'M'\ndel s[3]\n\n#turn it for immutable:\ns = str(s)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Strings are immutable in Python so both your options mean the same thing basically."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Strings are immutable.", "But you can convert them to a list, which is mutable, and then convert the list back to a string after you've changed it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = \"this is a string\"\n\nl = list(s)  # convert to list\n\nl[1] = \"\"    # \"delete\" letter h (the item actually still exists but is empty)\nl[1:2] = []  # really delete letter h (the item is actually removed from the list)\ndel(l[1])    # another way to delete it\n\np = l.index(\"a\")  # find position of the letter \"a\"\ndel(l[p])         # delete it\n\ns = \"\".join(l)  # convert back to string\n</code>\n</pre>\n", "senID": 1}, {"text": ["You can also create a new string, as others have shown, by taking everything except the character you want from the existing string."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "except", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]]