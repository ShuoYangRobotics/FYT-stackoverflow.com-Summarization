[[{"text": ["You could use zip: "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "zip", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A = ['a1', 'a2', 'a3', 'a4']\n&gt;&gt;&gt; B = ['b1', 'b2', 'b3']\n&gt;&gt;&gt; zip(A[:3], B, A[1:])\n[('a1', 'b1', 'a2'), ('a2', 'b2', 'a3'), ('a3', 'b3', 'a4')]\n&gt;&gt;&gt; for a, b, c in zip(A[:3], B, A[1:]):\n...     print a + '+' + b + '   ' + c\n... \na1+b1   a2\na2+b2   a3\na3+b3   a4\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Are you looking for something simple like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n In []: A= [1, 2, 3, 4]\nIn []: B= [1, 2, 3]\nIn []: for k, b in enumerate(B):\n   ..:     print A[k]+ b, A[k+ 1]\n   ..:\n2 2\n4 3\n6 4\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or perhaps something like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n In []: for k, b in enumerate(B):\n   ..:     print '{}+{}\\t{}'.format(A[k], b, A[k+ 1])\n   ..:\n1+1     2\n2+2     3\n3+3     4\n</code>\n</pre>\n", "senID": 3}], [{"text": ["With the pairwiserecipe fromitertools:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "pairwiserecipe fromitertools", "tag": "a", "pos": 0, "childList": [{"text": "pairwise", "tag": "code"}, {"text": "itertools", "tag": "code"}], "childNum": 2, "href": "http://docs.python.org/library/itertools.html#recipes"}, {"text": "pairwise", "childNum": 0, "tag": "code", "childList": []}, {"text": "itertools", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n from itertools import tee, izip\n\ndef pairwise(iterable):\n    \"s -&gt; (s0,s1), (s1,s2), (s2, s3), ...\"\n    a, b = tee(iterable)\n    next(b, None)\n    return izip(a, b)\n\na = [1,2,3,4]\nb = [7,8,9]\n\nfor (a1, a2), b1 in izip(pairwise(a), b):\n    print a1 + b1, a2\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n for i,b in enumerate(B):\n    print(A[i] + '+' + b + '\\t' + A[i+1])\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n [(a + b, c) for (a, b, c) in zip(A, B, A[1:])]\n</code>\n</pre>\n", "senID": 0}, {"text": ["whatever A and B contain"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["This one"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n l = zip(map(sum, zip(A, B)), A[1:])\n</code>\n</pre>\n", "senID": 1}, {"text": ["would produce a list of tuples of "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [(a_1 + b_1, a_2), (a_2 + b_2, a_2), ..., (a_(i-1) + b_(i-1), a_i)]\n</code>\n</pre>\n", "senID": 3}, {"text": ["To print it,"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n for a, b in l:\n    print a, b\n</code>\n</pre>\n", "senID": 5}]]