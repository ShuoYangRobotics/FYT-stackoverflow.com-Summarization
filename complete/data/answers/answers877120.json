[[{"text": ["Sure, it's possible.", "Why should it be any different to other languages?", "Python is still a complete and proper programming language, even if it is rather high-level.", "Now I'm not sure it would produce great performance, which is somewhat desirable for the rendering and JavaScript engines of a browser, in particular.", "Nonetheless, you could without any extraordinary difficulties (mainly just the usual ones) create a fully-fledged browser in Python."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "performance", "childNum": 0, "tag": "em", "pos": 3, "childList": []}, {"text": "extraordinary", "childNum": 0, "tag": "em", "pos": 4, "childList": []}]}, {"text": ["The question is: why would you want to do that anyway, with all the browsers already out there having had enormous head-starts?", "You'd be starting your codebase from scratch, so you'd be looking at many years before approaching the feature set of popular browsers such as Firefox or IE."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Grail is a web browser written in Python."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Grail", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Grail%5F%28web%5Fbrowser%29"}]}], [{"text": ["Using PyQt4 you could write a very capable browser by combining Python with Qt4.", "Alternatively, wxPython does much the same thing but with wxWidgets."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "PyQt4", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.riverbankcomputing.co.uk/software/pyqt/download"}, {"text": "Qt4", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.qtsoftware.com/products/"}, {"text": "wxPython", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.wxpython.org/"}, {"href": "http://wxwidgets.org/", "text": "wxWidgets", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Grail is an example of web browser written in Python, but the project is dead now."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Grail", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://grail.sourceforge.net/"}]}], [{"text": ["Yes.", "Here's an example using GNOME and Python"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "example", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://patrick.wagstrom.net/tutorials/pygtkmozembed/pygtkmozembed.html"}]}], [{"text": ["At least one has been written, Grail.", "While it is no longer maintained, it is an interesting starting point."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Grail", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://grail.sourceforge.net/"}]}], [{"text": ["To elaborate on Paul Dixon's answer, this would be relatively easy using PyQt.", "Since Qt 4.4, the QtWebKit module has been available, giving you a rendering engine without any extra work.", "This is, of course, accessible by the Python flavor of Qt (PyQt). "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "QtWebKit", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://doc.trolltech.com/qtjambi-4.4/html/com/trolltech/qt/qtwebkit.html"}]}, {"text": ["Here are some examples of it in action!"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.rkblog.rk.edu.pl/w/p/webkit-pyqt-rendering-web-pages/"}]}], [{"text": ["Yes it is. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Using PyQt4 and QtWebKit you can make a full browser out of Python.", "However, there is already one made.", "It's called PyPhantomJS.", "It's completely headless and fully controllable via JavaScript (if that's what you're looking for)."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "PyQt4", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "QtWebKit", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "PyPhantomJS", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://dev.umaclan.com/projects/pyphantomjs"}]}, {"text": ["If headless isn't your goal, you can also use QWebView though."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["This question is hard to answer.", "Many scripting languages, using builtin libraries, allows you to connect to a host and download the webpage (in raw html) using extremely few commands."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That could, arguably, be called a web browser.", "But what about downloading and displaying images?", "Javascript?", "Cookies?", "History, bookmarks, saving passwords and other \"standard\" web browser features?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But as OregonGhost stated; \"Why should [it with python] be any more or less possible than with any other language?\".", "Given enough time and processing power, any turing complete mechanic can me modelled in any turing complete languge, such as python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The answer to your question is yes.", "No more and no less.", "You have to be more specific to get better information, otherwise you will just get answers disscussing how your question should be interpreted.", "Like my answer."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "The answer to your question is yes", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["http://bitbucket.org/patx/fastpatx"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://bitbucket.org/patx/fastpatx", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bitbucket.org/patx/fastpatx"}]}, {"text": ["fastPATX is my own little web browser.", "It has tabbed browsing and many more features.", "Written in PyQt4, BuzHug, and Python.", "For those of you who do not know, PyQt4, and BuzHug are written in Python :)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]