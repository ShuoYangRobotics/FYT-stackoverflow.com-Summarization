[[{"text": ["any([s in BigString for s in LittleStringList])"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "any([s in BigString for s in LittleStringList])", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["or even better using a generator expression - as pointed out by @GWW:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["any(s in BigString for s in LittleStringList)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "any(s in BigString for s in LittleStringList)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["use any():"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; BigString = \"This is a long sentence about a red cat named dude.\"\n&gt;&gt;&gt; LittleStringList = [ \"red dog\", \"red cat\", \"red mouse\" ]\n&gt;&gt;&gt; any([str in BigString for str in LittleStringList])\nTrue\n\n&gt;&gt;&gt; BigString = \"This is a long sentence about a red bear named dude.\"\n&gt;&gt;&gt; any([str in BigString for str in LittleStringList])\nFalse\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I assume you mean if string in big?", "Maybe then try:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "if string in big", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def listcontains(list, big):\n    return any([string in big for string in list])\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or a version with a generator:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def listcontains(list, big):\n    def gen():\n        for s in list:\n            yield s in big\n    return any(gen())\n</code>\n</pre>\n", "senID": 3}], [{"text": ["so"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def listcontains(words, big):\n    for word in words:\n        if word in big:\n            return True\n    return False\n</code>\n</pre>\n", "senID": 1}], [{"text": ["To shorten it a little you could instead write:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def listcontains(list, big):\n    for s in list:\n        if s in big:\n            return True\n    return False\n</code>\n</pre>\n", "senID": 1}], [{"text": ["any(filter(lambda x: x in BigString, LittleStringList))"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "any(filter(lambda x: x in BigString, LittleStringList))", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["filter will return a list with LittleStringList words inside BigString and any will return true if filter returns a list with some occurence"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]