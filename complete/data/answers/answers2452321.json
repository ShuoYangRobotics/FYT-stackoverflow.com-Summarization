[[{"text": ["I think copy.deepcopy() is for just this case."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "copy.deepcopy()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/copy.html"}]}], [{"text": ["A list of lists is not usually a great solution for making a 2d array.", "You probably want to use numpy, which provides a very useful, efficient n-dimensional array type.", "numpy arrays can be copied."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Other solutions that are usually better than a plain list of lists include a dict with tuples as keys (d[1, 1] would be the 1, 1 component) or defining your own 2d array class.", "Of course, dicts can be copied and you could abstract copying away for your class."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "d[1, 1]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["To copy a list of lists, you can use copy.deepcopy, which will go one level deep when copying."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "copy.deepcopy", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You can use somelist[:], that is a slice like somelist[1:2] from beginning to end, to create a (shallow) copy of a list.", "Applying this to your for-loop gives:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "somelist[:]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "somelist[1:2]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n alist2 = []\nfor x in xrange(10):\n   alist2.append(alist[x][:])\n</code>\n</pre>\n", "senID": 1}, {"text": ["This can also be written as a list comprehension:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n alist2 = [item[:] for item in alist]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["make a copy of the list when append."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n alist2.append(alist[x][:])\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you're already looping over the list anyway then just copying the inner lists as you go is easiest, as per seanmonstar's answer."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "seanmonstar", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["If you just want to do a deep copy of the list you could call copy.deepcopy() on it."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "copy.deepcopy()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Usually you can do something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n new_list = old_list[:]\n</code>\n</pre>\n", "senID": 1}, {"text": ["So you could perhaps throw that in your singular for loop?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for x in range(10):\n    alist2.append(alist[x][:])\n</code>\n</pre>\n", "senID": 3}]]