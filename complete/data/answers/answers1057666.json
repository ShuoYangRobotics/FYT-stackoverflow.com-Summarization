[[{"text": ["Depending on what kind of computations you are doing with Matlab (and on which toolboxes you are using), Python could be a good alternative to Matlab."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Python + NumPy + SciPy + matplotlib are the right combination to start"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "NumPy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://numpy.scipy.org/"}, {"href": "http://www.scipy.org/", "text": "SciPy", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://matplotlib.sourceforge.net/", "text": "matplotlib", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["For the data, you can, for example, save your data directly in text file (assuming that you are not directly concerned by floating-point precision issues) and read it in python"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If your data are excel data, where each value is separated by a \";\", you can for example read the file line by line, and use the split() method (with \";\" as argument) to get each value"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDIT: for matlab up to version 7.1, it is possible to directly load .mat files from python with the scipy.io.matlab.mio module"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "scipy.io.matlab.mio", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.scipy.org/doc/api%5Fdocs/SciPy.io.mio.html"}]}], [{"text": ["There's matplotlib for plots and the csv module for reading excel data (assuming you can dump to csv)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "matplotlib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/"}, {"href": "http://docs.python.org/library/csv.html", "text": "csv", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Here's a tutorial about replacing Matlab with Python."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://vnoel.wordpress.com/2008/05/03/bye-matlab-hello-python-thanks-sage/"}]}], [{"text": ["If you come from the Matlab world, Pylab will ease your transition. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pylab", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.scipy.org/PyLab"}]}, {"text": ["Once, you have converted your data to ASCII, pylab.load() will do the rest:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "pylab.load()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n pylab.load(fname, comments='#', delimiter=None, converters=None, \n           skiprows=0, usecols=None, unpack=False, \n           dtype=&lt;type 'numpy.float64'&gt;)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I had a look at mlabwrap as a step to easing some Matlab developers into using Python more."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mlabwrap", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mlabwrap.sourceforge.net/"}]}, {"text": ["But I have been unable to cleanly build it, and I don't run production installs here, so I'm dead in the water.", "If you elect to try mlabwrap and have any luck with it, please post your experiences, I'd like to hear about them."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["There are probably hundreds of ways you could import text data into Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["But since you want to replace Matlab, you're going be using Numpy and probably Scipy."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Keep things simple: use Numpy's standard text-loading:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import numpy\nimported_array = numpy.loadtxt('file.txt',delimiter='\\t')  # assuming tab-delimiter\nprint imported_array.shape\n</code>\n</pre>\n", "senID": 3}], [{"text": ["If you saved you data in Matlab format use"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from scipy.io import loadmat\n\ndatafile = \"yourfile.mat\"\ndata = loadmat(datafile, matlab_compatible=True)\nvar1 = data['nameOfYourVariable'].squeeze()\nvar2 = data['nameOfYourOtherVariable'].squeeze()\n</code>\n</pre>\n", "senID": 1}, {"text": ["jpi"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]