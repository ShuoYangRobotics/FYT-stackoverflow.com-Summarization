[[{"text": ["For Unicode regex work in Python, I very strongly recommend the following:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Once you do this, you can safely write patterns that include \\w or \\p{script=Latin} or  \\p{alpha} and \\p{lower} etc and know that these will all do what the Unicode Standard says they should.", "I explain all of this business of Python Unicode regex business in much more detail in this answer.", "The short story is to always use regex not re."], "childNum": 8, "tag": "p", "senID": 1, "childList": [{"text": "\\w", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "\\p{script=Latin}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "\\p{alpha}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "\\p{lower}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "the Unicode Standard says they should", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://unicode.org/reports/tr18/#Compatibility_Properties"}, {"text": "in this answer", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/7063420/perl-compatible-regular-expression-pcre-in-python/7066413#7066413"}, {"text": "regex", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "re", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["For general Unicode advice, I also have several talks from last OSCON about Unicode regular expressions, most of which apart from the 3rd talk alone is not about Python, but much of which is adaptable."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "several talks from last OSCON", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://training.perl.com/OSCON2011/index.html"}]}, {"text": ["Finally, there\u2019s always this answer to put the fear of God (or at least, of Unicode) in your heart."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "this answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/6162484/why-does-modern-perl-avoid-utf-8-by-default/6163129#6163129"}]}], [{"text": ["What's wrong with using the \\w special sequence?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # -*- coding: utf-8 -*-\nimport re\ntest = u\"can't, \u00c5, \u00e9, and \u4e2dABC\"\nprint re.findall('\\w+', test, re.UNICODE)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Build a match class of all the characters you want to match.", "This might become very, very large.", "No, there is no RegEx shorthand for \"All Kanji\" ;)"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "very", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "very", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["Maybe it is easier to match for what you do not want, but even then, this class would become extremely large."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["What if you did your regular expression by excluding symbols?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You can match on"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \\p{L}\n</code>\n</pre>\n", "senID": 1}, {"text": ["which matches any Unicode code point that represents a letter of a script.", "That is, assuming you actually have a Unicode-capable regex engine, which I really hope Python would have."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\nimport re\n\ntext = \"can't, \u00c5, \u00e9, and \u4e2dABC\"\nprint(re.findall('\\w+', text))\n</pre>\n", "senID": 0}, {"text": ["This works in Python 3.", "But it also matches underscores.", "However this seems to do the job as I wish:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\nimport regex\n\ntext = \"can't, \u00c5, \u00e9, and \u4e2dABC _ sh_t\"\nprint(regex.findall('\\p{alpha}+', text))\n</pre>\n", "senID": 2}]]