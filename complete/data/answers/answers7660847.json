[[{"code": "<pre>\n<code>\n In [6]: \"-\".join('467.2-123-hdxdlfow'.split('-')[0:2])\nOut[6]: '467.2-123'\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n before, sep, after = str.rpartition(\"-\")\n</code>\n</pre>\n", "senID": 0}, {"text": ["This splits the str about the last occurrence of \"-\" and your answer would be the variable before."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "before", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; s = '467.2-123-hdxdlfow'\n &gt;&gt;&gt; s[:s.rfind('-')]\n '467.2-123'\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n a='467.2-123-hdxdlfow'\n'-'.join(a.split('-')[:2])\n</code>\n</pre>\n", "senID": 0}, {"text": ["If you have exactly 2 '-', you could do"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n a.rsplit('-',1)[0]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["If you are after everything but the last element, I have modifed spicavigo's answer to exclude the last element."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a='467.2-123-hdxdlfow'\n'-'.join(a.split('-')[:-1])\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Try this regex"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ([^-]*-[^-]*)-.*\n</code>\n</pre>\n", "senID": 1}, {"text": ["and ask the result for the first capturing group ((...) in the example)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "(...)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You can try this result = re.sub(\"([^-]*-[^-]*)(-.", "*$)\", r\"\\1\", '467.2-123-hdxdlfow')\ngives 467.2-123"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "result = re.sub(\"([^-]*-[^-]*)(-.*$)\", r\"\\1\", '467.2-123-hdxdlfow')", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "467.2-123", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}]]