[[{"text": ["In shot, the (0,1,2) does nothing.", "Its a tuple and can be indexed just like a list, so b[(0,1,2)[0]] becomes b[0] since (0,1,2)[0] == 0."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "(0,1,2)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "b[(0,1,2)[0]]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "b[0]", "childNum": 0, "tag": "code", "childList": []}, {"text": "(0,1,2)[0] == 0", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["In the first step Python does b[row[0]] \u2192 b[(0,1,2)[0]] \u2192 b[0] \u2192 'a' "], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "b[row[0]]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "b[(0,1,2)[0]]", "childNum": 0, "tag": "code", "childList": []}, {"text": "b[0]", "childNum": 0, "tag": "code", "childList": []}, {"text": "'a'", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Btw, to get multiple items from a sequence at once you can use a operator:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from operator import itemgetter\nfor row in W:\n    print itemgetter(*row)(b)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["it iterates over a tuple of tuples, each row is a three-element tuple, when printing it accesses three elements of the b list by index, which is what row tuple contains."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "row", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "childList": []}, {"text": "row", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["probably, a slightly less cluttered way to do this is:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for f, s, t in W:\n    print b[f], b[s], b[t]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Indexing a tuple just extracts the nth element, just as when indexing an array.", "That is, the expanded version"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print b[(0,1,2)[0]], b[(0,1,2)[1]], b[(0,1,2)[2]]\n</code>\n</pre>\n", "senID": 1}, {"text": ["is equal to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n print b[0], b[1], b[2]\n</code>\n</pre>\n", "senID": 3}, {"text": ["IE, the 0th element of the (0, 1, 2) tuple ((0, 1, 2)[0]) is 0."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "(0, 1, 2)[0]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["for row in W:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "for row in W:", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["first tuple placed into row is (0,1,2)"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "row", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "(0,1,2)", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["in other words, W[0] == (0,1,2)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "W[0] == (0,1,2)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n Therefore, since `row` == (0,1,2), then row[0] == 0\n</code>\n</pre>\n", "senID": 3}, {"text": ["So the [0]th element of b == 'a'"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "[0]th element of b == 'a'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n b[0] == 'a'\n</code>\n</pre>\n", "senID": 5}, {"text": ["and so on...  "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n b[1] == 'b'\nb[2] == 'c'\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Try to write down the values of all variables in each step: the result you get is right."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["interaction 1:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "row is (0,1,2)", "tag": "none", "senID": 2}, {"text": ["b[row[0]], b[row[1]], b[row[2]]"], "childNum": 0, "tag": "em", "senID": 3, "childList": []}]}, {"text": ["interaction 2:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["row"], "childNum": 0, "tag": "em", "senID": 5, "childList": []}, {"text": ["b[row[0]], b[row[1]], b[row[2]]"], "childNum": 0, "tag": "em", "senID": 6, "childList": []}]}], [{"text": ["A Python interactive shell will help you see what is going on:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n In [78]: W = ((0,1,2),(3,4,5),(0,4,8),(2,4,6))\n\nIn [79]: b = ['a','b','c','d','e','f','g','h','i']\n\nIn [81]: row=W[0]       # The first time throught the for-loop, row equals W[0]\n\nIn [82]: row\nOut[82]: (0, 1, 2)\n\nIn [83]: row[0]\nOut[83]: 0\n\nIn [84]: b[row[0]]\nOut[84]: 'a'\n\nIn [85]: b[row[1]]\nOut[85]: 'b'\n\nIn [86]: b[row[2]]\nOut[86]: 'c'\n</code>\n</pre>\n", "senID": 1}]]