[[{"text": ["Do you want something like this?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n $ ls\ncheese_cheese_type.bar  cheese_cheese_type.foo\n$ python\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; for filename in os.listdir(\".\"):\n...  if filename.startswith(\"cheese_\"):\n...    os.rename(filename, filename[7:])\n... \n&gt;&gt;&gt; \n$ ls\ncheese_type.bar  cheese_type.foo\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here's a script based on your newest comment."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\nfrom os import rename, listdir\n\nbadprefix = \"cheese_\"\nfnames = listdir('.')\n\nfor fname in fnames:\n    if fname.startswith(badprefix*2):\n        rename(fname, fname.replace(badprefix, '', 1))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["It seems that your problem is more in determining the new file name rather than the rename itself (for which you could use the os.rename method)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It is not clear from your question what the pattern is that you want to be renaming.", "There is nothing wrong with string manipulation.", "A regular expression may be what you need here."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["What about this :"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\np = re.compile(r'_')\np.split(filename, 1) #where filename is CHEESE_CHEESE_TYPE.***\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import os\nimport shutil\n\nfor file in os.listdir(dirpath):\n    newfile = dirpath + \"/\" + file.split(\"_\",1)[1]\n    shutil.move(dirpath\"/\"+file,newfile)\n</code>\n</pre>\n", "senID": 1}, {"text": ["I'm assuming you don't want to remove the file extension, but you can just do the same split with periods."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Assuming you are already in the directory, and that the \"first 8 characters\" from your comment hold true always.", "(Although \"CHEESE_\" is 7 characters... ?", "If so, change the 8 below to 7)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from glob import glob\nfrom os import rename\nfor fname in glob('*.prj'):\n    rename(fname, fname[8:])\n</code>\n</pre>\n", "senID": 1}]]