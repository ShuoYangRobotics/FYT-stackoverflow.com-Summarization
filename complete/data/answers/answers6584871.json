[[{"text": ["Use rstrip to strip the specified character(s) from the right side of the string."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "rstrip", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n my_string = my_string.rstrip('\\\\')\n</code>\n</pre>\n", "senID": 1}, {"text": ["See: http://docs.python.org/library/stdtypes.html#str.rstrip"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/library/stdtypes.html#str.rstrip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.rstrip"}]}], [{"text": ["If you don't mind all trailing backslashes being removed, you can use string.rstrip()"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "string.rstrip()", "tag": "a", "pos": 0, "childList": [{"text": "string.rstrip()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/stdtypes.html#str.rstrip"}, {"text": "string.rstrip()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n x = '\\\\abc\\\\'\nprint x.rstrip('\\\\')\n</code>\n</pre>\n", "senID": 2}, {"text": ["prints:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n \\abc\n</code>\n</pre>\n", "senID": 4}, {"text": ["But there is a slight problem with this (based on how your question is worded): This will strip ALL trailing backslashes.", "If you really only want the LAST character to be stripped, you can do something like this:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n if x[-1] == '\\\\': x = x[:-1]\n</code>\n</pre>\n", "senID": 6}], [{"text": ["If you only want to remove one backslash in the case of multiple, do something like:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "one", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n s = s[:-1] if s.endswith('\\\\') else s\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Since everyone else is doing it..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you just want to remove a single backslash, here's a somewhat clean one-line method."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 'foo\\\\\\\\'.rsplit('\\\\', 1)[0]\n'foo\\\\'\n</code>\n</pre>\n", "senID": 2}], [{"code": "<pre>\n<code>\n if s.endswith('\\\\'):\n    s = s[:-1]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The rstrip function will remove more than just the last character, though.", "It will remove all backslashes from the end of the string.", "Here's a simple if statement that will remove just the last character:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if s[-1] == '\\\\':\n    s = s[:-1]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Or not so beautiful(don't beat me) but also works:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n stripSlash = lambda strVal: strVal[:-1] if strVal.endswith('\\\\') else strVal\nstripSlash('sample string with slash\\\\')\n</code>\n</pre>\n", "senID": 1}, {"text": ["And yes - rstrip is better.", "Just want to try. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]