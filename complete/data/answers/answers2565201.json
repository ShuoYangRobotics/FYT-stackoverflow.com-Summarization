[[{"text": ["The problem is that WxPython is only available on the Mac in 32-bit mode; however, by default, Python will start up in 64-bit mode.", "To fix this problem, create the following shell script named python_32:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python_32", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n#! /bin/bash\nexport VERSIONER_PYTHON_PREFER_32_BIT=yes\n/usr/bin/python \"$@\"\n</pre>\n", "senID": 1}, {"text": ["Make the script executable (chmod a+x python_32) and place the script in your path.", "Now, simply invoke python_32 to get an interactive Python console in which you can use WxPython.", "If you want to write a Python script that uses this, you can use the shebang: #!", "/usr/bin/env python_32."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "chmod a+x python_32", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "python_32", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "#! /usr/bin/env python_32", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Now to explain... the basic problem is that 32-bit and 64-bit code uses a different application binary interface (ABI), and so 32-bit code and 64-bit code cannot coexist in the same library/executable/process.", "In order to support 64-bit mode, it needs to  have been compiled in 64-bit mode; likewise, to support 32-bit mode, it needs to have been compiled in 32-bit mode.", "Under OS X, it is possible, using universal binaries to support both... however, it needs to be compiled in both modes (and then merged).", "WxWidgets probably uses Carbon, which is only available in 32-bit mode (Cocoa is available in both 32-bit and 64-bit mode... Apple didn't bother making Carbon available in both modes, since it is being deprecated), which would explain why WxPython, in turn, could only be provided in 32-bit mode.", "This, in turn, means that using it in Python requires you to launch Python in 32-bit mode (Python is  a universal binary with both 32-bit and 64-bit versions of itself available in the same binary  file, so it can be launched in either mode)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Alternative Option\nI don't recommend doing this, because I think you should leave the defaults as they are, but since you might not have enough shell scripting knowledge (you need to use \"./python_32\" or place it in a folder that is listed in your \"$PATH\" environment variable and invoke it as \"python_32\") to follow the former option, you might want to simply execute the following command which will make 32-bit mode the default:"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "Alternative Option", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"code": "<pre>\ndefaults write com.apple.versioner.python Prefer-32-Bit -bool yes\n</pre>\n", "senID": 5}, {"text": ["If you decide you want to switch back into 64-bit mode, you can then use the following command:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\ndefaults write com.apple.versioner.python Prefer-32-Bit -bool no\n</pre>\n", "senID": 7}, {"text": ["Note that both commands are to be executed on the Terminal (not within Python)."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Source\nI should point out that both recomendations are based on man python on Mac OS X.", "So, if you have any other questions, you should definitely read the man page as the error message has urged you to do."], "childNum": 3, "tag": "p", "senID": 9, "childList": [{"text": "Source", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"href": "http://developer.apple.com/mac/library/documentation/Darwin/Reference/ManPages/man1/python.1.html", "text": "man python", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You might also want to try arch command when invoking python:arch -i386 /usr/bin/python2.6 if you can't get Python to run with the correct environmental settings.", "The '-i386' switch makes a universal binary run in Intel 32-bit mode.", "'-x86_64' makes it run in Intel 64-bit mode.", "-ppc and -ppc64 is for PPC architectures."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "arch", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "arch -i386 /usr/bin/python2.6", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["If you still get errors then it might point to a compile issue.", "On my machine I have the stock apple Python and a version from Macports.", "The arch command works using the apple binaries and I can import wx successfully from the command line but I still get errors from the Macports binary: Bad CPU type in executable  I'm guessing I'll have to go back and recompile my Macports python binary and make sure it produces a universal binary or something like that (sigh)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Bad CPU type in executable", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["While I see this is already answered, the answer is slightly wrong.", "The 2.9 series DOES have a Mac 64-bit build, albeit only for Python 2.7.", "See http://wxpython.org/download.php and look for the Cocoa build.", "From what I gather on the wxPython mailing list and IRC channel, you'll want to download a Python 64-bit build from python.org rather than using the Mac-included snake."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://wxpython.org/download.php", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://wxpython.org/download.php"}]}], [{"text": ["Another solution is to download and install Python 2.6 for OS X from python.org and install wxPython for OS X from here with it.", "The python.org 2.6 is newer (2.6.5 as of now) than the Apple-supplied Python (2.6.1) in Snow Leopard and it is 32-bit only."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "python.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/download/"}, {"text": "here", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.wxpython.org/download.php"}]}], [{"text": ["Hm.", "The script provided didn't work for me-- I changed it as follows:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #! /bin/bash\necho \"-----------------Python 2.6 - 32 Bit setup --------------------\"\necho \"Running\" $1\nexport VERSIONER_PYTHON_PREFER_32_BIT yes\n/usr/bin/python2.6 $1\n</code>\n</pre>\n", "senID": 1}, {"text": ["Still didn't work.", "I get the same message.", "Re-read the man page to make sure I wasn't misunderstanding, and I'm no further forward:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n ImportError: /usr/local/lib/wxPython-unicode-2.8.10.1/lib/python2.6/site-packages/wx-2.8-mac-unicode/wx/_core_.so: no appropriate 64-bit architecture (see \"man python\" for running in 32-bit mode)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Not really sure why this doesn't work, unless there is some sort of rebuild that needs to be done against the wx core that gives it 32/64-bit compatibility.", "Any suggestions, anyone?", "I'd like to use the out-of-the-box Python install from Apple (be easier for my work), and I'd like to avoid any more ridiculous hacks "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["This worked for me (from http://www.python-forum.de/viewtopic.php?f=19&amp;t=24322&amp;view=previous)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.python-forum.de/viewtopic.php?f=19&amp;t=24322&amp;view=previous", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python-forum.de/viewtopic.php?f=19&t=24322&view=previous"}]}, {"text": ["In .profile, add the following line\nalias py32='arch -i386 /Library/Frameworks/Python.framework/Versions/2.7/bin/pythonw2.7'"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["then invoke your script with\npy32 "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]