[[{"text": ["Generally:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Generally:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["1) Set up a dedicated email account for the purpose."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["2) Have a programm monitor the mailbox (let's say fetchmail, since that's what I do)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["3) When an email arrives at the account, fetchmail downloads the email, writes it to disk, and calls script or program you have written with the email file as an argument."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["4) Your script or program parses the email and takes an appropriate action."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The part that's usually mysterious to people is the fetchmail part (#2)."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Specifically on Mail Servers (iff you control the mailserver enough to redirect emails to scripts):"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "Specifically on Mail Servers", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "(iff you control the mailserver enough to redirect emails to scripts)", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["1-3) Configure an address to be piped to a script you have written."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["4) Same as above."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["From your tags, I'll assume you're wanting to do this in Django."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["There's an app out there called jutda-helpdesk that does exactly what you're looking for using poplib, which means you just have to set up a POP3 compatible email address."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "jutda-helpdesk", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/jutda-helpdesk/"}]}, {"text": ["Take a look at their get_email.py to see how they do it.", "You just run this script from cron."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "get_email.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/jutda-helpdesk/source/browse/trunk/management/commands/get%5Femail.py"}]}], [{"text": ["You should take a look at Lamson; it'll enable you do what you've described, and more besides."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Lamson", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lamsonproject.org"}]}], [{"text": ["A common tool used for this purpose is procmail."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "procmail", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Procmail"}]}, {"text": ["You need to set up dedicated email address (which is the \"from_email\" address in your outgoing email).", "Then your MTA, such as postfix or qmail, will deliver mail to that address to procmail instead of an actual mailbox."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Procmail can then pass the email on to your python script that can do updates in the app.", "See standalone django scripts by James Bennett on how to code python scripts that can work with your app."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "standalone django scripts", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.b-list.org/weblog/2007/sep/22/standalone-django-scripts/"}]}], [{"text": ["To see a working example on how to receive emails in python and process then using django, check this: http://code.google.com/p/jutda-helpdesk/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.google.com/p/jutda-helpdesk/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/jutda-helpdesk/"}]}], [{"text": ["This is an area where the Rails-world is ahead: Rails has built-in support for receiving emails.", "The mail sever configuration though is probably just the same."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Rails has built-in support for receiving emails", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://guides.rubyonrails.org/action%5Fmailer%5Fbasics.html#receiving-emails"}]}], [{"text": ["Check http://pushreply.com, a service designed exactly for this use case.", "It collects reply messages, extracts the relevant content and notifies your application using a HTTP POST request. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://pushreply.com", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pushreply.com"}]}, {"text": ["Disclaimer: I'm the creator of this service. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]