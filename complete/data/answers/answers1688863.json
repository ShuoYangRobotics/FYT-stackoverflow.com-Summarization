[[{"code": "<pre>\n<code>\n for key, value in list(dic.items()):\n    if key in lst or value in lst:\n        del dic[key]\n</code>\n</pre>\n", "senID": 0}, {"text": ["No need to create a separate list or dictionary.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I interpreted \"whether or not it is a key or an index\" to mean \"whether or not it is a key or a value [in the dictionary]\""], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["it's a bit complicated because of your \"values\" requirement:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; dic = {1: 3, 4: 5}\n&gt;&gt;&gt; ls = set([1])\n&gt;&gt;&gt; dels = []\n&gt;&gt;&gt; for k, v in dic.items():\n    if k in ls or v in ls:\n    \tdels.append(k)\n\n&gt;&gt;&gt; for i in dels:\n    del dic[i]\n\n&gt;&gt;&gt; dic\n{4: 5}\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n dictionary = {1:3,4:5}\nlist = [1]\n\nfor key in list:\n  if key in dictionary:\n     del dictionary[key]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; dictionary = {1:3,4:5}\n&gt;&gt;&gt; list = [1]\n&gt;&gt;&gt; for x in list:\n...     if x in dictionary:\n...             del(dictionary[x])\n... \n&gt;&gt;&gt; dictionary\n{4: 5}\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I would do something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for i in list:\n    if dictionary.has_key(i):\n         del dictionary[i]\n</code>\n</pre>\n", "senID": 1}, {"text": ["But I am sure there are better ways."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["A few more testcases to define how I interpret your question:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n\ndef test(beforedic,afterdic,removelist):\n    d = beforedic\n    l = removelist\n    for i in l:\n        for (k,v) in list(d.items()):\n            if k == i or v == i:\n                del d[k]\n\n    assert d == afterdic,\"d is \"+str(d)\n\ntest({1:3,4:5},{4:5},[1])\ntest({1:3,4:5},{4:5},[3])\ntest({1:3,4:5},{1:3,4:5},[9])\ntest({1:3,4:5},{4:5},[1,3])\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If the dictionary is small enough, it's easier to just make a new one.", "Removing all items whose key is in the set s from the dictionary d:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "s", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "d", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n d = dict((k, v) for (k, v) in d.items() if not k in s)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Removing all items whose key or value is in the set s from the dictionary d:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "s", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "d", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n d = dict((k, v) for (k, v) in d.items() if not k in s and not v in s)\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n def remKeys(dictionary, list):\n    for i in list:\n        if i in dictionary.keys():\n            dictionary.pop(i)\n    return dictionary\n</code>\n</pre>\n", "senID": 0}]]