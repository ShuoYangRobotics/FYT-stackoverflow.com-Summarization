[[{"text": ["Another choice is CairoPlot."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "CairoPlot", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://linil.wordpress.com/2008/09/16/cairoplot-11/"}]}, {"text": ["We picked matplotlib over the others for some serious graphing inside one of our django apps, primarily because it was the only one that gave us exactly the kind of control we needed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Performance generating PNG's was fine for us but... it was a highly specialized app with less than 10 logins a day."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Well, I'm involved in an open source project, Djime, that uses OpenFlashChart 2."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Djime", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://djime.github.com/"}, {"href": "http://teethgrinder.co.uk/open-flash-chart-2/", "text": "OpenFlashChart 2", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["As you can see from our code, generating the JSON-data that OFC uses is a bit complex, but the output is very nice and user friendly, since you can add tooltips, etc.", "to the different elements."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "our code", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/mikl/djime/blob/e6832c6e8d2aa8a3801b16121a0499f3b6d63503/djime/statistics/flashcharts.py"}]}], [{"text": ["Open Flash Chart 2"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://teethgrinder.co.uk/open-flash-chart-2/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://teethgrinder.co.uk/open-flash-chart-2/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://teethgrinder.co.uk/open-flash-chart-2/"}]}, {"text": ["python library http://btbytes.github.com/pyofc2/"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://btbytes.github.com/pyofc2/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://btbytes.github.com/pyofc2/"}]}, {"text": ["kybi"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["One package I've wanted to try is graphite.", "It's a graphing server / platform built with Django.", "It's specialized for \"numeric time-series data\" though, like stock prices or bandwidth utilization.", "If that fits your need I would check it out.", "Here are some screenshots:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "graphite", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://graphite.wikidot.com/"}]}, {"text": ["http://graphite.wikidot.com/screen-shots"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://graphite.wikidot.com/screen-shots", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://graphite.wikidot.com/screen-shots"}]}], [{"text": ["I like client side charts because you can get full page plotting. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A good options seems to be Jquery Flot : http://code.google.com/p/flot/ which can load JSON data.", "However, you won't get pdf support."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.google.com/p/flot/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/flot/"}]}], [{"text": ["I have used FusionCharts Free  with Django."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "FusionCharts Free", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.fusioncharts.com/free/"}]}, {"text": ["Its flash based, open source, multi-licensed and it's well documented.", "It's ActionScript 1, but AS version wasn't really a criteria for me, though it could be for others."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Perhaps you might want to have a look here: Django Plotting app.", "The HowTo describes how to embed matplotlib plots into the admin interface and create a PDF view."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django Plotting app", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.rotareeclub.de/?p=312"}]}]]