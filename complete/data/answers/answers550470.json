[[{"text": ["Overloading print is a design feature of python 3.0 to address your lack of ability to do so in python 2.x."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "print", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["However, you can override sys.stdout.", "(example.", ") Just assign it to another file-like object that does what you want."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "example", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/119404/"}]}, {"text": ["Alternatively, you could just pipe your script through the the unix tee command.", "python yourscript.py | tee output.txt will print to both stdout and to output.txt, but this will capture all output."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "tee", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "python yourscript.py | tee output.txt", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["I came across the same problem."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["How about this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class writer :\n    def __init__(self, *writers) :\n    \tself.writers = writers\n\n    def write(self, text) :\n    \tfor w in self.writers :\n    \t\tw.write(text)\n\nimport sys\n\nsaved = sys.stdout\nfout = file('out.log', 'w')\nsys.stdout = writer(sys.stdout, fout)\nprint \"There you go.\"\nsys.stdout = saved\nfout.close()\n</code>\n</pre>\n", "senID": 2}, {"text": ["It worked like a charm for me.", "It was taken from http://mail.python.org/pipermail/python-list/2003-February/188788.html "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://mail.python.org/pipermail/python-list/2003-February/188788.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://mail.python.org/pipermail/python-list/2003-February/188788.html"}]}], [{"text": ["I don't think you can overload print, but Python has a robust logging package that is highly customizable."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/library/logging.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/logging.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/logging.html"}]}], [{"text": ["In Python 2.x you can't, because print isn't a function, it's a statement.", "In Python 3 print is a function, so I suppose it could be overridden (haven't tried it, though)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Though you can't replace the print keyword (in Python 2.x print is a keyword), it's common practice to replace sys.stdout to do something similar to print overriding; for example, with an instance of StringIO.StringIO.", "This will capture all of the printed data in the StringIO instance, after which you can manipulate it."], "childNum": 6, "tag": "p", "senID": 0, "childList": [{"text": "print", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "print", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "sys.stdout", "childNum": 0, "tag": "code", "childList": []}, {"text": "print", "childNum": 0, "tag": "code", "childList": []}, {"text": "StringIO.StringIO", "childNum": 0, "tag": "code", "childList": []}, {"text": "StringIO", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I answered the same question on a different SO question"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "on a different SO question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/770657/python-overridding-print/1818572#1818572"}]}, {"text": ["Essentially, simplest solution is to just redirect the output to stderr as follows, in the wsgi config file."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n sys.stdout = sys.stderr\n</code>\n</pre>\n", "senID": 2}]]