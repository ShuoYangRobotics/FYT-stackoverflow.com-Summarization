[[{"text": ["Your problem is here:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for Numbers in inFile3: \n        Total = Total + int(Numbers)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Numbers in the code above is a list of lines, rather than a list of numbers."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Numbers", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n for Line in inFile3:\n    for number in Line.split(','):\n        Total = Total + int(number)\n</code>\n</pre>\n", "senID": 3}, {"text": ["should help."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["You also have no need to pre-declare variables the way you are in Python.", "In fact, doing so with global is positively dangerous unless you know what you're doing and why."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit:\nIf you ever have a comma at the end of a line, of a blank value you can change the final line to:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n if number.strip():\n            Total = Total + int(number)\n</code>\n</pre>\n", "senID": 7}, {"text": ["This will ignore any 'empty' number strings that would otherwise throw an error."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["This line:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for Numbers in inFile3:\n</code>\n</pre>\n", "senID": 1}, {"text": ["is actually iterating over the lines of the file, not the numbers within each line.", "You need to iterate over the lines, then for each line split it into numbers, something like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for Line in inFile3: \n    for Number in Line.split(','): \n        Total = Total + int(Number)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["While others have pointed out some of the issues involved in what you are doing, none have pointed out that an average needs not only the sum of all the parts but also the number of all the elements.", "Hence,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def parseNumberFile(file_name):\n    for numbers in open(file_name, \"r\"):\n        items = numbers.split(',')\n        yield (len(items), sum(map(int,items)))\n</code>\n</pre>\n", "senID": 1}, {"text": ["which turns it into a generator that you can use as:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n total = 0\ncount = 0\nfor x,y in parseNumberFile(\"myData.txt\"):\n    count += x\n    total += y\naverage = total/count\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Where are you reading the data?", "You'll need to read it in and then split the String into numbers with something like str.split()."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "str.split()", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.split"}]}, {"text": ["Here is a more pythonic way:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n inFile3 = open(\"data2.txt\",\"r\") \ngrade_list = inFile3.readline()\ninFile3.close()\nnum_list = [int(g) for g in grade_list.split(',')]\naverage = sum(num_list) / len(num_list)\nprint average\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The error message says it all:  '60,66,88,90,44,90,80,77\\n', considered as a group, is not a valid integer.", "You need to consider them one by one.", "First, strip off the new line, then split by the comma."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "'60,66,88,90,44,90,80,77\\n'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Change:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for Numbers in inFile3:\n</code>\n</pre>\n", "senID": 2}, {"text": ["To:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n # assumes numbers are all on one line with no spaces between\nfor Numbers in inFile3.read().strip().split(','):\n</code>\n</pre>\n", "senID": 4}, {"text": ["If I had to rewrite from scratch:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n from __future__ import division  # this import is not needed in python 3\nwith open('data2.txt', 'r') as f:\n    numbers = [int(n) for n in f.read().strip().split(',')]\n    avg = sum(numbers) / len(numbers)\n</code>\n</pre>\n", "senID": 6}], [{"text": ["Change "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for Numbers in inFile3:\n</code>\n</pre>\n", "senID": 1}, {"text": ["to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for Numbers in inFile3.strip().split(','):\n</code>\n</pre>\n", "senID": 3}]]