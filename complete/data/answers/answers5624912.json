[[{"code": "<pre>\n<code>\n self.log = kwargs.get('log', default_log)\nself.bin = kwargs.get('bin', default_bin)\nself.pid = kwargs.get('pid', default_pid)\nself.conf = kwargs.get('conf', default_conf)\n</code>\n</pre>\n", "senID": 0}, {"text": ["This has the additional advantage that self.log is assigned in any case (AttributeError means your code is broken as hell, nothing more.", "Always make sure everything is always assigned.).", "Without extra self.log = default_log lines.", "You can omit the default to get None."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "self.log", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "AttributeError", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "self.log = default_log", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "None", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}], [{"code": "<pre>\n<code>\n for key in ('log', 'bin', 'pid', 'conf'):\n    if key in kwargs:\n        setattr(self, key, kwargs[key])\n</code>\n</pre>\n", "senID": 0}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n self.__dict__.update((key, kwargs[key])\n                     for key in ('log', 'bin', 'pid', 'conf')\n                     if key in kwargs)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["If the key provided in get() is not in the dictionary the result is None."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "get()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "None", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n self.log = kwargs.get('log')\nself.bin = kwargs.get('bin')\nself.pid = kwargs.get('pid')\nself.conf = kwargs.get('conf')\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n for k,v in kwarg.iteritems():\n   setattr(self, k, v)\n</code>\n</pre>\n", "senID": 0}, {"text": ["In which setattr(self, \"bin\", \"val\") is like calling self.bin = \"val\""], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "setattr(self, \"bin\", \"val\")", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "self.bin = \"val\"", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["However it is more desirable to have a whitelist like @Sven Marnach has."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n for k,v in kw.items():\n   setattr(self, k, v)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["self.__dict__.update(kwargs)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "self.__dict__.update(kwargs)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]