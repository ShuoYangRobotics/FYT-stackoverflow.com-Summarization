[[{"text": ["Quoting Wikipedia:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Wikipedia", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Jython"}]}, {"text": ["As for what uses it may have:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Performance measurements of Jython, IronPython and CPython show that both Jython and IronPython outperform CPython for some cases with large datasets."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Jython is a Python implementation which runs on top of JVM.", "Theoretically, Jython is a bit slower, then CPython."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You can find some benchmarks here:\nhttp://www.smallshire.org.uk/sufficientlysmall/2009/05/22/ironpython-2-0-and-jython-2-5-performance-compared-to-python-2-5/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.smallshire.org.uk/sufficientlysmall/2009/05/22/ironpython-2-0-and-jython-2-5-performance-compared-to-python-2-5/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.smallshire.org.uk/sufficientlysmall/2009/05/22/ironpython-2-0-and-jython-2-5-performance-compared-to-python-2-5/"}]}], [{"text": ["For example to add a nice scripting language to your code."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The main drawback is that Jython lags behind the official CPython distribution.", "Currently, you can get a version of Jython that is compatible with Python 2.5.2 while CPython is at 3.1."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Also some esoteric modules aren't supported.", "Usually, you won't notice and/or be able to easily find a Java replacement."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Compared to what?", "Usually, it's either fast enough or, when it isn't, you can replace a few lines of Python with about 1'000 lines of much faster Java."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["When you want to program in Python but need (or want) to have the result run on a Java virtual machine, or use existing Java components."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Jython may not be 100% compatible with Python, though any incompatibility would be considered a bug.", "If you later want/need to run on CPython, any code that uses Java components will have to be rewritten."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["That depends, as always, on your specific usecase.", "It may actually be faster than CPython in some cases; and of course it depends on the specific JVM you run under - these get better all the time."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Two other reasons:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "Embedding scripting into large Java application. ", "tag": "none", "senID": 1}, {"text": "Use Java threads to write multi-threaded programs in Jython. ", "tag": "none", "senID": 2}]}], [{"text": ["When will I need Jython?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You can write administrative scripts for Websphere application server using Jython.", "The scripts are used to automate common administrative tasks and configure security in Websphere application server."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["WebSphere utilizes the JMX API to create MBeans that are exposed as an API of internal WebSphere objects.", "As the Jython scripts are based on Java and they run on the JVM they can access those objects and can be utilized to configure WebSphere. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Besides it is fun to write code in Jython and you learn a new language."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Here is the details"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Here is the details", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/com.ibm.websphere.base.doc/info/aes/ae/txml%5Flaunchscript.html"}]}], [{"text": ["If you know Python and has bought into the \"pythonic\" way of doing things, then Jython allows you to bring that philosophy to the JVM stack.", "If you do this, it is much more than just adding scripting capability."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In our latest projects, all the custom and business logic is built in Jython, at the same time we can still leverage some of the great tried and tested Java libraries like Solr, Jasperreports, Quartz, Jetty, Velocity to name a few."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It does get compiled to bytecode, however, an extra layer is being added, but is no different to using an ORM instead of straight JDBC for example."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["What you gain in productivity far out weighs the minuscule lost in performance."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["On the server side, Jython is rarely the bottleneck.", "For mini desktop apps, there may be issues, but very much dependent on what you are trying to do."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The latest JDK, together with containers like Jetty or Tomcat are very mature and stable, adding Python on top, in many cases, gives the best of both worlds."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["The JVM does some nice dynamic optimization, but it's probably nothing to get excited about.", "JRuby sometimes runs faster on the JVM (http://www.engineyard.com/blog/2009/j-is-for-jvm-why-the-j-in-jruby/) by optimizing the code paths that run a lot, but that's Ruby, not Python. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.engineyard.com/blog/2009/j-is-for-jvm-why-the-j-in-jruby/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.engineyard.com/blog/2009/j-is-for-jvm-why-the-j-in-jruby/"}]}, {"text": ["Java libraries are the main reason.", "Lots of companies have big globs of Java code that can be scripted with Python.", "There's also a few open source frameworks (Struts and Eclipse spring to mind) which you can script with Jython."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I need Jython to test JDBC drivers.", "Some of apps I use work use ODBC, some use JDBC.", "Using Jython I can test both type of drivers from one Python source\n(to test ODBC I use JDBC-ODBC bridge)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]