[[{"text": ["KSS (Kinetic Style Sheets) provides something similar to NitroGen.", "Although KSS differs from NitroGen in that it defines a simple domain-specific language (DSL) for declaring how JavaScript events should be bound to an HTML page on the client side, and this DSL can also declare that events need to trigger a server-side component via AJAX.", "With NitroGen and PyJamas the information containing how the JavaScript interacts with the HTML is deduced from data structures that are part of a server-side language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://kssproject.org/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://kssproject.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://kssproject.org/"}]}, {"text": ["From the KSS project description, \"KSS has both a client-side Javascript library and server-side support.", "The client-side Javascript library needs to be included in your page.", "It fetches Kinetic style sheets from the server, parses them and binds a set of action to browser events and/or page elements.", "It is clean Javascript code that can peacefully coexist with other clean Javascript librarys like JQuery or ExtJS."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["KSS can be used independant of any Python or server-side code.", "However, there are facilities in KSS for binding KSS client-side events back to server-side callables in a Python web framework.", "There are bindings to use KSS with many of Python's popular web frameworks (Django, Pylons, Zope, Plone, Grok)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["HTML is not event-driven, so you can't make an event-driven web framework like that without resorting to Ajax, and you didn't want that.", "So the answer is no, because such a thing is simply impossible,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What I suspect you mean rather than event-driven, is that you have a system where you define up a schema and has forms generated for you.", "And every Web framework has that."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But of you like components and event driven development, look into the Zope Toolkit based web frameworks, i.e.", "Grok, Repoze.BFG, Zope3 and the newest of them: Bobo."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["http://grok.zope.org/\nhttp://bfg.repoze.org/\nhttp://wiki.zope.org/zope3/Zope3Wiki\nhttp://bobo.digicool.com/"], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "http://grok.zope.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://grok.zope.org/"}, {"href": "http://bfg.repoze.org/", "text": "http://bfg.repoze.org/", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://wiki.zope.org/zope3/Zope3Wiki", "text": "http://wiki.zope.org/zope3/Zope3Wiki", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://bobo.digicool.com/", "text": "http://bobo.digicool.com/", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Edit: OK, evidently the problem was only with Pyjamas, not using Javascript.", "In that case KSS, as mentioned above works.", "And it's useable with the frameworks above!"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Zope 3 might suit your purposes (when used on top of Twisted, as it now may be), and so might Divmod Mantissa -- they're surely both strongly event-driven, especially Mantissa, and _any_thing but \"low-level\", especially Zope (indeed a frequent complaint about the latter is that it's just too rich and high-level to master;-)."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Zope 3", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.zope.org/Products/Zope3"}, {"href": "http://divmod.org/trac/wiki/DivmodMantissa", "text": "Divmod Mantissa", "childNum": 0, "tag": "a", "childList": []}, {"text": "but", "childNum": 0, "tag": "strong", "childList": []}]}], [{"text": ["Try with Nagare, I'm looking for the same thing and Nagare could be the answer:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.nagare.org/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.nagare.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.nagare.org/"}]}], [{"text": ["Your example with Nagare:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Nagare", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.nagare.org"}]}, {"code": "<pre>\n<code>\n from nagare import presentation\n\ndef greet(self):\n    window.alert('Hello world!')\n\nclass MyComponent(object):\n    pass\n\n@presentation.render_for(MyComponent)\ndef render(self, h, *args):\n    return h.input(type='submit', onclick=greet)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["twisted matrix?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "twisted matrix?", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.twistedmatrix.com"}]}], [{"text": ["Turbo Gears?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Turbo Gears?", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://turbogears.org/"}]}, {"text": ["i can google all day!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]