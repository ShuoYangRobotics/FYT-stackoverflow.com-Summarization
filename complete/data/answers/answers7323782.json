[[{"code": "<pre>\n<code>\n ', '.join(set_3)\n</code>\n</pre>\n", "senID": 0}, {"text": ["The join is a string method, not a set method."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "join", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["The join is called on the string:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "join", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print \", \".join(set_3)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Sets don't have a join method but you can use str.join instead."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "join", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://docs.python.org/library/stdtypes.html#str.join", "text": "str.join", "childNum": 1, "tag": "a", "childList": [{"text": "str.join", "tag": "code"}]}, {"text": "str.join", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n ', '.join(set_3)\n</code>\n</pre>\n", "senID": 1}, {"text": ["The str.join method will work on any iterable object including lists and sets."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "str.join", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Note: be careful about using this on sets containing integers; you will need to convert the integers to strings before the call to join.", "For example"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n set_4 = {1, 2}\n', '.join(str(s) for s in set_4)\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I think you just have it backwards."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print \", \".join(set_3)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Nor the set nor the list has such method join, string has it:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "set", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "childList": []}, {"text": "join", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n ','.join(set(['a','b','c']))\n</code>\n</pre>\n", "senID": 1}, {"text": ["By the way you should not use name list for your variables.", "Give it a list_, my_list or some other name because list is very often used python function."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "list", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "list_", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "my_list", "childNum": 0, "tag": "code", "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["You have the join statement backwards try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print ', '.join(set_3)\n</code>\n</pre>\n", "senID": 1}]]