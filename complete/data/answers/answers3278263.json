[[{"text": ["Perhaps do something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if choose_a == 1: the_dict=dict_a\nelif choose_b == 1: the_dict=dict_b\n\nfor x,y in the_dict.iteritems():\n    # do stuff with x and y.\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n def do_stuff( d ):\n  for x and y in d.iteritems():\n    whatever with x and y\nif choose_a == 1: do_stuff( dict_a )    \nif choose_b == 1: do_stuff( dict_b )\n</code>\n</pre>\n", "senID": 0}], [{"text": ["What do you want to happen if both choose_a and choose_b are true?", "What if neither of them is true?", "Is either of these conditions at all possible...?"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "choose_a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "choose_b", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Can you afford to move all the \"stuff\" to a separate function as a couple of answers have suggested, or would the resulting scope change be a problem?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["As you see, you've left many things underspecified (or totally unspecified).", "Assuming the worst...:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["then...:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n thedicts = []\nif choose_a == 1: thedicts.append(dict_a)\nif choose_b == 1: thedicts.append(dict_b)\n\nfor d in thedicts:\n    for x, y in d.iteritems():\n        ...do stuff _locally_ with x and y...\n</code>\n</pre>\n", "senID": 4}, {"text": ["You could express the building of the thedicts list more concisely, but, I think, not as clearly, by rolling it up in the for statement, e.g.", "as follows...:"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "thedicts", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "for", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n for d in [d for d, c in zip((dict_a, dict_b), (choose_a, choose_b)) if c]:\n</code>\n</pre>\n", "senID": 6}], [{"text": ["Just define a fuction."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def do_stuff(x, y):\n    # Do stuff\n    pass\n\nif choose_a == 1:\n    for x and y in dict_a.iteritems():\n    do_stuff(x, y)\n\nif choose_b == 1:\n    for x and y in dict_b.iteritems():\n    do_stuff(x, y)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["How about this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n d = dict_a if choose_a else dict_b\nfor x, y in d.items():\n    # do stuff with x and y\n</code>\n</pre>\n", "senID": 1}, {"text": ["Obviously that assumes that you're going to use one or the other; pretty simple to add an if statement if that's not the case though.", "Also, your x and y syntax is invalid, but I guess you'll figure that out :)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "x and y", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["You can put the two dictionaries in a dict and then select them with a key"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "dict", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["for example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n choice = 'A'  # or choice = 'B'\nworking_dict = {'A': dict_a, 'B': dict_b}[choice]\nfor x,y in working_dict.iteritems():\n    # do stuff with x and y\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is slightly different from your approach using two flags.", "If you are stuck with that scheme you could use something like this to set the value of choice"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "choice", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n if choose_a == 1:\n    choice = 'A'\nelif choose_b == 1:\n    choice = 'B'\nelse: \n    pass # maybe this should raise an exception?\n</code>\n</pre>\n", "senID": 4}, {"text": ["Perhaps it is just easier to write it this way:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n if choose_a == 1:\n    working_dict = dict_a\nelif choose_b == 1:\n    working_dict = dict_b\nelse: \n    pass # maybe this should raise an exception?\n\nfor x,y in working_dict.iteritems():\n    # do stuff with x and y\n</code>\n</pre>\n", "senID": 6}]]