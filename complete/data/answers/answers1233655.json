[[{"text": ["You can code it yourself using Paramiko, as suggested above.", "Alternatively, you can look into Fabric, a python application for doing all the things you asked about:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I think this fits your needs.", "It is also not a large library and requires no server installation, although it does have dependencies on paramiko and pycrypt that require installation on the client."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The app used to be here.", "It can now be found here."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.nongnu.org/fab/"}, {"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.fabfile.org/0.9/"}]}, {"code": "<pre>\n<code>\n * The official, canonical repository is git.fabfile.org\n* The official Github mirror is GitHub/bitprophet/fabric\n</code>\n</pre>\n", "senID": 3}, {"text": ["There are several good articles on it, though you should be careful because it has changed in the last six months:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Deploying Django with Fabric"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Deploying Django with Fabric", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lethain.com/entry/2008/nov/04/deploying-django-with-fabric/"}]}, {"text": ["Tools of the Modern Python Hacker: Virtualenv, Fabric and Pip"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Tools of the Modern Python Hacker: Virtualenv, Fabric and Pip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/"}]}, {"text": ["Simple &amp; Easy Deployment with Fabric and Virtualenv"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Simple &amp; Easy Deployment with Fabric and Virtualenv", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lincolnloop.com/blog/2008/dec/07/simple-easy-deployment-fabric-and-virtualenv/"}]}], [{"text": ["I haven't tried it, but this ssh module might help, which in turn uses paramiko.", "I believe everything is client-side."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "ssh module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://commandline.org.uk/python/sftp-python-really-simple-ssh/"}]}, {"text": ["EDIT:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Ostensibly, the link to the code accompanying the above blog post is broken, and looking through the blog's comments it seems it has made its way to a proper Python package, pysftp."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "pysftp", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/pysftp/"}]}], [{"text": ["If you want to avoid any extra modules, you can use the subprocess module to run"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ssh [host] [command]\n</code>\n</pre>\n", "senID": 1}, {"text": ["and capture the output. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Try something like:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n process = subprocess.Popen(\"ssh example.com ls\", shell=True,\n    stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\noutput,stderr = process.communicate()\nstatus = process.poll()\nprint output\n</code>\n</pre>\n", "senID": 4}, {"text": ["To deal with usernames and passwords, you can use subprocess to interact with the ssh process, or you could install a public key on the server to avoid the password prompt."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Your definition of \"simplest\" is important here - simple code means using a module (though \"large external library\" is an exaggeration)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I believe the most up-to-date (actively developed) module is paramiko.", "It comes with demo scripts in the download, and has detailed online API documentation.", "You could also try PxSSH, which is contained in pexpect.", "There's a short sample along with the documentation at the first link. "], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "paramiko", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.lag.net/paramiko/"}, {"text": "PxSSH", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://pexpect.sourceforge.net/pxssh.html"}, {"text": "pexpect", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pexpect/"}]}, {"text": ["Again with respect to simplicity, note that good error-detection is always going to make your code look more complex, but you should be able to reuse a lot of code from the sample scripts then forget about it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I have written Python bindings for libssh2.", "Libssh2 is a client-side library implementing the SSH2 protocol."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python bindings for libssh2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.no-ack.org/2010/11/python-bindings-for-libssh2.html"}]}, {"code": "<pre>\n<code>\n import socket\nimport libssh2\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect(('exmaple.com', 22))\n\nsession = libssh2.Session()\nsession.startup(sock)\nsession.userauth_password('john', '******')\n\nchannel = session.channel()\nchannel.execute('ls -l')\n\nprint channel.read(1024)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Like hughdbrown, I like Fabric.", "Please notice that while it implement its own declarative scripting (for making deploys and the such) it can also be imported as a Python module and used on your programs without having to write a Fabric script."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Fabric has a new maintainer and is in the process of being rewriten; that means that most tutorials you'll (currently) find on the web will not work with the current version.", "Also, Google still shows the old Fabric page as the first result. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For up to date documentation you can check: http://docs.fabfile.org"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.fabfile.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.fabfile.org"}]}]]