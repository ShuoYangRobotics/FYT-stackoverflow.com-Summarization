[[{"text": ["Have you tried 'xsltproc'?", "It's probably already installed."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "xsltproc", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["http://xmlsoft.org/XSLT/xsltproc2.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://xmlsoft.org/XSLT/xsltproc2.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xmlsoft.org/XSLT/xsltproc2.html"}]}], [{"text": ["Use lxml.", "It is very easy to use and very fast.", "It can work with XPath and includes a XSLT transformer."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "lxml", "tag": "a", "pos": 0, "childList": [{"text": "lxml", "tag": "code"}], "childNum": 1, "href": "http://codespeak.net/lxml/"}, {"text": "lxml", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "XSLT transformer", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://codespeak.net/lxml/xpathxslt.html#xslt"}]}], [{"text": ["I'd recommend Saxon, which can be run from the command line like so:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Saxon", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/saxon/"}]}, {"code": "<pre>\n<code>\n java -jar /path/to/saxon.jar xmlfile xslfile\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If I assume correctly that you want to supply a stylesheet and an XML document then Xalan-J has a command line feature you can use to do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://xml.apache.org/xalan-j/commandline.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://xml.apache.org/xalan-j/commandline.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xml.apache.org/xalan-j/commandline.html"}]}, {"text": ["which can be invoked with:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n java org.apache.xalan.xslt.Process -IN foo.xml -XSL foo.xsl -OUT foo.out\n</code>\n</pre>\n", "senID": 3}], [{"text": ["http://xml.apache.org/xalan-j/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://xml.apache.org/xalan-j/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xml.apache.org/xalan-j/"}]}], [{"text": ["Have you seen XMLStarlet (an XML command line toolset) ?", "It does lots of XML-related querying transformation, and in particular:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "XMLStarlet", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xmlstar.sourceforge.net/"}]}, {"code": "<pre>\n<code>\n xml tr --help\nXMLStarlet Toolkit: Transform XML document(s) using XSLT\nUsage: xml tr [&lt;options&gt;] &lt;xsl-file&gt; {-p|-s &lt;name&gt;=&lt;value&gt;} [ &lt;xml-file-or-uri&gt; ... ]\nwhere\n   &lt;xsl-file&gt;      - main XSLT stylesheet for transformation\n   &lt;xml-file&gt;      - input XML document file name (stdin is used if missing)\n   &lt;name&gt;=&lt;value&gt;  - name and value of the parameter passed to XSLT processor\n   -p              - parameter is XPATH expression (\"'string'\" to quote string)\n   -s              - parameter is a string literal\n</code>\n</pre>\n", "senID": 1}, {"text": ["Further documentation here."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xmlstar.sourceforge.net/doc/xmlstarlet.txt"}]}], [{"text": ["I have used Saxon 6.5 for years for command line transformations.", "(Java, XSLT 1)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["An excellent fallback if a native solution is not available."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]