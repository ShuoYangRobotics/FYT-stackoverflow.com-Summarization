[[], [{"text": ["Are you load()ing the pickled data directly from the file?", "What about to try to load the file into the memory and then do the load?", "I would start with trying the cStringIO(); alternatively you may try to write your own version of StringIO that would use buffer() to slice the memory which would reduce the needed copy() operations (cStringIO still may be faster, but you'll have to try)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["There are sometimes huge performance bottlenecks when doing these kinds of operations especially on Windows platform; the Windows system is somehow very unoptimized for doing lots of small reads while UNIXes cope quite well; if load() does lot of small reads or you are calling load() several times to read the data, this would help."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I haven't used cPickle (or Python) but in cases like this I think the best strategy is to\navoid unnecessary loading of the objects until they are really needed - say load after start up on a different thread, actually its usually better to avoid unnecessary  loading/initialization at anytime for obvious reasons.", "Google 'lazy loading' or 'lazy initialization'.", "If you really need all the objects to do some task before server start up then maybe you can try to implement a manual custom deserialization method, in other words implement something yourself if you have intimate knowledge of the data you will deal with which can help you 'squeeze' better performance then the general tool for dealing with it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Did you try sacrificing efficiency of pickling by not using HIGHEST_PROTOCOL?", "It isn't clear what performance costs are associated with using this protocol, but it might be worth a try."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Impossible to answer this without knowing more about what sort of data you are loading and how you are using it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If it is some sort of business logic, maybe you should try turning it into a pre-compiled module;"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If it is structured data, can you delegate it to a database and only pull what is needed?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Does the data have a regular structure?", "Is there any way to divide it up and decide what is required and only then load it?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I'll add another answer that might be helpful - if you can, can you try to define _slots_ on the class that is most commonly created?", "This may be a little limiting and impossible, however it seems to have cut the time needed for initialization on my test to about a half."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "slots", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]]