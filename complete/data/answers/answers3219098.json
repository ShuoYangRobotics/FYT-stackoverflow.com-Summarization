[[{"text": ["The Google Chart API has this function, it takes TeX input and creates an output image."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Google Chart API", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/apis/chart/"}, {"href": "http://code.google.com/apis/chart/docs/gallery/formulas.html", "text": "TeX input", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Another option is jsMath."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "jsMath", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.math.union.edu/~dpvc/jsMath/"}]}], [{"text": ["There's dvipng that ships with TeX.", "It has a lot of parameters to twiddle.", "That's good if you want such control, but bad if you'd like something simpler to use."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "dvipng", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["An option using Mathematica is:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Export[\"etc.png\", \n Rasterize[TraditionalForm[HoldForm[(y^2 + 5 x + 3)/((3 x + 3) + 5 y + 18)]]]]\n</code>\n</pre>\n", "senID": 1}, {"text": ["which produces this image file:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"src": "http://i32.tinypic.com/2qtbekz.png", "tag": "img", "senID": 3}], [{"text": ["Matplotlib's mathtext engine can turn a subset of TeX into images.", "See specifically MathtextBackendBitmap for a solution that does not require the other matplotlib backends."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "mathtext engine", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/api/mathtext_api.html"}, {"text": "MathtextBackendBitmap", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/api/mathtext_api.html#matplotlib.mathtext.MathtextBackendBitmap"}]}, {"text": ["If that doesn't help, matplotlib also has code that calls TeX and dvipng."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Sage could also include some useful code."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Sage", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sagemath.org/"}]}], [{"text": ["As many people cited, TeX might be the most straightforward path to take there -\nSearching for python tex yields some possibilities, one of the simpler might be:\nhttp://pypi.python.org/pypi/tex/1.5"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://pypi.python.org/pypi/tex/1.5", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/tex/1.5"}]}, {"text": ["It is just a wrapper to call Tex as a subprocess, and have a \"dvi\" file -- you'd still have to run dvipng (which as @JohnCook puts it, comes with TeX) to get your png file."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The drawback is that you have to set up the full TeX tool chain (not a problem on most Linux distributions)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Anotherway would be to get hold of MathMl rendering libraries - but then,  you'd have to assemble the MathML markup for yur equation.", "Thre is a promising Python MathML to SVGmodule here:\nhttp://sourceforge.net/projects/svgmath/\nThat should have less librarie dependencies, and depending on your purposes, SVG might be more suitable than .PNG for equations.", "Else, ask stackoverflow again to go from .svg to .png in Python :-)"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://sourceforge.net/projects/svgmath/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/svgmath/"}]}], [{"text": ["There's a site EquationSheet.com that allows you to enter LaTeX and get back the URL of a generated image.", "Maybe your site could use it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "EquationSheet.com", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.equationsheet.com/textoimage.php"}]}]]