[[{"text": ["You can have both installed."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You should write in front of your script :"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #!/bin/env python2.6\n</code>\n</pre>\n", "senID": 2}, {"text": ["or eventually.."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n #!/bin/env python3.0\n</code>\n</pre>\n", "senID": 4}, {"text": ["Update"], "childNum": 0, "tag": "h2", "senID": 5, "childList": []}, {"text": ["My solution work perfectly with Windows, after a quick search on Google, here is the Windows solution:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Google", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://news.softpedia.com/news/Your-First-Python-Script-on-Windows-81974.shtml"}]}, {"code": "<pre>\n<code>\n #!c:/Python/python3_0.exe -u\n</code>\n</pre>\n", "senID": 7}, {"text": ["Same thing... in front of your script"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["Here you go..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["winpylaunch.py"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "winpylaunch.py", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n #\n# Looks for a directive in the form: #! C:\\Python30\\python.exe\n# The directive must start with #! and contain \".exe\".\n# This will be assumed to be the correct python interpreter to\n# use to run the script ON WINDOWS. If no interpreter is\n# found then the script will be run with 'python.exe'.\n# ie: whatever one is found on the path.\n# For example, in a script which is saved as utf-8 and which\n# runs on Linux and Windows and uses the Python 2.6 interpreter...\n#\n#    #!/usr/bin/python\n#    #!C:\\Python26\\python.exe\n#    # -*- coding: utf-8 -*-\n#\n# When run on Linux, Linux uses the /usr/bin/python. When run\n# on Windows using winpylaunch.py it uses C:\\Python26\\python.exe.\n#\n# To set up the association add this to the registry...\n#\n#    HKEY_CLASSES_ROOT\\Python.File\\shell\\open\\command\n#    (Default) REG_SZ = \"C:\\Python30\\python.exe\" S:\\usr\\bin\\winpylaunch.py \"%1\" %*\n#\n# NOTE: winpylaunch.py itself works with either 2.6 and 3.0. Once\n# this entry has been added python files can be run on the\n# commandline and the use of winpylaunch.py will be transparent.\n#\n\nimport subprocess\nimport sys\n\nUSAGE = \"\"\"\nUSAGE: winpylaunch.py &lt;script.py&gt; [arg1] [arg2...]\n\"\"\"\n\nif __name__ == \"__main__\":\n  if len(sys.argv) &gt; 1:\n    script = sys.argv[1]\n    args   = sys.argv[2:]\n    if script.endswith(\".py\"):\n      interpreter = \"python.exe\" # Default to wherever it is found on the path.\n      lines = open(script).readlines()\n      for line in lines:\n        if line.startswith(\"#!\") and line.find(\".exe\") != -1:\n          interpreter = line[2:].strip()\n          break\n      process = subprocess.Popen([interpreter] + [script] + args)\n      process.wait()\n      sys.exit()\n  print(USAGE)\n</code>\n</pre>\n", "senID": 2}, {"text": ["I've just knocked this up on reading this thread (because it's what I was needing too).", "I have Pythons 2.6.1 and 3.0.1 on both Ubuntu and Windows.", "If it doesn't work for you post fixes here."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I'm using 2.5, 2.6, and 3.0 from the shell with one line batch scripts of the form:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n :: The @ symbol at the start turns off the prompt from displaying the command.\n:: The % represents an argument, while the * means all of them.\n@c:\\programs\\pythonX.Y\\python.exe %*\n</code>\n</pre>\n", "senID": 1}, {"text": ["Name them pythonX.Y.bat and put them somewhere in your PATH.", "Copy the file for the preferred minor version (i.e.", "the latest) to pythonX.bat.", "(E.g.", "copy python2.6.bat python2.bat.", ") Then you can use python2 file.py from anywhere."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "pythonX.Y.bat", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "pythonX.bat", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "copy python2.6.bat python2.bat", "childNum": 0, "tag": "code", "pos": 4, "childList": []}, {"text": "python2 file.py", "childNum": 0, "tag": "code", "pos": 5, "childList": []}]}, {"text": ["However, this doesn't help or even affect the Windows file association situation.", "For that you'll need a launcher program that reads the #!", "line, and then associate that with .py and .pyw files."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "#!", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["As far as I know Python runs off of the commandline using the PATH variable as opposed to a registry setting."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["So if you point to the correct version on your PATH you will use that.", "Remember to restart your command prompt to use the new PATH settings."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The Python installation normally associates .py, .pyw and .pyc files with the Python interpreter.", "So you can run a Python script either by double-clicking it in Explorer or by typing its name in a command-line window (so no need to type python scriptname.py, just scriptname.py will do)."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ".pyw", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": ".pyc", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "python scriptname.py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "scriptname.py", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If you want to manually change this association, you can edit these keys in the Windows registry:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n HKEY_CLASSES_ROOT\\Python.File\\shell\\open\\command\nHKEY_CLASSES_ROOT\\Python.NoConFile\\shell\\open\\command\nHKEY_CLASSES_ROOT\\Python.CompiledFile\\shell\\open\\command\n</code>\n</pre>\n", "senID": 2}, {"text": ["Python Launcher"], "childNum": 0, "tag": "h2", "senID": 3, "childList": []}, {"text": ["People have been working on a Python launcher for Windows: a lightweight program associated with .py and .pyw files which would look for a \"shebang\" line (similar to Linux et al) on the first line, and launch Python 2.x or 3.x as required.", "See \"A Python Launcher for Windows\" blog post for details."], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ".pyw", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "\"A Python Launcher for Windows\"", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://blog.python.org/2011/07/python-launcher-for-windows_11.html"}]}], [{"text": ["I would assume so, I have Python 2.4, 2.5 and 2.6 installed side-by-side on the same computer."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I think there is an option to setup the windows file association for .py files in the installer.", "Uncheck it and you should be fine."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If not, you can easily re-associate .py files with the previous version.", "The simplest way is to right click on a .py file, select \"open with\" / \"choose program\".", "On the dialog that appears, select or browse to the version of python you want to use by default, and check the \"always use this program to open this kind of file\" checkbox. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You should make sure that the PATH environment variable doesn't contain both python.exe files ( add the one you're currently using to run scripts on a day to day basis ) , or do as Kniht suggested with the batch files .", "Aside from that , I don't see why not ."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["P.S : I have 2.6 installed as my \"primary\" python and 3.0 as my \"play\" python .", "The 2.6 is included in the PATH .", "Everything works fine ."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "\"primary\"", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "\"play\"", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "PATH", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}]]