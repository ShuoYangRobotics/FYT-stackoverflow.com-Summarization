[[{"text": ["Sorry, no, there's no such thing.", "In string literals, anyway... you could perhaps piggyback on another encoding scheme, such as HTML:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import HTMLParser\n&gt;&gt;&gt; HTMLParser.HTMLParser().unescape(u'a &amp;auml; b c')\nu'a \\xe4 b'\n</code>\n</pre>\n", "senID": 1}, {"text": ["But I don't think this'd be worth it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Hardly anyone even uses the \\N notation in any case... for the occasional character the \\xnn notation is acceptable; for more involved usage you're better off just typing \u00e4 directly and making sure a # coding= is defined in the script as per PEP263.", "(If you don't have a keyboard layout that can type those diacriticals directly, get one.", "eg.", "eurokb on Windows, or using the Compose key on Linux."], "childNum": 5, "tag": "p", "senID": 3, "childList": [{"text": "\\N", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "\\xnn", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "\u00e4", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "# coding=", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "PEP263", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0263/"}]}], [{"text": ["If you want to do the right thing please use UTF-8 in your python source code.", "This will keep the code much more readable."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "use UTF-8 in your python source code", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Python is able to real UTF-8 source files, all you have to do is to add an additional line after the first one:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python\n# -*- coding: UTF-8 -*-\n</code>\n</pre>\n", "senID": 2}, {"text": ["By the way, starting with Python 3.0 UTF-8 is the default encoding so you will not need this line anymore.", "See PEP3120"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "PEP3120", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-3120/"}]}], [{"text": ["You can put an actual \"\u00e4\" character in your string.", "For this you have to declare the encoding of the source code at the top"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n# encoding: utf-8\n\nx = u\"\u00e4\"\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Have you thought about writing your own converter?", "It wouldn't be hard to write something that would go through a file and replace \\N{A umlaut} with \\N{LATIN SMALL LETTER A WITH DIAERESIS} and all the rest."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You can use the Unicode notation \\uXXXX do describe that character:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "\\uXXXX", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n u\"\\u00E4\"\n</code>\n</pre>\n", "senID": 1}], [{"text": ["On Windows, you can use the charmap.exe utility to look up the keyboard shortcut for common letters you're using such as:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ALT-0223 = \u00df\nALT-0228 = \u00e4\nALT-0246 = \u00f6\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then use Unicode and save in UTF-8:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n # -*- coding: UTF-8 -*-\nphrase = u'L\u00f6wenbr\u00e4u Wei\u00dfbier'\n</code>\n</pre>\n", "senID": 3}, {"text": ["or use a converter as someone else mentioned and make up your own shortcuts:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n # -*- coding: UTF-8 -*-\n\ndef german(s):\n    s = s.replace(u'SS',u'\u00df')\n    s = s.replace(u'a:',u'\u00e4')\n    s = s.replace(u'o:',u'\u00f6')\n    return s\n\nphrase = german(u'Lo:wenbra:u WeiSSbier')\nprint phrase\n</code>\n</pre>\n", "senID": 5}]]