[[{"text": ["Short answer: Because of timezones."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The Epoch is in UTC."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example, I'm on IST (Irish Stsandard Time) or GMT+1.", "time.mktime() is relative to my timezone, so on my system this refers to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; time.mktime((2009, 1, 31, 0, 0, 0, 5, 31, -1))\n1233360000.0\n</code>\n</pre>\n", "senID": 3}, {"text": ["Because you got the result 1233378000, that would suggest that you're 5 hours behind me"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; (1233378000 - 1233360000) / (60*60)    \n5\n</code>\n</pre>\n", "senID": 5}, {"text": ["Have a look at the time.gmtime() function which works off UTC."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"code": "<pre>\n<code>\n mktime(...)\n    mktime(tuple) -&gt; floating point number\n\n    Convert a time tuple in local time to seconds since the Epoch.\n</code>\n</pre>\n", "senID": 0}, {"text": ["local time... fancy that."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The time tuple:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n The other representation is a tuple of 9 integers giving local time.\nThe tuple items are:\n  year (four digits, e.g. 1998)\n  month (1-12)\n  day (1-31)\n  hours (0-23)\n  minutes (0-59)\n  seconds (0-59)\n  weekday (0-6, Monday is 0)\n  Julian day (day in the year, 1-366)\n  DST (Daylight Savings Time) flag (-1, 0 or 1)\nIf the DST flag is 0, the time is given in the regular time zone;\nif it is 1, the time is given in the DST time zone;\nif it is -1, mktime() should guess based on the date and time.\n</code>\n</pre>\n", "senID": 3}, {"text": ["Incidentally, we seem to be 6 hours apart:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; time.mktime((2009, 1, 31, 0, 0, 0, 5, 31, -1))\n1233356400.0\n&gt;&gt;&gt; (1233378000.0 - 1233356400)/(60*60)\n6.0\n</code>\n</pre>\n", "senID": 5}], [{"text": ["Phil's answer really solved it, but I'll elaborate a little more.", "Since the epoch is in UTC, if I want to compare other times to the epoch, I need to interpret them as UTC as well."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; calendar.timegm((2009, 1, 31, 0, 0, 0, 5, 31, -1))\n1233360000\n&gt;&gt;&gt; 1233360000 / (60*60*24)\n14275\n</code>\n</pre>\n", "senID": 1}, {"text": ["By converting the time tuple to a timestamp treating is as UTC time, I get a number which is evenly divisible by the number of seconds in a day."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["I can use this to convert a date to a days-from-the-epoch representation which is what I'm ultimately after."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Interesting.", "I don't know, but I did try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; now = time.mktime((2008, 8, 22, 11 ,17, -1, -1, -1, -1))\n&gt;&gt;&gt; tomorrow = time.mktime((2008, 8, 23, 11 ,17, -1, -1, -1, -1))\n&gt;&gt;&gt; tomorrow - now\n86400.0\n</code>\n</pre>\n", "senID": 1}, {"text": ["which is what you expected.", "My guess?", "Maybe some time correction was done since the epoch.", "This could be only a few seconds, something like a leap year.", "I think I heard something like this before, but can't remember exactly how and when it is done..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Where are you from?", "Isn't the result of summer timer/winter time changes !?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["not sure if this is your problem but do know that time.mktime calls localtime and it's bitten me in the arse once or twice."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]