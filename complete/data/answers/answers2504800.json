[[{"text": ["Your system already has Python on it.", "Use the text editor or IDE of your choice; I like vim. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I can't tell you what third-party modules you need without knowing what kind of development you will be doing.", "Use apt as much as you can to get the libraries."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["To speak to your edit:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This isn't minimalistic, like handing a .NET newbie notepad and a compiler: a decent text editor and the stdlib are all you really need to start out.", "You will likely need third-party libraries to develop whatever kind of applications you are writing, but I cannot think of any third-party modules all Python programmers will really need or want."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "all", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Unlke the .NET/Windows programming world, there is no one set of dev tools that stands above all others.", "Different people use different editors a whole lot.", "In Python, a module namespace is fully within a single file and project organization is based on the filesystem, so people do not lean on their IDEs as hard.", "Different projects use different version control software, which has been booming with new faces recently.", "Most of these are better than TFS and all are 1000 times better than SourceSafe."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["When I want an interactive session, I use the vanilla Python interpreter.", "Various more fancy interpreters exist: bpython, ipython, IDLE.", "bpython is the least fancy of these and is supposed to be good about not doing weird stuff.", "ipython and IDLE can lead to strange bugs where code that works in them doens't work in normal Python and vice-versa; I've seen this first hand with IDLE."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["For some of the tools you asked about and some others"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"tag": "ul", "num": 6, "lis": [{"text": "In .NET you would use NUnit. In Python, use the stdlib ", "tag": "none", "senID": 7}, {"text": "In .NET you would use SQL Server. In Python, you may use PostgreSQL, MySQL, sqlite, or some other database. Python specifies a unified API for databases and porting from one to another typically goes pretty smoothly. sqlite is in the stdlib.\n", "tag": "none", "senID": 8}, {"text": "If you are doing network programming, get Twisted.", "tag": "none", "senID": 9}, {"text": "If you are doing numerical math, get numpy and scipy.", "tag": "none", "senID": 10}, {"text": "If you are doing web development, choose a framework. There are about 200000: Pylons, zope, Django, CherryPy, werkzeug...I won't bother starting an argument by recommending one. Most of these will happily work with various servers with a quick setting.", "tag": "none", "senID": 11}, {"text": "If you want to do GUI development, there are quite a few Python bindings. The stdlib ships with Tk bindings I would not bother with. There are wx bindings (wxpython), GTK+ bindings (pygtk), and two sets of Qt bindings. If you want to do native Windows GUI development, get IronPython and do it in .NET. There are win32 bindings, but they'll make you want to pull your hair out trying to use them directly.", "tag": "none", "senID": 12}]}], [{"text": ["Since I'm accustomed to Eclipse, I find Eclipse + PyDev convenient for Python.", "For quick computations, Idle is great."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I've used Python on Windows and on Ubuntu, and Linux is much cleaner."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If you launch a terminal and type python you'll get an interpreter, where you can start trying stuff."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Just in case you haven't seen it, check out the book Dive Into Python, is free on-line.", "http://www.diveintopython.org/"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Dive Into Python", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "http://www.diveintopython.org/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.diveintopython.org/"}]}, {"text": ["Follow the examples in the book using the interpreter."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["For storing your work you could use any editor; Vim or EMACS could be the most powerful, but also the most difficult to learn at first.", "If you want a more \"traditional\" IDE, you could try WingIDE.", "http://www.wingware.com/"], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "\"traditional\"", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "WingIDE", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "http://www.wingware.com/", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.wingware.com/"}]}, {"text": ["After you start to get more comfortable with python you should try an enhanced interpreter; try ipython.", "http://ipython.scipy.org/moin/"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "ipython", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "http://ipython.scipy.org/moin/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://ipython.scipy.org/moin/"}]}, {"text": ["When you start to develop a more serious project you'll need to get additional modules.", "Here you have two options; 1) Use your distribution tools to install additional modules; or 2) Download the modules you need directly from their sites and install them manually.", "You'll be responsible to upgrade them of course."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["You'll have to decide for yourself which way to go.", "Personally I prefer to download and install additional modules manually."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["In order to reduce the chance of effecting/hosing the system install of python, I typically install virtualenv on the ubuntu python install.", "I then create a virtualenv in my home directory so that subsequent packages I install via pip or easy_install do not effect the system installation.", "And I add the bin from that virtualenv to my path via .bashrc"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "virtualenv", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/virtualenv"}, {"text": ".bashrc", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://tldp.org/LDP/abs/html/sample-bashrc.html"}]}, {"code": "<pre>\n<code>\n $ sudo apt-get install python-virtualenv\n$ virtualenv --no-site-packages ~/local\n$ PATH=~/local/bin:$PATH #&lt;----- add this to .bashrc to make it permanent\n$ easy_install virtualenv #&lt;--- so that project environments are based off your local environment rather than the system, probably not necessary\n</code>\n</pre>\n", "senID": 1}, {"text": ["Install your favorite editor, I like emacs + rope, but editors are a personal preference and there are plenty of choices."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "emacs + rope", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rope.sourceforge.net/ropemacs.html"}]}, {"text": ["When I start a new project/idea I create a new virtual environment for that project, so that I don't effect dependencies anywhere else.", "Since I would hate for some of my projects to break due to an upgrade of a library both that project and the new one depends on."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n ~/projects $ virtualenv --no-site-packages my_new_project.env\n~/projects/my_new_project.env $ source bin/activate\n(my_new_project.env)~/projects/my_new_project.env $ easy_install paste ipython #whatever else I think I need\n(my_new_project.env)~/projects/my_new_project.env $ emacs ./ &amp; # start hacking\n</code>\n</pre>\n", "senID": 4}, {"text": ["When creating a new package...in order to have something that will be easy_installable/pippable use paster create"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "paster create", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pythonpaste.org/script/developer?highlight=paster%20create"}]}, {"code": "<pre>\n<code>\n (my_new_project.env)~/projects/my_new_project.env$ paster create new_package\n(my_new_project.env)~/projects/my_new_project.env/new_package$ python setup.py develop new_package\n</code>\n</pre>\n", "senID": 6}, {"text": ["That's the common stuff as far as I can think of it.", "Everything else would be editor/version control tool specific"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["Python (duh), setuptools or pip, virtualenv, and an editor.", "I suggest geany, but that's just me.", "And of course, any other Python modules you'll need."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If you're just starting out with Python, I'd actually argue against bringing in the complexity of virtualenv (which I think can be pretty overwhelming), at least until you've got a firm grasp of Python basics (especially regarding  library/dependency management)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "virtualenv", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["If you're using Ubuntu and the Gnome desktop environment, gedit is the default (gui) text editor, and has great support for Python built in.", "So my recommendation is to start with the pre-installed Python and gedit (which is pretty extensible on its own)."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "gedit", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "gedit", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://grigio.org/pimp_my_gedit_was_textmate_linux", "text": "pretty extensible on its own", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You don't need much.", "Python comes with \"Batteries Included."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Visual Studio == IDLE.", "You already have it.", "If you want more IDE-like environment, install Komodo Edit."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["NUnit == unittest.", "You already have it in the standard library."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "unittest", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["SQL Server == sqlite.", "You already have it in the standard library."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "sqlite", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Stop wasting time getting everything ready.", "It's already there in the basic Python installation."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Get to work."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Linux, BTW, is primarily a development environment.", "It was designed and built by developers for developers.", "Windows is an end-user environment which has to be supplemented for development."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "is", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Linux was originally focused on developers.", "All the tools you need are either already there or are part of simple yum or RPM installs."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["Getting to Python from .NET world"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Getting to Python from .NET world", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Jumping into the Linux world from a .NET / WIndows background can be a bit disconcerting (but I do encourage you to keep trying Linux)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But I would suggest to anyone coming from Windows, to stick with Windows for a little while.", "goto www.Activestate.com and download their Python package - it includes the full win32com extentions by Mark Hammond and it also includes a complete, fast IDE \"pythonwin\""], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I have done real professional development with just this setup alone on a windows box - one 14MB .msi and off you go !"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Now to use Python on the DLR (Dynamic common language runtime) you need to download IronPython.", "THis is a seperate interpreter, that was also originally written by Mark Hammond at Microsoft and is at ironpython.org."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["With this you can run code like (from wikipedia) ::"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n import clr\nclr.AddReference(\"System.Windows.Forms\")\nfrom System.Windows.Forms import MessageBox\nMessageBox.Show(\"Hello World\")\n</code>\n</pre>\n", "senID": 6}, {"text": ["Now you can access any .NET code from python. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["You would probably like to give NetBeans Python IDE a shot.", "You can choose to use either Windows/Linux. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "NetBeans Python IDE", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.netbeans.org/Python"}]}], [{"text": ["Database: sqlite (inbuilt).", "You might want SQLAlchemy though."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["GUI: tcl is inbuilt, but wxPython or pyQt are recommended."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["IDE: I use idle (inbuilt) on windows, TextMate on Mac, but you might like PyDev.", "I've also heard good things about ulipad."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Numerics: numpy."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Fast inline code: lots of options.", "I like boost weave (part of scipy), but you could look into ctypes (to use dlls), Cython, etc."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Web server: too many options.", "Django (plus Apache) is the biggest."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Unit testing: inbuilt."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Pyparsing, just because."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["BeautifulSoup (or another good HTML parser)."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["hg, git, or some other nice VC."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Trac, or another bug system."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["Oh, and StackOverflow if you have any questions."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]]