[[{"text": ["Have you tried ActivePython?"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "ActivePython", "tag": "a", "pos": 0, "childList": [{"text": "ActivePython", "tag": "strong"}], "childNum": 1, "href": "http://www.activestate.com/activepython/downloads"}, {"text": "ActivePython", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["It includes a package manager (PyPM) that, by default, installs into your home directory (eg: ~/Library/Python/2.7).", "Main scripts get symlinked in /usr/local/bin; use the included pythonselect to set the active Python version."], "childNum": 5, "tag": "p", "senID": 1, "childList": [{"text": "PyPM", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/pypm/"}, {"text": "~/Library/Python/2.7", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "/usr/local/bin", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "https://github.com/ActiveState/pythonselect#readme", "text": "pythonselect", "childNum": 1, "tag": "a", "childList": [{"text": "pythonselect", "tag": "code"}]}, {"text": "pythonselect", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["You don't have to bother installing .dmg packages, as PyPM is a binary package manager ... therefore you can install non-pure Python packages like NumPy without having to compile things yourself."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "binary", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"href": "http://code.activestate.com/pypm/numpy/", "text": "NumPy", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["ActivePython can use Apple's Tcl/Tk or, if installed, ActiveTcl."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["A \"simplest, most general approach\" in your documentation could be:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "simplest, most general approach", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["I use brew to install all my libraries/compilers/interpreters."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "brew", "tag": "a", "pos": 0, "childList": [{"text": "brew", "tag": "code"}], "childNum": 1, "href": "https://github.com/mxcl/homebrew"}, {"text": "brew", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["To install python try this:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n brew install python\n</code>\n</pre>\n", "senID": 2}, {"text": ["Then add Python's binaries directory to your $PATH in your ~/.profile:"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "$PATH", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "~/.profile", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n export PATH=`brew --prefix python`/bin:$PATH\n</code>\n</pre>\n", "senID": 4}, {"text": ["I'd recommend you to install pip, virtualenv and virtualenvwrapper to have better control over your environment too."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "pip", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "virtualenv", "childNum": 0, "tag": "code", "childList": []}, {"text": "virtualenvwrapper", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["In almost all cases, the best python to use is the one from http://python.org/.", "It sets up the paths correctly and doesn't overwrite anything.", "DMG package installs usually work automatically, as does python setup.py install, and it's not too hard to get setuptools to work.", "If you want per-user installs, it is easy to set up .pydistutils.cfg and python automatically recognizes the path install_lib = ~/Library/Python/$py_version_short/site-packages"], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "http://python.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.org/"}, {"text": "python setup.py install", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "setuptools", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": ".pydistutils.cfg", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "install_lib = ~/Library/Python/$py_version_short/site-packages", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Using MacPorts, you can install python 2.6, 2.7, 3.1 and 3.2 at the same time, with their own packages, without ever touching the built-in python. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "MacPorts", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.macports.org/"}]}, {"text": ["numpy, scipy, matplotlib, and ipython are also available as ports for most of those python versions."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Moreover, if you install the python_select port, you'll be able:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "python_select", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.macports.org/ports.php?by=name&substr=python_select"}]}, {"tag": "ul", "num": 2, "lis": [{"text": ["to choose which one of those (plus the built-in python) is the \"default\" python;"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["to install python packages through easy_install/pip for the \"selected\" python, if they're not available as ports."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]}, {"text": ["Add virtualenv to the mix, and you'll have a very, very flexible Python development environment."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["As for your questions:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Q1: with MacPorts, no.", "while not a frequent user, I've installed and used matplotlib in 2.6 and 2.7, switching between the two using python_select. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Q2: easy_install, pip, ipython will be \"linked\" to the python they were installed by.", "(but see tip 1)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Q3: it's easier to install one of the py{26,27,xx}-numpy ports, or pip install numpy under your python_select'ed python."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "pip install numpy", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Q4: well, MacPorts is the best thing I know after APT on Debian/Ubuntu... :-)"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["Now, two tips if you try MacPorts:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["Regards, "], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Georges"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}], [{"text": ["Here is an old post that answers your questions too."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Here is an old post that answers your questions too.", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1213690/what-is-the-most-compatible-way-to-install-python-modules-on-a-mac"}]}, {"text": ["In general it is not a problem at all to have more than one python installation on your machine.", "You just have to watch out which one you are calling on the command line. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt; which python\n</code>\n</pre>\n", "senID": 2}, {"text": ["... helps to identify where your python binary is located.", "The original Mac OS X python is usually at \"/usr/bin/python\""], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I personally use the MacPorts python installation.", "It also supports you with the installation of modules.", "(see link above) "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I have 4 versions of python on my MacBook Pro.", "2 from the original install of OS X 10.6 and a subsequent update, then self installed copies of python 2.7 and 3.2.", "You can update the python command to point at any of the versions.", "They all install in separate directories and cause no problems with each other."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I'm not sure what will happen when you install from a .dmg file.", "I believe it will simply use whatever version python points to."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["This post on superuser.com answers your questions on changing default paths."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "post", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://superuser.com/questions/223436/how-to-change-which-python-version-gets-used-in-snow-leopard"}]}]]