[[{"text": ["Yes, its totally possible.", "Just don't forget to import superclass in the subclass file:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from file_where_superclass_is import superclass\n\nclass subclass1(superclass):\n    def method1(self):\n        # bla bla ..\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Sure, no problem.", "You would just do it like"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import ModuleWithSuperclass\n\nclass subclass1(ModuleWithSuperclass.superclass):\n    def method1(self):\n        pass\n</code>\n</pre>\n", "senID": 1}], [{"text": ["In superclass.py:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class superclass(object):\n    def __init__(self, var1, var2):\n        self.var1 = var1\n        self.var2 = var2\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then in subclass1.py:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from superclass import superclass\nclass subclass1(superclass):\n    def method1(self):\n        pass\n</code>\n</pre>\n", "senID": 3}], [{"text": ["You can subclass any class that exists in the namespace."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If your superclass exists in some weird location you can add it to your script via this answer"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "this answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/q/6098238/344286"}]}], [{"text": ["I suggest you have a read of the python modules tutorial.", "It will give you a lot more information on how you can arrange your classes into hierarchically arranged modules and packages."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python modules tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/modules.html"}]}], [{"text": ["Yes, obviously that is possible - That is the beauty of python !"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Module 1"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Module 1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n class base:\n    def p(self):\n        print \"Hello Base\"\n</code>\n</pre>\n", "senID": 2}, {"text": ["Module 2"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Module 2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n from module1 import base\n\nclass subclass(base):\n    def pp(self):\n        print \"Hello child\"\n</code>\n</pre>\n", "senID": 4}, {"text": ["Python Shell"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Python Shell", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n from module2 import subclass\nob = subclass()\nob.p()\n\"Hello Base\"\nob.pp()\n\"Hello child\"\n</code>\n</pre>\n", "senID": 6}, {"text": [":)"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]]