[[{"text": ["gives"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [1, 2, 3]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use int() and a list comprehensions: "], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "int()", "tag": "a", "pos": 0, "childList": [{"text": "int()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html#int"}, {"text": "int()", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://docs.python.org/tutorial/datastructures.html", "text": "list comprehensions", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; i = ['1', '2', '3']\n&gt;&gt;&gt; [int(k) for k in i]\n[1, 2, 3]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["As Long as the strings are of the form '1'  rather than 'one' then you can use the int() function. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Some sample code would be"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n strList = ['1','2','3']\nnumList = [int(x) for x in strList]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Or without the list comprehension"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n strList = ['1','2','3']\nnumList = []\nfor x in strList:\n    numList.append(int(x))\n</code>\n</pre>\n", "senID": 4}, {"text": ["Both examples iterate through the list on strings and apply the int() function to the value."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; int('5')\n5\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n map(int, ['1', '2', '3'])\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n a=['1','2','3']\nmap(lambda x: int(x),a)\n\n&gt; [1, 2, 3]\n</code>\n</pre>\n", "senID": 0}]]