[[{"code": "<pre>\n<code>\n print '\\n'.join('\\t'.join(x) for x in L)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You can solve it, as other answers suggest by just joining lines but better way would be to just use python csv module, so that later on you can easily change delimter or add header etc and read it back too, looks like you want tab delimited file"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nimport csv\n\ncsv_writer = csv.writer(sys.stdout, delimiter='\\t')\nrows = [ ('one', 'two', 'three'), ('four', 'five', 'six')]\ncsv_writer.writerows(rows)\n</code>\n</pre>\n", "senID": 1}, {"text": ["output:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n one two three\nfour    five    six\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Try this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \"\\n\".join(map(\"\\t\".join,l))\n</code>\n</pre>\n", "senID": 1}, {"text": ["Test"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; l = [ ('one', 'two', 'three'), ('four', 'five', 'six')]\n&gt;&gt;&gt; print \"\\n\".join(map(\"\\t\".join,l))\none     two     three\nfour    five    six\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n open(\"data.txt\", \"w\").write(\"\\n\".join((\"\\t\".join(item)) for item in list))\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The most idiomatic way, IMHO, is to use a list comprehension and a join:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print '\\n'.join('\\t'.join(i) for i in l)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You don't have to join the list in advance:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n with open(\"output.txt\", \"w\") as fp:\n    fp.writelines('%s\\n' % '\\t'.join(items) for items in a_list)\n</code>\n</pre>\n", "senID": 1}]]