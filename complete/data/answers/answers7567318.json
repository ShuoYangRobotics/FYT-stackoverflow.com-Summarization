[[{"text": ["You can try this code"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import random\nN = 5\ncount_list = range(1,N+1)\nrandom.shuffle(count_list)\n\nwhile count_list:\n    value = count_list.pop()\n    # do whatever you want with 'value'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can create the enumeration of the elements by something like that:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n mylist = list(xrange(10))\n</code>\n</pre>\n", "senID": 1}, {"text": ["then you can use the random.choice function to select your items:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "random.choice", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import random\n...\nrandom.choice(mylist)\n</code>\n</pre>\n", "senID": 3}, {"text": ["EDIT:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As Asim Ihsan correctly stated, my answer does not yet address the full problem of the OP.", "To remove the values from the list, simply list.remove() can be called:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "list.remove()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import random\n...\nvalue = random.choice(mylist)\nmylist.remove(value)\n</code>\n</pre>\n", "senID": 6}], [{"text": ["As for the first part:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; N = 5\n&gt;&gt;&gt; count_list = [i+1 for i in xrange(N)]\n&gt;&gt;&gt; count_list\n[1, 2, 3, 4, 5]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["As for the second, read this:\nhttp://docs.python.org/library/random.html"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/library/random.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/random.html"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from random import choice\n&gt;&gt;&gt; a = choice(count_list)\n&gt;&gt;&gt; a\n1\n&gt;&gt;&gt; count_list.remove(a)\n&gt;&gt;&gt; count_list\n[2, 3, 4, 5]\n</code>\n</pre>\n", "senID": 3}, {"text": ["That's the general idea."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["By the way, you may also be interested in reading this:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["http://code.activestate.com/recipes/59883-random-selection-of-elements-in-a-list-with-no-rep/"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "http://code.activestate.com/recipes/59883-random-selection-of-elements-in-a-list-with-no-rep/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/59883-random-selection-of-elements-in-a-list-with-no-rep/"}]}, {"text": ["There are a few implementations of fast random selection."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["You can use:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import random\nrandom.choice(range(n))\n</code>\n</pre>\n", "senID": 1}, {"text": ["or:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n random.choice(range(1,n+1))\n</code>\n</pre>\n", "senID": 3}, {"text": ["if you want it from 1 to n and not from 0."], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": "1", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "n", "childNum": 0, "tag": "code", "childList": []}, {"text": "0", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Create the list (edited):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n count_list = range(1, N+1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Select random element:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import random\nrandom.choice(count_list)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["You don't need to count stuff if you want to pick a random element.", "Just use random.choice() and pass your iterable:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "random.choice()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import random\nitems = ['foo', 'bar', 'baz']\nprint random.choice(items)\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you really have to count them, use random.randint(1, count+1)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "random.randint(1, count+1)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Then you arguably do not really want to create a list of numbers from 1 to N just for the purpose of picking one (why not just ask for a random number in that range directly, instead of explicitly creating it to choose from?", "), but instead to shuffle such a list.", "Fortunately, the random module has you covered for this, too: just use random.shuffle."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "random", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "random.shuffle", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["Of course, if you have a huge list of numbers and you only want to draw a few, then it certainly makes sense to draw each using random.choice and remove it."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "random.choice", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["But... why do you want to select numbers from a range, that corresponds to the count of some items?", "Are you going to use the number to select one of the items?", "Don't do that; that's going out of your way to make things too complicated.", "If you want to select one of the items, then do so directly - again with random.choice."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "random.choice", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}]]