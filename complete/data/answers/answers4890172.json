[[{"text": ["0 is False in a boolean context.", "Same applies for empty string, lists, etc."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "0", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "False", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["From the python docs:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python docs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html#booleans"}]}], [{"text": ["Zero is interpreted as \"false\" in python (and many other programming languages)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Numeric zero is always interpreted as false in Python:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/reference/expressions.html#booleans"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/reference/expressions.html#booleans", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html#booleans"}]}], [{"text": ["And almost anything that isn't 0 is True when used in a test.", "Any number (including negatives) is treated as True, but 'None' is False.", "Non-empty character strings are True, empty ones are False."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Check out boolean or logical functions of Python in the docs.", "Also, forget everything you ever learnt in basic math(s) at school, because...."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 1 and 1\n1\n\n&gt;&gt;&gt; 2 and 2\n2\n</code>\n</pre>\n", "senID": 2}, {"text": ["Honestly, that makes sense..."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["As stated elsewhere, unlike some languages (but like some others), Python will interpret 0 as false, thus the else is activated instead of the then.", "To make the then section run, you'd have to do something like if 1: (or another non-zero value) instead.", "Please don't code like this in real life.", "For more, please see the Python docs on if (and another) and booleans."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "if 1:", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "if", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/controlflow.html#if-statements"}, {"text": "another", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/compound_stmts.html#if"}, {"href": "http://docs.python.org/reference/expressions.html#booleans", "text": "booleans", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["0 is False.", "Both boolean and logically and in just about every other case."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What are you confused about?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]