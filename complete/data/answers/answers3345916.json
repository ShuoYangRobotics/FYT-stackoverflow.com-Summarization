[[], [{"text": ["Hmm, you've asked a laundry list of questions here.", "I'll pick a couple of the important ones and answer."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As for the rationale for languages like Python... the truth is that many web applications are either I/O bound or database bound.", "When that's the case it doesn't matter much if the language you're using is not as fast as C++- the bottleneck is elsewhere.", "Beyond that an awful lot of the core Python routines and data structures are written in C. Python is used to drive the highest level of logic, but most of the work happens in fast native code.", "It might surprise you to learn that in my current job I write 3D animation software in Python.", "Of course a lot of what is going on behind the scenes was written in C++.", "There's a name for this: \"Alternate Hard and Soft Layers.", "\" The reason we use Python is pretty simple- our choices are Python or C++ because of the APIs we write to, and we're several times as productive in Python.", "I would actually ask what the rationale for the existence of C++ is, but that's another subject (and flamebait ;)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["As for the visual presentation issues... traditionally there has been a pretty distinct separation between the server-side logic of an application and the in-browser logic, partially because the only language you can count on being in the browser is Javascript (and even then you can't actually count on it being on, leaving aside the existence of browsers like Lynx.", ") So you wrote your server logic in some sort of framework like Django, and then you used some Javascript framework to do your front-end stuff, and (in the last few years) you used something like AJAX to let them interoperate a bit more smoothly."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This is still pretty much the dominant paradigm, but things have started to change.", "A lot of server-side frameworks have started including facilities for generating Javascript in one way or another.", "And people have started writing compilers that translate from other languages to Javascript.", "One prominent example is Google's GWT, which translates from Java to Javascript: http://code.google.com/webtoolkit/ There are other examples of this sort of approach though.", "I did a lot of programming in a common lisp library called parenscript ( http://common-lisp.net/project/parenscript/) a few years ago, and there is the beginning of a Clojure ( http://clojure.org/) library for doing something similar.", "Also, one of the most interesting set of frameworks around is Seaside/Magritte ( http://www.seaside.st/ and http://www.lukas-renggli.ch/smalltalk/magritte) which use continuations to manage the state of widgets.", "There are similar frameworks for scheme and common lisp."], "childNum": 5, "tag": "p", "senID": 3, "childList": [{"text": "http://code.google.com/webtoolkit/", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://code.google.com/webtoolkit/"}, {"text": "http://common-lisp.net/project/parenscript/", "tag": "a", "pos": 4, "childList": [], "childNum": 0, "href": "http://common-lisp.net/project/parenscript/"}, {"text": "http://clojure.org/", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://clojure.org/"}, {"text": "http://www.seaside.st/", "tag": "a", "pos": 5, "childList": [], "childNum": 0, "href": "http://www.seaside.st/"}, {"text": "http://www.lukas-renggli.ch/smalltalk/magritte", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.lukas-renggli.ch/smalltalk/magritte"}]}, {"text": ["As for html being like assembler, I'm inclined to agree in cases where I am writing the html.", "I tend to use some sort of abstraction layer to generate html in those cases.", "But an awful lot of the html in the world is made by designers.", "Some of them use GUI applications to generate html, and the better ones use text editors.", "But most of them don't want to deal with anything more complicated than simple templating in html, which is what they know."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["One thing you have to understand about the evolution of the web is that http and html were not initially designed to do the kinds of things they are being used for today.", "And on top of that the major browsers have very often been really broken.", "And on top of that you have no control over what facilities the user has available to them- they could be using any browser, with or without Java, Javascript, Flash, etc, and with any of a number of permutations of bugsets, depending on the browser.", "So it's only in the last several years that things have stabilized enough for people to be a little less conservative about the facilities they use on the client side.", "It's still a good idea to make sure that pages degrade gracefully, when possible.", "A general purpose web page should be usable in a text browser, though of course many types of web applications can't be made to work in that limited an environment."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["HTML 5 is going to shake a lot of this up.", "But it is going to be a long time before it is safe to assume that everyone is using a browser capable of doing anything from HTML 5, and longer before it is safe to assume that everyone is using a browser that implements all of HTML 5.", "Anyway, I'd suggest you look around at some of the less visible projects, like Seaside for instance.", "There is a lot of experimentation going on.", "But the web has always been a tough environment for this kind of thing."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Correct.", "Good assessment.", "Is that a problem?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["False.", "Indeed, not even close.", "All browsers uses HTML.", "That cannot be changed easily. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Use view source in your browser to answer this question for yourself.", "In general, you should do this for every web site you visit.", "You'll learn a great deal about the web and web development."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "view source", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Yes.", "We use FLEX and Django."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Yes. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Yes."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Some people like to despise Java.", "There's little technical merit to their argument."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["After you've used Java and Python, you'll find that Python's less wordy.", "You get more done with less typing."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["They're better than the alternatives.", "For specific things people need to do, Python (or PHP) are better than the alternatives.", "For \"everything\" or even a broad class of things, it may not be perfectly clear."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["We do a lot of ad-hoc data crunching.", "Python's flexibility is absolutely superior to the alternatives."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["That's hardly relevant, it turns out.", "Web sites are not governed by raw speed of one element of the architecture."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["It's easier than the alternatives."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["No.  "], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Have you done much with Python?", "You should give it a try for a year or so.", "It makes C++ quite tedious and error-prone by comparison."], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"text": ["No. "], "childNum": 0, "tag": "p", "senID": 14, "childList": []}], [{"text": ["Yup \u2014 if you want a website, someone\u2019s going to have to write some HTML."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["HTML is unlike assembler in that you can\u2019t write parsers for new languages in HTML.", "HTML is just a declarative language for adding meaning to text.", "As such, the main thing is that everyone in the world agrees how how to render it, and what the tags mean.", "Something new might replace it eventually, but HTML has proven pretty serviceable and resilient so far.", "It\u2019s also pretty easy to learn, and free."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Django really just concerns itself with the server side of websites.", "It leaves the client side of things (i.e.", "whatever runs in the browser) up to you.", "(Aside from the built-in admin site."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I don\u2019t think it\u2019s common.", "Java applets are hardly used any more, and some people (cough Steve Jobs cough sorry about the cough there, I said \u201cSteve Jobs\u201d) think Flash will go the same way."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "cough", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "cough", "childNum": 0, "tag": "strong", "childList": []}]}], [{"text": ["In addition to everything everyone else have said so far, just making a very basic web site with HTML, some CSS and maybe even some JavaScript will probably give you a decent understanding of how those three work.", "A place like HTMLDog is a good place to start."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "HTMLDog", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://htmldog.com/guides/htmlbeginner/"}]}, {"text": ["In addition, read up a little on the HTTP-protocol as this is still what normal web pages use and therefore defines the basics of how servers and clients communicate on the web."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "HTTP-protocol", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Http"}]}, {"text": ["HTTP, HTML, CSS and JavaScript is (and will probably be for quite a while) the same wheather you use Java, Django, ASP.NET or PHP for your application logic.", "If you are getting more into web development, these are relevant no matter what server-side technology you would ever choose.", "Also, a general understanding of browsers is nice to have.", "Both how they handle the visual rendering of HTML and CSS, but also how sessions, cookies and requests are handled."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The javascript stuff might look daunting, but nowadays there are pretty decent libraries that are Free/OSS, most notably jquery.", "I consider jquery to be partly a replacement for Flash."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "jquery", "childNum": 0, "tag": "b", "pos": 0, "childList": []}]}, {"text": ["You don't need that much extra javascript to use it productively.", "I'd definitely use jquery if I had to make an interface like chess.com uses."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["see www.jquery.com and www.jqueryui.com"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "www.jquery.com", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jqueryui.com"}, {"href": "http://www.jqueryui.com", "text": "www.jqueryui.com", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Well, first of all, you shouldn't believe everything you read on the Internet:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Yes, but that is the innovation.", "Prior to frameworks like Django and Rails, a lot of that backend work was done by hand.", "Django frees up a developer's time to work on more application-level features."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Yeah, pretty much.", "Nothing better than HTML, CSS, and JS has presented itself.", "While I agree that in some ways, HTML seems \"low-level\" in the same sense that assembly language is low-level, I think most would agree that, relative to problem domain, HTML is much nicer to work with."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You can.", "Flash and Java are just embedded in HTML pages, and Django spits out HTML, so that's certainly possible."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["In addition to applets, you can write a backend in Java (Java Server Pages, for example).", "I think most web developers who have worked with both would agree than Ruby and Python are much nicer to use than Java.", "Java web frameworks are kind of a pain, Java lacks a REPL, Java has a separate compilation step... Java is also statically typed; you can argue all day about the merits of dynamic typing vs. static typing, but Rails and Django both take advantage of Ruby's and Python's typing and introspection capabilities to make a lot of code less verbose than that of Java.", "(Whether that makes Ruby and Python better than Java is subjective."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "better", "childNum": 0, "tag": "em", "pos": 3, "childList": []}]}, {"text": ["Performance isn't everything.", "Almost everyone wants to think their code is performance critical, but that's often not the case.", "As noted in a few other answers, most web apps are I/O bound anyway -- they're either waiting for database access, or waiting on the network, and both of those types of operations are orders of magnitude slower than CPU-intensive tasks, even with slow(er) interpreted languages.", "Furthermore, a lot of processing in web apps takes place on strings, and string processing is much nicer in Python or Ruby than it is in, e.g., C or C++.", "Python and Ruby are also more concise languages, and both offer a REPL which can shorten development time.", "Plus it's easy to write C extension modules in both Python and Ruby, so if you really, really find a code path that calls out for optimization, you can always drop down into C if you want."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Garbage collection is a plus, though."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["That's why I use Seaside.", "You still have to understand html and css and javascript, but at least there is a programming language abstraction over html.", "I'll never go back to a template based system. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]