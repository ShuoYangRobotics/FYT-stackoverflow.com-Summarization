[[{"text": ["In Ruby and Perl 6 this has been called \"splat\", and I think most people from those communities will figure out what you mean if you call it that."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The Python tutorial uses the phrase \"unpacking argument lists\", which is long and descriptive.", "I haven't heard any other particular name for it in Python."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/controlflow.html#unpacking-argument-lists"}]}], [{"text": ["I call it \"positional expansion\", as opposed to ** which I call \"keyword expansion\"."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "**", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["I say \"star-args\" and Python people seem to know what i mean."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["** is trickier - I think just \"qargs\" since it is usually used as **kw or **kwargs "], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "**", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "**kw", "childNum": 0, "tag": "code", "childList": []}, {"text": "**kwargs", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["The Python Tutorial is simply calls it 'the *-operator'.", "It performs unpacking of arbitrary argument lists."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Python Tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/controlflow.html#unpacking-argument-lists"}, {"text": "*", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "arbitrary argument lists", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/controlflow.html#arbitrary-argument-lists"}]}], [{"text": ["One can also call * a gather parameter (when used in function arguments definition) or a scatter operator (when used at function invocation)."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "*", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "gather parameter", "childNum": 0, "tag": "strong", "childList": []}, {"text": "scatter operator", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["As seen here: Think Python/Tuples/Variable-length argument tuples."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Think Python/Tuples/Variable-length argument tuples", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikibooks.org/wiki/Think_Python/Tuples#Variable-length_argument_tuples"}]}], [{"text": ["I believe it's most commonly called the \"splat operator.", "\" Unpacking arguments is what is does."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Unpacking arguments", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1141504/name-this-python-ruby-language-construct-using-array-values-to-satisfy-function"}]}], [{"text": ["I call *args \"star args\" or \"varargs\" and **kwargs \"keyword args\"."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]