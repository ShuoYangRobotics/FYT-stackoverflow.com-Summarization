[[{"text": ["This may have been answered before: Python URLLib / URLLib2 POST."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python URLLib / URLLib2 POST", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/3238925/python-urllib-urllib2-post"}]}, {"text": ["Your server is likely performing a 302 redirect from http://myserver/post_service to http://myserver/post_service/.", "When the 302 redirect is performed, the request changes from POST to GET (see Issue 1401).", "Try changing url to http://myserver/post_service/."], "childNum": 5, "tag": "p", "senID": 1, "childList": [{"text": "http://myserver/post_service", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "http://myserver/post_service/", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"href": "http://bugs.python.org/issue1401", "text": "Issue 1401", "childNum": 0, "tag": "a", "childList": []}, {"text": "url", "childNum": 0, "tag": "code", "childList": []}, {"text": "http://myserver/post_service/", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["The requests module may ease your pain."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "requests", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://kennethreitz.com/requests-python-http-module.html"}]}, {"code": "<pre>\n<code>\n url = 'http://myserver/post_service'\ndata = dict(name='joe', age='10')\n\nr = requests.post(url, data=data, allow_redirects=True)\nprint r.content\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Do it in stages, and modify the object, like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # make a string with the request type in it:\nmethod = \"POST\"\n# create a handler. you can specify different handlers here (file uploads etc)\n# but we go for the default\nhandler = urllib2.HTTPHandler()\n# create an openerdirector instance\nopener = urllib2.build_opener(handler)\n# build a request\nrequest = urllib2.Request(url, data=dictionary_of_POST_fields_or_None )\n# add any other information you want\nrequest.add_header(\"Content-Type\",'application/json')\n# overload the get method function with a small anonymous function...\nrequest.get_method = lambda: method\n# try it; don't forget to catch the result\ntry:\n    connection = opener.open(request)\nexcept urllib2.HTTPError,e:\n    connection = e\n\n# check. Substitute with appropriate HTTP code.\nif connection.code == 200:\n    data = connection.read()\nelse:\n    # handle the error case. connection.read() will still contain data\n    # if any was returned, but it probably won't be of any use\n</code>\n</pre>\n", "senID": 1}, {"text": ["This way allows you to extend to making PUT, DELETE, HEAD and OPTIONS requests too, simply by substituting the value of method or even wrapping it up in a function.", "Depending on what you're trying to do, you may also need a different HTTP handler, e.g.", "for multi file upload."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "PUT", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "DELETE", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "HEAD", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "OPTIONS", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Have a read of the urllib Missing Manual.", "Pulled from there is the following simple example of a POST request."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "urllib Missing Manual", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.voidspace.org.uk/python/articles/urllib2.shtml"}]}, {"code": "<pre>\n<code>\n url = 'http://myserver/post_service'\ndata = urllib.urlencode({'name' : 'joe', 'age'  : '10'})\nreq = urllib2.Request(url, data)\nresponse = urllib2.urlopen(req)\nprint response.read()\n</code>\n</pre>\n", "senID": 1}, {"text": ["As suggested by @Michael Kent do consider requests, it's great."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "requests", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/requests"}]}, {"text": ["EDIT: This said, I do not know why passing data to urlopen() does not result in a POST request; It should.", "I suspect your server is redirecting, or misbehaving."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["Try this instead:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n url = 'http://myserver/post_service'\ndata = urllib.urlencode({'name' : 'joe',\n                         'age'  : '10'})\nreq = urllib2.Request(url=url,data=data)\ncontent = urllib2.urlopen(req).read()\nprint content\n</code>\n</pre>\n", "senID": 1}], [{"text": ["it should be sending a POST if you provide a data parameter (like you are doing):"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "should", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["from the docs:\n\"the HTTP request will be a POST instead of a GET when the data parameter is provided\""], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["so.. add some debug output to see what's up from the client side."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["you can modify your code to this and try again:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import urllib\nimport urllib2\n\nurl = 'http://myserver/post_service'\nopener = urllib2.build_opener(urllib2.HTTPHandler(debuglevel=1))\ndata = urllib.urlencode({'name' : 'joe',\n                         'age'  : '10'})\ncontent = opener.open(url, data=data).read()\n</code>\n</pre>\n", "senID": 4}]]