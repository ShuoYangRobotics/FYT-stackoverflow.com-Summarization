[[{"text": ["you can use"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["(with a trailing comma, to not insert a newline), so\ntry this"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n ... print '{0} / {1}, '.format(x+1, y), #&lt;= with a ,\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I think that sys.stdout.write() would be fine, but the standard way in Python 2 is print with a trailing comma, as mb14 suggested.", "If you are using Python 2.6+ and want to be upward-compatible to Python 3, you can use the new print function which offers a more readable syntax:"], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "sys.stdout.write()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "print", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "mb14", "childNum": 0, "tag": "em", "childList": []}, {"text": "print", "childNum": 0, "tag": "code", "childList": []}, {"text": "function", "childNum": 0, "tag": "em", "childList": []}]}, {"code": "<pre>\n<code>\n from __future__ import print_function\nprint(\"Hello World\", end=\"\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["No need for write."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "write", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["If you put a trailing comma after the print statement, you'll get what you need."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Caveats:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "You will need to add a blank print statement at the end if you want the next text to continue on a new line.", "tag": "none", "senID": 3}, {"text": "May be different in Python 3.x", "tag": "none", "senID": 4}, {"text": "There will always be at least one space added as a separator. IN this case, that is okay, because you want a space separating it anyway.", "tag": "none", "senID": 5}]}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; while x &lt; y:\n...     print '{0} / {1}, '.format(x+1, y),\n...     x += 1\n... \n1 / 3,  2 / 3,  3 / 3,\n</code>\n</pre>\n", "senID": 0}, {"text": ["Notice the additional comma."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You can use , in the end of print statement.", "while x&lt;y:\n    print '{0} / {1}, '.format(x+1, y) ,\n    x += 1 You can further read this."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": ",", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "while x&lt;y:\n    print '{0} / {1}, '.format(x+1, y) ,\n    x += 1", "childNum": 1, "tag": "pre", "pos": 1, "childList": [{"text": "while x&lt;y:\n    print '{0} / {1}, '.format(x+1, y) ,\n    x += 1", "tag": "code"}]}, {"text": "while x&lt;y:\n    print '{0} / {1}, '.format(x+1, y) ,\n    x += 1", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://docs.python.org/reference/simple_stmts.html#print", "text": "this", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Here is a way to achieve what you want using itertools.", "This will also work ok for Python3 where print becomes a function"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from itertools import count, takewhile\ny=3\nprint(\", \".join(\"{0} /  {1}\".format(x,y) for x in takewhile(lambda x: x&lt;=y,count(1))))\n</code>\n</pre>\n", "senID": 1}, {"text": ["You may find the following approach is easier to follow"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n y=3\nitems_to_print = []\nfor x in range(y):\n    items_to_print.append(\"{0} /  {1}\".format(x+1, y))\nprint(\", \".join(items_to_print))\n</code>\n</pre>\n", "senID": 3}, {"text": ["The problems with using print with a trailing comma are that you get an extra comma at the end, and no newline.", "It also means you have to have separate code to be forward compatible with python3"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "print", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]