[[{"code": "<pre>\n<code>\n class MySubClass(MySuperClass):\n    def __init__(self):\n        MySuperClass.__init__(self)\n</code>\n</pre>\n", "senID": 0}, {"text": ["The section on inheritance in the python documentation explains it in more detail"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "section on inheritance", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/tut/node11.html#SECTION0011500000000000000000"}]}], [{"text": ["You use:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class DerivedClassName(BaseClassName):\n</code>\n</pre>\n", "senID": 1}, {"text": ["For details, see the Python docs, section 9.5."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Python docs, section 9.5", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/tut/node11.html"}]}], [{"code": "<pre>\n<code>\n class Class1(object):\n    pass\n\nclass Class2(Class1):\n    pass\n</code>\n</pre>\n", "senID": 0}, {"text": ["Class2 is a sub-class of Class1"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n class Mammal(object): \n#mammal stuff\n\nclass Dog(Mammal): \n#doggie stuff\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The use of \"super\" (see Python Built-in, super) may be a slightly better method of calling the parent for initialization:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python Built-in", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/lib/built-in-funcs.html"}]}, {"code": "<pre>\n<code>\n # Initialize using Parent\n#\nclass MySubClass(MySuperClass):\n    def __init__(self):\n        MySuperClass.__init__(self)\n\n# Better initialize using Parent (less redundant).\n#\nclass MySubClassBetter(MySuperClass):\n    def __init__(self):\n        super(MySubClassBetter, self).__init__()\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n class Subclass (SuperClass):\n      # Subclass stuff here\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Subclassing in Python is done as follows:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class WindowElement:\n    def print(self):\n        pass\n\nclass Button(WindowElement):\n    def print(self):\n        pass\n</code>\n</pre>\n", "senID": 1}, {"text": ["Here is a tutorial about Python that also contains classes and subclasses."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.gidnetwork.com/b-137.html"}]}], [{"text": ["A heroic little example:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class SuperHero(object): #superclass, inherits from default object\n    def getName(self):\n        raise NotImplementedError #you want to override this on the child classes\n\nclass SuperMan(SuperHero): #subclass, inherits from SuperHero\n    def getName(self):\n        return \"Clark Kent\"\n\nclass SuperManII(SuperHero): #another subclass\n    def getName(self):\n       return \"Clark Kent, Jr.\"\n\nif __name__ == \"__main__\":\n    sm = SuperMan()\n    print sm.getName()\n    sm2 = SuperManII()\n    print sm2.getName()\n</code>\n</pre>\n", "senID": 1}]]