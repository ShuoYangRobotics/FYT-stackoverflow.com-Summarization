[[{"code": "<pre>\n<code>\n try: \n    test()\nexcept TypeError:\n    print \"error\"\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n In [1]: def test():\n     ...:     print 'hi'\n     ...:\n\nIn [2]: try:\n     ...:     test(1)\n     ...: except:\n     ...:     print 'exception'\n     ...:\nexception\n</code>\n</pre>\n", "senID": 0}, {"text": ["Here is the relevant section in the tutorial"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/errors.html"}]}, {"text": ["By the way.", "to fix this error, you should not wrap the function call in a try-except.", "Instead call it with the right number of arguments!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You said"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The def statement is correct, it is not raising any exceptions.", "So putting it in a try won't do anything."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "def", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "try", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["What raises the exception is the actual call to the function.", "So that should be put in the try instead:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "try", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n try: \n    test()\nexcept TypeError:\n    print \"error\"\n</code>\n</pre>\n", "senID": 3}], [{"text": ["If you want to throw the error at call-time, which it sounds like you might want, you could try this aproach:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def test(*args):\n    if args:\n        raise\n    print 'hi'\n</code>\n</pre>\n", "senID": 1}, {"text": ["This will shift the error from the calling location to the function.", "It accepts any number of parameters via the *args list.", "Not that I know why you'd want to do that."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "*args", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["A better way to handle a variable number of arguments in Python is as follows:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def foo(*args, **kwargs):\n    # args will hold the positional arguments\n    print args\n\n    # kwargs will hold the named arguments\n    print kwargs\n\n\n# Now, all of these work\nfoo(1)\nfoo(1,2)\nfoo(1,2,third=3)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This is valid:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n try:\n  def test():\n    print 'hi'\nexcept:\n  print 'error'\n\n\ntest()\n</code>\n</pre>\n", "senID": 1}]]