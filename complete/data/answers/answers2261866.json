[[{"text": ["Grab the openssl and libgw32c packages from the gnuwin32 project (download the \"Developer files\"!", ") and extract them where you installed gnuwin32 - or if you don't have gnuwin32 tools yet, you can extract it anywhere (e.g.", "\"C:\\Program Files\\gnuwin32\").", "Enter the gnuwin32 directory in the \"setup.py\" file (replace \"C:\\Utils\\GnuWin32\" in line 154)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "openssl", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://gnuwin32.sourceforge.net/packages/openssl.htm"}, {"text": "libgw32c", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://gnuwin32.sourceforge.net/packages/libgw32c.htm"}]}, {"text": ["Then you can build the ssl module without problems.", "I tested it myself, using GCC \"4.3.2-tdm-2 mingw32\" and with the command line setup.py build -cmingw32 (-cmingw32 forces MinGW as I also have Microsoft's compiler installed).", "Execute setup.py install after the successful build to install ssl."], "childNum": 5, "tag": "p", "senID": 1, "childList": [{"text": "ssl", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "setup.py build -cmingw32", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "-cmingw32", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "setup.py install", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "ssl", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I had to use the following modification of AndiDog's approach:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n setup.py build -cmingw32\nsetup.py install --skip-build\n</code>\n</pre>\n", "senID": 1}, {"text": ["Without the --skip-build option, the install would try to build again and complain about MSVC again:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n error: Python was built with Visual Studio 2003;\nextensions must be built with a compiler than can generate compatible binaries.\nVisual Studio 2003 was not found on this system. If you have Cygwin installed,\nyou can try compiling with MingW32, by passing \"-c mingw32\" to setup.py.\n</code>\n</pre>\n", "senID": 3}, {"text": ["Also, initially when using the build command I had a lot of errors like this:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n build\\temp.win32-2.5\\Release\\ssl\\_ssl2.o:_ssl2.c:(.text+0x1d): undefined reference to `_imp__PyImport_ImportModule'\nbuild\\temp.win32-2.5\\Release\\ssl\\_ssl2.o:_ssl2.c:(.text+0x34): undefined reference to `_imp__PyObject_GetAttrString'\nbuild\\temp.win32-2.5\\Release\\ssl\\_ssl2.o:_ssl2.c:(.text+0x53): undefined reference to `_imp__PyCObject_AsVoidPtr'\n</code>\n</pre>\n", "senID": 5}, {"text": ["This was because I had originally installed the 64bit version of Python 2.5.4 (python-2.5.4.amd64.msi).", "I removed that and installed the 32bit version (python-2.5.4.msi).", "This includes the libpython25.a file which the build command was looking for."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["You can download SSL1.15 for Python 2.52 via http://ohbug.com/archives/compile-ssl-for-python.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://ohbug.com/archives/compile-ssl-for-python.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://ohbug.com/archives/compile-ssl-for-python.html"}]}], [{"text": ["This blog may help you, \nhttp://malei39.blogspot.com/2010/02/install-ssl-module-for-pyhon-254.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://malei39.blogspot.com/2010/02/install-ssl-module-for-pyhon-254.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://malei39.blogspot.com/2010/02/install-ssl-module-for-pyhon-254.html"}]}], [{"text": ["I used AndiDog's and Saxon Druce answers which are 100% correct but might need some clarification for inexperienced users like me:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That should do it."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I am actually surprised that they did not manage to add ssl library to app engine sdk or python installer in all this years, may be people do not use it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Since TDM-GCC 4.6.1 was released in September 2011.", "TDM-GCC installer will download the lastest GCC version (4.6.1) even though the tdm-gcc-4.5.2.exe is used.", "GCC 4.6.1 will cause GCC build error \"error: unrecognized command line option '-mno-cygwin'\"  This is because -mno-cygwin become deprecated in GCC 4.6.1.", "In order to compile ssl package against python 2.5 we need to use GCC version 4.5.2."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["After installing TDM-GCC you need to do extra step from the instruction by @BanditoBunny."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["3.1 Download gcc-4.5.2-tdm-1-core.zip from http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%204.5%20series/4.5.2-tdm-1%20SJLJ/gcc-4.5.2-tdm-1-core.zip/download.", "Unzip the file into the MinGW32 folder.", "3.2 Go to the SSL folder then open a command prompt there.", "Check GCC version (using gcc --version) to make sure it uses version 4.5.2.", "Then continue with step 4."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%204.5%20series/4.5.2-tdm-1%20SJLJ/gcc-4.5.2-tdm-1-core.zip/download", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%204.5%20series/4.5.2-tdm-1%20SJLJ/gcc-4.5.2-tdm-1-core.zip/download"}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}]]