[[{"text": ["You can include line breaks within parentheses (or brackets), e.g."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def method(self, alpha, beta, gamma, delta, epsilon, zeta,\n                 eta, theta, iota, kappa):\n    pass\n</code>\n</pre>\n", "senID": 1}, {"text": ["(the amount of whitespace to include is, of course, up to you)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["But in this case, you could also consider"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def method(self, *args):\n    pass\n</code>\n</pre>\n", "senID": 4}, {"text": ["and/or"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n def method(self, **kwargs):\n    pass\n</code>\n</pre>\n", "senID": 6}, {"text": ["depending on how you use the arguments (and how you want the function to be called)."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["I think the 'Pythonic' way of answering this is to look deeper than syntax.", "Passing in that many arguments to a method indicates a likely problem with your object model. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I indent the subsequent lines 2 levels:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def method(self, alpha, beta, gamma, delta, epsilon, zeta, eta,\n        theta, iota, kappa):\n    pass\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you have a function that takes so many variables as arguments, the last thing you have to worry about is indentation"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I just split to the open bracket once 79 is hit, like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def method(self, alpha, beta, gamma, delta, epsilon, zeta, eta, theta, iota,\n           kappa):\n</code>\n</pre>\n", "senID": 1}, {"text": ["And when names are too long to be put after the opening bracket, I do it like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n x.long_function_is_long(\n    long_argument_is_loooooooooooooooooooooooooooooooooooooooong,\n    longer_argument_is_looooooooooooooooooooooooooooooooooooooooonger\n)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I usually do this, I don't know if it's the best, but it works.", "Since I have to split the line  I make them equally longer (if I can):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def method(self, alpha, beta, gamma, delta, epsilon, \\\n                 zeta, eta, theta, iota, kappa):\n    pass\n</code>\n</pre>\n", "senID": 1}, {"text": ["Also, having such quantity of parameters I would recommend the same as David, use *args"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "*args", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]