[[{"text": ["On a Mac the easiest ways to get started are (in no particular order):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["Enthought Python Distribution"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}, {"text": ["Macports"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["Scipy Superpack"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}]}, {"text": ["I've done exactly this (replace Matlab with Python) about 2 years ago and haven't looked back.", "The broadcasting in Python, more intuitive memory model and other Numpy advantages make numerical work a complete pleasure.", "Plus with f2py, cython it is incredibly easy to put inner loops in another language.", "This is a good place to start - other impressive pages to provide motiviation are PerformancePython and ParallelProgramming.", "Be sure to understand Pythons \"variable is a reference to an object\" semantics... after that adjustment everything is plain sailing.", "One of the coolest things that beats matlab is in 2 lines I run over 8 cores... p = Pool(8); res = p.map(analysis_function,list_of_data) - MATLAB parallels toolboxes are so expensive I've yet to see a University that actually has them."], "childNum": 4, "tag": "p", "senID": 4, "childList": [{"text": "This", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://www.scipy.org/NumPy%5Ffor%5FMatlab%5FUsers"}, {"text": "PerformancePython", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.scipy.org/PerformancePython"}, {"text": "ParallelProgramming", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.scipy.org/ParallelProgramming"}, {"text": "p = Pool(8); res = p.map(analysis_function,list_of_data)", "childNum": 0, "tag": "code", "pos": 5, "childList": []}]}], [{"text": ["I've been programming with Matlab for about 15 years, and with Python for about 10.", "It usually breaks down this way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you can satisfy the following conditions:\n    1.", "You primarily use matrices and matrix operations\n    2.", "You have the money for a Matlab license\n    3.", "You work on a platform that mathworks supports"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Then, by all means, use Matlab.", "Otherwise, if you have data structures other than matrices, want an open-source option that allows you to deliver solutions without worrying about licenses, and need to build on platforms that mathworks does not support; then, go with Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The matlab language is clunky, but the user interface is slick.", "The Python language is very nice -- with iterators, generators, and functional programming tools that matlab lacks; however, you will have to pick and choose to put together a nice slick interface if you don't like (or can't use) SAGE."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I hope that helps."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Maybe you like sagemath, which 'combines the power of many existing open-source packages into a common Python-based interface'.", "Here is a feature tour."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "sagemath", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sagemath.org/"}, {"text": "feature tour", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://sagemath.org/doc/tutorial/tour.html"}]}], [{"text": ["Try Sage - it is designed as an open source replacement for Matlab, Mathematica etc.", "It is implemented in Python and can be scripted with Python, but it also adds a lot of maths-specific features.", "There is an installer for the Mac, so you will not need to download lots of individual packages."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Sage", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sagemath.org/"}, {"text": "installer for the Mac", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.sagemath.org/download-mac.html"}]}, {"text": ["There is also GNU Octave - another open source alternative to Mathematica/Matab that has its own programming language.", "However I have not found any information on a Mac version (though I have not looked very hard)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "GNU Octave", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.gnu.org/software/octave/"}]}], [{"text": ["python(x,y) is quite powerful, but only for Windows or Linux so you'll have to use bootcamp or Linux.", "A more lightweight package for mathematics is Matplotlib, which basically adds plotting abilities to the Python language (better used together with IPython)."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "python(x,y)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.pythonxy.com/foreword.php"}, {"text": "Matplotlib", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/"}, {"href": "http://ipython.scipy.org/moin/", "text": "IPython", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Duplicate of this."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/179904/what-is-matlab-good-for-why-is-it-so-used-by-universities-when-is-it-better-tha"}]}, {"text": ["My sense is that for pure numerical/linear algebra computations and visualization Matlab is a slightly more consistent development environment.", "Numpy/Scipy/Matplotlib feel, to me, a bit haphazard.", "If you are building a full program -- to automate a system or display results on a webpage -- Python the advantage of being a real programming language first and foremost.", "But for interactive numerical processing I think Matlab still wins.", "The lack of element wise infix operators in Python is one small example (PEP 225).", "For statistical computing, data exploration and visualization, it is hard to beat R."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "PEP 225", "tag": "a", "pos": 4, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0225/"}, {"text": "R", "tag": "a", "pos": 5, "childList": [], "childNum": 0, "href": "http://www.r-project.org"}]}], [{"text": ["Try Ubuntu Linux.", "Install it on your Mac, I have it on all my Macs.", "Ubuntu has all required packages to work with numerical math and visualization.", "Then, you will need to install only 2 packages:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Ubuntu Linux", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["1) Install SciPy.", "It is open-source software for mathematics, science, and engineering.", "It includes a lot of stuff, e.g.", "matplotlib, which is a python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "SciPy", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "matplotlib", "childNum": 0, "tag": "strong", "pos": 3, "childList": []}]}, {"text": ["2) Install ipython.", "It has enhanced interactive Python shell. "], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "ipython", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["In order to install them, you can use a simple shell command in the Terminal:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n aptitude install  python-scipy ipython\n</code>\n</pre>\n", "senID": 4}, {"text": ["Remember, that all these programs are in the very intensive development and thanks to Ubuntu's Software Update you will always have all it up-to-date without reinstalling it. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["It would be great if the matlab to python conversion mat2py project at sourcefourge took off.. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mat2py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/mat2py/"}]}]]