[[{"text": ["This is a bit hacky, but you could try it.", "It uses the AT command to run the_programm.exe up to a minute in the future (which it computes using the %TIME% environment variable and SET arithmetic)."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "AT", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "the_programm.exe", "childNum": 0, "tag": "code", "childList": []}, {"text": "%TIME%", "childNum": 0, "tag": "code", "childList": []}, {"text": "SET", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["batch.bat:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n @echo off\nsetlocal\n:: store the current time so it does not change while parsing\nset t=%time%\n:: parse hour, minute, second\nset h=%t:~0,2%\nset m=%t:~3,2%\nset s=%t:~6,2%\n:: reduce strings to simple integers\nif \"%h:~0,1%\"==\" \" set h=%h:~1%\nif \"%m:~0,1%\"==\"0\" set m=%m:~1%\nif \"%s:~0,1%\"==\"0\" set s=%s:~1%\n:: choose number of seconds in the future; granularity for AT is one\n:: minute, plus we need a few extra seconds for this script to run\nset x=70\n:: calculate hour and minute to run the program\nset /a x=s + x\nset /a s=\"x %% 60\"\nset /a x=m + x / 60\nset /a m=\"x %% 60\"\nset /a h=h + x / 60\nset /a h=\"h %% 24\"\n:: schedule the program to run\nat %h%:%m% c:\\the_programm.exe\n</code>\n</pre>\n", "senID": 2}, {"text": ["You can look at the AT /?", "and SET /?", "to see what each of these is doing.", "I left off the /interactive parameter of AT since you commented that \"no user interaction is allowed\"."], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "AT /?", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "SET /?", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "/interactive", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "AT", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Caveats:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "It appears that ", "tag": "none", "senID": 5}, {"text": "If your system is loaded down and batch.bat takes more than 10 seconds to run, the ", "tag": "none", "senID": 6}]}, {"text": ["The START command, unfortunately, even when given /i to ignore the current environment, seems to pass along the open file descriptors of the parent cmd.exe process.", "These file descriptors appear to be handed off to subprocesses, even if the subprocesses are redirected to NUL, and are kept open even if intermediate shell processes terminate.", "You can see this in Process Explorer if you have a batch file which STARTs another batch file which STARTs another batch file (etc.", ") which STARTs a GUI Windows app.", "Once the intermediate batch files have terminated, the GUI app will own the file handles, even if it (and the intermediate batch files) were all redirected to NUL."], "childNum": 8, "tag": "p", "senID": 7, "childList": [{"text": "START", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "/i", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "cmd.exe", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Process Explorer", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx"}, {"text": "START", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "START", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "START", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "NUL", "childNum": 0, "tag": "code", "pos": 4, "childList": []}]}], [{"text": ["I don't think Windows will let you delete an open file.", "Sounds like you're wanting to throw away the program's output; would redirecting to 'nul' instead do what you need?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["As I understand it, this is the issue, and what he wants to do:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["How about changing your \"batch.bat\" file to contain:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n start c:\\the_programm.exe\npause\n</code>\n</pre>\n", "senID": 2}, {"text": ["This will keep the \"batch.bat\" file running until you hit a key on that window.", "Once you hit a key, the \"os.system\" python command will return, and then python will call \"os.remove\"."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Are you closing the file after you're done reading it?", "The following works at my end:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import os\n\nos.system('runbat.bat &gt; runbat.log 2&gt;&amp;1')\nf = open('runbat.log')\nprint f.read()\nf.close()\nos.remove('runbat.log')\n</code>\n</pre>\n", "senID": 1}, {"text": ["but fails if I remove the f.close() line."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "f.close()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Why capture to a file if you're just deleting it immediately?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["How about this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n os.system(C:\\batch.bat &gt;nul 2&gt;&amp;1)\n</code>\n</pre>\n", "senID": 2}, {"text": ["EDIT: Oops, I missed your comment about reading the file, I only noticed the code."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Finally I could find a proper solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I am not using a batch file anymore for starting the_programm.exe, but a Python script:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from subprocess import Popen\n\n     if __name__ == '__main__':\n          Popen('C:/the_programm.exe', close_fds=True)\n</code>\n</pre>\n", "senID": 2}, {"text": ["The close_fds parameter decouples the file handles from the .exe process!", "That's it!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]