[[{"text": ["The only tool in Python for Javascript, that I am aware of is python-spidermonkey.", "I have never used it though."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python-spidermonkey", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/python-spidermonkey/"}]}, {"text": ["With Jython you could (ab-)use HttpUnit. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "HttpUnit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://httpunit.sourceforge.net/index.html"}]}, {"text": ["Edit: forgot that you can use Scrapy.", "It supports Javascript through Spidermonkey, and you can even use Firefox for crawling the web."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "Scrapy", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://scrapy.org/"}]}], [{"text": ["Well obviously python won't interpret the JS for you (though there may be modules out there that can).", "I suppose you need to convert the JS instructions to equivalent transformations in Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I suppose ElementTree or BeautifulSoup would be good starting points to interpret the HTML structure."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["To execute JavaScript, you need to do much of what a full web browser does, except for the rendering.", "In particular, you need a JavaScript interpreter, in addition to the Python interpreter."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["One starting point might be python-spidermonkey.", "Depending on the specific JavaScript, you might have to provide a good DOM API to the spidermonkey, in addition to providing an XmlHttpRequest implementation."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python-spidermonkey", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/python-spidermonkey"}]}], [{"text": ["You can try to leverage V8,"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "V8", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/apis/v8/intro.html"}]}, {"text": ["Calling it from Python may not be straightforward, without a framework to provide the DOM.", "Pyjamas has an experimental project, Pyjamas Desktop, providing V8 integration for Javascript execution. "], "childNum": 7, "tag": "p", "senID": 1, "childList": [{"text": "Python", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Pyjamas", "tag": "a", "pos": 1, "childList": [{"text": "Pyjamas", "tag": "code"}], "childNum": 1, "href": "http://pyjs.org/"}, {"text": "Pyjamas", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://pyjd.org/", "text": "Pyjamas Desktop", "childNum": 1, "tag": "a", "childList": [{"text": "Pyjamas Desktop", "tag": "em"}]}, {"text": "Pyjamas Desktop", "childNum": 0, "tag": "em", "childList": []}, {"text": "V8", "childNum": 0, "tag": "code", "childList": []}, {"text": "Javascript", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Pyv8 is an experimental python v8 bindings and a python-javascript compiler."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Pyv8", "tag": "a", "pos": 0, "childList": [{"text": "Pyv8", "tag": "code"}], "childNum": 1, "href": "http://advogato.org/article/985.html"}, {"text": "Pyv8", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["For the browser part of this you might want to look into Mechanize, which basically is a webbrowser implemented as a Python library.", "http://pypi.python.org/pypi/mechanize/0.1.11\nBut as mentioned, the text n onClick is Javascript, and you'll need spidermonkey for that."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://pypi.python.org/pypi/mechanize/0.1.11", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/mechanize/0.1.11"}]}, {"text": ["If you can make a generic support for spidermonkey in mechanize, I'm sure many people would be extremely happy.", ";)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Mechanize may be overkill, maybe you just want to find specific parts of the HTML, and then lxml and BeautifulSoup both work well."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Why don't you just sniff what gets sent after the onclick event and replicate that with your bot?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]