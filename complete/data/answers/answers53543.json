[[{"text": ["If you do find you need to write unique code for an environment, use pythons "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "do", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import mymodule_jython as mymodule\n\nimport mymodule_cpython as mymodule\n</code>\n</pre>\n", "senID": 1}, {"text": ["have this stuff in a simple module (''module_importer''?", ") and write your code like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from module_importer import mymodule\n</code>\n</pre>\n", "senID": 3}, {"text": ["This way, all you need to do is alter module_importer.py per platform."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "module_importer.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["@Daren Thomas: I agree, but you should use the platform module to determine which interpreter you're running."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Daren Thomas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "#53549"}, {"href": "http://docs.python.org/dev/library/platform.html#platform.python_implementation", "text": "platform module", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["I write code for CPython and IronPython but tip should work for Jython as well."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Basically, I write all the platform specific code in separate modules/packages and then import the appropriate one based on platform I'm running on.", "(see cdleary's comment above)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This is especially important when it comes to the differences between the SQLite implementations and if you are implementing any GUI code."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The #1 thing IMO:  Focus on thread safety.", "CPython's GIL makes writing threadsafe code easy because only one thread can access the interpreter at a time.", "IronPython and Jython are a little less hand-holding though."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Focus on thread safety", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["I'm pretty sure you already know this but unfortunately Jython can't load c extension modules."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "can't load c extension modules.", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jython.org/Project/userfaq.html#is-jython-the-same-language-as-python"}]}], [{"text": ["There are two major issues at play here..."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "major", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Firstly, to my knowledge, only CPython has RAII - you have to close your own resources in Jython, Ironpython, etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["And Secondly, as has been mentioned, is thread safety."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]