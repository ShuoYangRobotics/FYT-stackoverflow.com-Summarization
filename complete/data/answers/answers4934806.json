[[{"code": "<pre>\n<code>\n import os,sys\n# Store current working directory\npwd = os.path.dirname(__file__)\n# Append current directory to the python path\nsys.path.append(pwd)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I use :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def getScriptPath():\n    return os.path.dirname(os.path.realpath(sys.argv[0]))\n</code>\n</pre>\n", "senID": 1}, {"text": ["my2c"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["This worked for me (and I found it via the other stackoverflow quetsion below)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.path.realpath(__file__)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Retrieving python module path"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Retrieving python module path", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/247770/retrieving-python-module-path"}]}], [{"text": ["Via the __file__ global and the various functions in os.path."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "__file__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "os.path", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Use os.path.abspath('')"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "os.path.abspath('')", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Try sys.path[0]"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["To quote from the python docs:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n import os\nexec_filepath = os.path.realpath(__file__)\nexec_dirpath = exec_filepath[0:len(exec_filepath)-len(os.path.basename(__file__))]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n import os\nscript_dir = os.path.dirname(os.path.realpath(__file__)) + os.sep\n</code>\n</pre>\n", "senID": 0}]]