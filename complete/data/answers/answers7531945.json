[[{"code": "<pre>\n<code>\n In [1]: for i in range(0, 100 / 0.5):\n   ...:     print 0.5 * i\n   ...:     \n   ...:     \n0.0\n0.5\n1.0\n1.5\n...\n98.0\n98.5\n99.0\n99.5\n</code>\n</pre>\n", "senID": 0}, {"text": ["If you can use numpy, then numpy.arange(0, 100, 0.5) would also do the trick."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "numpy", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://docs.scipy.org/doc/numpy/reference/generated/numpy.arange.html", "text": "numpy.arange(0, 100, 0.5)", "childNum": 1, "tag": "a", "childList": [{"text": "numpy.arange(0, 100, 0.5)", "tag": "code"}]}, {"text": "numpy.arange(0, 100, 0.5)", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["You have to use integer steps for range() and xrange().", "That's why your 0.5 step gets internally converted to 0 and you get that error.", "Try for i in [j / 2.0 for j in xrange(100 * 2)]:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "range", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "xrange()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "for i in [j / 2.0 for j in xrange(100 * 2)]:", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["You'll have to either create the loop manually, or define your own custom range function.", "The built-in requires an integer step value."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n for x in map(lambda i: i * 0.5, range(0,200)):\n  #Do something with x\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you have numpy, here are two ways to do it:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "numpy", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n numpy.arange(0, 100, 0.5)\n\nnumpy.linspace(0, 100, 200, endpoint=False)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["For large ranges it is better to use an generator expression than building a list explicitly:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for k in ( i*0.5 for i in range(200) ):\n     print k\n</code>\n</pre>\n", "senID": 1}, {"text": ["This consumes not much extra memory, is fast und easy to read.", "See http://docs.python.org/tutorial/classes.html#generator-expressions"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/tutorial/classes.html#generator-expressions", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/classes.html#generator-expressions"}]}]]