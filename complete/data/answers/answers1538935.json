[[{"text": ["I like kaizer.se's answer, but I think I can simplify it using the string.maketrans function:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "string.maketrans", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/string.html#string.maketrans"}]}, {"code": "<pre>\n<code>\n import string\n\nfirst = raw_input(\"Please enter Plaintext to Cipher: \")\nk = int(raw_input(\"Please enter the shift: \"))\n\nshifted_lowercase = string.ascii_lowercase[k:] + string.ascii_lowercase[:k]\n\ntranslation_table = string.maketrans(string.ascii.lowercase, shifted_lowercase)\n\nprint first.translate(translation_table)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This code should work pretty well.", "It also handles arbitrary offsets, including negative."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n phrase = raw_input(\"Please enter plaintext to Cipher: \")\nshift = int(raw_input(\"Please enter shift: \"))\n\nresult = ''\nfor char in phrase:\n    x = ord(char)\n\n    if char.isalpha():\n        x = x + shift\n\n        offset = 65\n        if char.islower():\n            offset = 97\n\n        while x &lt; offset:\n            x += 26\n\n        while x &gt; offset+25:\n            x -= 26\n\n        result += chr(x)\n\nprint result\n</code>\n</pre>\n", "senID": 1}, {"text": ["The other way to do it, with a slightly different cipher, is simply rotate through all characters, upper and lower, or even all ascii > 0x20."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n phrase = raw_input(\"Please enter plaintext to Cipher: \")\nshift = int(raw_input(\"Please enter shift: \"))\n\nresult = ''\nfor char in phrase:\n    x = ord(char)\n\n    x = x + shift\n\n    while x &lt; 32:\n        x += 96\n\n    while x &gt; 127:\n        x -= 96\n\n    result += chr(x)\n\nprint result\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Put a comma after each print statement; it will still put a space between the characters, but they'll all be on the same line.", "If you need to print them without the spaces, build them all into a single string and print that at the end."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Here is a different method to show how we can handle this in a very clean way.", "We define an input alphabet and an output alphabet, then a translation table and use unicode.translate() to do the actual encryption."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "unicode.translate()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import string\n# Blatantly steal Lennart's UI design\nfirst = unicode(raw_input(\"Please enter Plaintext to Cipher: \"), \"UTF-8\")\nk = int(raw_input(\"Please enter the shift: \"))\n\nin_alphabet = unicode(string.ascii_lowercase)\nout_alphabet = in_alphabet[k:] + in_alphabet[:k]\n\ntranslation_table = dict((ord(ic), oc) for ic, oc in zip(in_alphabet, out_alphabet))\n\nprint first.translate(translation_table)\n</code>\n</pre>\n", "senID": 1}, {"text": ["It can be extended to uppercase letters as needed."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Barring the syntax errors, your code seems to work."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["However, I took the liberty of removing all duplicates, and cleaning it up:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n first = raw_input(\"Please enter Plaintext to Cipher: \")\nk = int(raw_input(\"Please enter the shift: \"))\n\nresult = ''\nfor second in first:\n    x=ord(second)\n    x=x+k\n    if x&gt;90 and x&lt;122:\n        x=x-26\n    elif x&gt;122:\n        x=x-26\n    result += chr(x)\n\nprint first    \nprint result\n</code>\n</pre>\n", "senID": 2}, {"text": ["Also \"first\" and \"second\" are really bad names for those variables.", "\"Input\" and \"letter\" is probably better."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Is there any good sites or books that I can use for beginners on python?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]