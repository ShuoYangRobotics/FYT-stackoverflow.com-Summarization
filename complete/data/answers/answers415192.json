[[{"text": ["Have a look at werkzeug.", "Werkzeug started as a simple collection of various utilities for WSGI applications and has become one of the most advanced WSGI utility modules.", "It includes a powerful debugger, full featured request and response objects, HTTP utilities to handle entity tags, cache control headers, HTTP dates, cookie handling, file uploads, a powerful URL routing system and a bunch of community contributed addon modules."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "werkzeug", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://werkzeug.pocoo.org/"}]}, {"text": ["It includes lots of cool tools to work with http and has the advantage that you can use it with wsgi in different environments (cgi, fcgi, apache/mod_wsgi or with a plain simple python server for debugging). "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["web.py is probably the simplest web framework out there.", "\"Bare\" CGI is simpler, but you're completely on your own when it comes to making a service that actually does something."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "web.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://webpy.org/"}]}, {"text": ["\"Hello, World!", "\" according to web.py isn't much longer than an bare CGI version, but it adds URL mapping, HTTP command distinction, and query parameter parsing for free:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "for free", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import web\n\nurls = (\n    '/(.*)', 'hello'\n)\napp = web.application(urls, globals())\n\nclass hello:        \n    def GET(self, name):\n        if not name: \n            name = 'world'\n        return 'Hello, ' + name + '!'\n\nif __name__ == \"__main__\":\n    app.run()\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Look at the WSGI reference implementation.", "You already have it in your Python libraries.", "It's quite simple."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "WSGI reference implementation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/wsgiref.html"}]}], [{"text": ["The simplest way to get a Python script online is to use CGI:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python\n\nprint \"Content-type: text/html\"\nprint\n\nprint \"&lt;p&gt;Hello world.&lt;/p&gt;\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["Put that code in a script that lives in your web server CGI directory, make it executable, and run it.", "The cgi module has a number of useful utilities when you need to accept parameters from the user."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "cgi", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Raw CGI is kind of a pain, Django is kind of heavyweight.", "There are a number of simpler, lighter frameworks about, like, eg, CherryPy.", "It's worth looking around a big."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Life is simple if you get a good web framework.", "Web services in Django are easy.", "Define your model, write view functions that return your CSV documents.", "Skip the templates."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com"}]}], [{"text": ["If you mean \"web service\" in SOAP/WSDL sense, you might want to look at http://stackoverflow.com/questions/273002/generating-a-wsdl-using-python-and-soappy"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://stackoverflow.com/questions/273002/generating-a-wsdl-using-python-and-soappy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/273002/generating-a-wsdl-using-python-and-soappy"}]}], [{"text": ["maybe Twisted\nhttp://twistedmatrix.com/trac/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://twistedmatrix.com/trac/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://twistedmatrix.com/trac/"}]}], [{"text": ["If you mean with \"Web Service\" something accessed by other Programms  SimpleXMLRPCServer might be right for you.", "It is included with every Python install since Version 2.2."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SimpleXMLRPCServer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/simplexmlrpcserver.html"}]}, {"text": ["For Simple human accessible things I usually use Pythons SimpleHTTPServer which also comes with every install.", "Obviously you also could access SimpleHTTPServer by client programs."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "SimpleHTTPServer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/simplehttpserver.html"}]}]]