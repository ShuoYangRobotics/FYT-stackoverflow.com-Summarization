[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; from operator import itemgetter\n&gt;&gt;&gt; p = [{'fn':'bill'}, {'fn':'Bob'}, {'fn':'bobby'}]\n&gt;&gt;&gt; sorted(p, key=itemgetter('fn'))\n[{'fn': 'Bob'}, {'fn': 'bill'}, {'fn': 'bobby'}]\n&gt;&gt;&gt; sorted(p, key=lambda x: x['fn'].lower())\n[{'fn': 'bill'}, {'fn': 'Bob'}, {'fn': 'bobby'}]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Here's a way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n return sorted(p, key=lambda x: x['first_name'].lower())\n</code>\n</pre>\n", "senID": 1}], [{"text": ["It looks like you want sorted(p, key=lambda d: d['first_name'].lower())."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "sorted(p, key=lambda d: d['first_name'].lower())", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n def sortProfiles(p):\n    return sorted(p, key=lambda el: el['first_name'].lower())\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; def my_itemgetter(attr):\n        def get_attr(obj):\n            return obj.get(attr, \"\").lower()\n        return get_attr\n\n&gt;&gt;&gt; a= [{\"a\":\"dA\"},{\"a\":\"ab\"},{\"a\":\"Ac\"},{\"a\":\"aa\"}]\n&gt;&gt;&gt; sorted(a, key=my_itemgetter(\"a\"))\n[{'a': 'aa'}, {'a': 'ab'}, {'a': 'Ac'}, {'a': 'dA'}]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you dislike lambda, you can use a named function as your key-extractor, e.g:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "lambda", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def sortProfiles(p):\n    def lowerName(d):\n        return d['first_name'].lower()\n    return sorted(p, key=lowerName)\n</code>\n</pre>\n", "senID": 1}, {"text": ["The def statement can appear just about anywhere another statement could, including in another function's body.", "In this case, the choice among a nested def, a lambda, or a separate def outside of sortProfiles, is mostly a matter of style, though the last of these could offer some performance gain."], "childNum": 5, "tag": "p", "senID": 2, "childList": [{"text": "def", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "def", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "lambda", "childNum": 0, "tag": "code", "childList": []}, {"text": "def", "childNum": 0, "tag": "code", "childList": []}, {"text": "sortProfiles", "childNum": 0, "tag": "code", "childList": []}]}]]