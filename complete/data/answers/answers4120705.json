[[{"text": ["Decompose your problem which is:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Decompose your problem which is", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Further help:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For loop works on all sequences and list is a sequence."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for key in sequence: print key\n</code>\n</pre>\n", "senID": 3}, {"text": ["use the del(key) method."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["http://docs.python.org/release/2.5.2/lib/typesmapping.html"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}]}, {"text": ["You should be able to combine the two tasks."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "You should be able to combine the two tasks.", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n map(dictionary.__delitem__, lst)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n for key in list_:\n    if key in dict_:\n        del dict_[key]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I know nothing about Python, but I guess you can traverse a list and remove entries by key from the dictionary?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n newdict = dict(\n    (key, value) \n    for key, value in olddict.iteritems() \n    if key in set(list_of_keys)\n)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n d = {'one':1, 'two':2, 'three':3, 'four':4}\nl = ['zero', 'two', 'four', 'five']\nfor k in frozenset(l) &amp; frozenset(d):\n    del d[k]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n for i in lst:\n    if i in d.keys():\n        del(d[i])\n</code>\n</pre>\n", "senID": 0}]]