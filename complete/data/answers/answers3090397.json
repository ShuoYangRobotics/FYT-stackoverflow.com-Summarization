[[{"text": ["You could get a lot better performance if you could switch to binary file formats.", "Most of your code is doing parsing and string manipulation.", "You're doing a lot of converting strings to floats, which is slower than you think."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You are unlikely to see a 5x performance difference by just tweaking the code around."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["First you should look at improving your algorithm - are you using the best datastructures for the job?", "Perhaps using a dict or a set in the right place can speed your code up a alot."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "dict", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "set", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Writing a C module is not all that hard, and is another option if you can find no way to improve the Python code.", "Usually you would expect more than a 5x speed up by using C code."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Maybe your problem is IO bound.", "Then you need to look at ways to improve the performance of the IO"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you want more help here, you'll probably have to show some code or at least describe what your program does. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["UPDATE:\nLooks like you are opening and closing lots of files which tends to be painfully slow on windows."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["psyco can be used as simple as import and call psyco.full().", "so you are right about your psyco usage. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you are trying to build a python module using C/C++, have a look at boost::python"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You should really post your code for further analysis."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["To optimize your code for speed you simply have to profile it and see where the problem is.", "Guessing does not help.", "But once you know where, the most bang for your buck usually come from those in descending order: improving algorithm, using more appropriate data structures, removing resource bottlenecks (io,memory,cpu), reducing memory allocation, reducing context switching (processes and subroutines). "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Here's one opportunity for optimization: you're calling get_list twice, with very similar arguments:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n join_cost_index_end[index] = get_list(file, float(abs1), fout)\njoin_cost_index_strt[index] = get_list(file, float(abs2), fout)\n</code>\n</pre>\n", "senID": 1}, {"text": ["That means that most of the work in get_list is being done twice for no good reason.", "Rewrite it so that get_list is being called once, and have it return both index_end and index_strt at the same time."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["why bot just try using cython?", "You should get much better performance without changing any of the code.", "With a little bit of modification this should help even more."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]