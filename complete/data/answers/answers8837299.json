[[{"text": ["If your source is a string, you'd probably better use strptime"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "strptime", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/time.html#time.strftime"}]}, {"code": "<pre>\n<code>\n import datetime\nstring = \"2011-10-01 19:25:01\"\ndt = datetime.datetime.strptime(string, \"%Y-%m-%d %H:%M:%S\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["After that, use"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n dt.year\ndt.month\ndt.day\n</code>\n</pre>\n", "senID": 3}, {"text": ["to access the data you want."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Use datetime to parse your input as a datetime object, then output it in whatever format you like: http://docs.python.org/library/datetime.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/library/datetime.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html"}]}], [{"text": ["I think you're confusing the circumflex for start of line and dollar for end of line.", "Try ^[\\d-]+."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "^[\\d-]+", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["If the format is always \"YYYY-MM-DD HH:mm:ss\", then try this:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "\"YYYY-MM-DD HH:mm:ss\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n date = date[1:11]\n</code>\n</pre>\n", "senID": 1}, {"text": ["In a prompt:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; date = '\"2012-01-12 15:13:20\"'\n&gt;&gt;&gt; date[1:11]\n'2012-01-12'\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["No need for regex"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["One problem with your code is that in your last regular expression, $ matches the end of the string, so that regular expression will never match anything.", "You could do this much more simply by splitting by spaces and only taking the first result.", "After removing the quotation marks, the line"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "$", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n date.split()\n</code>\n</pre>\n", "senID": 1}, {"text": ["will return [\"2011-10-01\", \"19:25:01\"], so the first element of that list is what you need."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "[\"2011-10-01\", \"19:25:01\"]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; date = '\"2011-10-01 19:25:01\"'\n&gt;&gt;&gt; date.strip('\"').split()[0]\n'2011-10-01'\n</code>\n</pre>\n", "senID": 0}]]