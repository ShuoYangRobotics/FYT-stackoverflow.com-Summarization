[[{"text": ["See this SO question.", "Not an exact duplicate but the answer is what you need :)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this SO question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1898656/remove-whitespace-in-python-using-string-whitespace"}]}, {"code": "<pre>\n<code>\n ''.join(x.split())\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; x = \"\"\"73167176531330624919225119674426574742355349194934\n... 96983520312774506326239578318016984801869478851843\n... 85861560789112949495459501737958331952853208805511\n... 12540698747158523863050715693290963295227443043557\n... 66896648950445244523161731856403098711121722383113\n... 62229893423380308135336276614282806444486645238749\n... 30358907296290491560440772390713810515859307960866\n... 70172427121883998797908792274921901699720888093776\n... 65727333001053367881220235421809751254540594752243\n... 52584907711670556013604839586446706324415722155397\n... 53697817977846174064955149290862569321978468622482\n... 83972241375657056057490261407972968652414535100474\n... 82166370484403199890008895243450658541227588666881\n... 16427171479924442928230863465674813919123162824586\n... 17866458359124566529476545682848912883142607690042\n... 24219022671055626321111109370544217506941658960408\n... 07198403850962455444362981230987879927244284909188\n... 84580156166097919133875499200524063689912560717606\n... 05886116467109405077541002256983155200055935729725\n... 71636269561882670428252483600823257530420752963450\"\"\"\n&gt;&gt;&gt; len(x)\n1019\n&gt;&gt;&gt; x = x.replace(\"\\n\", \"\")\n&gt;&gt;&gt; len(x)\n1000\n</code>\n</pre>\n", "senID": 0}, {"text": ["At this point you can handle x however you like, such as to convert it to an int:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "x", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = int(x)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Or convert it to a list of ints, one per character:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = [int(c) for c in x]\n</code>\n</pre>\n", "senID": 4}, {"text": ["You can also do this in place in your source, which you might find more convenient:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = \"\"\"731...\n... ...450\"\"\".strip().replace(\"\\n\", \"\")\n# strip used if you want to include extra leading or trailing whitespace\n# for formatting\n</code>\n</pre>\n", "senID": 6}], [{"text": ["There are many ways of removing whitespace from strings in python.", "Here are two ways I know of:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import string\nstring.join(str.split(), \"\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or, "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import re\nre.sub(\"\\s+\", \"\", str)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import string\n\ny = [int(elt) for elt in x if elt not in string.whitespace]\n</code>\n</pre>\n", "senID": 1}, {"text": ["(thanks tgray)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "tgray", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/users/64206/tgray"}]}], [{"text": ["Maybe you can rewrite you string like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n x = (\"1234\" +\n     \"5678\"\n    )\n</code>\n</pre>\n", "senID": 1}, {"text": ["This will avoid the newlines in the string, which you get using multiline strings."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["For all whitespaces (\\n and ' '):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n y = [int(i) for i in re.sub(r'\\s', '', x)]\n</code>\n</pre>\n", "senID": 1}, {"text": ["For your specific string which actually contains newlines instead of ' ':"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n y = [int(i) for i in x if i != '\\n']\n</code>\n</pre>\n", "senID": 3}], [{"text": ["This should produce an int list:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n x = [int(i) for i in x if i.isdigit()]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Easier than all this: you can remove the newlines from the literal string by escaping them with backlashes:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n x = \"\"\"73167176531330624919225119674426574742355349194934\\\n96983520312774506326239578318016984801869478851843\\\n85861560789112949495459501737958331952853208805511\\\n12540698747158523863050715693290963295227443043557\\\n66896648950445244523161731856403098711121722383113\\\n62229893423380308135336276614282806444486645238749\\\n30358907296290491560440772390713810515859307960866\\\n70172427121883998797908792274921901699720888093776\\\n65727333001053367881220235421809751254540594752243\\\n52584907711670556013604839586446706324415722155397\\\n53697817977846174064955149290862569321978468622482\\\n83972241375657056057490261407972968652414535100474\\\n82166370484403199890008895243450658541227588666881\\\n16427171479924442928230863465674813919123162824586\\\n17866458359124566529476545682848912883142607690042\\\n24219022671055626321111109370544217506941658960408\\\n07198403850962455444362981230987879927244284909188\\\n84580156166097919133875499200524063689912560717606\\\n05886116467109405077541002256983155200055935729725\\\n71636269561882670428252483600823257530420752963450\"\"\"\n\nprint len(x)\n</code>\n</pre>\n", "senID": 1}, {"text": ["-> 1000"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["~ray"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]