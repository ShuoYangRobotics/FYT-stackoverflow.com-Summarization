[[{"text": ["with only keeps the file open within the indentation block.", "Try:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "with", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import mechanize, fileinput\n\nwith open('F:\\Python\\url_list2.txt') as urls:\n    content = urls.readlines()\n    print urls # file still open.\nprint content\n</code>\n</pre>\n", "senID": 1}, {"text": ["Basically with is syntactic sugar for a common try except finally pattern:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "with", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/compound_stmts.html#index-812"}, {"text": "try except finally", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n try:\n    urls = open('F:\\Python\\url_list2.txt')\n    # rest of indented block\nfinally:\n    urls.close()\n# stuff outside of indented block\n</code>\n</pre>\n", "senID": 3}, {"text": ["So your code translates into:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import mechanize, fileinput\ntry:\n    urls = open('F:\\Python\\url_list2.txt')\n    # rest of indented block\n    content = urls.readlines()\nfinally:\n    urls.close()\n# stuff outside of indented block.\nprint urls\n</code>\n</pre>\n", "senID": 5}, {"text": ["So you see why you urls is reported as a closed file ... you just closed it by exiting the with indentation block.", "You probably want to print content to see the content you loaded into the variable from the closed urls file."], "childNum": 4, "tag": "p", "senID": 6, "childList": [{"text": "with", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "print content", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "content", "childNum": 0, "tag": "code", "childList": []}, {"text": "urls", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Try print content  (urls is gone after with closes."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Maybe you want to be printing content instead of urls?"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "content", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "urls", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["To remove the newlines, use rstrip."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "rstrip", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["When you use with, this is what is actually happening:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "with", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n with open(filepath) as f:\n    # do stuff\nprint \"YAY\"\n# do more stuff\n</code>\n</pre>\n", "senID": 1}, {"text": ["The above is equivalent to saying:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n f = open(filepath)\ntry:\n    # do stuff\nexcept:\n    f.close()\nfinally:\n    f.close()\n    print \"YAY\"\n    # do more stuff\n</code>\n</pre>\n", "senID": 3}, {"text": ["Does this explain why you are getting that error?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Presumably a file object you've already called close() on?", "Can we see your code?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The with statement automatically closes the handle after all the statements inside it execute.", "If you need access to the handle afterwards:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "with", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import mechanize, fileinput\n\nurls = open('F:\\Python\\url_list2.txt')\ncontent = urls.readlines()\nprint content\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you want to get rid of the \\n at the end of every line, use .strip():"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "\\n", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ".strip()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n import mechanize, fileinput\n\nurls = open('F:\\Python\\url_list2.txt')\ncontent = [x.strip() for x in urls.readlines()]\nprint content\n</code>\n</pre>\n", "senID": 3}]]