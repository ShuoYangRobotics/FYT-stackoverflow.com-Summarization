[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; s = \"   xyz\"\n&gt;&gt;&gt; len(s) - len(s.lstrip())\n3\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; next(i for i, j in enumerate('   xyz') if j.strip())\n3\n</code>\n</pre>\n", "senID": 0}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; next(i for i, j in enumerate('   xyz') if j not in string.whitespace)\n3\n</code>\n</pre>\n", "senID": 2}, {"text": ["in versions of Python &lt; 2.5 you'll have to do:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n (...).next()\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Looks like the \"regexes can do anything\" brigade have taken the day off, so I'll fill in:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; tests = [u'foo', u' foo', u'\\xA0foo']\n&gt;&gt;&gt; import re\n&gt;&gt;&gt; for test in tests:\n...     print len(re.match(r\"\\s*\", test, re.UNICODE).group(0))\n...\n0\n1\n1\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["FWIW: time taken is O(the_answer), not O(len(input_string))"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; string = \"   xyz\"\n&gt;&gt;&gt; next(idx for idx, chr in enumerate(string) if not chr.isspace())\n3\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; string = \"   xyz\"\n&gt;&gt;&gt; map(str.isspace,string).index(False)\n3\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n import re\ndef prefix_length(s):\n   m = re.match('(\\s+)', s)\n   if m:\n      return len(m.group(0))\n   return 0\n</code>\n</pre>\n", "senID": 0}]]