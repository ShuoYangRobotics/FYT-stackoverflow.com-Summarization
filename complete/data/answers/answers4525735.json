[[{"code": "<pre>\n<code>\n import lxml\n\nxml = \"\"\"\n&lt;brochures&gt;\n    &lt;brochure&gt;\n        &lt;onlinePath&gt;http://EEE&lt;/onlinePath&gt;\n        &lt;downloadPath&gt;http://YYY&lt;/downloadPath&gt;\n        &lt;Name&gt;ABC&lt;/Name&gt;\n        &lt;AAA&gt;\n            &lt;P&gt;JPG&lt;/P&gt;\n            &lt;Q&gt;JPG&lt;/Q&gt;\n        &lt;/AAA&gt;\n    &lt;/brochure&gt;\n    &lt;brochure&gt;\n        &lt;onlinePath&gt;http://EKK&lt;/onlinePath&gt;\n        &lt;downloadPath&gt;http://XXX&lt;/downloadPath&gt;\n        &lt;Name&gt;DEF&lt;/Name&gt;\n        &lt;AAA&gt;\n            &lt;P&gt;JPG&lt;/P&gt;\n            &lt;Q&gt;JPG&lt;/Q&gt;\n        &lt;/AAA&gt;\n    &lt;/brochure&gt;\n&lt;/brochures&gt;\n\"\"\"\n\nroot = lxml.etree.fromstring(xml)\nmylist = root.xpath('//brochure/onlinePath/text()')\n</code>\n</pre>\n", "senID": 0}, {"text": ["results in"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n ['http://EEE', 'http://EKK']\n</code>\n</pre>\n", "senID": 2}, {"text": ["Notes:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Yes, it is very possible.", "Two libraries to help you with this is ElementTree and lxml.", "Take a look at them."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "ElementTree", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.etree.elementtree.html"}, {"text": "lxml", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://codespeak.net/lxml/"}]}], [{"text": ["Hugh's solution is fine.", "Here is a variation that uses ElementTree (tested with Python 2.6):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from xml.etree import ElementTree\n\ntree = ElementTree.parse(\"yourfile.xml\")   \nolp = tree.findall(\"//onlinePath\")\nmylist = [t.text for t in olp]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["i don't think it can store it in lists bt it can store it in dictionaries since they have key:values using expat for xml"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "using expat for xml", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/py3k/library/pyexpat.html?highlight=parsing%20xml"}]}, {"text": ["but can check the entries here "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["For short xml file like this, I suggest you minidom."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "minidom", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.dom.minidom.html"}]}], [{"text": ["Check out BeautifulSoup"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "BeautifulSoup", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/"}]}]]