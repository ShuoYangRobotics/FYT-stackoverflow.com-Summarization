[[{"text": ["Since i was looking for some more in-depth answers, i decided to research the issue myself in some more depth.", "Please let me know if i've misunderstood something."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["General recommendation is to use a separate webserver for handling media.", "Separate means a webserver which is not running django.", "This server can be for instance:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "Lighttpd (Lighty)", "tag": "none", "senID": 2}, {"text": "Nginx (EngineX", "tag": "none", "senID": 3}, {"text": "Or some other light-weight server", "tag": "none", "senID": 4}]}, {"text": ["Then, for django, you can go down different paths.", "You can either:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["Serve Django via Apache and:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Apache", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]}, {"text": ["Or you can:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["Serve django without using Apache but with another server that supports FastCGI natively:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "without using Apache", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]}, {"text": ["So this is my current research, But i want more opinions and experiences."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}], [{"text": ["As @Barry said the documentation uses mod_python.", "I haven't used Ubuntu as a server, but had a good experience with mod_wsgi on Solaris.", "You can find documentation for mod_wsgi and Django on the mod_wsgi site."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "mod_wsgi and Django", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/wiki/ConfigurationGuidelines"}, {"href": "http://code.google.com/p/modwsgi/", "text": "mod_wsgi", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["A quick review of your requirements:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": ["Easy to setup"], "childNum": 0, "tag": "strong", "senID": 2, "childList": []}, {"text": ["Fast and easy on resources"], "childNum": 0, "tag": "strong", "senID": 3, "childList": []}, {"text": ["Can serve media files"], "childNum": 0, "tag": "strong", "senID": 4, "childList": []}, {"text": ["Rather not install other extensions"], "childNum": 0, "tag": "strong", "senID": 5, "childList": []}]}], [{"text": ["The officially recommended way to deploy a django project is to use mod_python with apache.", "This is described in the documentation.", "The main pro with this is that it is the best documented, most supported, and most common way to deploy.", "The con is that it probably isn't the fastest."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "the documentation.", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/documentation/modpython/"}]}], [{"text": ["I'm using Cherokee."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Cherokee", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cherokee-project.com/"}]}, {"text": ["According to their benchmarks (grain of salt with them), it handles load better than both Lighttpd and nginx...", "But that's not why I use it."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "their benchmarks", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cherokee-project.com/benchmarks.html"}]}, {"text": ["I use it because if you type cherokee-admin, it starts a new server that you can log into (with a one-time password) and configure the whole server through a beautifully-done webmin.", "That's a killer feature.", "It has already saved me a lot of time.", "And it's saving my server a lot of resources!"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "cherokee-admin", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "lot", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"text": ["As for django, I'm running it as a threaded SCGI process.", "Works well.", "Cherokee can keep it running too.", "Again, very nice feature."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The current Ubuntu repo version is very old so I'd advise you use their PPA.", "Good luck."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "their PPA", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://launchpad.net/~cherokee-webserver/+archive"}]}], [{"text": ["The best configuration is not so known I think.", "But here is:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Two most speedy solutions for python-based web server is:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["cogen"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["fapws2"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}]}, {"text": ["You need to look into google to find current best configuration for django (still in development)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I\u2019m using nginx (0.6.32 taken from Sid) with mod_wsgi.", "It works very well, though I can\u2019t say whether it\u2019s better than the alternatives because I never tried any.", "Nginx has memcached support built in, which can perhaps interoperate with the Django caching middleware (I don\u2019t actually use it, instead I fill the cache manually using python-memcache and invalidate it when changes are made), so cache hits completely bypass Django (my development machine can serve about 3000 requests per second)."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "nginx", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "taken from Sid", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://packages.debian.org/sid/nginx"}, {"text": "mod_wsgi", "tag": "a", "pos": -1, "childList": [{"text": "mod_wsgi", "tag": "strong"}], "childNum": 1, "href": "http://wiki.codemongers.com/NginxNgxWSGIModule"}, {"text": "mod_wsgi", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "memcached", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}, {"text": ["A caveat: nginx\u2019 mod_wsgi highly dislikes named locations (it tries to pass them in SCRIPT_NAME), so the obvious \u2018error_page 404 = @django\u2019 will cause numerous obscure errors.", "I had to patch mod_wsgi source to fix that."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "mod_wsgi", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "SCRIPT_NAME", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "error_page 404 = @django", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["I'm struggling to understand all the options as well.", "In this blog post I found some benefits of mod_wsgi compared to mod_python explained."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this blog post", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.technobabble.dk/2008/aug/25/django-mod-wsgi-perfect-match/"}]}, {"text": ["Multiple low-traffic sites on a small VPS make RAM consumption the primary concern, and mod_python seems like a bad option there.", "Using lighttpd and FastCGI, I've managed to get the minimum memory usage of a simple Django site down to 58MiB virtual and 6.5MiB resident (after restarting and serving a single non-RAM-heavy request)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've noticed that upgrading from Python 2.4 to 2.5 on Debian Etch increased the minimum memory footprint of the Python processes by a few percent.", "On the other hand, 2.5's better memory management might have a bigger opposite effect on long-running processes."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you're using lighthttpd, you can also use FastCGI for serving Django.", "I'm not sure how the speed compares to mod_wsgi, but if memory serves correctly, you get a couple of the benefits that you would get with mod_wsgi that you wouldn't get with mod_python.", "The main one being that you can give each application its own process (which is really helpful for keeping memory of different apps separated as well as for taking advantage of multi-core computers."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Edit:  Just to add in regards to your update about nginix, if memory serves correctly again, nginix uses \"greenlets\" to handle concurrency.", "This means that you may need to be a little bit more careful to make sure that one app doesn't eat up all the server's time."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["We use nginx and FastCGI for all of our Django deployments.", "This is mostly because we usually deploy over at Slicehost, and don't want to donate all of our memory to Apache.", "I guess this would be our \"use case\"."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As for the remarks about the documentation being mostly in Russian -- I've found most of the information on the English wiki to be very useful and accurate.", "This site has sample configurations for Django too, from which you can tweak your own nginx configuration."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "English wiki", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.codemongers.com/Main"}]}], [{"text": ["Keep it simple: Django recommends Apache and mod_wsgi (or mod_python).", "If serving media files is a very big part of your service, consider Amazon S3 or Rackspace CloudFiles."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django recommends Apache and mod_wsgi (or mod_python)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/topics/install/"}]}], [{"text": ["There are many ways, approach to do this.For that reason, I recommend to read carefully the article related to the deployment process on DjangoAdvent.com:\nEric Florenzano - Deploying Django with FastCGI: http://djangoadvent.com/1.2/deploying-django-site-using-fastcgi/ \nRead too:\nMike Malone - Scaling Django\nStochastictechnologies Blog:  The perfect Django Setup\nMikkel Hoegh Blog: 35 % Response-time-improvement-switching-uwsgi-nginx"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://djangoadvent.com/1.2/deploying-django-site-using-fastcgi/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://djangoadvent.com/1.2/deploying-django-site-using-fastcgi/"}]}, {"text": ["Regards"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["In my opinion best/fastest stack is varnish-nginx-uwsgi-django.", "And I'm successfully using it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]