[[{"text": ["You are sorting strings, not numbers.", "'101101' &lt; '10201' because '1' &lt; '2'.", "Change list.append(reversed) to list.append(int(reversed)) and it will work (or use a different sorting function)."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "'101101' &lt; '10201'", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "'1' &lt; '2'", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "list.append(reversed)", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "list.append(int(reversed))", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Sort is doing its job.", "If you intended to store integers in the list, take Luk\u00e1\u0161 advice.", "You can also tell sort how to sort, for example by making ints:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list.sort(key=int)\n</code>\n</pre>\n", "senID": 1}, {"text": ["the key parameter takes a function that calculates an item to take the list object's place in all comparisons.", "An integer will compare numerically as you expect."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["(By the way, list is a really bad variable name, as you override the builtin list() type!"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "list", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["No need to convert to int.", "mult already is an int and as you have checked it is a palindrome it will look the same as reversed,  so just:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list.append(mult)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You have your numbers stored as strings, so python is sorting them accordingly.", "So: '101x' comes before '102x' (the same way that 'abcd' will come before 'az')."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["No, it is sorting properly, just that it is sorting lexographically and you want numeric sorting... so remove the \"str()\""], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "lexographically", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "numeric", "childNum": 0, "tag": "strong", "childList": []}]}], [{"text": ["You're sorting strings, not numbers.", "Strings compare left-to-right."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Your list contains strings so it is sorting them alphabetically - try converting the list to integers and then do the sort."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The comparator operator is treating your input as strings instead of integers.", "In string comparsion 2 as the 3rd letter is lexically greater than 1.\nreversed = str(mult)[::-1]"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "reversed = str(mult)[::-1]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}]]