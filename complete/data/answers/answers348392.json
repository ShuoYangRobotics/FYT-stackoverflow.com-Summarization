[[{"text": ["Here is a very simple example:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import smtplib\n\nserver = 'mail.server.com'\nuser = ''\npassword = ''\n\nrecipients = ['user@mail.com', 'other@mail.com']\nsender = 'you@mail.com'\nmessage = 'Hello World'\n\nsession = smtplib.SMTP(server)\n# if your SMTP server doesn't need authentications,\n# you don't need the following line:\nsession.login(user, password)\nsession.sendmail(sender, recipients, message)\n</code>\n</pre>\n", "senID": 1}, {"text": ["For more options, error handling, etc, look at the smtplib module documentation."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "smtplib module documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc/2.5.2/lib/module-smtplib.html"}]}], [{"text": ["I do not think it would be a good idea to write a real mail server in Python.", "This is certainly possible (see mcrute's and Manuel Ceron's posts to have details) but it is a lot of work when you think of everything that a real mail server must handle (queuing, retransmission, dealing with spam, etc)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You should explain in more detail what you need.", "If you just want to react to incoming email, I would suggest to configure the mail server to call a program when it receives the email.", "This program could do what it wants (updating a database, creating a file, talking to another Python program)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["To call an arbitrary program from the mail server, you have several choices:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Zed's Lamson may be of interest as well."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Zed's Lamson", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lamsonproject.org/"}]}], [{"text": ["Yes, you can do pretty much everything with the built-in libraries.", "Do a search here looking for the tags [python] and [email] and you'll see how it's done."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "[python]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "[email]", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["poplib and smtplib will be your friends when developing your app."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Python has an SMTPD module that will be helpful to you for writing a server.", "You'll probably also want the SMTP module to do the re-send.", "Both modules are in the standard library at least since version 2.3."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Depending on the amount of mail you are sending you might want to look into using a real mail server like postifx or sendmail (*nix systems) Both of those programs have the ability to send a received mail to a program based on the email address. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The sending part has been covered, for the receiving you can use pop or imap"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pop", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/poplib.html"}, {"href": "http://docs.python.org/library/imaplib.html", "text": "imap", "childNum": 0, "tag": "a", "childList": []}]}]]