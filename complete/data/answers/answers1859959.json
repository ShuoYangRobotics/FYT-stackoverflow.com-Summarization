[[{"text": ["class.method should work. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "class.method", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n class SomeClass:\n  @classmethod\n  class some_class_method(cls):\n    pass\n\n  @staticmethod\n  class some_static_method():\n    pass\n\nSomeClass.some_class_method()\nSomeClass.some_static_method()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["you cant call non-static methods from static methods but by creating an instance inside the static method....\nit should work like that"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["class test2(object):\n    def init(self):\n        pass"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "init", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n @staticmethod\ndef dosomething():\n    print \"do something\"\n    #creating an instance to be able to call dosomethingelse(),or you may use any existing instace\n    a=test2()\n    a.dosomethingelse()\n\ndef dosomethingelse(self):\n    print \"do something else\"\n</code>\n</pre>\n", "senID": 2}, {"text": ["test2.dosomething()"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["hope that will help you :)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["NOTE - it looks like the question has changed some.", "The answer to the question of how you call an instance method from a static method is that you can't without passing an instance in as an argument or instantiating that instance inside the static method."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What follows is mostly to answer \"how do you call a static method from another static method\":"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Bear in mind that there is a difference between static methods and class methods in Python.", "A static method takes no implicit first argument, while a class method takes the class as the implicit first argument (usually cls by convention).", "With that in mind, here's how you would do that:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "cls", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["If it's a static method:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n test.dosomethingelse()\n</code>\n</pre>\n", "senID": 4}, {"text": ["If it's a class method:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n cls.dosomethingelse()\n</code>\n</pre>\n", "senID": 6}], [{"text": ["ok the main deffirence between class methods and static methods is:\nclass method has its own identity, thats why they have to be called from within an INSTANCE.", "on the other hand static method can be shared between multiple instances so that it must be called from within THE CLASS"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n class Test() :\n    @staticmethod\n    def static_method_to_call()\n        pass\n\n    @staticmethod\n    def another_static_method() :\n        Test.static_method_to_call()\n\n    @classmethod\n    def another_class_method(cls) :\n        cls.static_method_to_call()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["ok, this is what I have"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class test2(object):\n    def __init__(self):\n        pass\n\n    @staticmethod\n    def dosomething():\n        print \"do something\"\n        test2.dosomethingelse()\n\n    def dosomethingelse(self):\n        print \"do something else\"\n\na = test2\na.dosomething()\n</code>\n</pre>\n", "senID": 1}, {"text": ["if I call dosomethingelse from dosomething as test2.dosomethingelse() I get \n\" unbound method dosomethingelse() must be called with test2 instance as first argument (got nothing instead)\""], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["if I call dosomethingelse from dosomething as self.dosomethingelse() I get global name 'self' is not defined."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["BTW, arent in Python Static methods what in other languages are called Class methods? "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["http://code.activestate.com/recipes/52304/"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "http://code.activestate.com/recipes/52304/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/52304/"}]}]]