[[{"code": "<pre>\n<code>\n print sum(float(x.replace(',', '.')) for x in str.split(' '))\n</code>\n</pre>\n", "senID": 0}, {"text": ["outputs:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n 45.64\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The \"python-esque\" way of doing it:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n sum([float(num) for num in str.replace(',', '.').split(' ')])\n</code>\n</pre>\n", "senID": 1}, {"text": ["Makes a list by splitting the string by spaces, then turn each piece into a float and add them up."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Let's not be so ethno-centric.", "',' is a legitimate decimal point for many people.", "Don't replace it, adapt to it using the locale module:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = \"1 1 3 2 1 1 1 2 1 1 1 1 1 1 1 1,5 0,33 0,66 1 0,33 0,66 1 1 2 1 1 2 1 1 2 0,5 0,66 2 1 2 1 1 1 0 1\"\n&gt;&gt;&gt; import locale\n&gt;&gt;&gt; locale.setlocale(0,\"po\")\n'Polish_Poland.1250'\n&gt;&gt;&gt; sum(map(locale.atof, s.split()))\n45.639999999999993\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Edit: If David's guess was right such that you need decimals:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from math import fsum\n&gt;&gt;&gt; fsum(float(n) for n in input.replace(',', '.').split())\n45.640000000000001\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note I'm using math.fsum() to preserve floating point loss."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "math.fsum()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n my_string = \"1 1 3 2 1 1 1 2 1 1 1 1 1 1 1 1,5 \"\n            \"0,33 0,66 1 0,33 0,66 1 1 2 1 1 2 \"\n            \"1 1 2 0,5 0,66 2 1 2 1 1 1 0 1\"\n\nmy_string = my_string.replace(',', '.')\n\nvalue = sum([float(n) for n in my_string.split()])\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If I understand what you want, then try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list = []\nfor x in str.replace(',', '.').split():\n    list.append(x)\nsum = 0\nfor x in list:\n    sum = sum + float(x)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Ok this worked :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n sum(float(n) for n in str.replace(',','.').split())\n</code>\n</pre>\n", "senID": 1}]]