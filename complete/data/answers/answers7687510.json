[[{"text": ["The second line should have been pixels[0], with an S. You probably have a tuple named pixel, and tuples are immutable.", "Construct new pixels instead:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pixels[0]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "pixel", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n image = Image.open('balloon.jpg')\n\npixels = [(pix[0] + 20,) + pix[1:] for pix in image.getdata()]\n\nimage.putdate(pixels)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["PIL pixels are tuples, and tuples are immutable.", "You need to construct a new tuple.", "So, instead of the for loop, do:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n pixels = [(pixel[0] + 20, pixel[1], pixel[2]) for pixel in pixels]\nimage.putdata(pixels)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Also, if the pixel is already too red, adding 20 will overflow the value.", "You probably want something like max(pixel[0] + 20, 255) or int(255 * (pixel[0] / 255.", ") ** 0.9) instead of pixel[0] + 20."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "max(pixel[0] + 20, 255)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "int(255 * (pixel[0] / 255.) ** 0.9)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "pixel[0] + 20", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["And, to be able to handle images in lots of different formats, do image = image.convert(\"RGB\") after opening the image.", "The convert method will ensure that the pixels are always (r, g, b) tuples."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "image = image.convert(\"RGB\")", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "convert", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.pythonware.com/library/pil/handbook/image.htm#Image.convert"}]}], [{"text": ["You probably want the next transformation for you pixels:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n pixels = map(list, image.getdata())\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You have misspelt the second pixels as pixel.", "The following works:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pixels", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "pixel", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n pixels = [1,2,3]\npixels[0] = 5\n</code>\n</pre>\n", "senID": 1}, {"text": ["It appears that due to the typo you were trying to accidentally modify some tuple called pixel, and in Python tuples are immutable.", "Hence the confusing error message."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "pixel", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["A tuple is immutable and thus you get the error you posted."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; pixels = [1, 2, 3]\n&gt;&gt;&gt; pixels[0] = 5\n&gt;&gt;&gt; pixels = (1, 2, 3)\n&gt;&gt;&gt; pixels[0] = 5\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n</code>\n</pre>\n", "senID": 1}, {"text": ["In your specific case, as correctly pointed out in other answers, you should write:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n pixel = (pixel[0] + 20, pixel[1], pixel[2])\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Tuples, in python can't have their values changed.", "If you'd like to change the contained values though I suggest using a list:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["[1,2,3] not (1,2,3)"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "[1,2,3]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "(1,2,3)", "childNum": 0, "tag": "code", "childList": []}]}]]