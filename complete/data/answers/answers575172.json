[[{"text": ["I recommend you consider BerkelyDB with awareness of the licensing issues. "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "BerkelyDB", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Berkeley_DB"}, {"text": "with awareness of the licensing issues.", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["I am getting very tired of people recommending BerkleyDB without qualification - you can only distribute BDB systems under GPL or some unknown and not publicly visible licensing fee from Oracle. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For \"local\" playing around where it is not in use by external parties, it's probably a good idea.", "Just be aware that there is a license waiting to bite you."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This is also a reminder that it is a good idea when asking for technology recommendations to say whether or not GPL is acceptable."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["From my own question about a portable C API database, whilst a range of other products were suggested, none of the embedded ones have Python bindings."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "my own question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/525065/which-embedded-database-capable-of-100-million-records-has-the-best-c-api"}]}], [{"text": ["BerkleyDB"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "BerkleyDB", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Berkeley_DB"}]}], [{"text": ["Metakit is an interesting non-relational embedded database that supports Python. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Metakit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.equi4.com/metakit/"}]}, {"text": ["Installation requires just copying a single shared library and .py file.", "It works on Windows, Linux and Mac and is open-source (MIT licensed)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Have you looked at CouchDB?", "It's non-relational, data can be migrated with relative ease and it has a Python API in the form of couchdb-python.", "It does have some fairly unusual dependencies in the form of Spidermonkey and Erlang though."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "CouchDB", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://couchdb.apache.org/"}, {"text": "couchdb-python", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/couchdb-python/"}, {"text": "Spidermonkey", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.mozilla.org/js/spidermonkey/"}, {"href": "http://erlang.org/", "text": "Erlang", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["As for pure python solutions, I don't know how far along PyDBLite has come but it might be worth checking out nonetheless."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "PyDBLite", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://quentel.pierre.free.fr/PyDbLite/index.html"}]}], [{"text": ["If you're used to thinking a relational database has to be huge and heavy like PostgreSQL or MySQL, then you'll be pleasantly surprised by SQLite."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It is relational, very small, uses a single file, has Python bindings, requires no extra priviledges, and works on Linux, Windows, and many other platforms."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["BerkeleyDB : (it seems that there is an API binding to python : http://www.jcea.es/programacion/pybsddb.htm)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.jcea.es/programacion/pybsddb.htm", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jcea.es/programacion/pybsddb.htm"}]}], [{"text": ["Have you looked at Zope Object Database?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Zope Object Database", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.zope.org/ZODB/FrontPage"}]}, {"text": ["Also, SQLAlchemy or Django's ORM layer makes schema management over SQLite almost transparent."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "SQLAlchemy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}, {"href": "http://docs.djangoproject.com/en/dev/", "text": "Django's ORM", "childNum": 0, "tag": "a", "childList": []}]}, {"tag": "hr", "senID": 2}, {"text": ["Edit"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Start with http://www.sqlalchemy.org/docs/05/ormtutorial.html#define-and-create-a-table\nto see how to create SQL tables and how they map to Python objects."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://www.sqlalchemy.org/docs/05/ormtutorial.html#define-and-create-a-table", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/docs/05/ormtutorial.html#define-and-create-a-table"}]}, {"text": ["While your question is vague, your comments seem to indicate that you might want to define the Python objects first, get those to work, then map them to relational schema objects via SQLAlchemy."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["If you're only coming and going from Python you might think about using Pickle to serialize the objects.", "Not going to work if you're looking to use other tools to access the same data of course.", "It's built into python, so you shouldn't have any privileged problems, but it's not a true database so it may not suit the needs of your experiment."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pickle", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/pickle.html"}]}]]