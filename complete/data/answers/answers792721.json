[[{"text": ["formatmethod was introduced in python 3.0 and backported only to 2.6"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "formatmethod was introduced in python 3.0 and backported only to 2.6", "tag": "a", "pos": 0, "childList": [{"text": "format", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/3.0/whatsnew/2.6.html#pep-3101-advanced-string-formatting"}, {"text": "format", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["For Python versions below 2.6, use the % operator to interpolate values into a format string."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "% operator", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#string-formatting"}]}, {"text": ["You should also be aware that this operator can interpolate by name from a mapping, instead of just positional arguments:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "name", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"%(foo)s %(bar)d\" % {'bar': 42, 'foo': \"spam\", 'baz': None}\n'spam 42'\n</code>\n</pre>\n", "senID": 2}, {"text": ["In combination with the fact that the built-in vars() function returns attributes of a namespace as a mapping, this can be very handy:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; bar = 42\n&gt;&gt;&gt; foo = \"spam\"\n&gt;&gt;&gt; baz = None\n&gt;&gt;&gt; \"%(foo)s %(bar)d\" % vars()\n'spam 42'\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I believe that is a Python 3.0 feature, although it is in version 2.6.", "But if you have a version of Python below that, that type of string formatting will not work."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you are trying to print formatted strings in general, use Python's printf-style syntax through the % operator.", "For example:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "%", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print '%.2f' % some_var\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Which Python version do you use?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Edit\nFor Python 2.5, use \"x = %s\" % (x) (for printing strings)"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "\"x = %s\" % (x)", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If you want to print other types, see here."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "see here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#string-formatting"}]}], [{"text": ["Although the existing answers describe the causes and point in the direction of a fix, none of them actually provide a solution that accomplishes what the question asks."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Although the existing answers describe the causes and point in the direction of a fix, none of them actually provide a solution that accomplishes what the question asks.", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["You have two options to solve the problem.", "The first is to upgrade to Python 2.6 or greater, which supports the format string construct."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "format string construct", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/string.html#string-formatting"}]}, {"text": ["The second option is to use the older string formatting with the % operator.", "The equivalent code of what you've presented would be as follows."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "older string formatting with the % operator", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#string-formatting-operations"}]}, {"code": "<pre>\n<code>\n for x in range(1,11):\n  print '%2d %3d %4d' % (x, x*x, x*x*x)\n</code>\n</pre>\n", "senID": 3}, {"text": ["This code snipped produces exactly the same output in Python 2.5 as your example code produces in Python 2.6 and greater."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I get no error while executing this.", "double check."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]