[[{"text": ["This is the syntax I was looking for, works with iphone and ipod touch:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n uastring = self.request.headers.get('user_agent')\nif \"Mobile\" in uastring and \"Safari\" in uastring:\n  # do iphone / ipod stuff\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This article outlines a few ways of detecting an iPhone through by checking the HTTP_USER_AGENT agent variable.", "Depending on where you want to do the check at (HTML level, Javascript, CSS, etc.", "), I'm sure you can extrapolate this into your Python app.", "Sorry, I'm not a python guy.", "8^D"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "This article", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.askdavetaylor.com/detect%5Fapple%5Fiphone%5Fuser%5Fweb%5Fsite%5Fserver.html"}]}], [{"text": ["Here's how to do implement it as middleware in Django, assuming that's what you're using on appengine. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n class DetectiPhone(object):\n    def process_request(self, request):\n        if 'HTTP_USER_AGENT' in request.META and request.META['HTTP_USER_AGENT'].find('(iPhone') &gt;= 0:\n            request.META['iPhone'] = True\n</code>\n</pre>\n", "senID": 1}, {"text": ["Basically look for 'iPhone' in the HTTP_USER_AGENT.", "Note that iPod Touch has a slightly different signature than the iPhone, hence the broad 'iPhone' search instead of a more restrictive search."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The Using the Safari on iPhone User Agent String article on the apple website indicate the different user agents for iPhone and iPod touch."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Using the Safari on iPhone User Agent String", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/OptimizingforSafarioniPhone/chapter%5F3%5Fsection%5F3.html"}]}, {"code": "<pre>\n<code>\n Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543 Safari/419.3\nMozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3\nMozilla/5.0 (iPhone; U; CPU iPhone OS 2_0 like Mac OS X; en-us) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Mobile/XXXXX Safari/525.20\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Check the user agent.", "It will be"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I'm not sure how to do this with appengine, but the equivalent PHP code can be found here: http://www.mattcutts.com/blog/iphone-user-agent/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.mattcutts.com/blog/iphone-user-agent/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.mattcutts.com/blog/iphone-user-agent/"}]}], [{"text": ["if you're using the standard webapp framework the user agent will be in the request instance.", "This should be good enough:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if \"iPhone\" in request.headers[\"User-Agent\"]:\n    # do iPhone logic\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n import os\n\nclass MainPage(webapp.RequestHandler):\n  @login_required\n  def get(self):\n    userAgent = os.environ['HTTP_USER_AGENT']\n    if userAgent.find('iPhone') &gt; 0:\n      self.response.out.write('iPhone support is coming soon...')\n    else:\n      self.response.out.write('Hey... you are not from iPhone...')\n</code>\n</pre>\n", "senID": 0}]]