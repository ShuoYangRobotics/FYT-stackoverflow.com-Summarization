[[{"text": ["I think it's going to be difficult to get an objective comparison.", "I personally prefer Python.", "To address one of your criteria, Python was designed from the start to be an embeddable language.", "It has a very rich C API, and the interpreter is modularized to make it easy to call from C.  If Java is your host environment, you should look at Jython, an implementation of Python inside the Java environment (VM and libs)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Just to muddy the waters..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Groovy give you access to Java.", "Java has an extremely rich set of APIs/Libraries, applications, etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Groovy is embeddable, although easiest in Java."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["DLLs/Libraries (if you're talking about non-Groovy/Java) may be somewhat problematic, although there are ways and some APIs to help."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I've done some Python programming, but being more familiar with Java, Groovy comes a lot easier to me."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Having worked with all 3 of them, this is what I can say:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["Python "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Ruby"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Ruby", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Groovy"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Groovy", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]}], [{"text": ["I think you missed one criterion:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "Familiarity among project team (10)", "tag": "none", "senID": 1}]}], [{"text": ["Python has all nine criteria.", "It scores a 56."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I'm sure Ruby has everything Python has.", "It seems to have fewer libraries.", "So it scores a 51."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I don't know if Groovy has every feature."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Since Python is 56 and Ruby is a 51, Python just barely edges out Ruby."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["However, I think this kind of decision can still boil down to some subjective issues outside these nine criteria."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Groovy?", "I'm just picking it up; try this (inside the groovyconsole):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n File.metaClass.invokeMethod = { String name, args -&gt;\n    System.out.print (\"Call to $name intercepted...\");\n    File.metaClass.getMetaMethod(name, args).invoke(delegate, args);\n}\n\nnew File(\"c:/temp\").eachFile{\n    if (it.isFile()) println it.canonicalPath\n}\n</code>\n</pre>\n", "senID": 1}, {"text": ["The first code is AOP.", "All calls to any method of File object will be intercepted.", "No additional tools required.", "This is executed against existing Java class dynamically."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["In the second block, you remove the 'f' closure parameter.", "Being just one parameter, it defaults to the built in \"it\" variable available to the closure context."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Here is what you get:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["\"Call to isFile intercepted...C:\\temp\\img.jpg\""], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["etc."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["try Groovy .. it has all features that you need there.", "You can use existing java lib without any modification on its classes.", "basically .. groovy is java++, it is more dynamic and fun to learn (just like ruby)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I dont like ruby or python syntax so I will put them behind.", "Groovy is just like C/C++ syntax so I like him lol :)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["From your critera, I'd pick JRuby:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "Richness of API/libraries available (eg. maths, plotting, networking) (9)", "tag": "none", "senID": 1}]}, {"text": ["Everything the JVM has access to, which is a lot"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "lot", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 1, "lis": [{"text": "Ability to embed in desktop (java/c++) applications (8)", "tag": "none", "senID": 3}]}, {"text": ["Excellent Monkeybars framework, which lets you design a swing GUI in your GUI designer, and then wire it up using clean ruby code"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Monkeybars", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://monkeybars.rubyforge.org"}]}, {"tag": "ul", "num": 1, "lis": [{"text": "Ease of deployment (8)", "tag": "none", "senID": 5}]}, {"text": ["Rawr can package your app as an executable jar"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Rawr", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rawr.rubyforge.org"}]}, {"tag": "ul", "num": 1, "lis": [{"text": "Ability to interface with DLLs/Shared Libraries (7)", "tag": "none", "senID": 7}]}, {"text": ["Java shared libraries easily, C ones via jna + libffi"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "jna + libffi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.headius.com/2007/09/java-native-access-jruby-true-posix.html"}]}, {"tag": "ul", "num": 1, "lis": [{"text": "Ability to generate GUIs (7)", "tag": "none", "senID": 9}]}, {"text": ["Swing just works.", "Not sure how easy it is to use QtJambi, but it's definitely possible."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "Community/User support (6)", "tag": "none", "senID": 11}]}, {"text": ["Lots.", "Ruby has an excellent community."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "Portability (6)", "tag": "none", "senID": 13}]}, {"text": ["Everywhere the JVM works"], "childNum": 0, "tag": "p", "senID": 14, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "Database manipulation (3)", "tag": "none", "senID": 15}]}, {"text": ["All the ruby database libraries and all the java ones"], "childNum": 1, "tag": "p", "senID": 16, "childList": [{"text": "and", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 1, "lis": [{"text": "Language/Semantics (2)", "tag": "none", "senID": 17}]}, {"text": ["Here's where ruby takes the definite lead over groovy and python.", "The language has had some really beautiful design decisions taken early on, which shows up in the consistency and power of the standard library.", "Blocks, in particular, make it a joy to use."], "childNum": 1, "tag": "p", "senID": 18, "childList": [{"text": "Blocks", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://weblog.jamisbuck.org/2007/1/19/blocks-rock"}]}], [{"text": ["This sort of adding-up-scores-by-features is not a good way to choose a programming language.", "You'd be better off choosing whichever you know the best.", "If you don't know any of them, try them out for a little while.", "If you have a really specific project in mind, then maybe some programming languages would be better, but if you just have general preferences you will never come to a consensus."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That said, Python is pretty flexible, it's the most popular on your list so the easiest to solve whatever sorts of problems you have by searching, so I'd recommend Python."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Perl?", "Yikes."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As someone has observed Perl is like a big explosion in a punctuation factory.", "It's terseness is not an advantage if the resultant code is not self documenting."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "not", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["Have used Groovy for some utility tasks, easy to get going.", "Full access to Java libraries, plus some cool addtions to it, like listing the files in a directory using a closure:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n // process all files printing out full name (. and .. auto excluded)\n\nnew File(basedir).eachFile{ f-&gt;\n\n    if (f.isFile()) println f.canonicalPath\n}\n</code>\n</pre>\n", "senID": 3}], [{"text": ["For a java programmer, the obvious choice is Groovy. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Whenever you forget the Groovy syntax, simply use basic java."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I know it's not on your list, but at least look at perl."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 7, "lis": [{"text": "Richness of Api/Libraries to sink a ship. ", "tag": "none", "senID": 1}, {"text": "Runs on more systems than most people realise exists. ", "tag": "none", "senID": 2}, {"text": "Works well with Binary libraries. ", "tag": "none", "senID": 3}, {"text": "Has a huge community.", "tag": "none", "senID": 4}, {"text": "Portability, See above.", "tag": "none", "senID": 5}, {"text": "Database manipulation: more ways to do it. ( Pick your favorite module ) ", "tag": "none", "senID": 6}, {"text": "And one of the most expressive/terse languages around. ", "tag": "none", "senID": 7}]}], [{"text": ["You don't give a target OS, but if it's Windows, for that list I'd use .Net: C#, VB, whatever you feel most comfortable with.", "Bear in mind that my personal language of choice is Ruby, by the way.", "Away from Windows, I'd have to put Java as a starting point."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I'm not sure what's meant by the embedding requirement, but it's worth noting that within the .Net world there are IronPython and IronRuby - the former is probably somewhat more mature."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "IronPython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.codeplex.com/IronPython"}, {"href": "http://www.ironruby.net/", "text": "IronRuby", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["ruby has jruby with access to...something of the java internals, if necessary."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Your comparing a compiled bytecode language vs. scripting language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Groovy doesn't seem to be that scriptable, with all that lines of codes suddenly I felt I was brought back in 2001."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Nah... Groovy just looks and feels like Java.."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I don't like to type all that Java lines \"AGAIN\".. just like what I did in 2001."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["What is REBOL?", "can it scale up and still have good performance, is it designed for server clustering or connection pooling or can it create singleton instances and etc.", "Maybe REBOL can only handle 20 clients for small system or it eats up too much resources from the expensive server hardware.", "that's a wild guess but REBOL sounds interesting maybe its worth trying you might be right."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["it would be worth trying REBOL. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I am mainly a Java/Ruby person.", "but I keep REBOL as my secret tool.", "I gave it a try this november (2009) and I liked it, and I am definitely going to learn more about it.", "It's already allowed me to meet some very difficult almost impossible deadlines already."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It's very concise.", "actually the most concise language,  I have come across.  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I like their philosophy : \"KEEP IT SIMPLE\".", "\"DO IT IN 1 MB NOT 200 MB\""], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "\"KEEP IT SIMPLE\". \"DO IT IN 1 MB NOT 200 MB\"", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["I believe in the long run Simple, lean languages will beat complex, bloated languages.", "thus the rise of ruby, and in my opinion Rebol in the near future (if they really keep it open) "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["the Rebol environment is around 600 KB (version 2).", "they are working on version 3 which is close to beta version. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["After many years of developers asking for the owning company to open the language,  Version 3 is going to be open, and this will hopefully increase its adoption by the developers community."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["you can use the same code across 40 operating systems,  and you can run the same code both in browser and at command line.", "this is really crucial with the RIA(rich internet applications) movement becoming more important."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["to use JAVA, you need javafx, java, ajax, html, CSS, javascript, jsp, jsf and whole lots of other things to learn and use, like a java application server, a web server etc..  (OH WAIT .... so while we are on a roll, why not add 100 more technologies to learn to be able to create a simple RIA ?", ") that's simply stupid and inefficient. "], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["by contrast with Rebol,  you only need REBOL (600 kb only environment) .", "It's an internet based language and you can run another program hosted on a computer on the other side of the world (as long as you have authority) .", "this allows you to do publish your application to the world and also consume someone's else modules/programs/applications."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "by contrast with Rebol,  you only need REBOL", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["e.g to create a window  with one field and button:-"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "e.g to create a window  with one field and button:-", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["view layout [ field   button \"click me\"]"], "childNum": 1, "tag": "p", "senID": 11, "childList": [{"text": "view layout [ field   button \"click me\"]", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["to print a web page:-"], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "to print a web page:-", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["print readhttp://www.rebol.com"], "childNum": 2, "tag": "p", "senID": 13, "childList": [{"text": "print readhttp://www.rebol.com", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "http://www.rebol.com", "tag": "a"}]}, {"href": "http://www.rebol.com", "text": "http://www.rebol.com", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["where else can you do that ?", "No other language can be that concise."], "childNum": 0, "tag": "p", "senID": 14, "childList": []}, {"text": ["it's worth mentioning that java fx seems to have copied Rebol's gui approach (vid dialect) which uses a declarative approach for creating gui.   "], "childNum": 0, "tag": "p", "senID": 15, "childList": []}, {"text": ["you can find more about it , at www.rebol.com.", "take a look and give it a spin."], "childNum": 0, "tag": "p", "senID": 16, "childList": []}], [{"text": ["From your criteria, I would use Play!", "Framework.", "It's still a small project but the support is great, it's easy to get started with it.", "And you get all the power of Java."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Play! Framework", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.playframework.org"}]}]]