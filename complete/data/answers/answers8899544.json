[[{"text": ["Guessing it might be homework, we'll start with some easy things."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Reviewing your provided sample code further, it looks like your difficulty is probably in this line:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if stringlist[0] == char:\n</code>\n</pre>\n", "senID": 2}, {"text": ["Here, you're retrieving the first value from the passed in list, not the first character of the string you're attempting to test.", "That would be enough to cause the trouble for you.", "Additionally, you probably don't want this line:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n newlist.append(stringlist)\n</code>\n</pre>\n", "senID": 4}, {"text": ["That's going to put the entire input list into your output list.", "You probably want:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n newlist.append(i)\n</code>\n</pre>\n", "senID": 6}, {"text": ["A lot of those details are found in other answers / suggestions as well."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def startString(char, stringlist):\n    newlist = []\n    for string in stringlist:\n        if string.startswith(char):\n            newlist.append(string)\n    print newlist\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You should look at Python List Comprehensions.", "This \"function\" would normally be written in a single line with python.", "You also want to look at the .startswith method of strings"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Python List Comprehensions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/datastructures.html#list-comprehensions"}, {"text": "the .startswith method of strings", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.startswith"}]}], [{"text": ["The for i in stringlist iterates through your list with each element being represented as the variable i.", "Take a look at what you're testing within the loop and see if it's truly what you want to check.", "What is stringlist[0] really?"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "for i in stringlist", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "i", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "stringlist[0]", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["use mystring.startswith().", "Check docs"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "mystring.startswith()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Check docs", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html"}]}, {"text": ["Then use, for example, a list comprehension using startswith to filter list items"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n for i in stringlist:\n   if stringlist[0] == char:\n</code>\n</pre>\n", "senID": 0}, {"text": ["The second line says that instead of looking at the first letter of one of the strings, you're just looking at the first word in the list."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You are iterating over stringlist, but then you check, if the first element of your string list equals to char.", "You should change stringlist to i in your for-loop.", "(though it may be nicer using filter()."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "char", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "stringlist", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "i", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "for", "childNum": 0, "tag": "code", "childList": []}, {"text": "filter()", "childNum": 0, "tag": "code", "childList": []}]}]]