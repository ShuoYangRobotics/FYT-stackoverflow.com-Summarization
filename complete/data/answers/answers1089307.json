[[{"text": ["You can use matplotlib and the the optional bottom parameter of matplotlib.pyplot.bar.", "You can then use line plot to indicate the opening and closing prices:"], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "matplotlib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/"}, {"text": "bottom", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "matplotlib.pyplot.bar", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.bar"}, {"text": "plot", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import lines\n\nimport random\n\n\ndeltas = [4, 6, 13, 18, 15, 14, 10, 13, 9, 6, 15, 9, 6, 1, 1, 2, 4, 4, 4, 4, 10, 11, 16, 17, 12, 10, 12, 15, 17, 16, 11, 10, 9, 9, 7, 10, 7, 16, 8, 12, 10, 14, 10, 15, 15, 16, 12, 8, 15, 16]\nbases = [46, 49, 45, 45, 44, 49, 51, 52, 56, 58, 53, 57, 62, 63, 68, 66, 65, 66, 63, 63, 62, 61, 61, 57, 61, 64, 63, 58, 56, 56, 56, 60, 59, 54, 57, 54, 54, 50, 53, 51, 48, 43, 42, 38, 37, 39, 44, 49, 47, 43]\n\n\ndef rand_pt(bases, deltas):\n    return [random.randint(base, base + delta) for base, delta in zip(bases, deltas)]\n\n# randomly assign opening and closing prices \nopenings = rand_pt(bases, deltas)\nclosings = rand_pt(bases, deltas)\n\n# First we draw the bars which show the high and low prices\n# bottom holds the low price while deltas holds the difference \n# between high and low.\nwidth = 0\nax = plt.axes()\nrects1 = ax.bar(np.arange(50), deltas, width, color='r', bottom=bases)\n\n# Now draw the ticks indicating the opening and closing price\nfor opening, closing, bar in zip(openings, closings, rects1):\n    x, w = bar.get_x(), 0.2\n\n    args = {\n    }\n\n    ax.plot((x - w, x), (opening, opening), **args)\n    ax.plot((x, x + w), (closing, closing), **args)\n\n\nplt.show()\n</code>\n</pre>\n", "senID": 2}, {"text": ["creates a plot like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"src": "http://i.stack.imgur.com/4dWF7.png", "tag": "img", "senID": 4}, {"text": ["Obviously, you'd want to package this up in a function that drew the plot using (open, close, min, max) tuples (and you probably wouldn't want to randomly assign your opening and closing prices)."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "(open, close, min, max)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You can use Pylab (matplotlib.finance) with Python.", "Here are some examples: http://matplotlib.sourceforge.net/examples/pylab_examples/plotfile_demo.html .", "There is some good material specifically on this problem in Beginning Python Visualization."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "matplotlib.finance", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "http://matplotlib.sourceforge.net/examples/pylab_examples/plotfile_demo.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/examples/pylab%5Fexamples/plotfile%5Fdemo.html"}, {"text": "Beginning Python Visualization", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://rads.stackoverflow.com/amzn/click/1430218436"}]}, {"text": ["Update:  I think you can use matplotlib.finance.candlestick for the Japanese candlestick effect."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "matplotlib.finance.candlestick", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://doc.astro-wise.org/matplotlib.finance.html"}]}], [{"text": ["Have you considered using R and the quantmod package?", "It likely provides exactly what you need."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "quantmod", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.quantmod.com/"}]}], [{"text": ["Are you free to use JRuby instead of Ruby?", "That'd let you use JFreeChart, plus your code would still be in Ruby"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Some good examples about financial plots (OHLC) using matplotlib can be found here:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["finance demo"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}, {"text": ["finance work 2"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}]}], [{"text": ["Please look at the Open Flash Chart embedding for WHIFF\nhttp://aaron.oirt.rutgers.edu/myapp/docs/W1100_1600.openFlashCharts\nAn example of a candle chart is right at the top.", "This would be especially\ngood for embedding in web pages."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://aaron.oirt.rutgers.edu/myapp/docs/W1100_1600.openFlashCharts", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://aaron.oirt.rutgers.edu/myapp/docs/W1100%5F1600.openFlashCharts"}]}], [{"text": ["Open Flash Chart is nice choice if you like the look of examples.", "I've moved to JavaScript/Canvas library like Flot for HTML embedded charts, as it is more customizable and I get desired effect  without much hacking (http://itprolife.worona.eu/2009/08/scatter-chart-library-moving-to-flot.html)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Flot", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/flot/"}]}], [{"text": ["This is the stock chart I draw just days ago using Matplotlib, I've posted the source too, for your reference: StockChart_Matplotlib"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "StockChart_Matplotlib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bluegene8210.is-programmer.com/posts/25954.html"}]}], [{"text": ["you can use RChart for Ruby, it supports the kind of charts you refer to"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "RChart for Ruby", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.java4less.com/chartsruby/chart.php"}]}]]