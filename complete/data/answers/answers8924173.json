[[{"text": ["There is a very useful module for formatting text (bold, underline, colors..) in Python.", "It uses curses lib but it's very straight-forward to use."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://nadiana.com/python-curses-terminal-controller"}, {"text": "curses", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["An example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from terminal import render\nprint render('%(BG_YELLOW)s%(RED)s%(BOLD)sHey this is a test%(NORMAL)s')\nprint render('%(BG_GREEN)s%(RED)s%(UNDERLINE)sAnother test%(NORMAL)s')\n</code>\n</pre>\n", "senID": 2}], [{"text": ["This depends if you're using linux/unix:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; start = \"\\033[1m\"\n&gt;&gt;&gt; end = \"\\033[0;0m\"\n&gt;&gt;&gt; print \"The\" + start + \"text\" + end + \" is bold.\"\nThe text is bold.\n</code>\n</pre>\n", "senID": 1}, {"text": ["The word text should be bold."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "text", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Some terminals allow to print colored text.", "Some colors look like if they are \"bold\".", "Try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print ('\\033[1;37mciao!')\n</code>\n</pre>\n", "senID": 1}, {"text": ["The sequence '\\033[1;37m' makes some terminals to start printing in \"bright white\" that may look a bit like bolded white.", "'\\033[0;0m' will turn it off."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Assuming that you really mean \"print\" on a real printing terminal:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "really", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "real", "childNum": 0, "tag": "em", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; text = 'foo bar\\r\\noof\\trab\\r\\n'\n&gt;&gt;&gt; ''.join(s if i &amp; 1 else (s + '\\b' * len(s)) * 2 + s\n...         for i, s in enumerate(re.split(r'(\\s+)', text)))\n'foo\\x08\\x08\\x08foo\\x08\\x08\\x08foo bar\\x08\\x08\\x08bar\\x08\\x08\\x08bar\\r\\noof\\x08\\\nx08\\x08oof\\x08\\x08\\x08oof\\trab\\x08\\x08\\x08rab\\x08\\x08\\x08rab\\r\\n'\n</code>\n</pre>\n", "senID": 1}, {"text": ["Just send that to your stdout."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "stdout", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Check out colorama.", "It doesn't necessarily help with bolding... but you can do colorized output on both Windows and Linux, and control the brightness:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "colorama", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/colorama"}]}, {"code": "<pre>\n<code>\n from colorama import *\ninit(autoreset=True)\nprint Fore.RED + 'some red text'\nprint Style.BRIGHT + Fore.RED + 'some bright red text'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["In straight-up computer programming, there is no such thing as \"printing bold text\".", "Let's back up a bit and understand that your text is a string of bytes and bytes are just bundles of bits.", "To the computer, here's your \"hello\" text, in binary."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "binary", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Binary_numeral_system"}]}, {"code": "<pre>\n<code>\n 0110100001100101011011000110110001101111\n</code>\n</pre>\n", "senID": 1}, {"text": ["Each one or zero is a bit.", "Every eight bits is a byte.", "Every byte is, in a string like that in Python 2.x, one letter/number/punctuation item (called a character).", "So for example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n 01101000 01100101 01101100 01101100 01101111\nh        e        l        l        o\n</code>\n</pre>\n", "senID": 3}, {"text": ["The computer translates those bits into letters, but in a traditional string (called an ASCII string), there is nothing to indicate bold text.", "In a Unicode string, which works a little differently, the computer can support international language characters, like Chinese ones, but again, there's nothing to say that some text is bold and some text is not.", "There's also no explicit font, text size, etc."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["In the case of printing HTML, you're still outputting a string.", "But the computer program reading that string (a web browser) is programmed to interpret text like this is &lt;b&gt;bold&lt;/b&gt; as \"this is bold\" when it converts your string of letters into pixels on the screen.", "If all text were WYSIWYG, the need for HTML itself would be mitigated -- you would just select text in your editor and bold it instead of typing out the HTML."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "this is &lt;b&gt;bold&lt;/b&gt;", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "bold", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}, {"text": ["Other programs use different systems -- a lot of answers explained a completely different system for printing bold text on terminals.", "I'm glad you found out how to do what you want to do, but at some point, you'll want to understand how strings and memory work."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]]