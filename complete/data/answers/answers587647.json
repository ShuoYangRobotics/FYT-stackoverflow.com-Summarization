[[{"text": ["Use the much overlooked str.zfill():"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n str(int(x) + 1).zfill(len(x))\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n int('00000001') + 1\n</code>\n</pre>\n", "senID": 0}, {"text": ["if you want the leading zeroes back:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n \"%08g\" % (int('000000001') + 1)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["\"%%0%ii\" % len(x) % (int(x)+1)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["-- MarkusQ"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["P.S.", "For x = \"0000034\" it unfolds like so:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n \"%%0%ii\" % len(\"0000034\") % (int(\"0000034\")+1)\n\"%%0%ii\" % 7 % (34+1)\n\"%07i\" % 35\n\"0000035\"\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Presumably, you specifically mean an integer represented as a string with leading zeros?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If that's the case, I'd do it thusly:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a\n'00000000000000099'\n&gt;&gt;&gt; l = len(a)\n&gt;&gt;&gt; b = int(a)+1\n&gt;&gt;&gt; b\n100\n&gt;&gt;&gt; (\"%0\"+\"%dd\" % l) % b\n'00000000000000100'\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Determine the length, convert it to an integer, increment it, then convert it back to a string with leading zeros so that it has the same length as before."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Store your number as an integer.", "When you want to print it, add the leading zeros.", "This way you can easily do math without conversions, and it simplifies the thought process."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]