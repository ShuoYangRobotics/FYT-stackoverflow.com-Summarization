[[{"text": ["str.join() can only join a sequence of strings.", "Obviously your list contains an item that itself is a list again."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "str.join()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Furthermore, if you really need to check for the type of an object, a better way to do it is"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if isinstance(data, list):\n    ...\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The first element of data is a list.", "It must be a string in order for str.join() to work as shown.", "In fact, all elements must."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "data", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "str.join()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Don't explicitly check for types.", "If you do need to, use isinstance. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "isinstance", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#isinstance"}]}, {"text": ["The error is appearing because of the contents of data rather than its type.", "It needs to be a list of strings for the str.join method to work on it. "], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "data", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "str.join", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["The first element of your list is also a list, not a string."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Also you don't have to do type(data).__name__=='list' - just type(data) is list"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "type(data).__name__=='list'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "type(data) is list", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Even better - just check with isinstance since you don't really care about a specific type in most cases."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "isinstance", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["join expects an iterable of strings.", "What seems to happen in your case is that the first element of your list is another list.", "This is what's causing the error."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "join", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "strings", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["As an aside, the if type(data).__name__=='list': ... is as un-Pythonic as code gets."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "if type(data).__name__=='list': ...", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You appear to have a list of lists.", "Try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \",\".join(str(x) for x in data)\n</code>\n</pre>\n", "senID": 1}]]