[[{"text": ["For the ssh/authentication piece, you can setup passwordless authentication by using keys.", "Then you can simply use ssh and a bash script to execute a series of commands in an automated fashion."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "setup passwordless authentication by using keys", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.petefreitag.com/item/532.cfm"}, {"text": "ssh", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["You could use Python here, but if you are executing a series of shell commands, it's probably a better idea to use a shell script, as that's precisely what they do."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "could", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Alternately, look into Fabric for your automation needs.", "It's Python-based, and your \"recipes\" are written in Python."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Fabric", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://fabfile.org"}]}], [{"text": ["I'm not quite sure what you're asking, but what you're probably asking about is getting SSH working in password-less mode using public keys.", "The general idea is you generate an SSH keypair:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ssh-keygen -t rsa\n</code>\n</pre>\n", "senID": 1}, {"text": ["which gives you id_rsa and id_rsa.pub.", "You append the contents of id_rsa.pub to the ~/.ssh/authorized_keys file of your target user, and SSH from that point on will not ask for credentials.", "In your example, this will work out to:"], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "id_rsa", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "id_rsa.pub", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "id_rsa.pub", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "~/.ssh/authorized_keys", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Only once"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Only once", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n # On your source machine\nssh-keygen -t rsa\ncat ~/.ssh/id_rsa.pub\n# Copy this to clip board\n\n# On somehost.com\nsu - someuser\n# edit ~/.ssh/authorized_keys and paste what you had copied from previous step\n</code>\n</pre>\n", "senID": 4}, {"text": ["From now on, you can now just run"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n ssh someuser@somehost.com \"sh -c 'cd /some/dir; command.sh'\"\n</code>\n</pre>\n", "senID": 6}, {"text": ["and not be prompted for credentials."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["fabric is a fine choice, as others have pointed out.", "there is also pexpect which might be more what you're looking for."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pexpect", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.noah.org/wiki/pexpect"}]}], [{"text": ["You can play with autoexpect.", "It creates expect script (script language intended to handle interaction with user).", "Run"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "autoexpect", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "expect", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n autoexpect ssh me@somehost.com\n</code>\n</pre>\n", "senID": 1}, {"text": ["followed by rest of commands.", "Script script.exp will be created.", "Please note, that exact results of input and output will be recorded by the script.", "If output may differ from execution to execution, you'll need to modify a bit generated script."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "script.exp", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["As Daniel pointed out you need to have a secure way of doing ssh and sudo on the boxes.", "Those items are universal to dealing with linux/unix boxes.", "Once you've tackled that you can use fabric.", "It's a python based tool to do automation."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "fabric", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://fabfile.org"}]}], [{"text": ["You can set stuff up in your ~/.ssh/config\nFor example:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "~/.ssh/config", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n Host somehost\n    User test\n</code>\n</pre>\n", "senID": 1}, {"text": ["See ssh_config(5) for more info."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Next, you can generate a SSH key using ssh-keygen(1), run ssh-agent(1), and use that for authentication."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you want to run a command on a remote machine, you can just use something like:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["$ ssh somehost \"sh myscript.sh ${myparameter}\"."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "$ ssh somehost \"sh myscript.sh ${myparameter}\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I hope this at least points you in the right direction :)"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["If you need sudo access, then there are obvious potential security issues though ... You can use ChrootDirectory on a per user basis inside a Match block though.", "See sshd_config(5) for info."], "childNum": 3, "tag": "p", "senID": 7, "childList": [{"text": "need", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "ChrootDirectory", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Match", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["try module paramiko.", "This can meet your requirement."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "paramiko", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.lag.net/paramiko/"}]}]]