[[{"text": ["This should be the most efficent and shortest:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import operator\nfilter(operator.isNumberType, list_1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Edit: this in python 3000:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import numbers\n[x for x in list_1 if isinstance(x, numbers.Number)]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["List comprehensions."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list_2 = [num for num in list_1 if isinstance(num, (int,float))]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n list_2 = [i for i in list_1 if isinstance(i, (int, float))]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n filter(lambda n: isinstance(n, int), [1,2,\"three\"])\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n list_2 = [i for i in list_1 if isinstance(i, (int, float))]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; [ i for i in list_1 if not str(i).replace(\" \",\"\").isalpha() ]\n[1, 123131.13099999999, 9.9999999999999995e-07, 34.124512352650001]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["for short of SilentGhost way"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list_2 = [i for i in list_1 if isinstance(i, (int, float))]\n</code>\n</pre>\n", "senID": 1}, {"text": ["to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n list_2 = [i for i in list_1 if not isinstance(i, str)]\n</code>\n</pre>\n", "senID": 3}]]