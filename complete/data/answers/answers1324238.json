[[{"text": ["Here are the results of the popular template engines for rendering a 10x1000 HTML table."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Python 2.6.2 on a 3GHz Intel Core 2\n\nKid template                         696.89 ms\nKid template + cElementTree          649.88 ms\nGenshi template + tag builder        431.01 ms\nGenshi tag builder                   389.39 ms\nDjango template                      352.68 ms\nGenshi template                      266.35 ms\nElementTree                          180.06 ms\ncElementTree                         107.85 ms\nStringIO                              41.48 ms\nJinja 2                               36.38 ms\nCheetah template                      34.66 ms\nMako Template                         29.06 ms\nSpitfire template                     21.80 ms\nTenjin                                18.39 ms\nSpitfire template -O1                 11.86 ms\ncStringIO                              5.80 ms\nSpitfire template -O3                  4.91 ms\nSpitfire template -O2                  4.82 ms\ngenerator concat                       4.06 ms\nlist concat                            3.99 ms\ngenerator concat optimized             2.84 ms\nlist concat optimized                  2.62 ms\n</code>\n</pre>\n", "senID": 1}, {"text": ["The benchmark is based on code from Spitfire performance tests with some added template engines and added iterations to increase accuracy.", "The list and generator concat at the end are hand coded Python to get a feel for the upper limit of performance achievable by compiling to Python bytecode.", "The optimized versions use string interpolation in the inner loop."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "code from Spitfire performance tests", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/spitfire/source/browse/trunk/tests/perf/bigtable.py"}]}, {"text": ["But before you run out to switch your template engine, make sure it matters.", "You'll need to be doing some pretty heavy caching and really optimized code before the differences between the compiling template engines starts to matter.", "For most applications good abstraction facilities, compatibility with design tools, familiarity and other things matter much much more."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["You probably don't care how fast the templating system is.", "Among the popular ones, they all have perfectly acceptable performance characteristics.", "Please make decisions like this based on more important things, like ease of programming."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If you can throw caching in the mix (like memcached) then choose based on features and ease of use rather than optimization."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I use Mako because I like the syntax and features.", "Fortunately it is one of the fastest as well."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["From the jinja2 docs, it seems that string.Template is the fastest if that's all you need."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "jinja2 docs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jinja.pocoo.org/2/documentation/faq"}]}], [{"text": ["In general you will have to do profiling to answer that question, as it depends on how you use the templates and what for."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["string.Template is the fastest, but so primitive it can hardly be called a template in the same breath as the other templating systems, as it only does string replacements, and has no conditions or loops, making it pretty useless in practice."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Here's a \nperformance benchmark comparing Evoque, Mako and Genshi."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "performance benchmark comparing Evoque, Mako and Genshi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://evoque.gizmojo.org/benchmark/basic/"}]}], [{"text": ["http://teng.sourceforge.net/ - designed for 100+req/sec sites."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://teng.sourceforge.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://teng.sourceforge.net/"}]}], [{"text": ["According to the benchmarks offered on the website, Tenjin is supposedly blazingly fast compared to the competition."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Tenjin", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.kuwata-lab.com/tenjin/"}]}], [{"text": ["I think Cheetah might be the fastest, as it's implemented in C."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]