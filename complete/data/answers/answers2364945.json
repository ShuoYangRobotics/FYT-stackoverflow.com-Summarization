[[{"text": ["Is each loop supposed to generate a new figure?", "I don't see you closing it or creating a new figure instance from loop to loop."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["This call will clear the current figure after you save it at the end of the loop:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["pyplot.clf()"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I'd refactor, though, and make your code more OO and create a new figure instance on each loop:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from matplotlib import pyplot\n\nwhile True:\n  fig = pyplot.figure()\n  ax = fig.add_subplot(111)\n  ax.plot(x,y)\n  ax.legend(legendStrings, loc = 'best')\n  fig.savefig('himom.png')\n  # etc....\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I've also run into this error.", "what seems to have fixed it is"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n while True:\n    fig = pyplot.figure()\n    ax = fig.add_subplot(111)\n    ax.plot(x,y)\n    ax.legend(legendStrings, loc = 'best')\n    fig.savefig('himom.png')\n    #new bit here\n    pylab.close(fig) #where f is the figure\n</code>\n</pre>\n", "senID": 1}, {"text": ["running my loop stably now with fluctuating memory but no consistant increase"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Although this is not a direct answer, I see that you intend to save the figure as a PNG using savefig.", "You can actually save a figure without displaying it first.", "That may avoid memory problems.", "For example, consider this code:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "savefig", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n f = pylab.figure()\nax = f.add_axes([0.1,0.1,0.8,0.8])\nfor i in columnNumbers:\n    ax.plot(t, out[:,i], lineProps[i])\nf.savefig(dtAsString+'.png', dpi=300)\n</code>\n</pre>\n", "senID": 1}, {"text": ["I think this should work."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Answer from ninjasmith worked for me too - pyplolt.close() enabled my loops to work. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyplolt.close()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["From http://matplotlib.sourceforge.net/users/pyplot_tutorial.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://matplotlib.sourceforge.net/users/pyplot_tutorial.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/users/pyplot_tutorial.html"}]}], [{"text": ["I have run into the same problem, but the suggested fixes do not work for me."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In the process of writing some scientific code I have a number of cases which I plot within a loop.", "As the loop produces more and more plots (on the order of 200 plots, about 10MB) I can watch the memory usage grow in top.", "I have tried clf(), I don't bother displaying the figure, but the above suggestions don't work--the memory usage steadily grows until it crashes, giving me an error message."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm using matplotlib version 0.99.1.2-3 with python version 2.6.5 (standard, up to date Ubuntu 10.04 installation, 2GB RAM).", "The crash comes when I have roughly 8MB's worth of figures completed, so it would appear that Agg is storing the uncompressed images without discarding them."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I have a similar memory problem, using mpl.use('Agg') as opposed to Agg's with extra consonants, has resolved this for me(EPD 6.2-2 on both xp32 and mac osx)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]