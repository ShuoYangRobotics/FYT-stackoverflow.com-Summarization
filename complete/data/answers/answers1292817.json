[[{"text": ["selenium will do exactly what you want and it handles javascript"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You can also take a look at mechanize.", "Its meant to handle \"stateful programmatic  web browsing\" (as per their site)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "mechanize", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wwwsearch.sourceforge.net/mechanize/"}, {"text": "\"stateful programmatic  web browsing\"", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["You may have a look at these slides from the last italian pycon (pdf):\nThe author listed most of the library for doing scraping and autoted browsing in python.", "so you may have a look at it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "last italian pycon", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.pycon.it/static/stuff/slides/tecniche-di-scraping-in-python.pdf"}]}, {"text": ["I like very much twill (which has already been suggested), which has been developed by one of the authors of nose and it is specifically aimed at testing web sites."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "twill", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://twill.idyll.org/"}]}], [{"text": ["You likely want urllib2.", "It can handle things like HTTPS, cookies, and authentication.", "You will probably also want BeautifulSoup to help parse the HTML pages."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "urllib2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/urllib2.html"}, {"text": "BeautifulSoup", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/"}]}], [{"text": ["http://twill.idyll.org/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://twill.idyll.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://twill.idyll.org/"}]}], [{"text": ["There are plenty of built in python modules that whould help with this.", "For example urllib and htmllib."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "urllib", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/urllib.html"}, {"href": "http://docs.python.org/library/htmllib.html", "text": "htmllib", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["The problem will be simpler if you change the way you're approaching it.", "You say you want to \"fill some forms, click submit button, send the data back to server, recieve the response\", which sounds like a four stage process."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In fact, what you need to do is post some data to a webserver and get a response."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This is as simple as:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import urllib\n&gt;&gt;&gt; params = urllib.urlencode({'spam': 1, 'eggs': 2, 'bacon': 0})\n&gt;&gt;&gt; f = urllib.urlopen(\"http://www.musi-cal.com/cgi-bin/query\", params)\n&gt;&gt;&gt; print f.read()\n</code>\n</pre>\n", "senID": 4}, {"text": ["(example taken from the urllib docs)."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["What you do with the response depends on how complex the HTML is and what you want to do with it.", "You might get away with parsing it using a regular expression or two, or you can use the htmllib.HTMLParser class, or maybe a higher level more flexible parser like Beautiful Soup."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Beautiful Soup", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.crummy.com/software/BeautifulSoup/"}]}], [{"text": ["Internet Explorer specific, but rather good:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://pamie.sourceforge.net/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pamie.sourceforge.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pamie.sourceforge.net/"}]}, {"text": ["The advantage compared to urllib/BeautifulSoup is that it executes Javascript as well since it uses IE."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["httplib2 + beautifulsoup"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Use firefox + firebug + httpreplay to see what the javascript passes to and from the browser from the website.", "Using httplib2 you can essentially do the same via post and get"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Selenium2 includes webdriver, which has python bindings and allows one to use the headless htmlUnit driver, or switch to firefox or chrome for graphical debugging."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Selenium2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/selenium/"}, {"href": "http://pypi.python.org/pypi/selenium/2.0rc2", "text": "python bindings", "childNum": 0, "tag": "a", "childList": []}]}]]