[[{"text": ["I don't believe that there's a direct equivalent, so Romain Francois's suggestion (in your link) is probably the best.", "You might also want to consider the following:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I have written a Python implementation of Sweave called Pweave that implements basic functionality and some options of Sweave for Python code embedded in reST or Latex document.", "You can get it here: http://mpastell.com/pweave and see the original blog post here:  http://mpastell.com/2010/03/03/pweave-sweave-for-python/"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "http://mpastell.com/pweave", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://mpastell.com/pweave"}, {"href": "http://mpastell.com/2010/03/03/pweave-sweave-for-python/", "text": "http://mpastell.com/2010/03/03/pweave-sweave-for-python/", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Dexy is a very similar product to Sweave.", "One advantage of Dexy is that it is not exclusive to one single language.", "You could create a Dexy document that included R code, Python code, or about anything else. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Dexy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.dexy.it/"}]}], [{"text": ["You might consider noweb, which is language independent and is the basis for Sweave.", "I've used it for Python and it works well. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.cs.tufts.edu/~nr/noweb/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.cs.tufts.edu/~nr/noweb/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cs.tufts.edu/~nr/noweb/"}]}], [{"text": ["I've restructured Matti's Pweave a bit, so that it is possible to define arbitrary \"chunk-processors\" as plugin-modules.", "This makes it easy to extend for several chunk-based text-preprocessing applications.", "The restructured version is available at https://bitbucket.org/edgimar/pweave/src.", "As an example, you could write the following LaTeX-Pweave document (notice the \"processor name\" in this example is specified with the name 'mplfig'):"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "https://bitbucket.org/edgimar/pweave/src", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "https://bitbucket.org/edgimar/pweave/src"}]}, {"code": "<pre>\n<code>\n \\documentclass[a4paper]{article}\n\\usepackage{graphicx}\n\\begin{document}\n\\title{Test document}\n\\maketitle\n\nDon't miss the great information in Figure \\ref{myfig}!\n\n\n&lt;&lt;p=mplfig, label=myfig, caption = \"Figure caption...\"&gt;&gt;=\nimport sys\nimport pylab as pl\n\npl.plot([1,2,3,4,5],['2,4,6,8,10'], 'b.', markersize=15)\npl.axis('scaled')\npl.axis([-3,3, -3,3]) # [xmin,xmax, ymin,ymax]\n@\n\n\\end{document}\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You could try SageTeX which implements Sweave-Like functionality for the SAGE mathematics platform.", "I haven't played around with it as much as I would like to, but SAGE is basically a python shell and evaluates python as it's native language."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "SageTeX", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.ctan.org/tex-archive/help/Catalogue/entries/sagetex.html"}, {"text": "SAGE", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.sagemath.org"}]}], [{"text": ["I have also thought about the same thing many times.", "After reading your questions and looking into your link I made small modifications to the custom python Sweave driver, that you link to.", "I modified it to also keep the source code  and produce the output as well the same way that Sweave does for R."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I posted the modified version and an example here: http://mpastell.com/2010/02/09/python-in-sweave-document/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://mpastell.com/2010/02/09/python-in-sweave-document/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mpastell.com/2010/02/09/python-in-sweave-document/"}]}, {"text": ["Granted, it is not optimal but I'm quite happy with the output and I like the ability to include both R and Python in the same document. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Edit about PyLit:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Edit about PyLit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I also like PyLit and contrary to my original answer you can catch ouput with it as well, although it not as elegant as Sweave!", "Here is a small example how to do it:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import sys\n\n# Catch PyLit output\n\na = range(3)\nsys.stdout = open('output.txt', 'w')\nprint a\nsys.stdout = sys.__stdout__\n\n# .. include:: output.txt\n</code>\n</pre>\n", "senID": 5}]]