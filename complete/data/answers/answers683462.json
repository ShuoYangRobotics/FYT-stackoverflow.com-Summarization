[[{"text": ["How about Pyjamas?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pyjamas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyjamas/"}]}, {"text": ["From the above website:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Here's something, a Python wrapper around the SeaMonkey Javascript interpreter... http://pypi.python.org/pypi/python-spidermonkey"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://pypi.python.org/pypi/python-spidermonkey", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/python-spidermonkey"}]}], [{"text": ["If your just interested in sharing complex data types between javascript and python, check out jsonpickle.", "It wraps the standard Python JSON libraries, but has some smarts in serializing and deserializing Python classes and other data types.  "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "jsonpickle", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jsonpickle.googlecode.com/svn/docs/index.html"}]}, {"text": ["Quite a few Google App Engine projects have used this library.", "Joose and FirePython both incorporate jsonpickle."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Joose", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/joose-js/"}, {"href": "http://github.com/darwin/firepython/tree/master", "text": "FirePython", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["there are two projects that allow an \"obvious\" transition between python objects and javascript objects, with \"obvious\" translations from int or float to Number and str or unicode to String: PyV8 and, as one writer has already mentioned: python-spidermonkey."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "PyV8", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyv8"}, {"href": "http://pypi.python.org/pypi/python-spidermonkey", "text": "python-spidermonkey", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["there are actually two implementations of pyv8 - the original experiment was by sebastien louisel, and the second one (in active development) is by flier liu."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["my interest in these projects has been to link them to pyjamas, a python-to-javascript compiler, to create a JIT python accelerator."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "pyjamas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyjs.org"}]}, {"text": ["so there is plenty out there - it just depends what you want to do."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["There's a bridge based on JavaScriptCore (from WebKit), but it's pretty incomplete:\nhttp://code.google.com/p/pyjscore/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.google.com/p/pyjscore/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyjscore/"}]}], [{"text": ["You might also want to check out the PyPy project - they have a Python to (anything) compiler, including Python to Javascript, C, and llvm.", "This allows you to write your code in Python and then compile it into Javascript as you desire."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://codespeak.net/pypy"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://codespeak.net/pypy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codespeak.net/pypy"}]}, {"text": ["Also, check out the informative blog:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["http://morepypy.blogspot.com/"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://morepypy.blogspot.com/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://morepypy.blogspot.com/"}]}, {"text": ["Unfortunately though, you can't convert Javascript to Python this way.", "It seems to work really well overall, they used to have a Javascript (made from compiled Python) version of the Bub'n'Bros game online (though the server has been down for a while)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["http://bub-n-bros.sourceforge.net"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "http://bub-n-bros.sourceforge.net", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bub-n-bros.sourceforge.net"}]}], [{"text": ["unfortunately, the pypy project have ceased development of the -to-javascript backend, and have abandoned it.", "treating javascript as assembly language, and squeezing it through restricted-python first, made a bit of a dog's dinner, unfortunately."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["another possibility is to use XPCOM, say in XUL based apps (like firefox, thunderbird, komodo etc."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I was playing with Pyjon some time ago and seems manage to write Javascript's eval directly in Python and ran simple programs...", "Although it is not complete implementation of JS and rather an experiment.", "Get it here:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://code.google.com/p/pyjon/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.google.com/p/pyjon/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyjon/"}]}]]