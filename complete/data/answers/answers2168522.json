[[{"text": ["Unless you're using Python 3 you shouldn't be using the input-function for user input.", "Use the raw_input-function instead."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "input", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "raw_input", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["As for the actual question; retrieve the result of the split as a list."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The first item in the list will be the command, and the optional following items will be the \"arguments\"."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["This is what partition is for:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "partition", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n command, _, data = raw_input('&gt;').partition(\" \")\n</code>\n</pre>\n", "senID": 1}, {"text": ["If only one word was specified, data will be assigned an empty string."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "data", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["I am certain that someone is going to come up with a \"Pythonic\" solution, but what ever happened to just accepting it as a list and checking it afterward?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n command_data = raw_input('&gt;').split(\" \", 1)\nif len(command_data) &gt; 1:\n  do some brilliant stuff next\n</code>\n</pre>\n", "senID": 1}, {"text": ["Sorry, I think the C++ side of my brain is getting moody :)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Edit: Maybe str.partition is what you're looking for.", "At least you're guaranteed a 3-tuple to unpack.", "Mind you if you ever add a second argument to the command you'll have to find a new solution."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["The best way is to build a parser, but if you just want something to work quickly you could just have a list of the commands you want to allow, such as:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "best", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n commands = ['foo', 'bar', 'exit', 'hello world', 'add number']\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then for each command check if your input satisfies s.startswith(command).", "If so, you can do the appropriate thing for that command."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "s.startswith(command)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n line = raw_input('&gt;').split(\" \", 1)\ncommand = line[0]\ndata = line[1] if len(line) &gt; 1 else \"\"\n</code>\n</pre>\n", "senID": 0}, {"text": ["Make sure you use raw_input if you don't want your data being evaluated as a Python expression."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "raw_input", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"code": "<pre>\n<code>\n command, data = (input('&gt;') + ' ').split(\" \", 1)\n</code>\n</pre>\n", "senID": 0}]]