[[{"text": ["\"changed the value of an object's attribute\"  Can lead to problems.", "This is pretty well known.", "You know it, now, also.", "That doesn't indict the language.", "It simply says that you've learned an important lesson in dynamic language programming."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Fussing around with __setattr__ creates problems.", "In some cases, we actually need to add attributes to an object.", "Why?", "It's simpler than creating a whole subclass for one special case where we have to maintain more state information."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "__setattr__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Other things you can say:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I was burned by a C program that absolutely could not be made to work because of ______.", "[Insert any known C-language problem you want here.", "No array bounds checking, for example]  Does that make C fatally flawed?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "______", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I was burned by a DBA who changed a column name and all the SQL broke.", "It's painful to unit test all of it.", "Does that make the relational database fatally flawed?  "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I was burned by a sys admin who changed a directory's permissions and my application broke.", "It was nearly impossible to find.", "Does that make the OS fatally flawed? "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I was burned by a COBOL program where someone changed the copybook, forgot to recompile the program, and we couldn't debug it because the source looked perfect.", "COBOL, however, actually is fatally flawed, so this isn't a good example."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["There are code analyzers like pylint that will warn you if you add a attribute outside of __init__.", "PyDev has nice support for it.", "Such errors are very easy to find with a debugger too."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pylint", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.logilab.org/857"}, {"text": "__init__", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["If the possibility to make mistakes is enough for him to consider a language \"fatally flawed\", I don't think you can convince him otherwise.", "The more you can do with a language, the more you can do wrong with the language.", "It's a caveat of flexibility&mdash;but that's true for any language."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "wrong", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["A tool like pylint or pychecker may be able to detect this."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "pylint", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.logilab.org/857"}, {"href": "http://pychecker.sourceforge.net/", "text": "pychecker", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You can use the __slots__ class attribute to limit the attributes that instances have.", "Attempting to set an attribute that's not expliticly listed will raise an AttributeError.", "There are some complications that arise with subclassing.", "See the Python data model reference for details."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "__slots__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "AttributeError", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "Python data model reference", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/datamodel.html"}]}], [{"text": ["He's effectively ruling out an entire class of programming languages -- dynamically-typed languages -- because of one hard lesson learned.", "He can use only statically-typed languages if he wishes and still have a very productive career as a programmer, but he is certainly going to have deep frustrations with them as well.", "Will he then conclude that they are fatally-flawed?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I think your friend has misplaced his frustration in the language.", "His real problem is lack of debugging techniques.", "teach him how to break down a program into small pieces to examine the output.", "like a manual unit test, this way any inconsistency is found and any assumptions are proven or discarded."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I had a similar bad experience with Python when I first started ... took me 3 months to get over it.", "Having a tool which warns would be nice back then ..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]