[[{"text": ["While the two answers are correct (use \" \".join()), your problem (besides very ugly python code) is this:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "very", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Your strings end in \"\\r\", which is a carriage return.", "Everything is fine, but when you print to the console, \"\\r\" will make printing continue from the start of the same line, hence overwrite what was written on that line so far."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "of the same line", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["You should use the following and forget about this nightmare:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ''.join(list_of_strings)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The problem is not with the concatenation of the strings (although that could use some cleaning up), but in your printing.", "The \\r in your string has a special meaning and will overwrite previously printed strings."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Use repr(), as such:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n ...\nprint \"line value : \", repr(lineList[count])\ntemp = lineList[count]\nediMsg += \" \"+temp\nprint \"ediMsg     : \", repr(ediMsg)\n...\n</code>\n</pre>\n", "senID": 2}, {"text": ["to print out your result, that will make sure any special characters doesn't mess up the output."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["'\\r' is the carriage return character.", "When you're printing out a string, a '\\r' will cause the next characters to go at the start of the line."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Change this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n print \"ediMsg     : \",ediMsg\n</code>\n</pre>\n", "senID": 2}, {"text": ["to:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n print \"ediMsg     : \",repr(ediMsg)\n</code>\n</pre>\n", "senID": 4}, {"text": ["and you will see the embedded \\r values."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "\\r", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["And while your code works, please change it to the one-liner:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "please", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n ediMsg = ' '.join(lineList[1:-1])\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Your problem is printing, and it is not string manipulation.", "Try using '\\n' as last char instead of '\\r' in each string in:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "is", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "is not", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n lineList = [\n    \"UNH+1+TCCARQ:08:2:1A+%CONVID%'&amp;\\r\",\n    \"ORG+1A+77499505:PARAF0103+++A+FR:EUR++11730788+1A'&amp;\\r\",\n    \"DUM'&amp;\\r\",\n    \"FPT+CC::::::::N'&amp;\\r\",\n    \"CCD+CA:5132839000000027:0450'&amp;\\r\",\n    \"CPY+++AF'&amp;\\r\",\n    \"MON+712:1.00:EUR'&amp;\\r\",\n    \"UNT+8+1'\\r\"\n]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I just gave it a quick look.", "It seems your problem arises when you are printing the text.", "I haven't done such things for a long time, but probably you only get the last line when you print.", "If you check the actual variable, I'm sure you'll find that the value is correct."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["By last line, I'm talking about the \\r you got in the text strings."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]