[[{"text": ["This is C++, but you can adapt it to python:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n bool collinear(int x1, int y1, int x2, int y2, int x3, int y3) {\n  return (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2);\n}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Basically, we are checking that the slopes between point 1 and point 2 and point 1 and point 3 match.", "Slope is change in y divided by change in x, so we have:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n y1 - y2     y1 - y3\n-------  =  --------\nx1 - x2     x1 - x3\n</code>\n</pre>\n", "senID": 3}, {"text": ["Cross multiplying gives (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2);"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "(y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Note, if you are using doubles, you can check against an epsilon:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n bool collinear(double x1, double y1, double x2, double y2, double x3, double y3) {\n  return fabs((y1 - y2) * (x1 - x3) - (y1 - y3) * (x1 - x2)) &lt;= 1e-9;\n}\n</code>\n</pre>\n", "senID": 6}], [{"text": ["You can check if the area of the ABC triangle is 0:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [ Ax * (By - Cy) + Bx * (Cy - Ay) + Cx * (Ay - By) ] / 2\n</code>\n</pre>\n", "senID": 1}, {"text": ["Of course, you don't actually need to divide by 2."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Read this, and use it to find the equation of a line through the first two points.", "Follow the instructions to find m and b.", "Then for your third point, calculate mx + b - y.", "If the result is zero, the third point is on the same line as the first two."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.mathsisfun.com/equation_of_line.html"}, {"text": "m", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "mx + b - y", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Rule 1: In any linear 2d space, two points are always on the same line."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "In any linear 2d space, two points are always on the same line.", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Take 2 points and build an equation that represents a line through them.", "Then check if the third point is also on that line. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Good luck."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["y - y0 = a(x-x0) (1) while a = (y1 - y0)/(x1 - x0) and A(x0, y0) B(x1, y1) C(x2, y2).", "See whether C statisfies (1).", "You just replace the appropriate values."], "childNum": 6, "tag": "p", "senID": 0, "childList": [{"text": "y - y0 = a(x-x0)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "a = (y1 - y0)/(x1 - x0)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "A(x0, y0)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "B(x1, y1)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "C(x2, y2)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "C", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Details"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Details", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Linear_equation"}]}], [{"text": ["Define a Java Line2D, and then use yourLine2D.contains(double x, double y)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Line2D", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cupi2.uniandes.edu.co/site/images/recursos/javadoc/j2se/1.5.0/docs/api/java/awt/geom/Line2D.html"}, {"text": "yourLine2D.contains(double x, double y)", "childNum": 0, "tag": "code", "childList": []}]}]]