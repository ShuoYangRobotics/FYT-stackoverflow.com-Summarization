[[{"text": ["A tuple is fixed in length.", "Once you create a tuple, you can't modify it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The command line arguments are stored in a list. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import sys\nt = tuple(sys.argv[1:]) # since sys.argv[0] is the name of the script\n</code>\n</pre>\n", "senID": 2}], [{"text": ["This should do it:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nt = tuple(sys.argv)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Since maybe you don't want the script name, then you might want to do this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if len(sys.argv) &gt; 1:\n    t = tuple(sys.argv[1:])\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Iterate through sys.argv until you reach another flag."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "sys.argv", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You can transform lists into tuples using the tuple() constructor:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; tuple([1, 2, 3, 4])\n(1, 2, 3, 4)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Use this on sys.argv =), or a slice of it.", "Cheers!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Why don't you look at the *args and **kwargs discussion a while back? "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "*args and **kwargs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/3394835/args-and-kwargs"}]}], [{"code": "<pre>\n<code>\n import sys\n\nt1 = tuple(sys.argv)\nt2 = tuple(sys.argv[1:])\n\nprint t1\nprint t2\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You can get the args from the command line using getopt.", "It returns a list of the args, which you can then turn into a tuple using tuple()"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import getopt\nimport sys\n\ndef main(argv):\n    opts, args = getopt.getopt(argv, 'p')\n    return tuple(args)\nif __name__=='__main__':\n    main(sys.argv[1:])\n</code>\n</pre>\n", "senID": 1}, {"text": ["See http://www.faqs.org/docs/diveintopython/kgp_commandline.html"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://www.faqs.org/docs/diveintopython/kgp_commandline.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.faqs.org/docs/diveintopython/kgp_commandline.html"}]}], [{"text": ["The correct answer to your exact question is tuple(sys.argv[1:]), but there are better ways to get the command line arguments so you can use them more appropriately.", "Try optparse :\nhttp://www.doughellmann.com/PyMOTW/optparse/"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "tuple(sys.argv[1:])", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "optparse", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://www.doughellmann.com/PyMOTW/optparse/", "text": "http://www.doughellmann.com/PyMOTW/optparse/", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["If you're using Python 2.7 you should use argparse."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "argparse", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]