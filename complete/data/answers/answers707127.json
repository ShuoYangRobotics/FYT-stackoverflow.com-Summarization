[[{"text": ["In UNIX and Linux this tells which binary to use as an interpreter (see also Wiki page).", "For example shell script is interpreted by /bin/sh."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Wiki page", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Shebang%5F%28Unix%29"}, {"text": "/bin/sh", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n #!/bin/sh\n</code>\n</pre>\n", "senID": 1}, {"text": ["Now with python it's a bit tricky, because you can't assume where the binary is installed, nor which you want to use.", "Thus the /usr/bin/env trick.", "It's use whichever python binary is first in the $PATH.", "You can check that executing which python "], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "/usr/bin/env", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "$PATH", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "which python", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["With the interpreter line you can run the script by chmoding it to executable.", "And just running it.", "Thus with script beginning with"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n</code>\n</pre>\n", "senID": 4}, {"text": ["these two methods are equivalent:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n $ python script.py\n</code>\n</pre>\n", "senID": 6}, {"text": ["and (assuming that earlier you've done chmod +x script.py)"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "chmod +x script.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n $ ./script.py\n</code>\n</pre>\n", "senID": 8}, {"tag": "hr", "senID": 9}, {"text": ["This is useful for creating system wide scripts. "], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n cp yourCmd.py /usr/local/bin/yourCmd\nchmod a+rx /usr/local/bin/yourCmd\n</code>\n</pre>\n", "senID": 11}, {"text": ["And then you call it from anywhere just with"], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"code": "<pre>\n<code>\n yourCmd\n</code>\n</pre>\n", "senID": 13}], [{"text": ["This is called a shebang line:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "shebang", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Shebang%5F%28Unix%29"}]}], [{"text": ["Under UNIX and similar operating systems, this line tells which interpreter is to be used if the file is executed."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["As Andri said.", "In Windows, the executable to run a file with when launched from the command line relies on an association:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n 16:12:40.68 C:\\&gt;assoc .py\n.py=Python.File\n\n16:13:53.45 C:\\&gt;assoc Python.File\nPython.File=Python File\n\n16:14:01.70 C:\\&gt;ftype Python.File\nPython.File=\"C:\\Python30\\python.exe\" \"%1\" %*\n</code>\n</pre>\n", "senID": 1}, {"text": ["In Unix, the shell interpreter makes the inference by opening the file and seeing if there is a command named in the file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["'/usr/bin/env python' searches $PATH for python and runs it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What that line does is tell your computer what to do with that file, if you simply try to run the file without specifying an interpreter.. more detail"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "without specifying an interpreter", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://forums.debian.net/viewtopic.php?t=36789", "text": "more detail", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Just a note, this line is nothing more then a comment to the interpreter in Windows. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "in Windows", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]]