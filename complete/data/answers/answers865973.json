[[{"text": ["To delete half the N images you cannot be faster than O(N)!", "You do know that the O() notation means (among other things) that constant multiplicative factors are irrelevant, yes?"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "cannot", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "do", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"code": "<pre>\n<code>\n import os\nl = os.listdir('/some/dir/with/files')\n\nfor n in l[::2]:\n    os.unlink(n)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The only way to be faster than O(n) is if your files are already sorted, and you only want to delete 1 file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You said i%2==0, this means you are deleting every \"even\" file.", "O(n/2) is still O(n)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I fail to see any conceivable way in which deleting n/2 files could be faster than O(n), unless the filesystem has some special feature for deleting large numbers of files (but I don't think that actually exists in practice, if it's even possible)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "n/2", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["If you wanted to delete Log(n) files, there would be... You can store images in a database, though ( MySQL has a \"blob\" type, among several others, that will store your images).", "Then you could do it in O(1) if you named them smartly."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["/edit\ni hate how i have to use shorthand and bad grammar to get my answers in quickly!!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["if you're looking for a python equivalent of rm -rf *2.img *4.img *6.img *8.img *0.img, know that the computer still has to go through the entire list of files"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You could use islice from the itertools module.", "Here goes your example:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "islice", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "itertools", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n import os, itertools\ndirContent = os.listdir('/some/dir/with/files')\ntoBeDeleted = itertools.islice(dirContent, 0, len(dirContent), 2)\n# Now remove the files\n[os.unlink(file) for file in toBeDeleted]\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is another form of doing what you want, although I'm not sure if it'll be faster.", "Hope this helps."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["\"Going through each one with i%2==0 is still O(n)\""], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Increment by 2 instead of incrementing by 1?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for(i = 0; i &lt; numFiles; i += 2) {\n  deleteFile(files[i]);\n}\n</code>\n</pre>\n", "senID": 2}, {"text": ["Seriously though: iterating through a list of files probably isn't the slowest part of your file deletion algo.", "The actual deletion likely takes several orders of magnitude more time."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I would try to use something operating-system specific like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["linux:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n @files = grep { -f \"$dir/$_\" &amp;&amp; /*.H$/ }\nunlink @files\n</code>\n</pre>\n", "senID": 2}, {"text": ["Win:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n $file_delete =~ /H$/;\nrm $file_delete\n</code>\n</pre>\n", "senID": 4}, {"text": ["to see if your os can do it faster than iterating in python."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["use os.system(...) or subprocess.call(...)  to run these from python."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]]