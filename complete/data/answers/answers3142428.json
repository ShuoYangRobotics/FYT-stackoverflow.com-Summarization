[[{"text": ["Compare with:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \"1/2/3\".split(\"/\")\n</code>\n</pre>\n", "senID": 1}, {"text": ["Empty elements are still elements."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You could use strip('/') to trim the delimiter from the beginning/end of your string."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "strip('/')", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["As JLWarlow says, you have an extra '/' in the string.", "Here's another example:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"//2//3\".split('/')\n['', '', '2', '', '3']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Slashes are separators, so there are empty elements before the first and after the last."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "separators", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["you're splitting on /.", "You have 4 /, so, the list returned will have 5 elements."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "/", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["That is exactly what I would expect, but we are all different :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What would you expect from: : \"1,,2,3\".split(\",\") ?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You can use strip() to get rid of the leading and trailing fields... Then call split() as before."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "strip()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "split()", "childNum": 0, "tag": "code", "childList": []}]}], [{"code": "<pre>\n<code>\n [x for x in \"//1///2/3///\".split(\"/\") if x != \"\"]\n</code>\n</pre>\n", "senID": 0}]]