[[{"text": ["Unicode is not an encoding.", "You encode into byte strings and decode into Unicode:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '\\x89'.decode('cp437')\nu'\\xeb'\n&gt;&gt;&gt; u'\\xeb'.encode('cp437')\n'\\x89'\n&gt;&gt;&gt; u'\\xeb'.encode('utf8')\n'\\xc3\\xab'\n</code>\n</pre>\n", "senID": 1}, {"text": ["The windows terminal uses legacy code pages for DOS.", "For US Windows it is:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import sys\n&gt;&gt;&gt; sys.stdout.encoding\n'cp437'\n</code>\n</pre>\n", "senID": 3}, {"text": ["Windows application use windows code pages.", "Python's IDLE will show the windows encoding:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import sys\n&gt;&gt;&gt; sys.stdout.encoding\n'cp1252'\n</code>\n</pre>\n", "senID": 5}, {"text": ["Your results may vary."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Read through this python HOWTO about unicode after you read this section from the tutorial "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "unicode", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/howto/unicode.html"}, {"href": "http://docs.python.org/tutorial/introduction.html#unicode-strings", "text": "tutorial", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Creating Unicode strings in Python is just as simple as creating normal strings:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; u'Hello World !'\nu'Hello World !'\n</code>\n</pre>\n", "senID": 2}, {"text": ["To answer your first question, they are different because only when using u''are you creating a unicode string."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "u''", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["2nd question:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n sys.getdefaultencoding()\n</code>\n</pre>\n", "senID": 5}, {"text": ["returns the default encoding"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["But to quote from link:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "link", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/DefaultEncoding"}]}], [], [{"text": ["You've answered question 1 as you ask it: the first string is an encoded byte-string, but the second is not an encoding at all, it refers to a unicode code-point, which for \"LATIN SMALL LETTER E WITH DIAERESIS\" is hex eb."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "eb", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Now, the question of what the first encoding is is an interesting one.", "I would normally expect it to be either utf-8, or, since you're on Windows, ISO-8859-1 or Win-1252 (which aren't exactly the same thing, but close enough).", "However, the normal representation of that letter in utf-8 is c3 ab and in Win-1252 it's actually the same as the unicode code-point - ie hex eb.", "So, it's a bit of a mystery."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "c3 ab", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "eb", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["It appears you are using code page CP850, which makes sense as this is the historical code page for DOS which has been carried forward to the terminal window."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "CP850", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/PC/CP850.TXT"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s\n'\\x89'\n&gt;&gt;&gt; us=unicode(s,'CP850')\n&gt;&gt;&gt; us\nu'\\xeb'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["As you've figured out:    "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = \"\u0451\"\n&gt;&gt;&gt; a\n'\\xf1'\n&gt;&gt;&gt; print a\n\u0451\n</code>\n</pre>\n", "senID": 1}, {"text": ["Do you open any file when get such errors?", "If so, try to open it with "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import codecs\nf = codecs.open('filename.txt','r','utf-8')\n</code>\n</pre>\n", "senID": 3}]]