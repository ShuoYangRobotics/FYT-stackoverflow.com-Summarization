[[{"text": ["Python sequence slice addresses can be written as a[start:end:step] and any of start, stop or end can be dropped.", "a[::3] is every third element of the sequence."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "a[::3]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["it means 'nothing for the first argument, nothing for the second, and jump by three'.", "It gets every third item of the sequence sliced.", "Extended slices is what you want.", "New in Python 2.3"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Extended slices", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/release/2.3.5/whatsnew/section-slices.html"}]}], [{"text": ["seq[::n] is a sequence of each n-th item in the entire sequence."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "seq[::n]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "n", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; range(10)[::2]\n[0, 2, 4, 6, 8]\n</code>\n</pre>\n", "senID": 2}, {"text": ["The syntax is:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n seq[start:end:step]\n</code>\n</pre>\n", "senID": 4}, {"text": ["So you can do:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; range(100)[5:18:2]\n[5, 7, 9, 11, 13, 15, 17]\n</code>\n</pre>\n", "senID": 6}], [{"text": ["Explanation"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["s[i:j:k] is, according to the documentation, \"slice of s from i to j with step k\".", "When i and j are absent, the whole sequence is assumed and thus s[::k] means \"every k-th item\"."], "childNum": 5, "tag": "p", "senID": 1, "childList": [{"text": "s[i:j:k]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "according to the documentation", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#typesseq"}, {"text": "i", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "j", "childNum": 0, "tag": "code", "childList": []}, {"text": "s[::k]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Examples"], "childNum": 0, "tag": "h2", "senID": 2, "childList": []}, {"text": ["First, let's initialize a list:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = range(20)\n&gt;&gt;&gt; s\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n</code>\n</pre>\n", "senID": 4}, {"text": ["Let's take every 3rd item from s:"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "rd", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"text": "s", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s[::3]\n[0, 3, 6, 9, 12, 15, 18]\n</code>\n</pre>\n", "senID": 6}, {"text": ["Let's take every 3rd item from s[2:]:"], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "rd", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"text": "s[2:]", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s[2:]\n[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n&gt;&gt;&gt; s[2::3]\n[2, 5, 8, 11, 14, 17]\n</code>\n</pre>\n", "senID": 8}, {"text": ["Let's take every 3rd item from s[5:12]:"], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "rd", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"text": "s[5:12]", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s[5:12]\n[5, 6, 7, 8, 9, 10, 11]\n&gt;&gt;&gt; s[5:12:3]\n[5, 8, 11]\n</code>\n</pre>\n", "senID": 10}, {"text": ["Let's take every 3rd item from s[:10]:"], "childNum": 2, "tag": "p", "senID": 11, "childList": [{"text": "rd", "childNum": 0, "tag": "sup", "pos": 0, "childList": []}, {"text": "s[:10]", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s[:10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n&gt;&gt;&gt; s[:10:3]\n[0, 3, 6, 9]\n</code>\n</pre>\n", "senID": 12}], [{"text": ["When slicing in Python the third parameter is the step.", "As others mentioned, see Extended Slices for a nice overview."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Extended Slices", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/release/2.3.5/whatsnew/section-slices.html"}]}, {"text": ["With this knowledge, [::3] just means that you have not specified any start or end indices for your slice.", "Since you have specified a step, 3, this will take every third entry of something starting at the first index.", "For example:"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "[::3]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "3", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "something", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '123123123'[::3]\n'111'\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The third parameter is the step.", "So [::3] would return every 3rd element of the list/string."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]