[[{"text": ["A defaultdict is a subclass of dict which would be useful here:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "defaultdict", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/collections.html#collections.defaultdict"}, {"text": "dict", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n import collections\nresult=collections.defaultdict(list)\nfor n,e in zip(N,E):\n    result[n].append(e)\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n yourDict={}\nfor line in file('r.txt', 'r'):\n    k , v =  line.split()\n    if k in yourDict.keys():\n         yourDict[k].append(v)\n    else:\n         yourDict[k] = [v]\n\nprint  yourDict\n</code>\n</pre>\n", "senID": 0}, {"text": ["Output:\n(You can always remove N:E in the last)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n {'1': ['9', '2', '10'], '3': ['166', '175', '7'], '2': ['10', '111', '9'], '4': ['118', '155', '185'], 'N': ['E']}\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The following does not have a for loop over the edges.", "That iteration is handled internally by Python using built-in methods, and it may be faster for large graphs:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import itertools\nimport operator\n\nN = [ 1, 1, 1, 2, 2]\nE = [ 2, 3, 5, 4, 5]\n\niter_g = itertools.groupby(zip(N,E), operator.itemgetter(0))\n\ndict_g = dict( (v, map(operator.itemgetter(1), n)) for v,n in iter_g )\n</code>\n</pre>\n", "senID": 1}, {"text": ["Also, if you only need the data once, you could just use iter_g and not construct the dictionary."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["a bit slower than unutbu's version, but shorter :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n result = { }\nfor n, e in ( line.split( ) for line in open( 'r.txt' ) ):\n    result[ n ] = result.setdefault( n, [ ] ) + [ e ]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This does exactly what you wanted:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import collections\n\nN = []\nE = []\nwith open('edgelist.txt', 'r') as inputfile:\n    inputfile.readline()  # skip header line\n    for line in inputfile:\n        n,e =  map(int,line.split())\n        N.append(n)\n        E.append(e)\n\ndct = collections.defaultdict(list)\nfor n,e in zip(N,E):\n    dct[n].append(e)\ndct = dict(dct)\nprint dct\n# {1: [9, 2, 10], 2: [10, 111, 9], 3: [166, 175, 7], 4: [118, 155, 185]}\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here is the short answer:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n l1 = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4]\nl2 = [9, 2, 10, 10, 111, 9, 166, 175, 7, 118, 155,185]\n\nd = dict((i,[j for j,k in zip(l2,l1) if k == i]) for i in frozenset(l1))\n</code>\n</pre>\n", "senID": 1}]]