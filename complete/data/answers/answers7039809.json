[[{"code": "<pre>\n<code>\n for a in `find . -name '*.py'` ; do cp \"$a\" \"$a.cp\" ; echo \"Added line\" &gt; \"$a\" ; cat \"$a.cp\" &gt;&gt; \"$a\" ; rm \"$a.cp\" ; done\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n find . -name \\*.py | xargs sed -i '1a Line of text here'\n</code>\n</pre>\n", "senID": 0}, {"text": ["Edit: from tchrist's comment, handle filenames with spaces."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Assuming you have GNU find and xargs (as you specified the linux tag on the question)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n find . -name \\*.py -print0 | xargs -0 sed -i '1a Line of text here'\n</code>\n</pre>\n", "senID": 3}, {"text": ["Without GNU tools, you'd do something like:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n while IFS= read -r filename; do\n  { echo \"new line\"; cat \"$filename\"; } &gt; tmpfile &amp;&amp; mv tmpfile \"$filename\"\ndone &lt; &lt;(find . -name \\*.py -print)\n</code>\n</pre>\n", "senID": 5}], [{"code": "<pre>\n<code>\n for root, dirs, files in os.walk(directory):\n    for file in files:\n        if file.endswith('.py')\n            file_ptr = open(file, 'r')\n            old_content = file.read()\n            file_ptr = open(file, 'w')\n            file_ptr.write(your_new_line)\n            file_ptr.write(old_content)\n</code>\n</pre>\n", "senID": 0}, {"text": ["As far as I know you can't insert in begining or end of file in python.", "Only re-write or append."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n #!/usr/bin/perl\n\n    use Tie::File;\n    for (@ARGV) {\n        tie my @array, 'Tie::File', $_ or die $!; \n        unshift @array, \"A new line\";        \n    }\n</code>\n</pre>\n", "senID": 0}, {"text": ["To process all .py files in a directory recursively run this command in your shell: "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["find .", "-name '*.py' | xargs perl script.pl"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "find . -name '*.py' | xargs perl script.pl", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["This will "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["fileinput also gives you the option of backing up your original files before modifying them."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "fileinput", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/fileinput.html#fileinput.input"}]}, {"code": "<pre>\n<code>\n import fileinput\nimport os\nimport sys\n\nfor root, dirs, files in os.walk('.'):\n    for line in fileinput.input(\n            (os.path.join(root,name) for name in files if name.endswith('.py')),\n            inplace=True,\n            # backup='.bak' # uncomment this if you want backups\n            ):\n        if fileinput.isfirstline():\n            sys.stdout.write('Add line\\n{l}'.format(l=line))\n        else:\n            sys.stdout.write(line)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I'd use Perl, but that's because I know Perl much better than I know Python.", "Heck, maybe I'd do this in Python just to learn it a bit better."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The easiest way is to use the language that you're familiar with and can work with.", "And, that's also probably the best way too."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "easiest", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "easiest", "tag": "em"}]}, {"text": "easiest", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["If these are all Python scripts, I take it you know Python or have access to a bunch of people who know Python.", "So, you're probably better off doing the project in Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["However, it's possible with shell scripts too, and if you know shell the best, be my guest.", "Here's a little, completely untested shell script right off the top of my head:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "shell scripts", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n find . -type f -name \"*.py\" | while read file\ndo\n    sed 'i\\\nI want to insert this line\n' $file &gt; $file.temp\n  mv $file.temp $file\ndone\n</code>\n</pre>\n", "senID": 4}]]