[[{"code": "<pre>\n<code>\n def determine_period(universe_array):\n    period=0\n    tmp=universe_array\n    while period&lt;12:\n        tmp=apply_rules(tmp)#aplly_rules is a another function\n        if numpy.array_equal(tmp,universe_array) is True:\n            break \n        period+=1\n\n    return period\n</code>\n</pre>\n", "senID": 0}], [{"text": ["just indent your code correctly:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def determine_period(universe_array):\n    period=0\n    tmp=universe_array\n    while True:\n        tmp=apply_rules(tmp)#aplly_rules is a another function\n        period+=1\n        if numpy.array_equal(tmp,universe_array) is True:\n            return period\n        if period&gt;12:  #i wrote this line to stop it..but seems its doesnt work....help..\n            return 0\n        else:   \n            return period\n</code>\n</pre>\n", "senID": 1}, {"text": ["You need to understand that the break statement in your example will exit the infinite loop you've created with while True.", "So when the break condition is True, the program will quit the infinite loop and continue to the next indented block.", "Since there is no following block in your code, the function ends and don't return anything.", "So I've fixed your code by replacing the break statement by a return statement."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "break", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "while True", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "break", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "return", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["Following your idea to use an infinite loop, this is the best way to write it:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def determine_period(universe_array):\n    period=0\n    tmp=universe_array\n    while True:\n        tmp=apply_rules(tmp)#aplly_rules is a another function\n        period+=1\n        if numpy.array_equal(tmp,universe_array) is True:\n            break\n        if period&gt;12:  #i wrote this line to stop it..but seems its doesnt work....help..\n            period = 0\n            break\n\n    return period\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I recommend learning about pdb, and stepping through your code to see exactly what is going on.", "This will make debugging this kind of errors much easier in the future. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Learning how to use a debugger is one of the first skills a beginning programmer should develop."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["PDB"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "PDB", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/pdb.html"}]}], [{"text": ["The is operator in Python probably doesn't do what you expect.", "Instead of this:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "is", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n if numpy.array_equal(tmp,universe_array) is True:\n        break\n</code>\n</pre>\n", "senID": 1}, {"text": ["I would write it like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if numpy.array_equal(tmp,universe_array):\n        break\n</code>\n</pre>\n", "senID": 3}, {"text": ["The is operator tests object identity, which is something quite different from equality."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "is", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["I would do it using a for loop as shown below :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def determine_period(universe_array):\n    tmp = universe_array\n    for period in xrange(1, 13):\n        tmp = apply_rules(tmp)\n        if numpy.array_equal(tmp, universe_array):\n            return period\n    return 0\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Doesn\u2019t python have some kind of break statement?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "break", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]