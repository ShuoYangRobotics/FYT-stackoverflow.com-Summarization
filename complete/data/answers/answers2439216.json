[[{"text": ["You could teach them about stride notation (::) first and then slicing and apply both."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "::", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "slicing", "childNum": 0, "tag": "em", "childList": []}]}, {"code": "<pre>\n<code>\n s = 'string'\ns = s[::-1]\nprint s  # gnirts\n</code>\n</pre>\n", "senID": 1}, {"text": ["References and more information:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["Extended Slices"], "childNum": 1, "tag": "a", "senID": 3, "childList": [{"text": "Extended Slices", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["An Informal Introduction to Python"], "childNum": 1, "tag": "a", "senID": 4, "childList": [{"text": "An Informal Introduction to Python", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Python string reversed explanation"], "childNum": 1, "tag": "a", "senID": 5, "childList": [{"text": "Python string reversed explanation", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]}, {"text": ["In response to your comment, you can supply either arguments."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s[len(s):None:-1]  \n'gnirts'\n&gt;&gt;&gt; s[5:None:-1]  \n'gnirts'\n&gt;&gt;&gt; s[::-1]  # and of course\n'gnirts'\n</code>\n</pre>\n", "senID": 7}], [{"text": ["The two obvious ways are:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ''.join(reversed(s))\n</code>\n</pre>\n", "senID": 1}, {"text": ["and"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n s[::-1]\n</code>\n</pre>\n", "senID": 3}, {"text": ["I think both are non-trivial for a programming newbie, but the concepts involved are not really that difficult."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The second way is easier to understand if you start by showing them what the results of s[::3], s[::2] and s[::1] are.", "Then s[::-1] will come naturally :)"], "childNum": 4, "tag": "p", "senID": 5, "childList": [{"text": "s[::3]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "s[::2]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "s[::1]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "s[::-1]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Absolute beginners guide to string reversal in python.", ";)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # Tell them that,\n# to reverse a string\n# we read it backwards\n\ns = 'string'  # input string\nl = len(s)\nrs = ''       # reversed string\n\nfor i in range(l-1,-1,-1): # range(start,end,step)\n    rs += s[i]\n\nprint rs\n</code>\n</pre>\n", "senID": 1}, {"text": ["But this is not considered pythonic and I am in favor of better methods everyone else have already posted."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Just ask them a riddle like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["why"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 'dammitimmad'[::-1] == 'dammitimmad'\nTrue\n</code>\n</pre>\n", "senID": 2}, {"text": ["but"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 'dammit im mad'[::-1] == 'dammit im mad'\nFalse\n</code>\n</pre>\n", "senID": 4}, {"text": [], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Take a look at this discussion."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Take a look at this discussion.", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://love-python.blogspot.com/2008/02/reverse-string-in-python.html"}]}], [{"text": ["Introduce them to enough tools (array slicing and perhaps functional-style recursion, in particular) to accomplish the reversal.", "Then, let them struggle with trying to figure it out for a while.", "Take a few different answers and compare them, showing the pros and cons of each way."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]