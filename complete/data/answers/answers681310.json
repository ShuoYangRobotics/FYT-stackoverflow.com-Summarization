[[{"text": ["I'd store a game map in code as a graph.  "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "graph", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Graph%5F%28mathematics%29"}]}, {"text": ["Each node would represent a country/city and each edge would represent adjacency.", "Once you have a map like that, I'm sure you can find many resources on AI (pathfinding, strategy, etc.", ") online."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If you want to be able to build an image of the map programattically, consider adding an (x, y) coordinate and an image for each node.", "That way you can display all of the images at the given coordinates to build up a map view."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The key thing to realize here is that you don't have to use just one map.", "You can use two maps:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "one", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": "The one you already have which is drawn on screen", "tag": "none", "senID": 1}, {"text": "A hidden map which isn't drawn but which is used for path finding, collision detection etc.", "tag": "none", "senID": 2}]}, {"text": ["The natural next question then is where does this second map come from?", "Easy, you create your own tool which can load your first map, and display it.", "Your tool will then let you draw boundaries around you islands and place markers at your cities.", "These markers and boundaries (simple polygons e.g.", ") are stored as your second map and is used in your code to do path finding etc. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["In fact you can have your tool emit python code which creates the graphs and polygons so that you don't have to load any data yourself. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I am just basically telling you to make a level editor.", "It isn't very hard to do.", "You just need some buttons to click on to define what you are adding.", "e.g.", "if you are adding a polygon.", "Then you can just add each mouse coordinate to an array each time you click on your mouse if you have toggled your add polygon button.", "You can have another button for adding cities so that each time you click on the map you will record that coordinate for the city and possibly a corresponding name that you can provide in a text box."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["You're going to have to translate your map into an abstract representation of some kind.", "Either a grid (hex or square) or a graph as xynth suggests.", "That's the only way you're going to be able to apply things like pathfinding algorithms to it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["IMO, the map should be rendered in the first place instead of being a bitmap.", "What you should be doing is to have separate objects each knowing its dimensions clearly such as a generic Area class and classes like City, Town etc derived from this class.", "Your objects should have all the information about their location, their terrain etc and should be rendered/painted etc.", "This way you will have exact knowledge of where everything lies."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Another option is to keep the bitmap as it is and keep this information in your objects as their data.", "By doing this the objects won't have a draw function but they will have precise information of their placement etc.", "This is sort of duplicating the data but if you want to go with the bitmap option, I can't think of any other way."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If you just want to do e.g.", "2D hit-testing on the map, then storing it yourself is fine.", "There are a few possibilities for how you can store the information:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": "A polygon per island", "tag": "none", "senID": 1}, {"text": "Representing each island as union of a list rectangles (commonly used by windowing systems)", "tag": "none", "senID": 2}, {"text": "Creating a special (maybe greyscale) bitmap of the map which uses a unique solid colour for each island", "tag": "none", "senID": 3}, {"text": "Something more complex (perhaps whatever Omnigiraffe's internal representation is)", "tag": "none", "senID": 4}]}], [{"text": ["Asuming the map is fixed (not created on the fly) its \"correct\" to use a bitmap as graphical representation - you want to make it as pretty as possible."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For any game related features such as pathfinding or whatever fancy stuff you want to add you should add adequate data structures, even if that means some data is redundant."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["E.g.", "describe the boundaries of the isles as polygon splines (either manually or automatically created from the bitmap, thats up to you and how much effort you want to spend and is needed to get the functionality you want)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["To sum it up: create data structures matching the problems you have to solve, the bitmap is fine for looks but avoid doing pathfining or other stuff on it."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]