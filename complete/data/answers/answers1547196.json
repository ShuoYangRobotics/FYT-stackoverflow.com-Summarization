[[{"text": ["Indent your code correctly to let the while statement execute until ans*ans &lt; x:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "while", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "ans*ans &lt; x", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n def sqrt(x):\n    ans = 0\n    if x &gt;= 0:\n        while ans*ans &lt; x:\n            ans = ans + 1\n\n        if ans*ans != x:  # this if statement was nested inside the while\n            print x, 'is not a perfect square.'\n            return None\n        else:\n            print x, ' is a perfect square.'\n            return ans\n    else:\n        print x, ' is not a positive number.'\n        return None\n\ny = 16          \nprint sqrt(y)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Try it out here."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codepad.org/dnxYtH5t"}]}], [{"text": ["Just thought I'd contribute a simpler solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def is_square(n):\n    return sqrt(n).is_integer()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Examples:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; is_square(4)\nTrue\n&gt;&gt;&gt; is_square(123)\nFalse\n&gt;&gt;&gt; is_square(123123123432**2)\nTrue\n&gt;&gt;&gt; is_square(123123123432**7)\nTrue\n&gt;&gt;&gt; is_square(123123123432156156165**7)\nTrue\n&gt;&gt;&gt; is_square(123456789123456789**7)\nTrue\n</code>\n</pre>\n", "senID": 3}, {"text": ["Hope this helps.", "=)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Your while loop only executes once.", "No matter which branch the if statement inside it takes, the whole function will return immediately."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "while", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "if", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["EDIT I modified it, tried it out, and it works.", "You just need this piece of code"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As soon as ans = 4, ans * ans is no longer smaller than x.", "Try while ans*ans &lt;= x:  instead of just &lt;"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def sqrt(x):\nans = 0\nif x &gt;= 0:\n    \twhile ans*ans &lt;= x:          \t  \t\t\n            \tif ans*ans == x:\n                    \t\tprint x, ' is a perfect square.'\n                    \t\treturn ans\n\t\telse:\n\t\t\tans = ans + 1\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Change your code so it displays the value of ans as well as x, so you can tell how many times the loop is executed."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "ans", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "x", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["If your code sample is actually correctly indentet the first round of the while will return on it's first round - always.", "So any positive value of x>1 will fullfil the ans*ans=1*1=1!=x, giving \"x is not a perfect square\". "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You basically needs to get your indentation right - like you do in your other example.", "Again - if your code sample here actually is correctly indented.", "Try this: "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def sqrt(x):\n    ans = 0\n    if x &gt;= 0:\n        while ans*ans &lt; x:\n            ans = ans + 1\n\n        if ans*ans != x:\n            print x, 'is not a perfect square.'\n            return None\n        else:\n            print x, ' is a perfect square.'\n            return ans\n    else:\n        print x, ' is not a positive number.'\n        return None\n</code>\n</pre>\n", "senID": 2}], [{"text": ["If the goal is to determine whether a number is a perfect square, I would think it would be simpler (and perhaps more efficient) to use math builtins, e.g."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def is_perfect_square(n):\n  if not ( ( isinstance(n, int) or isinstance(n, long) ) and ( n &gt;= 0 ) ):\n    return False \n  else:\n    return math.sqrt(n) == math.trunc(math.sqrt(n))\n</code>\n</pre>\n", "senID": 1}]]