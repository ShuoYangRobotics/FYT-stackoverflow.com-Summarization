[[{"text": ["I'd recommend saying"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n line.split(\";\")[0]\n</code>\n</pre>\n", "senID": 1}, {"text": ["which will give you a string of all characters up to but not including the first \";\" character.", "If no \";\" character is present, then it will give you the entire line."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["just do a split on the line by comment then get the first element\neg"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n line.split(\";\")[0]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["For Python 2.5 or greater, I would use the partition method:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "partition", "tag": "a", "pos": 0, "childList": [{"text": "partition", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/stdtypes.html?highlight=partition#str.partition"}, {"text": "partition", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n rtr = line.partition(';')[0].rstrip() + '\\n'\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n file = open(r'c:\\temp\\test.txt', 'r')\nfor line in file:   print\n   line.split(\";\")[0].strip()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["So you'll want to split the line on the first semicolon, take everything before it, strip off any lingering whitespace, and append a newline character."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n rtr = line.split(\";\", 1)[0].rstrip() + '\\n'\n</code>\n</pre>\n", "senID": 1}, {"text": ["Links to Documentation:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Links to Documentation:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": ["split"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["rstrip"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}]}], [{"text": ["Reading, splitting, stripping, and joining lines with newline all in one line of python:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n rtr = '\\n'.join(line.split(';')[0].strip() for line in open(r'c:\\temp\\test.txt', 'r'))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here is another way :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\nIn [6]: line = \"foo;bar\"\nIn [7]: line[:line.find(\";\")] + \"\\n\"\nOut[7]: 'foo\\n'\n</pre>\n", "senID": 1}], [{"text": ["I have not tested this with python but I use similar code else where."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\ncontent = open(r'c:\\temp\\test.txt', 'r').read()\ncontent = re.sub(\";.+\", \"\\n\")\n</code>\n</pre>\n", "senID": 1}]]