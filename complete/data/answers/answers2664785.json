[[{"text": ["Let's see:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 7, "lis": [{"text": ["If you want to know how something works, you can just try it.", "There is no need to write up  a file.", "I almost always scratch write my programs in the interpreter before coding them.", "It's not just for things that you don't know how they work in the programming language.", "I never remember what the correct arguments to range are to create, for example, [-2, -1, 0, 1].", "I don't need to.", "I just have to fire up the interpreter and try stuff until I figure out it is range(-2, 2) (did that just now, actually)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "range(-2, 2)", "childNum": 0, "tag": "code", "pos": 6, "childList": []}]}, {"text": ["You can use it as a calculator. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Python is a very introspective programming language.", "If you want to know anything about an object, you can just do dir(object).", "If you use IPython, you can even do object.&lt;TAB&gt; and it will tab-complete the methods and attributes of that object.", "That's way faster than looking stuff up in documentation or even in code."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "dir(object)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "object.&lt;TAB&gt;", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["help(anything) for documentation.", "It's way faster than any web interface.  "], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "help(anything)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Again, you have to use IPython (highly recommended), but you can time stuff.", "%timeit func1() and %timeit func2() is a common idiom to determine what is faster.  "], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "%timeit func1()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "%timeit func2()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["How often have you wanted to write a program to use once, and then never again.", "The fastest way to do this is to just do it in the Python interpreter.", "Sure, you have to be careful writing loops or functions (they must have the correct syntax the first time), but most stuff is just line by line, and you can play around with it."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Debugging.", "You don't need to put selective print statements in code to see what variables are when you write it in the interpreter.", "You just have to type &gt;&gt;&gt; a, and it will show what a is.", "Nice again to see if you constructed something correctly.", "The building Python debugger pdb also uses the intrepeter functionality, so you can not only see what a variable is when debugging, but you can also manipulate or even change it without halting debugging.  "], "childNum": 3, "tag": "p", "senID": 7, "childList": [{"text": "&gt;&gt;&gt; a", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "a", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "manipulate or even change", "childNum": 0, "tag": "em", "pos": 4, "childList": []}]}]}, {"text": ["When people say that Python is faster to develop in, I guarantee that this is a big part of what they are talking about."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Commenters: anything I am forgetting?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}], [{"text": ["REPL Loops (like Python's interactive mode) provide immediate feedback to the programmer.", "As such, you can rapidly write and test small pieces of code, and assemble those pieces into a larger program."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "REPL Loops", "tag": "a", "pos": 0, "childList": [{"text": "REPL Loops", "tag": "strong"}], "childNum": 1, "href": "http://en.wikipedia.org/wiki/Read-eval-print_loop"}, {"text": "REPL Loops", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}], [{"text": ["You're talking about running Python in the console by simply typing \"python\"?", "That's just for little tests and for practicing with the language.", "It's very useful when learning the language and testing out other modules."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Of course any real software project is written in .py files and later executed by the interpreter!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The Python interpreter is a least common denominator: you can run it on multiple platforms, and it acts the same way (modulo platform-specific modules), so it's pretty easy to get a newbie going with. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It's a lot easier to tell a newbie to launch the interpreter and \"do this\" than to have them open a file, type in some code, save it, make it executable, make sure python is in your PATH, or use a #!", "line, etc etc.", "Scrap all of that and just launch the interpreter.", "For simple examples, you can't beat it.", "It was never meant for long programs, so if you were using it for that, you probably missed the part of the tutorial that told you \"longer scripts go in a file\".", ":) "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["you use the interactive interpreter to test snippets of your code before you put them into your script."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I find the interactive interpreter very, very good for testing quick code, or to show others the Power of Python.", "Sometimes I use the interpreter as a handy calculator, too.", "It's amazing what you can do in a very short amount of time."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Aside from the built-in console, I also have to recommend Pyshell.", "It has auto-completion, and a decent syntax highlighting.", "You can also edit multiple lines of code at once.", "Of course, it's not perfect, but certainly better than the default python console."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Pyshell", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/spinmob/wiki/PyShell"}]}], [{"text": ["As already mentioned, the Python interactive interpreter gives a quick and dirty way to test simple Python functions and/or code snippets. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I personally use the Python shell as a very quick way to perform simple Numerical operations (provided by the math module).", "I have my environment setup, so that the math module is automatically imported whenever I start a Python shell.", "In fact, its a good way to \"market\" Python to non-Pythoniasts.", "Show them how they can use Python as a neat scientific calculator, and for simple mathematical prototyping."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "math", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["When coding in Java, you almost always will have the API open in some browser window.", "However with the python interpreter, you can always import any module that you are thinking about using and check what it offers.", "You can also test the behavior of new methods that you are unsure of, to eliminate the \"Oh!", "so THAT's how it works\" as a source of bugs."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["One thing I use interactive mode for that others haven't mentioned: To see if a module is installed.", "Just fire up Python and try to import the module; if it dies, then your PYTHONPATH is broke or the module is not installed."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "import", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["This is a great first step for \"Hey, it's not working on my machine\" or \"Which Python did that get installed in, anyway\" bugs."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Interactive mode makes it easy to test code snippets before incorporating them into a larger program.", "If you use IDLE there's syntax highlighting and argument pop-ups to help you out.", "It's also a quick way of checking that you've figured out how to use a module without having to write a test program."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]