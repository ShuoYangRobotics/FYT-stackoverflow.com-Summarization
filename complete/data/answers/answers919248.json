[[{"text": ["Please buy Schlossnagle's book, Scalable Internet Architectures."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Scalable Internet Architectures", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rads.stackoverflow.com/amzn/click/067232699X"}]}, {"text": ["You should not be serving the images from Python (or PHP or .Net) but from Apache and Squid.", "Same is true for Javascript and CSS files -- they're static media, and Python should never touch them.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You should only be processing the HTML portion of the transaction."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This, BTW, is the architecture you get with things like Django.", "Static media is handled outside Python.", "Python handles validation and the HTML part of the processing."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com"}]}, {"text": ["Turns out that you'll spend much of your time fussing around with Squid and Apache trying to get things to go quickly.", "Python (and the Django framework) are fast enough if you limit their responsibilities."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["As mentioned previously, any number of development platforms will work, it really depends on your approach to caching the content."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you are comfortable with Python I would recommend Django.", "There is a large development community and a number of large applications and sites running on the framework."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Django_%28web_framework%29"}]}, {"text": ["Django internally supports caching through use of memcached.", "You are able to customize quite greatly how and what you want to cache, while being able to keep many of the settings for the caching in your actual Django application (I find this nice when using third party hosting services where I do not have complete control of the system)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "memcached", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Memcached"}]}, {"text": ["Here are a few links that may help:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": ["Django framework"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}, {"text": ["Memcached with Django"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}, {"text": ["Memcached website"], "childNum": 0, "tag": "a", "senID": 6, "childList": []}, {"text": ["The Django Book"], "childNum": 0, "tag": "a", "senID": 7, "childList": []}]}, {"text": ["There are a number of hosting companies that offer both shared and dedicated hosting plans.", "I would visit http://djangohosting.org/ to determine which host may work best for your need.", "I have used WebFaction quite a bit and have been extremely pleased with their service."], "childNum": 2, "tag": "p", "senID": 8, "childList": [{"text": "http://djangohosting.org/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://djangohosting.org/"}, {"text": "WebFaction", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.webfaction.com"}]}], [{"text": ["If you want performance when serving images, you have to take the FaceBook approach of 'never go to disk unless absolutely necessary' - meaning use as much caching as possible between your image servers and the end user.", "There are many products that can help you out both commercial and free, including just configuring your webservers correctly - google and see what works for your cost and platform."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["From what You have written, either .NET or Python would be a good choice for You.", "Personally, I would go for Python.", "Why?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": "It is free.", "tag": "none", "senID": 1}, {"text": "It is scalable.", "tag": "none", "senID": 2}, {"text": "With Python Imaging Library You can do almost anything with images.", "tag": "none", "senID": 3}, {"text": "Hey, it is python - less code, same result.", "tag": "none", "senID": 4}]}, {"text": ["To be honest Your choice is not important - just choose the one You feel comfortable with and stick with it.You mentioned web.py - this site is made with web.py: colr.org - and it is made with 1304 lines of code, not counting external libraries. "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "colr.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.colr.org"}]}], [{"text": ["I do not think switching languages will help much with your problem, It's just the architecture you chose initially only works for small amounts of data.", "I would recommend you to visit http://highscalability.com ,  It's time you started looking how the big guys scale their applications.   "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://highscalability.com", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://highscalability.com"}]}], [{"text": ["I would also recommend looking at MogileFS.", "It is a distributed file system which runs on Unix based OS's.", "I know that digg use it to store their avatar images. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "MogileFS", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.danga.com/mogilefs/"}]}, {"text": ["It's from the same guys who created memcached and live journal."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]