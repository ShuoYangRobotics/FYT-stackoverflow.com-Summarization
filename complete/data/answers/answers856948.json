[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; a = []\n\n&gt;&gt;&gt; for i in xrange(3):\n...     a.append([])\n...     for j in xrange(3):\n...             a[i].append(i+j)\n...\n&gt;&gt;&gt; a\n[[0, 1, 2], [1, 2, 3], [2, 3, 4]]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 0}], [{"text": ["In Python one would usually use lists for this purpose.", "Lists can be nested arbitrarily, thus allowing the creation of a 2D array.", "Not every sublist needs to be the same size, so that solves your other problem.", "Have a look at the examples I linked to."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "lists", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/datastructures.html"}]}], [{"text": ["If you want to do some serious work with arrays then you should use the numpy library.", "This will allow you for example to do vector addition and matrix multiplication, and for large arrays it is much faster than Python lists. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "numpy library", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://numpy.scipy.org/"}]}, {"text": ["However, numpy requires that the size is predefined.", "Of course you can also store numpy arrays in a list, like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import numpy as np\nvec_list = [np.zeros((3,)) for _ in range(10)]\nvec_list.append(np.array([1,2,3]))\nvec_sum = vec_list[0] + vec_list[1]  # possible because we use numpy\nprint vec_list[10][2]  # prints 3\n</code>\n</pre>\n", "senID": 2}, {"text": ["But since your numpy arrays are pretty small I guess there is some overhead compared to using a tuple.", "It all depends on your priorities."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["See also this other question, which is pretty similar (apart from the variable size)."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/261006/multidimensional-array-python"}]}], [{"text": ["Depending what you're doing, you may not really have a 2-D array."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["80% of the time you have simple list of \"row-like objects\", which might be proper sequences."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n myArray = [ ('pi',3.14159,'r',2), ('e',2.71828,'theta',.5) ]\n\nmyArray[0][1] == 3.14159\nmyArray[1][1] == 2.71828\n</code>\n</pre>\n", "senID": 2}, {"text": ["More often, they're instances of a class or a dictionary or a set or something more interesting that you didn't have in your previous languages."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n myArray = [ {'pi':3.1415925,'r':2}, {'e':2.71828,'theta':.5} ]\n</code>\n</pre>\n", "senID": 4}, {"text": ["20% of the time you have a dictionary, keyed by a pair"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n myArray = { (2009,'aug'):(some,tuple,of,values), (2009,'sep'):(some,other,tuple) }\n</code>\n</pre>\n", "senID": 6}, {"text": ["Rarely, will you actually need a matrix."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["You have a large, large number of collection classes in Python.", "Odds are good that you have something more interesting than a matrix."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["I would suggest that you use a dictionary like so:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n arr = {}\n\narr[1] = (1, 2, 4)\narr[18] = (3, 4, 5)\n\nprint(arr[1])\n&gt;&gt;&gt; (1, 2, 4)\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you're not sure an entry is defined in the dictionary, you'll need a validation mechanism when calling \"arr[x]\", e.g.", "try-except."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you are concerned about memory footprint, the Python standard library contains the array module; these arrays contain elements of the same type."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "array module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/array.html"}]}]]