[[{"text": ["Simple iteration an extending list..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for key, value in dict2.iteritems():\n    dict1.setdefault(key, []).extend(value)\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n dict1 = {1:[1,2,3],2:[2,3,4]}\ndict2 = {2:[3,4,5],3:[4,5,6]}\n\ndicts = [dict1, dict2]\nnew_dict = {}\n\nfor d in dicts:\n  for k, v in d.iteritems():\n    if new_dict.has_key(k):\n      new_dict[k] = new_dict[k] + v\n    else:\n      new_dict[k] = v\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Iterate through the keys of dict2; if the same key exists in dict1, concatenate the lists and set in dict1; otherwise just set in dict1"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n a = {'a' : [1,2], 'b' : [3,4]}\nb = {'a' : [3,4], 'b' : [1,2]}\n\nfor key in a.keys():\n    for elem in a[key]:\n        b[key].append(elem)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Oh, maybe there's some clever way to do it with reduce, but why not just write code like a normal person."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n dict = {}\nfor each_dict in (dict1, dict2, ...): # ... is not real code\n    for key, value in each_dict:\n        if not dict.has_key(key):\n            dict[key] = []\n        dict[key] += value # list append operator\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This way lets you \"glue together\" multiple dictionaries at a time:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n dict(\n  (k, sum((d.get(k, []) for d in dicts), []))\n  for k in set(sum((d.keys() for d in dicts), []))\n)\n</code>\n</pre>\n", "senID": 1}]]