[[{"text": ["Normal Python strings (Python 2.x str) don't have an encoding: they are raw data.", "In Python 3 these are called \"bytes\" which is an accurate description, as they are simply sequences of bytes, which can be text encoded in any encoding (several are common!", ") or non-textual data altogether."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "str", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "any", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["For representingtext, you want unicode strings, not byte strings.", "unicode instances are sequences of unicode codepoints represented abstractly without an encoding; this is well-suited for representing text."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "For representingtext, you want unicode strings, not byte strings.", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "text", "tag": "em"}]}, {"text": "text", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "unicode", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Bytestrings are important because to represent data for transmission over a network or writing to a file or whatever, you cannot have an abstract representation of unicode, you need a concrete representation of bytes.", "Though they are often used to store and represent text, this is at least a little naughty."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This whole situation is complicated by the fact that while you should turn unicode into bytes by calling encode and turn bytes into unicode using decode, Python will try to do this automagically for you using a global encoding you can set that is by default ASCII, which is the safest choice.", "Never depend on this for your code and never ever change this to a more flexible encoding--explicitly decode when you get a bytestring and encode if you need to send a string somewhere external."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "should", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "encode", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "decode", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Hey!", "I'd like to add some stuff to other answers, unfortunately I don't have enough rep yet to do that properly :-("], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["FWIW, Mike Graham's post is pretty good and that's probably what you should be reading first."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here's a few comments:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Python 2.x strings are 8-bit, nothing more.", "The encoding may vary (though ASCII is assumed).", "I guess the reasons are historical.", "Few languages, especially languages that date back to the last century, use unicode right away."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In Python 3, all strings are unicode."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["From Python 3.0 on all strings are unicode by default, there is also the bytes datatype (Python documentation)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/release/3.0.1/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit"}]}, {"text": ["So the python developers think that using unicode is a good idea, that it is not used universally in python 2 is mostly due to backwards compatibility.", "It also has performance implications."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Before Python 3.0, string encoding was ascii by default, but could be changed.", "Unicode string literals were u\"...\".", "This was silly."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "ascii", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "u\"...\"", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["In Python 3.x"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "In Python 3.x", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["str is Unicode.", "This may be either UTF-16 or UTF-32 depending on whether your Python interpreter was built with \"narrow\" or \"wide\" Unicode characters."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "str", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["The Windows version of CPython uses UTF-16.", "On Unix-like systems, UTF-32 tends to be preferred."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["In Python 2.x"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "In Python 2.x", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["str is a byte string type like C char.", "The encoding isn't defined by the language, but is whatever your locale's default encoding is.", "Or whatever the MIME charset of the document you got off the Internet is.", "Or, if you get a string from a function like struct.pack, it's binary data, and doesn't meaningfully have a character encoding at all."], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": "str", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "char", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "struct.pack", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["unicode strings in 2.x are equivalent to str in 3.x."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "unicode", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "str", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Because Python (slightly) predates Unicode.", "And because Guido wanted to save all the major backwards-incompatible changes for 3.0.", "Strings in 3.x do use Unicode by default."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "do", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}]]