[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; import string\n&gt;&gt;&gt; string.lowercase[:14]\n'abcdefghijklmn'\n&gt;&gt;&gt; string.lowercase[:14:2]\n'acegikm'\n</code>\n</pre>\n", "senID": 0}, {"text": ["To do the urls, you could use something like this"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n [i+j for i,j in zip(list_of_urls, string.lowercase[:14])]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Hints:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import string\nprint string.ascii_lowercase\n</code>\n</pre>\n", "senID": 1}, {"text": ["and "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for i in xrange(0, 10, 2):\n    print i\n</code>\n</pre>\n", "senID": 3}, {"text": ["and"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n \"hello{0}, world!\".format('z')\n</code>\n</pre>\n", "senID": 5}], [{"code": "<pre>\n<code>\n for one in range(97,110):\n    print chr(one)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["This is your 2nd question: string.lowercase[ord('a')-97:ord('n')-97:2] because 97==ord('a') -- if you want to learn a bit you should figure out the rest yourself ;-)"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "string.lowercase[ord('a')-97:ord('n')-97:2]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "97==ord('a')", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Assuming this is a homework ;-) - no need to summon libraries etc - it probably expect you to use range() with chr/ord, like so:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for i in range(ord('a'), ord('n')+1):\n    print chr(i),\n</code>\n</pre>\n", "senID": 1}, {"text": ["For the rest, just play a bit more with the range()"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["About gnibbler's answer. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Zip -function, full explanation, returns a list of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.", "[...] construct is called list comprehension, very cool feature!"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "full explanation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/doc//current/library/functions.html"}, {"text": "a list of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "[...]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://docs.python.org/tutorial/datastructures.html#list-comprehensions", "text": "list comprehension", "childNum": 0, "tag": "a", "childList": []}]}]]