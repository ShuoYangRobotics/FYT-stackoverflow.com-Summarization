[[{"text": ["It's not clear why you need a bridge language.", "Why don't you start working with C directly?", "C is a very simple language itself.", "I think that hardest part for C learner is pointers and everything else related to memory management.", "Also C lang is oriented on structured programming, so you will need to learn how to implement data structures and algorithms without OOP goodness.", "Actually, your question is pretty hard, usually people go from low level langs to high level and I can understand frustration of those who goes in other direction."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The best place to start learning C is the book \"The C Programming Language\" by Kernighan and Ritchie."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You will recognise a lot of things from PHP, and you will be surprised how much PHP (and Perl, Python etc) do for you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Oh and you also will need a C compiler, but i guess you knew that."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I generally agree with most of the others - There's not really a good stepping stone language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It is, however, useful to understand what is difficult about learning C, which might help you understand what's making it difficult for you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'd say the things that would prove difficult in C for someone coming from PHP would be :"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 5, "lis": [{"text": ["Pointers and memory management"], "childNum": 0, "tag": "strong", "senID": 3, "childList": []}, {"text": ["Lack of builtin data structures"], "childNum": 0, "tag": "strong", "senID": 4, "childList": []}, {"text": ["Lack of builtin libraries"], "childNum": 0, "tag": "strong", "senID": 5, "childList": []}, {"text": ["Suitability for high level tasks"], "childNum": 0, "tag": "strong", "senID": 6, "childList": []}, {"text": ["Preprocessor and compilation"], "childNum": 0, "tag": "strong", "senID": 7, "childList": []}]}, {"text": ["I'm sure there are more that aren't springing to mind for me right now.", "The moral of the story is that trying to understand what you're finding difficult in C may help you proceed.", "If you're trying to generate web pages with it, try doing something lower level.", "If you're missing hash tables, try writing your own, or find a library.", "If you're struggling with pointers, stick with it :)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["Learning any language takes time, I always ensure I have a measurable goal; I set myself an objective, then start learning the language to achieve this objective, as opposed to trying to learn every nook and cranny of the language and syntax. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["C is not easy, pointers can be hard to comprehend if you\u2019re not coming assembler roots.", "I first learned C++, then retro fit C to my repertoire but I started with x86 and 68000 assembler."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Python is about as close to C as you're going to get.", "It is in fact a very thin wrapper around C in a lot of places.", "However, C does require that you know a little more about how the computer works on a low level.", "Thus, you may benefit from trying an assembly language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["LC-3 is a simple assembly language with a simulated machine."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "LC-3", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://highered.mcgraw-hill.com/sites/0072467509/student_view0/lc-3_simulator.html"}]}, {"text": ["Alternatively, you could try playing with an interactive C interpreter like CINT."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "CINT", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://root.cern.ch/twiki/bin/view/ROOT/CINT"}]}, {"text": ["Finally, toughing it out and reading K&amp;R's book is usually the best approach."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Forget Java - it is not going to bring you anywhere closer to C (you have allready proved that you don't have a problem learning new syntax)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Either read K&amp;R or go one lower: Learn about the machine itself.", "The only tricky part in C is pointers and memory management (which is closely related to pointers, but also has a bit to do with how functions are called).", "Learning a (simple, maybe even \"fake\" assembly) language should help you out here."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Then, start reading up on the standard library provided by C. It will be your daily bread and butter."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Oh: another tip!", "If you really do want to bridge, try FORTH.", "It helped me get into pointers.", "Also, using the win32 api from Visual Basic 6.0 can teach you some stuff about pointers ;)"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "do", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "FORTH", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}], [{"text": ["C is a bridge onto itself."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["K&amp;R is the only programming language book you can read in one sitting and almost never pick it up again ... "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["My suggestion is to get a good C-book that is relevant to what you want to do.", "I agree that K &amp; R is considered to be \"The book\" on C, but I found \"UNIX Systems Programming\" by Kay A. Robbins and Steven Robbins to be more practical and hands on.", "The book is full of clean and short code snippets you can type in, compile and try in just a few minutes each."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["There is a preview at http://books.google.com/books?id=tdsZHyH9bQEC&amp;printsec=frontcover (Hyperlinking it didn't work."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://books.google.com/books?id=tdsZHyH9bQEC&amp;printsec=frontcover", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://books.google.com/books?id=tdsZHyH9bQEC&printsec=frontcover"}]}], [{"text": ["I'm feeling your pain, I also learned PHP first and I'm trying to learn C++, it's not easy, and I am really struggling, It's been 2 years since I started on c++ and Still the extent of what I can do is cout, cin, and math."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If anyone reads this and wonders where to start, START LOWER."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Java might actually be a good option here, believe it or not.", "It is strongly based on C/C++, so if you can get the syntax and the strong typing, picking up C might be easier.", "The benefit is you can learn the lower level syntax without having to learn pointers (since memory is managed for you just like in Python and PHP).", "You will, however, learn a similar concept... references (or objects in general)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Also, it is strongly Object Oriented, so it may be difficult to pick up on that if you haven't dealt with OOP yet....  you might be better off just digging in with C like others suggested, but it is an option."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I think C++ is a good \"bridge\" to C.  I learned C++ first at University, and since it's based on C you'll learn a lot of the same concepts - perhaps most notably pointers - but also Object Oriented Design.", "OO can be applied to all kinds of modern languages, so it's worth learning.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["After learning C++, I found it wasn't too hard to pick up the differences between C++ and C as required (for example, when working on devices that didn't support C++)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["try to learn a language which you are comfortable with, try different approach and the basics."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Languages are easy to learn (especially one like C)... the hard part is learning the libraries and/or coding style of the language.", "For instance, I know C++ fairly well, but most C/C++ code I see confuses me because the naming conventions are so different from what I work with on a daily basis."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Anyway, I guess what I'm trying to say is don't worry too much about the syntax, focus on said language's library.", "This isn't specific to C, you can say the same about c#, vb.net, java and just about every other language out there."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Pascal!", "Close enough syntax, still requires you to do some memory management, but not as rough for beginners."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]