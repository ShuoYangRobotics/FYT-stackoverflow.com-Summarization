[[{"text": ["I was unable to use bicop for classical zone files like these:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n $TTL 86400\n@   IN SOA ns1.first-ns.de. postmaster.robot.first-ns.de. (\n    2006040800   ; serial\n    14400        ; refresh\n    1800         ; retry\n    604800       ; expire\n    86400 )      ; minimum\n\n@\n\n                    IN NS      ns1.first-ns.de.\n</code>\n</pre>\n", "senID": 1}, {"text": ["I will have a look at dnspython"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "dnspython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.dnspython.com/"}]}], [{"text": ["You might try bicop, \"a python library to process ISC bind-style configuration files\"."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "bicop", "tag": "a", "pos": 0, "childList": [{"text": "bicop", "tag": "code"}], "childNum": 1, "href": "http://pypi.python.org/pypi/bicop"}, {"text": "bicop", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I know this is old but the only working one I could find is called iscpy.", "You can do an easy_install."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n easy_install iscpy\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then in python:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import iscpy\niscpy.ParseISCString(open('somefile.conf', 'r').read())\n</code>\n</pre>\n", "senID": 3}, {"text": ["Which returns a dictionary."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["See answer above about bicop."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As an aside, the Python Package Index at http://pypi.python.org/pypi is a great place to look for Python packages."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pypi.python.org/pypi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi"}]}, {"text": ["EDIT: The below may still be helpful to someone trying to figure out simple parsing, but bicop is apparently an existing solution."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["If someone has modified the config by hand, and you don't want to overwrite it, does that imply that you wish to insert/remove lines from an existing config, leaving all comments etc intact?", "That does prevent parsing then re-outputting the config, but that's a positive as well -- you don't need to fully parse the file to accomplish your goal."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["To add a record, you might try a simple approach like"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n # define zone_you_care_about and line_you_wish_to_insert first, then:\nfor line in bindfile.read():\n    out.write(line + '\\n')\n    if ('zone \"%s\" in' % zone_you_care_about) in line:\n        out.write(line_you_wish_to_insert)\n</code>\n</pre>\n", "senID": 5}, {"text": ["Similar code works for removing a line:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n # define zone_you_care_about and relevant_text_to_remove, then:\nfor line in bindfile.read():\n    if not relevant_text_to_remove in line:\n        out.write(line + '\\n')\n</code>\n</pre>\n", "senID": 7}, {"text": ["You may get as far as you need with simple snippets of code like this."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["easyzone is a nice layer over dnspython"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "easyzone", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/easyzone"}]}, {"text": ["Zoner provides a web-interface for editing zone files and makes use of easyzone."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Zoner", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/zoner/1.4.1"}]}], [{"text": ["take a look at webmin"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]