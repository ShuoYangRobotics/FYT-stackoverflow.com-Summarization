[[{"text": ["Pylons is pretty easy to set up - there's a command that generates the skeleton code for your application and you can write your code with no configuration other than the port number you want it to listen on."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pylons", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pylonshq.com/"}]}], [{"text": ["cherrypy is another more lightweight solution.", "It's just the web server part of the equation, and lets you handle templating/database (if any) as you prefer."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "cherrypy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cherrypy.org/"}]}, {"text": ["Here's the minimal application, from the tutorial:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cherrypy.org/wiki/CherryPyTutorial"}]}, {"code": "<pre>\n<code>\n import cherrypy\n\nclass HelloWorld:\n    def index(self):\n        return \"Hello world!\"\n    index.exposed = True\n\ncherrypy.quickstart(HelloWorld())\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I started with web2py and found it both easy and powerful."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "web2py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.web2py.com"}]}], [{"text": ["Try web.py or Python's cgi."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "web.py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://webpy.org/"}, {"href": "http://docs.python.org/library/cgi.html", "text": "Python's cgi", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["I've used Django.", "Project setup and configuration shouldn't take that long compared to writing the project code.", "I think it would probably be fastest to use Django.", "The next-best alternative would be to use SimpleHTTPServer, which is in the Python library.", "You have to do a lot of work yourself, such as generating 404s and response headers, and you have to manage database connections yourself, but it is simpler."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I would definitely recommend werkzeug.", "It is really dead simple and will expose you to WSGI which is also used by several framework like django and Google App Engine."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "werkzeug", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://dev.pocoo.org/projects/werkzeug/"}, {"text": "Google App Engine", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/appengine/"}]}], [{"text": ["you could also try google app engines webapp framework if you want something to create toy webapps that deploy really easily (and cheaply !"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "google app engines webapp framework", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/appengine/docs/python/tools/webapp/"}]}], [{"text": ["I think you don't need to read a complete book on django.", "It's also very common to start with the excellent django tutorial.", "After that you can play a bit with your code and still have one of the greatest documentions that is available for any opensource framework at your hand."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "django tutorial", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/intro/tutorial01/"}]}, {"text": ["I learned django only through the docs at the time I was starting.", "It is very understandable and does not require a deep understanding of python."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]