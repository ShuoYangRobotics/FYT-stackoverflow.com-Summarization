[[{"text": ["Probably not exactly what you were thinking, but..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n q = request.GET.get('q')\nif q:\n    print q\n</code>\n</pre>\n", "senID": 1}, {"text": ["this?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["See my 8-year-old recipe here for just this task."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/66061/"}]}], [{"code": "<pre>\n<code>\n q = request.GET.get('q')\nif q:\n    print q\nelse:\n    # q is None\n    ...\n</code>\n</pre>\n", "senID": 0}, {"text": ["There's no way of doing assignment and conditionals in one go..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["A variation on Alex's answer:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Alex's answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1663995/python-variable-assignment-and-if-statement/1664013#1664013"}]}, {"code": "<pre>\n<code>\n class DataHolder:\n    def __init__(self, value=None, attr_name='value'):\n        self._attr_name = attr_name\n        self.set(value)\n    def __call__(self, value):\n        return self.set(value)\n    def set(self, value):\n        setattr(self, self._attr_name, value)\n        return value\n    def get(self):\n        return getattr(self, self._attr_name)\nsave_data = DataHolder()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Usage:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if save_data(get_input()):\n    print save_data.value\n</code>\n</pre>\n", "senID": 3}, {"text": ["or if you prefer an alternative interface:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n if save_data.set(get_input()):\n    print save_data.get()\n</code>\n</pre>\n", "senID": 5}, {"text": ["I would find this helpful to test a series of regular expressions in an if-elif-elif-elif etc construct, as in this SO question:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "this SO question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/122277/how-do-you-translate-this-regular-expression-idiom-from-perl-into-python"}]}, {"code": "<pre>\n<code>\n import re\n\ninput = u'test bar 123'\nsave_match = DataHolder(attr_name='match')\nif save_match(re.search('foo (\\d+)', input)):\n    print \"Foo\"\n    print save_match.match.group(1)\nelif save_match(re.search('bar (\\d+)', input)):\n    print \"Bar\"\n    print save_match.match.group(1)\nelif save_match(re.search('baz (\\d+)', input)):\n    print \"Baz\"\n    print save_match.match.group(1)\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Well, this would be one way"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n q = request.GET.get('q')\nif q:\n    print q\n</code>\n</pre>\n", "senID": 1}, {"text": ["A briefer (but not superior, due to the call to print of nothing) way would be"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n print request.GET.get('q') or '',\n</code>\n</pre>\n", "senID": 3}], [{"text": ["If get() throws an exception when it's not there, you could do "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n try:\n   q = request.GET.get('q')\n   print q\nexcept :\n   pass\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n config_hash = {}\ntmp_dir = ([config_hash[x]  for x in [\"tmp_dir\"] if config_hash.has_key(x)] or [\"tmp\"])[0]\nprint tmp_dir\nconfig_hash[\"tmp_dir\"] = \"cat\"\ntmp_dir = ([config_hash[x]  for x in [\"tmp_dir\"] if config_hash.has_key(x)] or [\"tmp\"])[0]\nprint tmp_dir\n</code>\n</pre>\n", "senID": 0}], [{"text": ["maybe my idea in different SO question would be helpful?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "my idea", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/122277/how-do-you-translate-this-regular-expression-idiom-from-perl-into-python/4195819#4195819"}]}]]