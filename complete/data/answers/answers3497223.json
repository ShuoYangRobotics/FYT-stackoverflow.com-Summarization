[[{"text": ["You can make a dict from keys and values like so:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "dict", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n keys = ['a','b','c','d']\nvalues = (1,2,3)\nresult = dict(zip(keys, values)) # {'a': 1, 'c': 3, 'b': 2}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Then you can update it with another dict"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n result.update({ 'f' : 5 })\nprint result # {'a': 1, 'c': 3, 'b': 2, 'f': 5}\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n dict(zip(a_list, a_tuple)).update(a_dictionary)\n</code>\n</pre>\n", "senID": 0}, {"text": ["when a_list is your list, a_tuple is your tuple and a_dictionary is your dictionary."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["EDIT:\nIf you really wanted to turn the numbers in you tuple into strings than first do:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n new_tuple = tuple((str(i) for i in a_tuple))\n</code>\n</pre>\n", "senID": 3}, {"text": ["and pass new_tuple to the zip function."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["This will accomplish the first part of your question:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n dict(zip(['a','b','c','d'], (1,2,3)))\n</code>\n</pre>\n", "senID": 1}, {"text": ["However, the second part of your question would require a second definition of 'a', which the dictionary type does not allow.", "However, you can always set additional keys manually:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; d = {}\n&gt;&gt;&gt; d['e'] = 10\n&gt;&gt;&gt; d\n{'e':10}\n</code>\n</pre>\n", "senID": 3}], [{"text": ["The keys in a dictionary must be unique, so this part: {'a':'1','a':'10'} is impossible."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "{'a':'1','a':'10'}", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Here is code for the rest:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = ['a','b','c','d']\nt = (1,2,3)\n\nd = {}\nfor key, value in zip(l, t):\n    d[key] = value\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Something like this?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; dict({'a':'10'}.items() + (zip(['f','b','c','d'],('1','2','3'))))\n{'a': '10', 'c': '3', 'b': '2', 'f': '1'}\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Since noone has given an answer that converts the tuple items to str yet"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; L=['f','b','c','d']\n&gt;&gt;&gt; T=(1,2,3)\n&gt;&gt;&gt; D={'a':'10'}\n&gt;&gt;&gt; dict(zip(L,map(str,T)),**D)\n{'a': '10', 'c': '3', 'b': '2', 'f': '1'}\n</code>\n</pre>\n", "senID": 1}]]