[[{"code": "<pre>\n<code>\n if s in ('a', 'b'):\n  return 1\nelif s in ('c', 'd'):\n  return 2\nelse:\n  return 3\n</code>\n</pre>\n", "senID": 0}, {"text": ["Updated, commenter is right that these should be tuples, not lists."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n d = {'a':1, 'b':1, 'c':2, 'd':2}\n return d.get(s, 3)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you only return fixed values, a dictionary is probably the best approach."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n if s in 'ab':\n    return 1\nelif s in 'cd':\n    return 2\nelse:\n    return 3\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Maybe little more self documenting using if else:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n d = {'a':1, 'b':1, 'c':2, 'd':2} ## good choice is to replace case with dict when possible\nreturn d[s] if s in d else 3\n</code>\n</pre>\n", "senID": 1}, {"text": ["Also it is possible to implement the popular first answer with if else:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n return (1 if s in ('a', 'b') else (2 if s in ('c','d') else 3))\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n return 1 if (x in 'ab') else 2 if (x in 'cd') else 3\n</code>\n</pre>\n", "senID": 0}]]