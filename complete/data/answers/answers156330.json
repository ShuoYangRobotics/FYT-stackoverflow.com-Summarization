[[{"text": ["What you need is time() function from time module:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "time()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "time", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n import time\nstart = time.time()\ndo_long_code()\nprint \"it took\", time.time() - start, \"seconds.\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["You can use timeit module for more options though."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "timeit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-timeit.html"}]}], [{"text": ["In the time module, there are two timing functions: time and clock.", "time gives you \"wall\" time, if this is what you care about."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "time", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "time", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "clock", "childNum": 0, "tag": "code", "childList": []}, {"text": "time", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["However, the python docs say that clock should be used for benchmarking.", "Note that clock behaves different in separate systems:"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "docs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-time.html"}, {"text": "clock", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "clock", "childNum": 0, "tag": "code", "childList": []}]}, {"tag": "ul", "num": 1, "lis": [{"text": "on MS Windows, it uses the Win32 function QueryPerformanceCounter(), with \"resolution typically better than a microsecond\". It has no special meaning, it's just a number (it starts counting the first time you call ", "tag": "none", "senID": 2}]}, {"code": "<pre>\n# ms windows\n    t0= time.clock()\n    do_something()\n    t= time.clock() - t0 # t is wall seconds elapsed (floating point)\n</pre>\n", "senID": 3}, {"tag": "ul", "num": 1, "lis": [{"text": "on *nix, ", "tag": "none", "senID": 4}]}, {"code": "<pre>\n# linux\n    t0= time.clock()\n    do_something()\n    t= time.clock() - t0 # t is CPU seconds elapsed (floating point)\n</pre>\n", "senID": 5}, {"text": ["Apart from all that, the timeit module has the Timer class that is supposed to use what's best for benchmarking from the available functionality."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "timeit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-timeit.html"}, {"text": "Timer", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["\u00b9 unless threading gets in the way\u2026"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"code": "<pre>\n<code>\n import datetime\n\nstart = datetime.datetime.now()\ndo_long_code()\nfinish = datetime.datetime.now()\ndelta = finish - start\nprint delta.seconds\n</code>\n</pre>\n", "senID": 0}, {"text": ["From midnight:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import datetime\n\nmidnight = datetime.datetime.now().replace(hour=0, minute=0, second=0, microsecond=0)\nnow = datetime.datetime.now()\ndelta = now - midnight\nprint delta.seconds\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The time module in python gives you access to the clock() function, which returns time in seconds as a floating point."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "time module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/lib/module-time.html"}]}, {"text": ["Different systems will have different accuracy based on their internal clock setup (ticks per second) but it's generally at least under 20milliseconds, and in some cases better than a few microseconds."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["This thread is about Python timing accuracy and seems relevant\nhttp://stackoverflow.com/questions/85451/python-timeclock-vs-timetime-accuracy"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"href": "http://stackoverflow.com/questions/85451/python-timeclock-vs-timetime-accuracy", "text": "http://stackoverflow.com/questions/85451/python-timeclock-vs-timetime-accuracy", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["What platform do You use?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["There are some timer tricks on Windows."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]