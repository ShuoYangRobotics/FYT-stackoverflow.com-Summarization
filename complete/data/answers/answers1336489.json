[[{"text": ["Pyres is a resque clone built in python.", "Resque is used by Github as their message queue.", "Both use Redis as the queue backend and provide a web-based monitoring application."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://binarydud.github.com/pyres/intro.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://binarydud.github.com/pyres/intro.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://binarydud.github.com/pyres/intro.html"}]}], [{"text": ["In addition to multiprocessing there's also the Celery project, if you're using Django."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Celery", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/celery/0.6.0"}]}], [{"text": ["There's also \"bucker\" by Sylvain Hellegouarch which you can find here:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["http://trac.defuze.org/wiki/bucker"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}]}, {"text": ["It describes itself like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": "bucker is a queue system that supports multiple storage for the queue (memcached, Amazon SQS for now) and is driven by XML messages sent over a TCP connections between a client and the queue server.", "tag": "none", "senID": 3}]}], [{"text": ["there are a couple of python rabbitmq clients - see this thread for instance."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this thread", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://playgroundblues.com/posts/2009/may/20/working-django-and-rabbitmq/"}]}], [{"text": ["redqueue?", "It's implemented in python+tornado framework, speaks memcached protocol and is optionally persistent into log files.", "Currently it is also able to behave like beanstalkd, the reserve/delete way in memcache protocol as well."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["REDQUEUE"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "REDQUEUE", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/superisaac/redqueue"}]}], [{"text": ["It's a year late or whatever, but this is something I've hacked together to make a queue of Processes executing them only X number at a time.", "http://github.com/goosemo/job_queue"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://github.com/goosemo/job_queue", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://github.com/goosemo/job_queue"}]}], [{"text": ["You probably want to look at multiprocessing's Queue.", "Included in Python 2.6, get it on PyPI for earlier versions of Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Standard library documentation: http://docs.python.org/library/multiprocessing.html\nOn PyPI: http://pypi.python.org/pypi/multiprocessing"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/multiprocessing.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/multiprocessing.html"}, {"href": "http://pypi.python.org/pypi/multiprocessing", "text": "http://pypi.python.org/pypi/multiprocessing", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Look at beanstalkd"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "beanstalkd", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xph.us/software/beanstalkd/"}]}], [{"text": ["Also there is Unix 'at'"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For more info:\nman at"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]