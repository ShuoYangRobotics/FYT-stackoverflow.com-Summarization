[[{"text": ["You might want to use something more standardized, like JSON.", "You have a JSON module in Python 2.6.", "There are 6 different JSON modules for C. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "JSON", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.json.org/"}]}, {"text": ["You might want to use something more C-like, like the Python struct module.", "It can build a C-compatible object directly, saving you from pickling and unpickling.", "http://docs.python.org/library/struct.html"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "struct", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "http://docs.python.org/library/struct.html", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/struct.html"}]}], [{"text": ["If it's just a matrix, you could just write it out as a CSV file.", "Look at the Python csv module for this.", "http://docs.python.org/library/csv.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/library/csv.html", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/csv.html"}]}], [{"text": ["Check out the chapter on Serializing Data in Mark Pilgrim's Dive Into Python.", "He states there that \"The pickle protocol is Python-specific; there is no guarantee of cross-language compatibility.", "You probably couldn\u2019t take the [...] pickle file you just created and do anything useful with it in Perl, PHP, Java, or any other language."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Dive Into Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://diveintopython3.org/serializing.html"}]}, {"text": ["Perhaps JSON is a better alternative, also explained in that chapter."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If you absolutely must use pickling, you can embed Python in your C program and unpickle in C via Python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["A quick example from Linux Journal"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}, {"text": ["Python Docs"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["http://stackoverflow.com/questions/1056051/how-do-you-call-python-code-from-c-code"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}]}], [{"text": ["Protocol Buffers are an interesting approach to serialize information in a cross-language way that's also quite compact and fast (support for C, as opposed to C++, isn't part of the protobuf package as released, but linking in some C++ code may be acceptable in some C projects, or there may be third-party implementations such as protobuf-c -- see here for a list of other third-party add-ons)."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Protocol Buffers", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/protobuf/"}, {"href": "http://code.google.com/p/protobuf-c/", "text": "protobuf-c", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://code.google.com/p/protobuf/wiki/ThirdPartyAddOns", "text": "here", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["take a look at module struct ?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "struct", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Besides JSON, there are also the Google Protocol Buffers which have 'native' support (from Google) for Python, C++ and Java -- and a number of third-party bindings to other languages including C."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Google Protocol Buffers", "tag": "a", "pos": 0, "childList": [{"text": "Google Protocol Buffers", "tag": "strong"}], "childNum": 1, "href": "http://code.google.com/p/protobuf/"}, {"text": "Google Protocol Buffers", "childNum": 0, "tag": "strong", "childList": []}]}]]