[[{"text": ["A dictionary is a general concept that maps keys to values.", "There are many ways to do such a mapping."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A hashtable is a specific way to implement a dictionary."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Besides hashtables, another common way to implement dictionaries is is red-black trees."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "red-black trees", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Red-black_tree"}]}, {"text": ["Each method has it's own pros and cons.", "A red-black tree can always perform a lookup in O(log N).", "A hashtable can perform a lookup in O(1) time although that can degrade to O(N) depending on the input."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["A dictionary is a data structure that maps keys to values."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A hash table is a data structure that maps keys to values by taking the hash value of the key (by applying some hash function to it) and mapping that to a bucket where one or more values is stored."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["IMO this is analogous to asking the difference between a list and a linked list."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["For clarity it may be important to note that it MAY be the case that Python currently implements their dictionaries using hash tables, and it MAY be the case in the future that Python changes that fact without causing their dictionaries to stop being dictionaries."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["\"A dictionary\" has a few different meanings in programming, as wikipedia will tell you -- \"associative array\", the sense in which Python uses the term (also known as \"a mapping\"), is one of those meanings (but \"data dictionary\", and \"dictionary attacks\" in password guess attempts, are also important)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "wikipedia", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Dictionary_%28disambiguation%29"}]}, {"text": ["Hash tables are important data structures; Python uses them to implement two important built-in data types, dict and set."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "dict", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "set", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["So, even in Python, you can't consider \"hash table\" to be a synonym for \"dictionary\"... since a similar data structure is also used to implement \"sets\"!-)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["A Python dictionary is internally implemented with a hashtable."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Dictionary is implemented using hash tables.", "In my opinion the difference between the 2 can be thought of as the difference between Stacks and Arrays where we would be using arrays to implement Stacks."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["A hash table always uses some function operating on a value to determine where a value will be stored.", "A Dictionary (as I believe you intend it) is a more general term, and simply indicates a lookup mechanism, which might be a hash table or might be implemented by a simpler structure which does not consider the value itself in determining its storage location."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]