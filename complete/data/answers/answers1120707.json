[[{"text": ["To find all the filenames use os.listdir()."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "os.listdir()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Then you loop over the filenames.", "Like so:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import os\nfor filename in os.listdir('dirname'):\n     callthecommandhere(blablahbla, filename, foo)\n</code>\n</pre>\n", "senID": 2}, {"text": ["If you prefer subprocess, use subprocess.", ":-)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Python might be overkill for this."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for file in *; do mencoder -some options $file; rm -f $file ; done\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use os.walk to iterate recursively over directory content:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "os.walk", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/os.html#os.walk"}]}, {"code": "<pre>\n<code>\n import os\n\nroot_dir = '.'\n\nfor directory, subdirectories, files in os.walk(root_dir):\n    for file in files:\n        print os.path.join(directory, file)\n</code>\n</pre>\n", "senID": 1}, {"text": ["No real difference between os.system and subprocess.call here - unless you have to deal with strangely named files (filenames including spaces, quotation marks and so on).", "If this is the case, subprocess.call is definitely better, because you don't need to do any shell-quoting on file names.", "os.system is better when you need to accept any valid shell command, e.g.", "received from user in the configuration file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["AVI to MPG (pick your extensions):"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "AVI", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "MPG", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n files = os.listdir('/input')\nfor sourceVideo in files:\n    if sourceVideo[-4:] != \".avi\"\n        continue\n    destinationVideo = sourceVideo[:-4] + \".mpg\"\n    cmdLine = ['mencoder', sourceVideo, '-ovc', 'copy', '-oac', 'copy', '-ss',\n        '00:02:54', '-endpos', '00:00:54', '-o', destinationVideo]\n    output1 = Popen(cmdLine, stdout=PIPE).communicate()[0]\n    print output1\n    output2 = Popen(['del', sourceVideo], stdout=PIPE).communicate()[0]\n    print output2\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Or you could use the os.path.walk function, which does more work for you than just os.walk:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A stupid example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def walk_func(blah_args, dirname,names):\n    print ' '.join(('In ',dirname,', called with ',blah_args))\n    for name in names:\n    \tprint 'Walked on ' + name\n\nif __name__ == '__main__':\n    import os.path\n    directory = './'\n    arguments = '[args go here]'\n    os.path.walk(directory,walk_func,arguments)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I had a similar problem, with a lot of help from the web and this post I made a small application, my target is VCD and SVCD and I don't delete the source but I reckon it will be fairly easy to adapt to your own needs."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It can convert 1 video and cut it or can convert all videos in a folder, rename them and put them in a subfolder /VCD "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I also add a small interface, hope someone else find it useful!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I put the code and file in here btw: http://tequilaphp.wordpress.com/2010/08/27/learning-python-making-a-svcd-gui/"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://tequilaphp.wordpress.com/2010/08/27/learning-python-making-a-svcd-gui/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://tequilaphp.wordpress.com/2010/08/27/learning-python-making-a-svcd-gui/"}]}]]