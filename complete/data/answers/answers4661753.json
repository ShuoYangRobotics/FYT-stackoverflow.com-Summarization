[[{"text": ["You can simulate a browser environment using EnvJS.", "However, in order to make use of it, you will have to embed some kind of JavaScript runtime (e.g.", "Rhino) in your program (or spawn one as an external process)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "EnvJS", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.envjs.com/"}, {"text": "Rhino", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.mozilla.org/rhino/"}]}], [{"text": ["You could try using Xvfb to have a fake frame buffer, so you won't need to run X11 (though it may be a dependency of Xvfb on your system).", "Most rendering engines don't have a headless mode, so something like Xvfb is necessary to run them.", "I used this technique successfully using XULRunner to navigate web pages, though not from python."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Xvfb", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Xvfb"}]}], [{"text": ["I use VNC or Xvfb for this purpose, combined with Firefox.", "After experimenting with the two, I settled on XTightVNC.", "We use it to create screenshots on demand for various test purposes.", "It's nice to use one of these because you're executing it in an actual browser, same as a user would be (though most users probably won't be using the same OS as your server)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "XTightVNC", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.tightvnc.com/"}]}, {"text": ["The handy thing about using VNC is that you can connect remotely to set up and test the browser when needed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["This might help: http://code.google.com/p/pyv8/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.google.com/p/pyv8/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyv8/"}]}], [{"text": ["This might be what you're looking for: http://jaxer.org/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://jaxer.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jaxer.org/"}]}], [{"text": ["I'm still trying to figure this out myself, so take my answer with a grain of salt."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["So far, I found http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/, which describes the use and the quirks of Pywebkitgtk by someone who has similar needs to what we do."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/"}]}, {"text": ["Later, however, the writer of that blogpost discovered that he can't get it to work with Xvbf, so he hunted some more and found a Qt webkit (possibly in Qt itself, if I understand correctly) http://blog.motane.lu/2009/07/07/downloading-a-pages-content-with-python-and-webkit/.", "Apparently it's a much better solution than PywebkitGTK."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://blog.motane.lu/2009/07/07/downloading-a-pages-content-with-python-and-webkit/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blog.motane.lu/2009/07/07/downloading-a-pages-content-with-python-and-webkit/"}]}, {"text": ["Naturally, I'll be looking into the other solutions offered here--but I wanted to bring up the Qt solution, because to me, it seems the most likely candidate for what I want to do...and if not, then perhaps it will be for someone else, looking for an answer to this question!", ":-)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]