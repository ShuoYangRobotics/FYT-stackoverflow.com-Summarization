[[{"text": ["What you have isn't functionaly correct anyway.", "Consider if someone puts \"123\" then \"abc\".", "The 123 will get them through the while check block, but when they get to the while &lt; 49152 block there's no checking."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "while check", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "while &lt; 49152", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Here's what I come up with (I don't do python, I just hacked it in based on your existing code...)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n check = True\nwhile check :\n    port_input = raw_input(\"port(number must be higher than 49152: \")\n    try:\n        port_number = int(port_input)\n        check = (port_number &lt; 49152)\n    except ValueError:\n        check = True\n</code>\n</pre>\n", "senID": 2}], [{"text": ["You can avoid the check flag if you wrap your code in a function:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "check", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def get_port():\n    while True:\n        port =  raw_input(\"port (number must be higher than 49152): \")\n        try:\n            port = int(port)\n        except ValueError:\n            continue\n        if port &gt; 49152:\n            return port\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n def get_input(msg = \"port(number must be higher than 49152: \"):\n    port_input = raw_input(msg)\n    try :\n        if int(port_input) &lt; 49152:\n            return get_input(\"Please enter a higher number(hint: more than 49152): \")\n    except ValueError:\n        return get_input()\n    return int(port_input)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n n = 0\n\nwhile n &lt; 49152:\n    try:\n        n=int(raw_input(\"enter number heghier than 49152-&gt;\"))\n    except: \n        print \"not integer!\"\n\nprint \"ok!\"\n</code>\n</pre>\n", "senID": 0}], [{"text": ["variant without using exception handling"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def portInput(text):\n    portInput.port_value = 0\n    while True:\n        port_input = raw_input(text)\n        if not port_input.isdigit(): yield \"port must be numeric\"\n        else:\n            portInput.port_value = int(port_input)\n            if portInput.port_value &lt;= 49152: yield \"number must be higher than 49152\"\n            else: return\n\nfor error in portInput(\"port(number must be higher than 49152): \"):\n    print error\n\nprint \"entered port: %d\" % portInput.port_value\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n port = raw_input(\"port(number must be higher than 49152): \")\nwhile not port.isdigit() or int(port) &lt;= 49152:\n    print(\"port must be a number &gt; 49152\")\n    port = input(\"port(number must be higher than 49152): \")\n</code>\n</pre>\n", "senID": 0}, {"text": ["The int(port) call is only done when not port.isdigit() is False -> port contains of digits.", "This is because the second operand for the or operator is only evaluated if the first is False."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "int(port)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "not port.isdigit()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "or", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["I tried to avoid code duplication and make things a bit more pythonic with this rendition.", "Notice that I do not 'except:' but instead specifically catch ValueError.", "Often people forget that 'except:' also catches the SyntaxError exception which can make hunting down a stupid typo extremely frustrating.", "I assumed the port number here is a TCP or UDP port number and thus make sure it is also less than 65536."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n have_valid_input = False\n\nwhile not have_valid_input:\n    unsafe_port = raw_input('port: ')\n    try:\n        port_number = int(unsafe_port)\n    except ValueError:\n        pass\n    else:\n        if port_number &gt; 49152 and port_number &lt; 65536:\n            have_valid_input = True\n\n    if not have_valid_input:\n        print 'Invalid port'\n\nprint 'port', port_number\n</code>\n</pre>\n", "senID": 1}]]