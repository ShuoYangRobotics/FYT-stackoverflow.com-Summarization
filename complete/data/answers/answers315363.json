[[{"text": ["Um, perhaps, use logrotate to rotate and compress the logs periodically, if it isn't being done already."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "logrotate", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://linuxcommand.org/man_pages/logrotate8.html"}]}], [{"text": ["\"Is there a way to turn this behavior off?", "\" - the 500 is absolutely mandatory.", "The log entry is also mandatory.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["\"Or perhaps just block the IP's doing this?", "\" - don't we wish."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Everyone has this problem.", "Just about everyone uses Apache log rotation.", "Everyone else either uses an OS rotation or rolls their own."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "log rotation", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://httpd.apache.org/docs/1.3/logs.html#rotation"}]}], [{"text": ["If you can find a pattern in UserAgent string, you may use DISALLOWED_USER_AGENT setting.", "Mine is:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "DISALLOWED_USER_AGENT", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n DISALLOWED_USER_AGENTS = (\n    re.compile(r'Java'),\n    re.compile(r'gigamega'),\n    re.compile(r'litefinder'),\n)\n</code>\n</pre>\n", "senID": 1}, {"text": ["See the description in Django docs."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Django docs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/settings/#disallowed-user-agents"}]}], [{"text": ["Django should be throwing a 404, not a 500, if the URL doesn't match any entries in your URLConf."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.djangoproject.com/en/dev/topics/http/urls/#handler404"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.djangoproject.com/en/dev/topics/http/urls/#handler404", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/topics/http/urls/#handler404"}]}, {"text": ["You need to provide a 404 template:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["A programming solution would be to :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 7, "lis": [{"text": "open the log file", "tag": "none", "senID": 1}, {"text": "read the lines in a buffer", "tag": "none", "senID": 2}, {"text": "replace the lines that match the errors the bots caused", "tag": "none", "senID": 3}, {"text": "seek to the beginning of the file", "tag": "none", "senID": 4}, {"text": "write the new buffer", "tag": "none", "senID": 5}, {"text": "truncate the file to current pointer position", "tag": "none", "senID": 6}, {"text": "close", "tag": "none", "senID": 7}]}, {"text": ["Voila !", "It's done !"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["How about setting up a catch-all pattern as the last item in your urls file and directing it to a generic \"no such page\" or even your homepage?", "In other words, turn 500's into requests for your homepage."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Why not fix those \"bugs\"?", "If a url pattern is not matched, then a proper error message should be shown.", "By adding those templates you will help the user and yourself :-)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "help the user", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.codinghorror.com/blog/archives/000819.html"}]}], [{"text": ["You can't make these a**holes go away, so all you can do is minimize their impact on your system and get on with your life."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]