[[{"text": ["That's because a is a string as inputted.", "Use int() to convert it to an integer before doing numeric comparisons."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "int()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n a = int(raw_input('Enter a number: '))\nif a &gt; 0:\n    print 'Positive'\nelif a == 0:\n    print 'Null'\nelif a &lt; 0:\n    print 'Negative'\n</code>\n</pre>\n", "senID": 1}, {"text": ["Alternatively, input() will do type conversion for you."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "input()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n a = input('Enter a number: ')\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Expanding on my comment on the accepted answer, here's how I would do it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "accepted answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1395603/trouble-with-simple-python-code/1395635#1395635"}]}, {"code": "<pre>\n<code>\n value = None\ngetting_input = True\n\nwhile getting_input:\n    try:\n        value = int(raw_input('Gimme a number: '))\n        getting_input = False\n    except ValueError:\n        print \"That's not a number... try again.\"\n\nif value &gt; 0:\n    print 'Positive'\nelif value &lt; 0:\n    print 'Negative'\nelse:\n    print 'Null'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Because you are using raw_input you are getting the value as a String, which is always considered greater than 0 (even if the String is '-10')"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "raw_input", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Instead, try using input('Enter a number: ') and python will do the type conversion for you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The final code would look like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a = input('Enter a number: ')\nif a &gt; 0:\n    print 'Positive'\nelif a == 0:\n    print 'Null'\nelif a &lt; 0:\n    print 'Negative'\n</code>\n</pre>\n", "senID": 3}, {"text": ["However, as a number of folks have pointed out, using input() may lead to an error because it actually interprets the python objects passed in."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["A safer way to handle this can be to cast raw_input with the desired type, as in:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n a = int( raw_input('Enter a number: '))\n</code>\n</pre>\n", "senID": 6}, {"text": ["But beware, you will still need to do some error handling here to avoid trouble!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"code": "<pre>\n<code>\n raw_input\n</code>\n</pre>\n", "senID": 0}, {"text": ["returns a string so you need to convert a which is a string to an integer first: a = int(a)"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "a = int(a)", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["raw_input is stored as a string, not an integer."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "raw_input", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Try using a = int(a) before performing comparisons. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "a = int(a)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["raw input will return a string, not an integer.", "To convert it, try adding this line immediately after your raw_input statement:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["a = int(a)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This will convert the string to an integer.", "You can crash it by giving it non-numeric data, though, so be careful."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]