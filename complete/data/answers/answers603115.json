[[{"text": ["The file is encoded in some unicode encoding, but you are reading it as ascii.", "Try to convert the file to ascii before using it in python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["The post by recursive is probably right... the contents of the file are likely encoded with a multi-byte charset.", "If this is, in fact, the case you can likely read the file in python itself without having to convert it first outside of python."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Try something like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n fread = open('input.csv', 'rb').read()\nmytext = fread.decode('utf-16')\n</code>\n</pre>\n", "senID": 2}, {"text": ["The 'b' flag ensures the file is read as binary data.", "You'll need to know (or guess) the original encoding... in this example, I've used utf-16, but YMMV.", "This will convert the file to unicode.", "If you truly have a file with multi-byte chars, I don't recommend converting it to ascii as you may end up losing a lot of the characters in the process."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDIT: Thanks for uploading the file.", "There are two bytes at the front of the file which indicates that it does, indeed, use a wide charset.", "If you're curious, open the file in a hex editor as some have suggested... you'll see something in the text version like 'I.D.|.", "' (etc).", "The dot is the extra byte for each char."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The code snippet above seems to work on my machine with that file."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Isn't csv a simple txt file with values separated with comma.", "Just try to open it with a text editor to see if the file is correctly formed."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["First of all, use an hex-editor to view the file, see if there is anything irregular about it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Secondly, please post the code you are using."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["It did never ocurred to me, but as truppo said, it must be something wrong with the file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Try to open the file in Excel/BrOffice Calc and Save As the file as Csv again."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If the problem persists, try a subset of the data: fist 10/last 10/intermediate 10 lines of the file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You might as well upload the file in question to a site like http://drop.io/ and give us a link."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://drop.io/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://drop.io/"}]}], [{"text": ["Ok, I got it with the help of Jarret Hardie's post"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["this is the code that I used to convert the file to ascii"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n fread = open('input.csv', 'rb').read()\nmytext = fread.decode('utf-16')\nmytext = mytext.encode('ascii', 'ignore')\nfwrite = open('input-ascii.csv', 'wb')\nfwrite.write(mytext)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Thanks!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Open the file in binary mode, 'rb'.", "Check it in a HEX Editor and check for null padding '00'.", "Open the file in something like Scintilla Text Editor to check the characters present in the file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["To read an encoded file, you can simply replace open with codecs.open."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "open", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "codecs.open", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n fread = codecs.open('input.csv', 'r', 'utf-16')\n</code>\n</pre>\n", "senID": 1}]]