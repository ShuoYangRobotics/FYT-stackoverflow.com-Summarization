[[{"text": ["I write in both R and Python regularly.", "I find Python modules for writing, reading and parsing information easier to use, maintain and update.", "Little niceties like the way python lets you deal with lists of items over R's indexing make things much easier to read."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I highly doubt you will gain any significant speed-up by switching the language.", "If you are becoming the new \"maintainer\" of these scripts and you find Python easier to understand and extend, then I'd say go for it."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Computer time is cheap ... programmer time is expensive.", "If you have other things to do then I'd just limp along with what you've got until you have a free day to putz with them."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Hope that helps."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Few weeks ago, I wrote a Python script to extract some rows from a large (280 MB) CSV file.", "More precisely, I wanted to extract all available information on companies in the dbpedia that have an ISIN field.", "Later I tried the same in R, but as hard as I tried, the R script took 10x more than the python script (10min vs 1min on my rather old laptop).", "Maybe this is due to my knowledge of R, in which case I would appreciate any hint on how to make the script faster.", "Here is the python code"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "CSV file", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://downloads.dbpedia.org/3.4/de/infobox_de.csv.bz2"}]}, {"code": "<pre>\n<code>\n from time import clock\n\nclock()\ninfile = \"infobox_de.csv\"\noutfile = \"companies.csv\"\n\nreader = open(infile, \"rb\")\nwriter = open(outfile, \"w\")\n\noldthing = \"\"\nisCompany = False\nhasISIN = False\nmatches = 0\n\nfor line in reader:\n    row = line.strip().split(\"\\t\")\n    if len(row)&gt;0: thing = row[0]\n    if len(row)&gt;1: key = row[1]\n    if len(row)&gt;2: value = row[2]\n    if (len(row)&gt;0) and (oldthing != thing):\n      if isCompany and hasISIN:\n        matches += 1\n        for tup in buf:\n          writer.write(tup)\n      buf = []\n      isCompany = False\n      hasISIN = False\n    isCompany = isCompany or ((key.lower()==\"wikipageusestemplate\") and (value.lower()==\"template:infobox_unternehmen\"))\n    hasISIN = hasISIN or ((key.lower()==\"isin\") and (value!=\"\"))\n    oldthing = thing\n    buf.append(line)\n\nwriter.close()\nprint \"finished after \", clock(), \" seconds; \", matches, \" matches.\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["and here is the R script (I do not have the equivalent version anymore, but a very similar which returns a dataframe instead of writing a csv file and does not check for ISIN):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n infile &lt;- \"infobox_de.csv\"\nmaxLines=65000\n\nreader &lt;- file(infile, \"r\")\nwriter &lt;- textConnection(\"queryRes\", open = \"w\", local = TRUE)\nwriteLines(\"thing\\tkey\\tvalue\\tetc\\n\", writer)\n\noldthing &lt;- \"\"\nhasInfobox &lt;- FALSE\nlineNumber &lt;- 0\nmatches &lt;- 0\nkey &lt;- \"\"\nthing &lt;- \"\"\n\nrepeat {\n  lines &lt;- readLines(reader, maxLines)\n  if (length(lines)==0) break\n  for (line in lines) {\n    lineNumber &lt;- lineNumber + 1\n    row = unlist(strsplit(line, \"\\t\"))\n    if (length(row)&gt;0) thing &lt;- row[1]\n    if (length(row)&gt;1) key &lt;- row[2]\n    if (length(row)&gt;2) value &lt;- row[3]\n    if ((length(row)&gt;0) &amp;&amp; (oldthing != thing)) {\n      if (hasInfobox) {\n        matches &lt;- matches + 1\n        writeLines(buf, writer)\n      }\n      buf &lt;- c()\n      hasInfobox &lt;- FALSE\n    }\n    hasInfobox &lt;- hasInfobox || ((tolower(key)==\"wikipageusestemplate\") &amp;&amp; (tolower(value)==tolower(\"template:infobox_unternehmen\")))\n    oldthing &lt;- thing\n    buf &lt;- c(buf, line)\n  }\n}\nclose(reader)\nclose(writer)\nreadRes &lt;- textConnection(queryRes, \"r\")\nresult &lt;- read.csv(readRes, sep=\"\\t\", stringsAsFactors=FALSE)\nclose(readRes)\nresult\n</code>\n</pre>\n", "senID": 3}, {"text": ["What I did explicitly, was to restrict readLines to 65000 lines maximum.", "I did this because I thought my 500MB RAM machine would be run out of memory otherwise.", "I did not try without this restriction."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Know where the time is being spent.", "If your R scripts are bottlenecked on disk IO (and that is very possible in this case), then you could rewrite them in hand-optimized assembly and be no faster.", "As always with optimization, if you don't measure first, you're just pissing into the wind.", "If they're not bottlenecked on disk IO, you would likely see more benefit from improving the algorithm than changing the language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["what do you mean by \"file manipulation?", "\" are you talking about moving files around, deleting, copying, etc., in which case i would use a shell, e.g., bash, etc.", "if you're talking about reading in the data, performing calculations, perhaps writing out a new file, etc., then you could probably use Python or R. unless maintenance is an issue, i would just leave it as R and find other fish to fry as you're not going to see enough of a speedup to justify your time and effort in porting that code."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["My guess is that you probably won't see much of a speed-up in time.", "When comparing high-level languages, overhead in the language is typically not to blame for performance problems.", "Typically, the problem is your algorithm."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I'm not very familiar with R, but you may find speed-ups by reading larger chunks of data into memory at once vs smaller chunks (less system calls).", "If R doesn't have the ability to change something like this, you will probably find that python can be much faster simply because of this ability."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["R data manipulation has rules for it to be fast.", "The basics are: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Search for R time optimization and profiling and you will find many resources to help you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]