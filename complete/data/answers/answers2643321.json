[[{"text": ["Django seems like the obvious choice.", "It is by far the most stable and developed framework, used by several large corporations."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/"}, {"text": "several large corporations", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.djangosites.org/highest-rated/"}]}, {"text": ["Because it is a Python framework, it can generally use any Python module, as well as the many modules that have been made for Django."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It should fulfill all of your needs, and is not terribly difficult to learn/deploy."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["For the context, I work at a large private bank in Switzerland, writing Enterprise applications on the J2EE stack."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["There are plenty of \"Production Ready\" web frameworks in Python.", "And there are plenty of large Python-based websites out there."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["That said, I think Python is a poor choice for an Enterprisy application.", "It can be used as a glue language, or a scripting language (our deployment scripts are Python).", "The showstopper for me is backward compatibility (Python 3.x isn't backward compatible with Python 2.x).", "The Python philosopy seems to be more to innovate and make the language better, smoother, and not necessarily to support programs written 10 years ago."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["On the Web framework side, I love Django, but it is definitely much too young and it evolves too rapidly to be used in the enterprise.", "I don't have much experience with other Python-based frameworks."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you want an enterprise-oriented framework, you'll have to stay with enterprise stacks (Java / .Net)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["On the other hand, even in the Java world, there is a tendency to use frameworks that are less enterprisy.", "Think Spring vs EJB2 or EJB3 being much lighter weight than EJB2.", "Or think Flex (which is far from an enterprise framework in my view) being used more and more in the enterprise.", "So if your enterprise is openminded enough, ready to jump into the future, using Django, RoR or other modern Web 2.0, community driven, Open Source, next generation, active record based frameworks ... might not be that much of a stretch ..."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["And finally, to answer a few of your points directly :"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"tag": "ul", "num": 6, "lis": [{"text": "support of ORM / caching / ... : yes, but most solutions are based on active record, which is fine for 90% of what you might want to do, but is definitly not as complete / complex as JPA / Hibernate", "tag": "none", "senID": 7}, {"text": "control-oriented UI : no, and you wont find a standard, so you wont find 3rd party components. The closest you might get is integration with jQuery or other JS UI frameworks", "tag": "none", "senID": 8}, {"text": "dependency injection : There is a port of Spring to Python, maintained by SpringSource. But DI is not in the Python philosophy. The same problem will be resolved with functions, default arguments and closures. And we might argue that the Pythonic solution is cleaner than the Java way ...", "tag": "none", "senID": 9}, {"text": "unit / integration tests : very good support, multiple test frameworks. Still, support is not as good as Java where we have tons of tools around testing.", "tag": "none", "senID": 10}, {"text": "good IDE support : there are technical limitations to the ammount of support you can provide to a dynamic language, but at least both Eclipse and Netbeans have great support for Python.", "tag": "none", "senID": 11}, {"text": "clustering / modularity : clustering will be resolved with a \"share nothing infrastructure\" and/or distributed caching. There are no solutions for modularity (in the OSGI sense) as far as I know. But I would challenge that very often OSGI is a solution for a problem we dont have in the enterprise ...", "tag": "none", "senID": 12}]}], [{"text": ["Check out Zope ..."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Zope", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.zope.org/"}]}], [{"text": ["As mentioned, django is perhaps the most stable python web application framework.", "To answer your points in turn:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 8, "lis": [{"text": "supports objective-relational mapping with caching and declarative desciption (like JPA, Hibernate etc..). Yes, see ", "tag": "none", "senID": 1}, {"text": "controls oriented user interface support - no HTML templates but something like JSF (RichFaces, Icefaces) or GWT, Vaadin, ZK. No. django templates are there but you could add some other view layer quite easily.", "tag": "none", "senID": 2}, {"text": "component decomposition and dependency injection (like EJB or Spring). Not sure as I haven't used EJB.", "tag": "none", "senID": 3}, {"text": "unit and integration testing. Yes, see ", "tag": "none", "senID": 4}, {"text": "good IDE support. Pretty good. See eclipse + pydev", "tag": "none", "senID": 5}, {"text": "clustering, modularity etc (like Terracota, OSGi etc..). Don't know.", "tag": "none", "senID": 6}, {"text": "there are successful applications written in it by companies like IBM, Oracle etc (I mean real business applications not Twitter). Mostly news organisations like LA Times and Washington Post.", "tag": "none", "senID": 7}, {"text": "could have commercial support. There are a few ", "tag": "none", "senID": 8}]}], [{"text": ["Have you had a look at Jython?", "Jython is an implementation of Python for the Java Virtual Machine.", "It is possible to run Django on Jython: \nDjango on Jython and to use Jython and Django with a JEE application server: Django on Glassfish."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Django on Jython", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/howto/jython/"}, {"href": "http://blog.arungupta.me/2009/06/totd-85-getting-started-with-django-applications-on-glassfish-v3/", "text": "Django on Glassfish", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["If you haven't definitely selected Python yet, you might take a look at Groovy with either Wicket or Grails as the web application framework."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["What about Plone?", "visit http://www.plone.org for more information.", "Used in many enterprise level applications."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.plone.org", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.plone.org"}]}, {"text": ["Some organizations using Plone:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["CIA, FBI, NASA, Oxfam, Brazilian Federal Government, Novell, the list goes on."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["For information about deployed solutions and case studies visit www.plone.net"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]]