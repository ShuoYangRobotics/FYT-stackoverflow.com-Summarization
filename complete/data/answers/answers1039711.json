[[{"text": ["os.remove() does not work on a directory, and os.rmdir() will only work on an empty directory."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You can use shutil.rmtree() to do this, however."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Because the * is a shell construct.", "Python is literally looking for a file named \"*\" in the directory /home/me/test.", "Use listdir to get a list of the files first and then call remove on each one."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["os.remove doesn't resolve unix-style patterns.", "If you are on a unix-like system you can:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.system('rm '+test)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Else you can:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import glob, os\ntest = '/path/*'\nr = glob.glob(test)\nfor i in r:\n   os.remove(i)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["star is expanded by Unix shell.", "Your call is not accessing shell, it's merely trying to remove a file with the name ending with the star"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["official document of os.walk does have a demo :)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/library/os.html#os.walk"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/os.html#os.walk", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/os.html#os.walk"}]}], [{"text": ["os.remove will only remove a single file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In order to remove with wildcards, you'll need to write your own routine that handles this."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["There are quite a few suggested approaches listed on this forum page."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "quite a few suggested approaches", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://forums.devshed.com/python-programming-11/deleting-files-with-python-108565.html"}]}], [{"text": ["shutil.rmtree() for most cases.", "But it doesn't work for in Windows for readonly files.", "For windows import win32api and win32con modules from PyWin32."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def rmtree(dirname):\n    retry = True\n    while retry:\n        retry = False\n        try:\n            shutil.rmtree(dirname)\n        except exceptions.WindowsError, e:\n            if e.winerror == 5: # No write permission\n                win32api.SetFileAttributes(dirname, win32con.FILE_ATTRIBUTE_NORMAL)\n                retry = True\n</code>\n</pre>\n", "senID": 1}]]