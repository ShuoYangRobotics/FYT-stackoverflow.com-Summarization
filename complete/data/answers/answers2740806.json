[[{"text": ["I'm presuming you are actually using sqlite3 even though your code says otherwise.", "Here are some things to check:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Failing that, read Things That Can Go Wrong and How to Corrupt Your Database Files"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Things That Can Go Wrong", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlite.org/atomiccommit.html#sect_9_0"}, {"href": "http://www.sqlite.org/lockingv3.html#how_to_corrupt", "text": "How to Corrupt Your Database Files", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["here's a neat workaround for simultaneous access..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n while(1):\n con=sqlite.connect('user.db',timeout=1)\n c=con.cursor()\n try:\n         c.execute(\"select * from queue\")\n  res=c.fetchall()\n except sqlite.OperationalError:\n      print(\"database locked\")\n num_users=len(res)\n</code>\n</pre>\n", "senID": 1}, {"text": ["..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["works for me .. hunting around for hours paid off...!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["The database is locked by another process that is writing to it.", "You have to wait until the other transaction is committed.", "See the documentation of connect()"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["One possible reason for the database being locked that I ran into with SQLite is when I tried to access a row that was being written by one app, and read by another at the same time.", "You may want to set a busy timeout in your SQLite wrapper that will spin and wait for the database to become free (in the original c++ api the function is sqlite3_busy_timeout).", "I found that 300ms was sufficient in most cases."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "sqlite3_busy_timeout", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.sqlite.org/c3ref/busy_timeout.html"}]}, {"text": ["But I doubt this is the problem, based on your post.", "Try other recommendations first."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Oh, your traceback gave it away: you have a version conflict.", "You have installed some old version of sqlite in your local dist-packages directory when you already have sqlite3 included in your python2.6 distribution and don't need and probably can't use the old sqlite version.", "First try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n $ python -c \"import sqlite3\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["and if that doesn't give you an error, uninstall your dist-package:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "uninstall your dist-package", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://peak.telecommunity.com/DevCenter/EasyInstall#uninstalling-packages"}]}, {"code": "<pre>\n<code>\n easy_install -mxN sqlite\n</code>\n</pre>\n", "senID": 3}, {"text": ["and then import sqlite3 in your code instead and have fun."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "import sqlite3", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Set the timeout parameter in your connect call, as in:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n connection = sqlite.connect('cache.db', timeout=10)\n</code>\n</pre>\n", "senID": 1}]]