[[{"text": ["Taken from http://docs.python.org/reference/expressions.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/reference/expressions.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html"}]}, {"text": ["Example 1:\n6%2 evaluates to 0 because there's no remainder if 6 is divided by 2 ( 3 times )."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "Example 1:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "6%2", "childNum": 0, "tag": "code", "childList": []}, {"text": "0", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Example 2: 7%2 evaluates to 1 because there's a remainder of 1 when 7 is divided by 2 ( 3 times )."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "Example 2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "7%2", "childNum": 0, "tag": "code", "childList": []}, {"text": "1", "childNum": 0, "tag": "code", "childList": []}, {"text": "1", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["So to summarise that, it returns the remainder of a division operation, or 0 if there is no remainder.", "So 6%2 means find the remainder of 6 divided by 2. "], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "0", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "6%2", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Python - Basic Operators\nhttp://www.tutorialspoint.com/python/python_basic_operators.htm "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"href": "http://www.tutorialspoint.com/python/python_basic_operators.htm", "text": "http://www.tutorialspoint.com/python/python_basic_operators.htm", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["a = 10 and b = 20  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["b % a = 0"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["An expression like 'x % y' evaluates to the remainder of 'x / y'.", "Precedence rules are like '/' and '*'."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 9 / 2\n4\n&gt;&gt;&gt; 9 % 2\n1\n</code>\n</pre>\n", "senID": 1}, {"tag": "ul", "num": 3, "lis": [{"text": "9 divided by 2 is equal to 4.", "tag": "none", "senID": 2}, {"text": "4 times 2 is 8", "tag": "none", "senID": 3}, {"text": "9 minus 8 is 1 - the remainder.", "tag": "none", "senID": 4}]}], [{"text": ["Modulus operator, it is used for remainder division on integers, typically, but in Python can be used for floating point numbers."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/reference/expressions.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/reference/expressions.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html"}]}], [{"text": ["In most languages % is used for modulus.", "Python is no exception."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "modulus", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Modular_arithmetic"}]}], [{"text": ["It is, as in many C-like languages, the remainder or modulo operation.", "See the documentation for numeric types \u2014 int, float, long, complex."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "documentation for numeric types \u2014 int, float, long, complex", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html?highlight=remainder#numeric-types-int-float-long-complex"}]}], [{"text": ["It's a modulo operation, except when it's an old-fashioned C-style string formatting operator, not a modulo operation.", "See here for details.", "You'll see a lot of this in existing code."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "It's a modulo operation, except when it's an old-fashioned C-style string formatting operator, not a modulo operation", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/py3k/library/stdtypes.html#old-string-formatting-operations"}]}], [{"text": ["The % (modulo) operator yields the remainder from the division of the first argument by the second.", "The numeric arguments are first converted to a common type."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["This is based on operator precedence."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["% is modulo.", "3 % 2 = 1, 4 % 2 = 0"], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "%", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "modulo", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Modulo_operation"}, {"text": "3 % 2 = 1", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "4 % 2 = 0", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["/ is (an integer in this case) division, so:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n 3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6\n1 + 4%2 - 1/4 + 6\n1 + 0 - 0 + 6\n7\n</code>\n</pre>\n", "senID": 2}], [{"text": ["It's a modulo operation\nhttp://en.wikipedia.org/wiki/Modulo_operation"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://en.wikipedia.org/wiki/Modulo_operation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Modulo_operation"}]}, {"text": ["http://docs.python.org/reference/expressions.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/reference/expressions.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/expressions.html"}]}, {"text": ["So with order of operations, that works out to"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["(3+2+1-5) + (4%2) - (1/4) + 6"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["(1) + (0) - (0) + 6"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": [], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["The 1/4=0 because we're doing integer math here."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["Also, there is a useful built-in function called divmod:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "divmod", "tag": "a", "pos": 0, "childList": [{"text": "divmod", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html#divmod"}, {"text": "divmod", "childNum": 0, "tag": "code", "childList": []}]}]]