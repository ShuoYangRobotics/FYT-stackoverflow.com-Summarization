[[{"text": ["First of all, don't use iter and next(), that's what for is for.", "Secondly, you are actually writing a list to the file, not its contents.", "So you could either print the first element of the list (i.e.", "l1[0]) or iterate through all the inner lists elements."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "iter", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "next()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "for", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "l1[0]", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["Your code should look like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l1 = ['1']\nl2 = ['A']\nl3 = ['2']\nl4 = ['B']\nl5 = ['3']\nl6 = ['C']\n\nlistoflists = [l1,l2,l3,l4,l5,l6]\n\nf = open ('order.txt','w')\n\nfor inner_list in listoflists:\n    for element in inner_list:\n        f.write(element+'\\n')\n\nf.close()\n</code>\n</pre>\n", "senID": 2}], [{"text": ["I think the best way to solve this is just with a basic nested loop.", "Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n l1 = ['1']\nl2 = ['A']\nl3 = ['2']\nl4 = ['B']\nl5 = ['3']\nl6 = ['C']\nlistoflists = [l1,l2,l3,l4,l5,l6]\n\nf = open(\"out.txt\",\"w\")\n\n# for each list and\n# for each item in the list;\n# write the item to the file, separated by a comma\nfor list in listoflists: \n    for item in list: \n        f.write(item+\",\") \n\nf.close()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Out.txt now holds:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n 1,A,2,B,3,C,\n</code>\n</pre>\n", "senID": 3}, {"text": ["Oh, and no Python question is complete without a one-liner solution (this also removes the trailing comma from my initial response)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n open(\"out.txt\",\"w\").write(\",\".join((\"\".join(i) for i in listoflists)))\n</code>\n</pre>\n", "senID": 5}, {"text": ["Out.txt now holds:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n 1,A,2,B,3,C\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Your code could be a lot simpler:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for list in listoflists:\n    f.write(str(list))\n    f.write('\\n')\n</code>\n</pre>\n", "senID": 1}, {"text": ["But, this is going to print something like ['1'].", "It seems like you want something more like:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "['1']", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n for list in listoflists:\n    f.write(str(list[0]))\n    f.write('\\n')\n</code>\n</pre>\n", "senID": 3}, {"text": ["Also, why do you have a bunch of single-element lists?", "Couldn't you put all the elements into one list?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["The simple reason why you are getting the wrong file contents is because you are calling iter twice.", "Lines 15-16 are:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "iter", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n itr.next()\ns = str(itr.next())\n</code>\n</pre>\n", "senID": 1}, {"text": ["For more Pythonic printing semantics, see the other answers"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Including the quotes in the output is a bit odd, but if you insist:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for entry in listoflists:\n  print &gt;&gt;f, repr(entry[0])\n</code>\n</pre>\n", "senID": 1}, {"text": ["You don't specify what will happen if the inner list does not have just one element, so any other possibility is ignored here."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You can simply iterate through all list elements with itertools.chain (documented here):"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "itertools.chain", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://docs.python.org/library/itertools.html#itertools.chain", "text": "here", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n import itertools\n\nl1 = ['1']\nl2 = ['A']\nl3 = ['2']\nl4 = ['B']\nl5 = ['3']\nl6 = ['C']\n\nchainedlists = itertools.chain(l1,l2,l3,l4,l5,l6)\n\nwith open ('order.txt','wt') as f:\n    for element in chainedlists:\n        # Change this how you want it to be formatted, it will output\n        # a string \"a\" as 'a' (with the quotes)\n        f.write(\"%s\\n\" % repr(element))\n</code>\n</pre>\n", "senID": 1}]]