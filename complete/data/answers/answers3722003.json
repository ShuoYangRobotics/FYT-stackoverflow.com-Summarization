[[{"text": ["Boost is C++, not C (emphatically not C -- virtually all of it makes heavy use of templates and such that aren't part of C)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "heavy", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Yes, C programmers tend to build up personal libraries of code for all sorts of \"stuff\" -- data structures, algorithms, user interfaces, and so on.", "There are also a fair number of other libraries for everything from basic string manipulation to database connectivity, user interfaces, basic algorithms and data structures, etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Comparing productivity between the two can be difficult though -- even if something can be done in one line of code either way, there's a greater chance that the C programmer will end up doing extra work to find and learn to use that particular library.", "OTOH, if he has used it before, the two might be directly competitive of (in a few cases) C might be more productive."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I'd guess Python ends up more productive more often, but trying to guess how much so is difficult (and lines of code usually won't be a good indication either)."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "won't", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["No."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You've missed the most important point.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Python's interactive.", "It's not edit-compile-link-execute-break-debug.", "It's edit-debug."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [], [{"text": ["It depends. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Try to write an interrupt handler in python.", "Someone could probably make it work but it's going to be a dancing bear, the dancing is not good but it is surprising that a bear can do it.", "Want to write an OS or do some embedded programming you're not going to be able to use python.", "It's telling that the main python implementation is written in C."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "OS", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.kernel.org"}, {"text": "embedded programming", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://arduino.cc/hu/Main/Documentation"}]}, {"text": ["That being said I'm amazed at some of the low-level stuff that you can do with python.", "The high-level stuff is almost a given if you're measuring lines of code.", "Python is just a higher-level language. "], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "low-level stuff", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.secdev.org/projects/scapy/"}]}, {"text": ["They are both very useful tools, just for different types of projects.", "Knowing both would be very useful, particularly when you need to interface to some new functionality in python that doesn't yet have a python binding. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["For the types of projects most developers work on python is going to be more consice and quicker to write and debug.", "You may be able to make a library of reusable C code, but a good python programmer will be doing the same thing with their python code, at a higher level. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Depends greatly on the task and the size of the project.", "For many small interesting tasks, I would not be surprised by 100:1 smaller Python code simply because the standard libraries are extremely good.", "If you find, buy, or build C/C++ libraries that do what you want, I imagine the ratio would be much more like 3:1 on big projects. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["However, finding, buying, and building C/C++ libraries does take time and effort, so I believe in the vast majority of cases, Python is going to be much faster to develop in."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I think Python is more productive for small projects (up to a few thousand lines of code)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["On the other hand, C is better suited for large projects (even though IMHO there are better languages for that, such as Ada): static type-checking allows to find many errors at compile time that are much more difficult to detect at run-time, especially in a large program."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In a larger C project, the lack of lists and other powerful data structures that are found in Python can be compensated by implementing or using custom libraries.", "I agree with user stacker that by using well-designed libraries your C code can be pretty concise."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]