[[{"text": ["you can use glob"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "glob", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import glob\nimport os\nos.chdir(\"/mydir\")\nfor files in glob.glob(\"*.txt\"):\n    print files\n</code>\n</pre>\n", "senID": 1}, {"text": ["or simple os.listdir"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "os.listdir", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import os\nos.chdir(\"/mydir\")\nfor files in os.listdir(\".\"):\n    if files.endswith(\".txt\"):\n        print files\n</code>\n</pre>\n", "senID": 3}, {"text": ["or if you want to traverse directory"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import os\nfor r,d,f in os.walk(\"/mydir\"):\n    for files in f:\n        if files.endswith(\".txt\"):\n             print os.path.join(r,files)\n</code>\n</pre>\n", "senID": 5}], [{"text": ["Use glob."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "glob", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/glob.html"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import glob\n&gt;&gt;&gt; glob.glob('./*.txt')\n['./outline.txt', './pip-log.txt', './test.txt', './testingvim.txt']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Something like that should do the job"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for root, dirs, files in os.walk(directory):\n    for file in files:\n        if file.endswith('.txt')\n            print file\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Something like this will work: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import os\n&gt;&gt;&gt; path = '/usr/share/cups/charmaps'\n&gt;&gt;&gt; text_files = [f for f in os.listdir(path) if f.endswith('.txt')]\n&gt;&gt;&gt; text_files\n['euc-cn.txt', 'euc-jp.txt', 'euc-kr.txt', 'euc-tw.txt', ... 'windows-950.txt']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["glob.glob()"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "glob.glob()", "tag": "a", "pos": 0, "childList": [{"text": "glob.glob()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/glob.html#glob.glob"}, {"text": "glob.glob()", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I like os.walk():"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "os.walk()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/os.html"}]}, {"code": "<pre>\n<code>\n import os, os.path\n\nfor root, dirs, files in os.walk(dir):\n    for f in files:\n        fullpath = os.path.join(root, f)\n        if os.path.splitext(fullpath)[1] == '.txt':\n            print fullpath\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or with generators:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import os, os.path\n\nfileiter = (os.path.join(root, f)\n    for root, _, files in os.walk(dir)\n    for f in files)\ntxtfileiter = (f for f in fileiter if os.path.splitext(f)[1] == '.txt')\nfor txt in txtfileiter:\n    print txt\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Here's more versions of the same that produce slightly different results:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import glob\nfor f in glob.iglob(\"/mydir/*/*.txt\"): # generator, search immediate subdirectories \n    print f\n</code>\n</pre>\n", "senID": 1}, {"code": "<pre>\n<code>\n print glob.glob1(\"/mydir\", \"*.tx?\")  # literal_directory, basename_pattern\n</code>\n</pre>\n", "senID": 2}, {"code": "<pre>\n<code>\n import fnmatch, os\nprint fnmatch.filter(os.listdir(\"/mydir\"), \"*.tx?\") # include dot-files\n</code>\n</pre>\n", "senID": 3}]]