[[{"code": "<pre>\n<code>\n 'c:\\Program' is not recognized as an internal or external command,\noperable program or batch file.\n</code>\n</pre>\n", "senID": 0}, {"text": ["To get this message, you are either:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Things to try:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["Open a python prompt, run the following command:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]}, {"text": ["If that works, then quoting issues are out of the question.", "If not, you've isolated the problem."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["If you have spaces in the path, the easiest way I've found to get them interpreted properly is this."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n subprocess.call('\"\"' + path + '\"\"')\n</code>\n</pre>\n", "senID": 1}, {"text": ["I don't know why exactly it needs double double quotes, but that is what works."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["2 things"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["1) "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You probably don't want to use Pipe \nIf the output of the subprogram is greater than 64KB it is likely your process will crash.", "http://thraxil.org/users/anders/posts/2008/03/13/Subprocess-Hanging-PIPE-is-your-enemy/"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://thraxil.org/users/anders/posts/2008/03/13/Subprocess-Hanging-PIPE-is-your-enemy/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://thraxil.org/users/anders/posts/2008/03/13/Subprocess-Hanging-PIPE-is-your-enemy/"}]}, {"text": ["2) \nSubprocess.Popen has a keyword argument shell, making it as if the shell has been parsing your arguments,  setting shell=True should do what you want."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I believe that list2cmdline(), which is doing the processing of your list args, splits any string arg on whitespace unless the string contains double quotes.", "So I would expect"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "string", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n vmrun_cmd = r'\"c:/Program Files/VMware/VMware Server/vmware-cmd.bat\"'\n</code>\n</pre>\n", "senID": 1}, {"text": ["to be what you want."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You'll also likely want to surround the other arguments (like target_vm) in double quotes on the assumption that they, too, each represent a distinct arg to present to the command line.", "Something like"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "target_vm", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n r'\"%s\"' % target_vm\n</code>\n</pre>\n", "senID": 4}, {"text": ["(for example) should suit."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["See the list2cmdline documentation"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "the list2cmdline documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codespeak.net/py/dist/apigen/api/compat.subprocess.list2cmdline.html"}]}, {"text": ["D'A"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["In Python on MS Windows, the subprocess.Popen class uses the CreateProcess API to started the process.", "CreateProcess takes a string rather than something like an array of arguments.", "Python uses subprocess.list2cmdline to convert the list of args to a string for CreateProcess."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If I were you, I'd see what subprocess.list2cmdline(args) returns (where args is the first argument of Popen).", "It would be interesting to see if it is putting quotes around the first argument."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Of course, this explanation might not apply in a Cygwin environment."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Having said all this, I don't have MS Windows."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Here's what I don't like"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n vmrun_cmd = r\"c:/Program Files/VMware/VMware Server/vmware-cmd.bat\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["You've got spaces in the name of the command itself -- which is baffling your shell.", "Hence the \"'c:\\Program' is not recognized as an internal or external command,\noperable program or batch file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Option 1 -- put your .BAT file somewhere else.", "Indeed, put all your VMWare somewhere else.", "Here's the rule:  Do Not Use \"Program Files\" Directory For Anything.", "It's just wrong."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Do Not Use \"Program Files\" Directory For Anything.", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}, {"text": ["Option 2 -- quote the vmrun_cmd value"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "vmrun_cmd", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n vmrun_cmd = r'\"c:/Program Files/VMware/VMware Server/vmware-cmd.bat\"'\n</code>\n</pre>\n", "senID": 5}], [{"text": ["One problem is that if the command is surrounded with quotes and doesn't have spaces, that could also confuse the shell."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["So I do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if ' ' in raw_cmd:\n    fmt = '\"%s\"'\nelse:\n    fmt = '%s'\n\ncmd = fmt % raw_cmd\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Why are you using r\"\"?", "I believe that if you remove the \"r\" from the beginning, it will be treated as a standard string which may contain spaces.", "Python should then properly quote the string when sending it to the shell."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Possibly stupid suggestion, but perhaps try the following, to remove subprocess + spaces from the equation:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import os\nfrom subprocess Popen, PIPE\n\nos.chdir(\n    os.path.join(\"C:\", \"Program Files\", \"VMware\", \"VMware Server\")\n)\n\np = Popen(\n    [\"vmware-cmd.bat\", target_vm, list_arg, list_arg2],\n    stdout=PIPE\n).communicate()[0]\n</code>\n</pre>\n", "senID": 1}, {"text": ["It might also be worth trying.."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n p = Popen(\n    [os.path.join(\"C:\", \"Program Files\", \"VMware\", \"VMware Server\", \"vmware-cmd.bat\"), ...\n</code>\n</pre>\n", "senID": 3}]]