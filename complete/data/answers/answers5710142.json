[[{"text": ["You could do something like this: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n ''.join(b[x] for x in starts)\n</code>\n</pre>\n", "senID": 1}, {"text": ["But I would recommend this instead:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a='1234512345'\nb='abcdefghik'\n\n''.join(y for (x, y) in zip(a, b) if x == '1')\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; a='1234512345'\n&gt;&gt;&gt; b='abcdefghik'\n&gt;&gt;&gt; [ j for i,j in zip(a,b) if i==\"1\" ]\n['a', 'f']\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n In [11]: a='1234512345'    \nIn [12]: b='abcdefghik'\n\nIn [16]: ''.join(b[i] for i,num in enumerate(a) if num=='1')\nOut[16]: 'af'\n</code>\n</pre>\n", "senID": 0}, {"text": ["or, if you really want to use regex:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n In [21]: ''.join(b[match.start()] for match in re.finditer(re.escape('1'), a))\nOut[21]: 'af'\n</code>\n</pre>\n", "senID": 2}], [{"code": "<pre>\n<code>\n import re\na='1234512345'\n\nb='abcdefghik'\n\nstarts= [ b[i] for i in [ match.start() for match in re.finditer(re.escape('1'), a)]]\nprint ''.join(starts)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n \"\".join(b[i] for i in range(min(len(a), len(b))) if a[i] == \"1\")\n</code>\n</pre>\n", "senID": 0}], [{"text": ["like this?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a='1234512345'\n\nb='abcdefghik'\n\nfor char in a:\n    n = -1\n    for subc in a:\n        n=n+1\n        if subc == char:\n            print b[n],\n    print\n</code>\n</pre>\n", "senID": 1}, {"text": ["produces:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a f\nb g\nc h\nd i\ne k\na f\nb g\nc h\nd i\ne k\n</code>\n</pre>\n", "senID": 3}], [{"text": ["If you have to repeat this for a few values of a, it will be more efficient ((O(n)) to build a dictionary than to loop through a and b repeatedly (O(n*n))"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "a", "childNum": 0, "tag": "code", "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a='1234512345'\n&gt;&gt;&gt; b='abcdefghik'\n&gt;&gt;&gt; from collections import defaultdict\n&gt;&gt;&gt; D=defaultdict(str)\n&gt;&gt;&gt; for i,j in zip(a,b):\n...  D[i]+=j\n... \n&gt;&gt;&gt; D['1']\n'af'\n&gt;&gt;&gt; D['2']\n'bg'\n</code>\n</pre>\n", "senID": 1}]]