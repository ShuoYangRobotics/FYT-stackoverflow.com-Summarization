[[{"text": ["Works just fine for me..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; data = [\n... [5,3,0,0,7,0,0,0,0],\n... [6,0,0,1,9,5,0,0,0],\n... [0,9,8,0,0,0,0,6,0],\n... [8,0,0,0,6,0,0,0,3],\n... [4,0,0,8,0,3,0,0,1],\n... [7,0,0,0,2,0,0,0,6],\n... [0,6,0,0,0,0,2,8,0],\n... [0,0,0,4,1,9,0,0,5],\n... [0,0,0,0,8,0,0,7,9]\n... ]\n&gt;&gt;&gt; element = 4\n&gt;&gt;&gt; x = 0\n&gt;&gt;&gt; y = 0\n&gt;&gt;&gt; print data[0][0]\n5\n&gt;&gt;&gt; data[x][y] = element\n&gt;&gt;&gt; print data[0][0]\n4\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You seem to have tabbed out your last line, which gives me an error in the Python interpreter.", "If I remove that tab, it works."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Your array data has changed.", "Maybe you aren't printing it out so you don't know that it changed?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "data", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["What version of python are you running?", "Can you try it from the command line and post the results, like below?", "It seems to be working for me.", "I basically copied and pasted straight from your post."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Python 2.6.4 (r264:75706, Dec  7 2009, 18:45:15) \n[GCC 4.4.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; data = [\n... [5,3,0,0,7,0,0,0,0],\n... [6,0,0,1,9,5,0,0,0],\n... [0,9,8,0,0,0,0,6,0],\n... [8,0,0,0,6,0,0,0,3],\n... [4,0,0,8,0,3,0,0,1],\n... [7,0,0,0,2,0,0,0,6],\n... [0,6,0,0,0,0,2,8,0],\n... [0,0,0,4,1,9,0,0,5],\n... [0,0,0,0,8,0,0,7,9]\n... ]\n&gt;&gt;&gt; \n&gt;&gt;&gt; element = 4\n&gt;&gt;&gt; x = 0\n&gt;&gt;&gt; y = 0\n&gt;&gt;&gt; \n&gt;&gt;&gt; data\n[[5, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9]]\n&gt;&gt;&gt; data[x][y] = element\n&gt;&gt;&gt; data\n[[4, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9]]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The only thing wrong I see in your code is that the very last line is at a different indentation level.", "Putting it at the same level of the rest of the code works fine.", ":)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You may also be interested in the pprint module:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from pprint import pprint\n&gt;&gt;&gt; pprint(data)\n[[4, 3, 0, 0, 7, 0, 0, 0, 0],\n [6, 0, 0, 1, 9, 5, 0, 0, 0],\n [0, 9, 8, 0, 0, 0, 0, 6, 0],\n [8, 0, 0, 0, 6, 0, 0, 0, 3],\n [4, 0, 0, 8, 0, 3, 0, 0, 1],\n [7, 0, 0, 0, 2, 0, 0, 0, 6],\n [0, 6, 0, 0, 0, 0, 2, 8, 0],\n [0, 0, 0, 4, 1, 9, 0, 0, 5],\n [0, 0, 0, 0, 8, 0, 0, 7, 9]]\n</code>\n</pre>\n", "senID": 2}, {"text": ["A little easier to read!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["You need to break for look as soon as you find the necessary element:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n item = [1,2,3,4,5,6,7,8,9]\nfor element in item:\n    if element not in z:\n            print element\n            break\n\ndata[x][y] = element \nprint data[x][y]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Ah... now that you've posted all your code, it makes much more sense..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The reason it's not working the way you expected is because 'element' doesn't exist outside the context of the loop.", "You'll need to store the value you want to use in a variable that exists in the correct scope."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["It still works with the edited code.", "I changed the last few lines of your code to this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print \"before =\", data[x][y]\nprint \"element =\", element\ndata[x][y] = element \nprint \"after =\", data[x][y]\n</code>\n</pre>\n", "senID": 1}, {"text": ["And those print this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n before = 0\nelement = 9\nafter = 9\n</code>\n</pre>\n", "senID": 3}, {"text": ["As has been mentioned, the last value of element from the for loop will be what its value is after the for loop is complete.", "That's why you get 9 here."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["for loops in Python do not create a new scope; the name you use to hold the current value in the loop will persist after the loop is done, and will retain the last value it had while the loop was running."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "for", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]