[[{"text": ["Use socket and the gethostname() functionality.", "This will get the hostname of the computer where the python interpreter is running:"], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "socket", "tag": "a", "pos": 0, "childList": [{"text": "socket", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/socket.html"}, {"text": "socket", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "gethostname()", "tag": "a", "pos": -1, "childList": [{"text": "gethostname()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/socket.html#socket.gethostname"}, {"text": "gethostname()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "hostname", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n import socket\nprint socket.gethostname()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Both of these are pretty portable:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import platform\nplatform.node()\n\nimport socket\nsocket.gethostname()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Any solutions using the HOST or HOSTNAME environment variables are not portable.", "Even if it works on your system when you run it, it may not work when run in special environments such as cron."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "HOST", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "HOSTNAME", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["If I'm correct, you're looking for the socket.gethostname function:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt; import socket\n&gt;&gt; socket.gethostname()\n'terminus'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["socket.gethostname() could do"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "socket.gethostname()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You could import the os module and pull it out of the environment via os.getenv:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "os module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/os.html"}, {"href": "http://docs.python.org/library/os.html#os.getenv", "text": "os.getenv", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n import os\nsystem_name = os.getenv('HOSTNAME')\n</code>\n</pre>\n", "senID": 1}], [{"text": ["What about :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import platform\n\nh = platform.uname()[1]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Actually you may want to have a look to all the result in platform.uname()"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "platform.uname()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]