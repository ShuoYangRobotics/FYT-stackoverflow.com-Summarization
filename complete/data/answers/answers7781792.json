[[{"text": ["I have made good experiences using:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "time.sleep(seconds)", "tag": "none", "senID": 1}, {"text": "webdriver.Firefox.implicitly_wait(seconds)", "tag": "none", "senID": 2}]}, {"text": ["The first one is pretty obvious - just wait a few seconds for some stuff."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["For all my Selenium Scripts the sleep() with a few seconds (range from 1 to 3) works when I run them on my laptop, but on my Server the time to wait has a wider range, so I use implicitly_wait() too.", "I usually use implicitly_wait(30), which is really enough."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["in C#:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n public WebDriverWait _wait;\n_wait.Until(d =&gt; d.FindElement(By.XPath(\"//XPath to the first cell of your table\")));\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or use something else instead XPath."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["See also "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "See also", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://readthedocs.org/docs/selenium-python/en/latest/"}]}], [{"text": ["Use Wait Until Page Contains Element with the proper XPath locator.", "For example, given the following HTML:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Wait Until Page Contains Element", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &lt;body&gt;\n  &lt;div id=\"myDiv\"&gt;\n    &lt;table class=\"myTable\"&gt;\n      &lt;!-- implementation --&gt;\n    &lt;/table&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["... you can enter the following keyword:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n Wait Until Page Contains Element  //table[@class='myTable']  5 seconds\n</code>\n</pre>\n", "senID": 3}, {"text": ["Unless I missed something, there is no need to create a new function for this."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["In case this helps ..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In the Selenium IDE, I added ...\n  Command: waitForElementPresent\n  Target: //table[@class='pln']"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Then I did File>Export TestCase As Python2(Web Driver), and it gave me this ..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def test_sel(self):\n    driver = self.driver\n    for i in range(60):\n        try:\n            if self.is_element_present(By.XPATH, \"//table[@class='pln']\"): break\n        except: pass\n        time.sleep(1)\n    else: self.fail(\"time out\")\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I implemented the following for python for wait_for_condition since the python selenium driver does not support this function."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def wait_for_condition(c):\nfor x in range(1,10):\n    print \"Waiting for ajax: \" + c\n    x = browser.execute_script(\"return \" + c)\n    if(x):\n        return\n    time.sleep(1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["to be used as"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Wait that an ExtJS Ajax call is not pending:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n wait_for_condition(\"!Ext.Ajax.isLoading()\")\n</code>\n</pre>\n", "senID": 4}, {"text": ["A Javascript variable is set"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n wait_for_condition(\"CG.discovery != undefined;\")\n</code>\n</pre>\n", "senID": 6}, {"text": ["etc."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["From the Selenium Documentation PDF :"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Selenium Documentation PDF", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://seleniumhq.org/docs/book/Selenium_Documentation.pdf"}]}, {"code": "<pre>\n<code>\n import contextlib\nimport selenium.webdriver as webdriver\nimport selenium.webdriver.support.ui as ui\n\nwith contextlib.closing(webdriver.Firefox()) as driver:\n    driver.get('http://www.google.com')\n    wait = ui.WebDriverWait(driver,10)\n    # Do not call `implicitly_wait` if using `WebDriverWait`.\n    #     It magnifies the timeout.\n    # driver.implicitly_wait(10)  \n    inputElement=driver.find_element_by_name('q')\n    inputElement.send_keys('Cheese!')\n    inputElement.submit()\n    print(driver.title)\n\n    wait.until(lambda driver: driver.title.lower().startswith('cheese!'))\n    print(driver.title)\n\n    # This raises\n    #     selenium.common.exceptions.TimeoutException: Message: None\n    #     after 10 seconds\n    wait.until(lambda driver: driver.find_element_by_id('someId'))\n    print(driver.title)\n</code>\n</pre>\n", "senID": 1}]]