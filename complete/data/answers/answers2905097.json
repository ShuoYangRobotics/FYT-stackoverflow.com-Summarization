[[{"text": ["You could use PL/Python to write a PostgreSQL function to manipulate the data."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.postgresql.org/docs/current/static/plpython.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.postgresql.org/docs/current/static/plpython.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.postgresql.org/docs/current/static/plpython.html"}]}, {"text": ["Although tbh I think it's much of a muchness compared to processing it in an external client for most cases."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I'm not sure I understand what you mean, but I'd say it sounds very much like"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n INSERT INTO anothertable SELECT stuff FROM the_table RETURNING *\n</code>\n</pre>\n", "senID": 1}, {"text": ["and then work on the returned rows.", "That is, of course, if you don't want to modify the data when you manipulate it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Not the only way (see the other answers) but IMHO the best and certainly the simplest.", "It just requires a PostgreSQL librray (I use psycopg).", "The standard interface is documented in PEP 249."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "psycopg", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://initd.org/pub/software/psycopg/"}, {"text": "PEP 249", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0249/"}]}, {"text": ["An example of a SELECT with psycopg:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "SELECT", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n cursor.execute(\"SELECT * FROM students WHERE name=%(name)s;\", \n               globals())\n</code>\n</pre>\n", "senID": 2}, {"text": ["and an INSERT:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "INSERT", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n cursor.execute(\"INSERT INTO Foobar (t, i) VALUES (%s, %s)\", \n               [\"I like Python\", 42])\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I'd think about using http://www.sqlalchemy.org/."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.sqlalchemy.org/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}]}, {"text": ["It supports postgres, too - http://www.sqlalchemy.org/docs/05/reference/dialects/postgres.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.sqlalchemy.org/docs/05/reference/dialects/postgres.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/docs/05/reference/dialects/postgres.html"}]}], [{"text": ["Using an ORM like SQLAlchemy can abstract away the low level SQL stuff.", "Whether this is more \"efficient\" is debatable; it should certainly make things easier to code, though."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SQLAlchemy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}]}], [{"text": ["You could use an ORM such as SQLAlchemy to retrieve the data into an \"object\", and manipulate that object.", "Such an implementation would probably be more elegant than just using an array."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SQLAlchemy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}]}], [{"text": ["I agree with the SQL Alchemy suggestions or using Django's ORM.", "Your needs seem to simple for PL/Python to be used. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]