[[{"text": ["It's not necessary to unpack and repack the tuples returned by zip:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n '\\n'.join(' '.join(x) for x in zip(a, b))\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; a = ['foo1', 'foo2', 'foo3']\n&gt;&gt;&gt; b = ['bar1', 'bar2', 'bar3']\n&gt;&gt;&gt; for i in zip(a,b):\n...   print ' '.join(i)\n...\nfoo1 bar1\nfoo2 bar2\nfoo3 bar3\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The zip function \"returns a list of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "zip function", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#zip"}]}, {"code": "<pre>\n<code>\n def combine_to_lines(list1, list2):\n    return '\\n'.join([' '.join((a, b)) for a, b in zip(list1, list2)])\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Are you asking about the zip function?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "zip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#zip"}]}], [{"text": ["Here's a one-liner.", "Could do x + ' ' + y if you were so inclined, not sure if it would be slower or not."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "x + ' ' + y", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = ['foo1', 'foo2' , 'foo3']\n&gt;&gt;&gt; b = ['bar1', 'bar2', 'bar3']\n&gt;&gt;&gt; '\\n'.join(' '.join([x,y]) for (x,y) in zip(a,b))\n'foo1 bar1\\nfoo2 bar2\\nfoo3 bar3'\n&gt;&gt;&gt; print _\nfoo1 bar1\nfoo2 bar2\nfoo3 bar3\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n '\\n'.join(((str(x) + ' ' + str(y)) for (x, y) in zip(a, b)))\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Simple as:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \" \".join([a[x] + \" \" + b[x] for x in range(len(a))])\n</code>\n</pre>\n", "senID": 1}]]