[[{"text": ["Django is not a web server, but a web application framework."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you want a bare-bones Python webserver capable of some dynamic and some static content, have a look at CherryPy."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "CherryPy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cherrypy.org/"}]}], [{"text": ["Use mod_wsgi to embed Python in Apache.", "It works very, very well."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "mod_wsgi", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/"}]}, {"text": ["\"However, from what I gathered (I may be wrong) you have to do more low-level stuff with WSGI than with PHP.", "So I researched about Django, but it seems too complex for what I want."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Werkzeug is a great little python tool (werkzeug) that works with mod_wsgi for creating simple apps that dont need database backends with CMS's, such as calculators ..", "They've even got a nifty screencast where they create a simple wiki in 30 minutes.  "], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Werkzeug", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://werkzeug.pocoo.org/"}, {"text": "screencast", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://werkzeug.pocoo.org/wiki30/"}]}, {"text": ["You can always add something like SQLAlchemy/FormAlchemy later on if you eventually do want to have a ORM and CMS."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Avoid mod_python tho, it's got a pretty big memory footprint and it's actually a bit harder to install and set up than mod_wsgi, in my opinion."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["To use python with your Apache server you need to install mod_python the following links should help you out a bit."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["http://httpd.apache.org/modules/python-download.cgi"], "childNum": 0, "tag": "a", "senID": 1, "childList": []}, {"text": ["http://www.modpython.org/"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}]}], [{"text": ["If it's truly a development server you're setting up, and not a machine that will be promoted to production at some point, Django has a built-in development webserver that requires no Apache configuration. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "built-in development webserver", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/intro/tutorial01/#the-development-server"}]}, {"text": ["Your observation about the low-level work reflects some of the differences between PHP and Python.", "PHP is a language designed from the start for the primary purpose of making web pages.", "Python is a language.", "Mod_Python and Mod_WSGI give the input to/output from that language a way to live in a web request/response environment.", "Django adds web-aware framework conveniences."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You mention that python seems too complex for what you want, which rather begs the question: what do you want?", ":-)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Here is a live document about serving django apps http://lincolnloop.com/django-best-practices/deployment/servers.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://lincolnloop.com/django-best-practices/deployment/servers.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://lincolnloop.com/django-best-practices/deployment/servers.html"}]}]]