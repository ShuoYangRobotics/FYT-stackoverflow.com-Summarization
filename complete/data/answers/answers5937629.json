[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; string = 'Milk, Cheese, Bottle'\n&gt;&gt;&gt; dict((key, None) for key in string.split(', '))\n{'Cheese': None, 'Milk': None, 'Bottle': None}\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; s = \"Milk, Cheese, Bottle\"\n&gt;&gt;&gt; d = dict.fromkeys(s.split(', '),\"NULL\")\n&gt;&gt;&gt; d\n{'Cheese': 'NULL', 'Milk': 'NULL', 'Bottle': 'NULL'}\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n dict.fromkeys((k.strip() for k in \"Milk, Cheese, Bottle\".split(',')), 'NULL')\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n s = 'Milk, Cheese'\nd = { }\nfor s in s.split(', '):\n    d[s] = 'NULL'\n</code>\n</pre>\n", "senID": 0}, {"text": ["You can also use dictionary comprehensions in the latest Python versions:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n s = 'Milk, Cheese'\nd =  {key:'NULL' for key in s.split(', ')}\n</code>\n</pre>\n", "senID": 2}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; from collections import defaultdict:\n &gt;&gt;&gt; s = \"Milk, Cheese, Bottle\"\n &gt;&gt;&gt; j = s.split(',')\n &gt;&gt;&gt; d = defaultdict()\n &gt;&gt;&gt; for k in j:\n     d[k]= 'NULL'\n &gt;&gt;&gt; dict(d)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["This is essentially the same solution as Zaur Nasibov's, but using list comprehension to run the for loop in fewer lines"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = \"Milk, Cheese, Bottle\"\nd = dict((i, None) for i in [i.strip() for i in s.split(',')])\n\n&gt;&gt;&gt; print d\n{'Cheese': None, 'Milk': None, 'Bottle': None}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Hope this helps"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]