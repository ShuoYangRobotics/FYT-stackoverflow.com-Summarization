[[{"text": ["You could use str.translate with the appropriate map, for example like this:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "str.translate", "tag": "a", "pos": 0, "childList": [{"text": "str.translate", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/stdtypes.html#str.translate"}, {"text": "str.translate", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; mpa = dict.fromkeys(range(32))\n&gt;&gt;&gt; 'abc\\02de'.translate(mpa)\n'abcde'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Your implementation is wrong because the value of i is incorrect.", "However that's not the only problem: it also repeatedly uses slow string operations, meaning that it runs in O(n2) instead of O(n).", "Try this instead:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "2", "childNum": 0, "tag": "sup", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n return ''.join(c for c in line if ord(c) &gt;= 32)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You modify the line during iterating over it.", "Something like ''.join([x for x in line if ord(x) &gt;= 32])"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "''.join([x for x in line if ord(x) &gt;= 32])", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["It probably won't work because you're changing the underlying string as you process it.", "This probably isn't the modern Pythonic way to do it but I still prefer readable simple solutions unless there's and over-riding reason to do otherwise:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def removeControlCharacters(line):\n    newln = \"\"\n    for c in line:\n        if c &gt;= chr(32):\n            newln = newln + c\n    return newln\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n filter(string.printable[:-5].__contains__,line)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["And for Python 2, with the builtin translate:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "translate", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import string\nall_bytes = string.maketrans('', '')\n\nline.translate(all_bytes, all_bytes[:32])  # All bytes &lt; 32 are deleted (second argument)\n</code>\n</pre>\n", "senID": 1}]]