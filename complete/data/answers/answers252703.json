[[{"text": ["append adds an element to a list, extend concatenates lists together."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "append", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "extend", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; li = ['a', 'b', 'mpilgrim', 'z', 'example']\n&gt;&gt;&gt; li\n['a', 'b', 'mpilgrim', 'z', 'example']\n&gt;&gt;&gt; li.append(\"new\")               \n&gt;&gt;&gt; li\n['a', 'b', 'mpilgrim', 'z', 'example', 'new']\n&gt;&gt;&gt; li.insert(2, \"new\")            \n&gt;&gt;&gt; li\n['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new']\n&gt;&gt;&gt; li.extend([\"two\", \"elements\"]) \n&gt;&gt;&gt; li\n['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new', 'two', 'elements']\n</code>\n</pre>\n", "senID": 1}, {"text": ["From Dive into Python."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Dive into Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.diveintopython.org/native_data_types/lists.html#d0e5887"}]}], [{"text": ["append:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n x = [1, 2, 3]\nx.append([4, 5])\nprint (x)\n</code>\n</pre>\n", "senID": 1}, {"text": ["gives you [1, 2, 3, [4, 5]]"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "[1, 2, 3, [4, 5]]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["extend:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n x = [1, 2, 3]\nx.extend([4, 5])\nprint (x)\n[1, 2, 3, 4, 5]\n</code>\n</pre>\n", "senID": 4}], [{"text": ["And in this context it can also be good to remember that strings are also iterable."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = [1, 2]\n&gt;&gt;&gt; a\n[1, 2]\n&gt;&gt;&gt; a.extend('hey')\n&gt;&gt;&gt; a\n[1, 2, 'h', 'e', 'y']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Good answers, but don't forget, any iterable will do for extend (not just list):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n l.extend(xrange(5))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["append appends a single element.", "extend appends a list of elements."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "append", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "extend", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Note that if you pass a list to append, it still adds one element:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; a.append([4, 5, 6])\n&gt;&gt;&gt; a\n[1, 2, 3, [4, 5, 6]]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Like Ali A said, any iterable will do for the extend,\nhere is an example for dictionary argument,"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Ali A", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; li=[1,2,3]\n&gt;&gt;&gt; li.extend({4:5,6:7})\n&gt;&gt;&gt; li\n[1, 2, 3, 4, 6]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}, {"text": ["as you see it ,only keys are added to the list."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "keys", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]]