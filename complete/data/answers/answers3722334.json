[[{"text": ["At the time JavaScript was designed, Python would have been at a very immature stage (1.2-ish) and Ruby wouldn't have existed at all.", "What we consider a modern scripting language now didn't exist then.", "Python didn't gain Unicode support (vital for a web browser) until version 1.6, several years later; Ruby... well, yeah."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The dominant scripting language then was Perl.", "Let us be thankful Eich didn't copy that."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "that", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Technically, a language for execution on the client side needs strong sandboxing capabilities that CPython and Ruby don't have.", "Whilst Python can be integrated into IE via the Windows Scripting Host, doing so completely hoses your security.", "It is not trivial to create a sandboxed version of a language that wasn't designed for it."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "can", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["No, none whatsoever, even in a restricted form that solved the security problems.", "Even Microsoft couldn't make VBScript for the web catch on.", "JavaScript is the language that works everywhere; you aren't going to be able to beat that inertia."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["At this point we must concentrate on improving the language.", "The standardisation of ECMAScript Fifth Edition is a big step forward, offering new methods that really help with writing terse code that passes around functions like Ruby blocks.", "And Mozilla's JavaScript implementation offers some interesting new features like Python-style generators.", "(On the other hand, it also supports E4X, a vile pox on the language, so whatever."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["JS is not so bad, written tastefully.", "Of course, the majority of code out there, and in tutorials, is anything but tasteful.", "But that's hardly a problem limited to JS."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Microsoft does allow you to use a lot of different languages on the browser -- with the newest Silverlight add-on (not sure if this yet includes dynamic languages like Python and Ruby, for which MS does have strong implementations known as IronPython and IronRuby; I believe, at least, the plan is to support that, if they're not supported yet)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["But most people apparently aren't biting, despite MS's popularity -- they'd rather stick to pages done in Javascript (or Flash, Actionscript, much of a muchness), that despite some past security glitches seem to be safely and soundly \"sandboxed\" now, meaning that no badly-intentioned website author can use them to read your private files (or online banking passwords, etc, etc) and send them back to evil guys for their use.", "I suspect some of the security worries may hark back to MS's biggest attempt to allow browsers (or at least specifically their Internet Explorer) to run a lot more code -- the Active/X \"controls\"... which were \"barely sandboxed if at all\" in some ways.", "Maybe this time they've got it right, but (much as this may frustrate web programmers) you can't blame people for not being all that willing to put their identities and livelihoods at (perceived) risk."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Javascript, for all of its problems (and Actionscript, a somewhat similar language) at least were designed from the start to be \"sandboxed\"; Python and Ruby, despite and in some sense because of being \"stronger\" languages, were never really designed to be sandboxed... and the difficulty of retrofitting \"sandboxing\" into a general-purpose language can be evinced from the fact that Python, for example, after many years and many releases attempting to support a \"restricted execution mode\", has at last finally and totally given up on it (as far as the official releases from the Python Software Foundation are concerned, at least -- of course this needs not curtail the possibility of completely different releases such as Microsoft's IronPython, PyPy, Jython, Pynie, &amp;c, but it is, at least, disappointing;-)."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "because of", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "is", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["Google's \"Native Client\" technology is a hopefully-revolutionary attempt to allow running native code on the client (via the browser) while maintaining sandboxing and security: should that mature to a ripe and well-accepted technology, then of course (since even, say, C or assembly language would be so safely supported!", "), Python or Ruby would be no problem at all."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "\"Native Client\"", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/nativeclient/"}, {"text": "native code", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "that", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["It's early to say if it will live up to its promise, of course (I'm biased, being a personal friend with several of the developers;-) -- it does have the advantage of being an open-source technology, so any security weaknesses stand a better chance to be spotted by \"white hat\" guys (as they were in, say, Python's rexec idea) rather than lying hidden until spotted and exploited by the guys in black hats (as typically happens with proprietary, closed-source technologies).", "I don't quite share Eric Raymond's enthusiasm in proclaiming \"given enough eyes, all bugs are shallow\"... but I do see where he's coming from, and I suspect that, at least where security/sandboxing is concerned, he may have a point!-)"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "and exploited", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "may", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["Because it would be a pain in the ass. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pain in the ass", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 4, "lis": [{"text": ["Do you think browser vendors will\nwant to bundle and maintain two or\nthree languages just because\nJavascript is \"ugly\"? "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Does it not create an additional\ndependency? "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Wouldn't you think it would create more\ncross browser or per-implementation issues? "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "more", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["This has been tried before in Internet Explorer.", "IE supports VB (and possibly C#) as a scripting language.", "Why don't Firefox or Chrome support them?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]}, {"text": ["Do the benefits, if any, that these languages will supposedly bring justify all this?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["The Ruby/Python of the browser is CoffeeScript, yummy."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Yahoo has a browser add-on called BrowserPlus that lets you create client-side web apps with Ruby.", "This is because BrowserPlus comes with a Ruby interpreter.", "They've had it for years, but it seems that not very many people know about it.", "Its architecture with plug-in services doesn't preclude someone writing a Python service the way they have implemented the Ruby service."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "BrowserPlus", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://browserplus.yahoo.com/"}]}, {"text": ["The fact that Ruby is a part of it is somewhat hidden.", "At the bottom of their PhotoDrop demo they have a blurb about Ruby (copied here):"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "PhotoDrop demo", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://browserplus.org/demos/PhotoDrop.html"}]}], [{"text": ["Have a look at Pyjamas."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pyjamas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyjs.org/"}]}], [{"text": ["You can think of JavaScript as a kind of generic, cross-platform byte code that all browsers agree to support at a minimum.", "Whether it was a good choice for this purpose is debatable, but being that we have agreed on this standard it's much easier to just target your applications to the existing standard rather than invent a new one.", "Some projects, such as GWT, have made JavaScript the compilation target of another language, to get advantages such as static typechecking which JavaScript lacks."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "GWT", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.google.com/webtoolkit/"}]}], [{"text": ["First, there's the cross-browser compatibility wall in the way: for a language in a browser to be useful in general, it needs to be supported on the vast majority of users' browsers.", "We're only now making progress towards eliminating IE6.", "Even if some momentum happened within Firefox and some other browsers to, say, implement Python as a browser scripting language, the likelihood of all major browsers deciding to implement it is near-zero; and even if they do, it would be 5-10 years before it was widely-deployed enough to use in the real world."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "IE6", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["JavaScript, as a language (distinct from the API), is pretty clean.", "Its syntax is entirely textbook, which any experienced developer of other modern languages can read immediately and start writing code for in minutes.", "Creating objects is straightforward, closures work as you'd expect, and so on.", "There's nothing remarkable about it, but it's essentially the most straightforward implementation of a high-level scripting language."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "language", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["The benefits of offering alternatives to it browser-side simply aren't overwhelming.", "The only time I could see a significant benefit is where it's possible to actually share code between the server-side and client-side, but that'll never be enough to gain the momentum necessary to get either language widely adopted into browsers."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "share", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["(I should note that the costs really aren't strongly related to browser compatibility.", "Most of the cross-browser issues with JavaScript are library issues--differences in the DOM implementation--rather than issues with the JavaScript language.", "Implementing another language wouldn't require a new DOM library, just a set of language bindings to the new language.", "That's nontrivial, but it's far more likely to lead to the same behavior in both languages--and the same set of bugs--rather than the entirely new set of bugs you'd create if you created an entirely new library."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "library", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["Most probably for historical reason and help standards adoption.", "You also now have javascript engines that are used in many different browsers, it probably makes no sense (business speaking) to implement other languages and have no user base."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Another thing to consider is all the browsers available.", "Let say you write your client side in Python, and only a little percentage of the user base can execute it because they all have different browsers/engines not supporting this language.", "You're screwed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["ref: http://en.wikipedia.org/wiki/JavaScript"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://en.wikipedia.org/wiki/JavaScript", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/JavaScript"}]}], [{"text": ["Interactive Ruby and Python REPLs are already available on the web.", "I think if the repl works in the browser, there is some chance to make DOM bindings for them and use in browsers, though resulting js file to support that would be really huge."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "available", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://repl.it/"}]}, {"text": ["All the magic is by Emscripten, a LLVM to JS compiler.", "That's actually the faster way I think, though ruby/python ain't gonna be super-fast this way."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Emscripten", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/kripken/emscripten"}]}, {"text": ["And if you enjoy Ruby and Python so much, why not to write CoffeeScript?", "It's kinda JS with more clean python-and-ruby-like syntax and some cool features, like painless object-oriented development and so.", "Mixed with Underscore.js it can be even more python/ruby like. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["A better question would be, why don't we have a standardized byte code and virtual machine to compile to so we can write our client side web apps in any language?", "The answer is that we did, they were called Java applets.", "So why did Java applets fail and Javascript succeed?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "did", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"tag": "ul", "num": 4, "lis": [{"text": ["Java applets were slooooow.", "I recall trying to run a Java demo on my 386 in 1996.", "It wasn't fun.", "JIT has made Java faster since then, and hardware has gotten a LOT faster."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Javscript was initially used for little trival things like mouse rollover animations and form validations.", "These were small so performance wasn't an issue.", "Linking a fat bytecoded class file to a web page would be overkill."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["You can learn Javascript by looking at the code on a page.", "You couldn't do that with class files."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I don't think early applets had access to the page DOM, so you were stuck with what you could do in a little window embedded on the page.", "HTML itself was by and large so new that the idea of dynamically changing HTML had barely been considered."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]}, {"text": ["So in part it's a path dependency issue (in the progress-of-science sense, not the filesystem sense).", "As other people have said, supporting other langauges at the syntax level by and large kills the benefits of having a standard language, even if that language is Javascript."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Essentially, netscape invented javascript.", "Microsoft quickly implemented it as JScript in IE so that it could properly render sites written for netscape (at the time, the predominate browser).", "It was standardized as ECMAScript.", "As other posters have mentioned, several browser vendors are working on technology to allow multiple languages to be used but this will likely fail (for the internet at least) for two reasons."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["There is a different attitude now towards cross browser compatibility.", "In the bad old days, when a browser implemented a proprietary extension, incompetent webmasters would gladly use them and slap \"Best Viewed in Browser X\" on their site.", "Now, cross browser compatibility is given it's rightful place as high priority"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In light of the above, for such a scheme to succeed, all major rendering engines (Trident, WebKit, Gecko) would have to incorporate it for it to see any use.", "Good luck getting them to agree on anything."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "all", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]}, {"text": ["This is not to say that there wouldn't be use for this technology in an intranet where the IT department can dictate the browser but I doubt that such a thing would happen on the internet any time soon."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Also, despite it's warts, javascript is a very nice language."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Probably because JavaScript is \"good enough\".", "Now that JavaScript has gained more momentum from the browser vendors I dare to say that it is the \"fastest\" dynamic scripting language.", "Much research is going on there at the moment.", "The more time passes, the less likely it will be that browser vendors implement another language."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you can't stand how JavaScript looks and want to have that nice Ruby-like look, try CoffeScript."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "CoffeScript", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jashkenas.github.com/coffee-script/"}]}], [{"text": ["Google is making a new attempt to offer a JS alternative with Dart.", "They have also mentioned the possibility of supporting other languages, though it's unclear if they are shooting for them to be cross compiled to Dart or if there are plans to host their respective VMs in Chrome.", "As per this post on the Dart GGroup:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Dart", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://groups.google.com/a/dartlang.org/group/misc/browse_thread/thread/6d8c441b2a1288f7#"}, {"text": "post", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "https://groups.google.com/a/dartlang.org/group/misc/browse_thread/thread/49859ec5588c35e8#"}]}, {"text": ["In any case cross browser support for these languages ultimately depends on either cross compilation to JS or for other Browser dev companies to be as forward looking as G."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["It's been done: Guido wrote a web browser which let you write applets in Python."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "wrote a web browser", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Grail_%28web_browser%29"}]}, {"text": ["It was a neat toy, back in the day, and there's no technical reason why it couldn't have been done in other browsers.", "I think there's simply a lack of motivation for anybody to do all the legwork required to integrate an entire new programming runtime like Python (or Ruby, or anything else) into an already-huge program like Firefox."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Your question comes at a good time.", "Google is now working to enhance WebKit (the FOSS code behind of Chrome and Safari) to enable running languages, like Python, Ruby, and Dart, in the browser.", "In other words, Google is trying to break the Javascript monopoly on browser programming. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Google is approaching this as an experiment, to see if it's possible and beneficial.", "Their work is on a WebKit branch.", "If the experiment succeeds, Google will add it to Chrome and try to persuade other browsers makers to follow.", "Google wants developers to have a choice of programming languages, across all browsers. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["So far, Mozilla, Apple, and Microsoft have shown little interest.", "Surprisingly, Mozilla is against this innovation.", "Mozilla's CTO invented Javascript.", "It doesn't take a psychologist to see that ego could cloud his vision on this issue.", "Otherwise, it's hard to figure why Mozilla would be against browser/web innovation and competition when it comes to Javascript.", "But Firefox's popularity is fading fast.", "So Mozilla's opposition may not matter much. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Microsoft and Apple have different reasons for opposing browser innovation.", "Better programming languages will make web apps faster to write, easier to maintain, and offer more features to users.", "This will cause developers and users to move away from native apps and more toward rich, powerful web apps.", "Apple and Microsoft fear this.", "They want developers and users locked-in to their native apps. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Even though Apple and Microsoft will fight hard against improved browser programming languages, Google has the right idea and the resources to prevail.", "Eventually openness,  innovation, and healthy competition will win out.", "The Javascript monopoly will be broken.", "Developers will have a choice."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["There isn't a technical obstacle to running any particular language that way (not really).", "In fact, even years ago, it was not very hard to run a whole virtual operating system under IE6(!", ") no less;\none person could implement it in a month or so."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["JavaScript can be used as a VM to run Ruby/Python/etc in the browser.", "There is a project called HotRuby that is trying to do something like that (it also uses Flash) and for Python there's PEJS."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "HotRuby", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://hotruby.yukoba.jp/"}, {"href": "http://code.google.com/p/pejs/", "text": "PEJS", "childNum": 0, "tag": "a", "childList": []}]}]]