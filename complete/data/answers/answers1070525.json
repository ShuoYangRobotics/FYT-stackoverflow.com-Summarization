[[{"text": ["You need this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.environ['ORACLE_HOME'] = '/oracledb/10.2.0/'\nos.environ['LD_LIBRARY_PATH'] = '/oracledb/10.2.0/lib'\n</code>\n</pre>\n", "senID": 1}, {"text": ["instead of using os.putenv() because os.putenv() doesn't update os.environ, which cx_Oracle is presumably looking at."], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "os.putenv()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "os.putenv()", "childNum": 0, "tag": "code", "childList": []}, {"text": "os.environ", "childNum": 0, "tag": "code", "childList": []}, {"text": "cx_Oracle", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Documentation: Miscellaneous operating system interfaces says: \"Note: Calling putenv() directly does not change os.environ, so it\u2019s better to modify os.environ."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "Miscellaneous operating system interfaces", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/os.html"}, {"text": "\"Note: Calling putenv() directly does not change os.environ, so it\u2019s better to modify os.environ.\"", "childNum": 0, "tag": "em", "childList": []}]}], [{"text": ["You can eliminate the problem altogether if you eliminate the need to set the environment variables.", "Here's a note on how to do this by installing the Oracle Instant Client on your box."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://stackoverflow.com/questions/764871/installing-oracle-instantclient-on-linux-without-setting-environment-variables"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://stackoverflow.com/questions/764871/installing-oracle-instantclient-on-linux-without-setting-environment-variables", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/764871/installing-oracle-instantclient-on-linux-without-setting-environment-variables"}]}], [{"text": ["From just a short google on the problem, it could be that your problem is related to the the ending / in ORACLE_HOME.", "Try removing it (and using also suggestion from Richie) and see if it works."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "google", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://osdir.com/ml/python.db.cx-oracle/2006-01/msg00007.html"}, {"text": "/", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "ORACLE_HOME", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}], [{"text": ["You could use a shell script to implement the CGI, set the environment variables in the shell script and call the python script from the shell script."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Setting environment variables from within python seems  to be a tricky thing, especially when you are dealing with how libraries are loaded..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I've managed to solve the problem."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Somehow the user and group that apache was using didn't have access to the environment variables.", "I solved the problem by changing the user and group that apache was using to a user that I was certain to have access to this variables. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It's strange (and frustrating) that it's so difficult to set this variables using Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Thanks to everyone that answered my question!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Are your statements out of order?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python \nimport os \nos.putenv('ORACLE_HOME', '/oracledb/10.2.0/') \nos.putenv('LD_LIBRARY_PATH', '/oracledb/10.2.0/lib') \n\nimport cx_Oracle \nimport defs as df \n\ncon = cx_Oracle.Connection(df.DB_USER, df.DB_PASS, df.DB_SID) \nprint con\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This is working for me:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.putenv('ORACLE_HOME', '/oracle/client/v10.2.0.3-64bit')\nos.putenv('LD_LIBRARY_PATH', '/oracle/client/v10.2.0.3-64bit/lib')\nos.environ['ORACLE_HOME'] = '/oracle/client/v10.2.0.3-64bit'\nos.environ['LD_LIBRARY_PATH'] = '/oracle/client/v10.2.0.3-64bit/lib'\n</code>\n</pre>\n", "senID": 1}, {"text": ["Mind that first putenv, then update environ."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The actual question why the questioner's code did not work has not yet been answered."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The answer is that the environment variable LD_LIBRARY_PATH is only evaluated when an application is started (in this case the Python interpreter).", "When Python has started, it is already too late to mess with this variable; and it doesn't matter at all whether you set it using os.environ or os.putenv (but generally the former should be used)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The solution is to set the LD_LIBRARY_PATH environment variable in a wrapper script that starts the Python script, or to start Apache with that environment variable already set.", "On OpenSUSE, you can do the latter by setting LD_LIBRARY_PATH in /etc/sysconfig/apache2, for instance."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["By the way, the same problem exists when using mod_wsgi instead of a CGI script.", "See the section \"Unable To Find Python Shared Library\" on the mod_wsgi Installation Issues page."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Installation Issues", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/wiki/InstallationIssues"}]}], [{"text": ["Don't forget adding env module for apache:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "env", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n a2enmod env\n</code>\n</pre>\n", "senID": 1}, {"text": ["in .htaccess or apache configuration:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n SetEnv LD_LIBRARY_PATH /oracle_lib_path\n</code>\n</pre>\n", "senID": 3}, {"text": ["in /etc/apache2/envvars doesn't work"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]]