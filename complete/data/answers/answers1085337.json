[[{"text": ["Pynq implements expression trees:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://wiki.github.com/heynemann/pynq"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://wiki.github.com/heynemann/pynq", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.github.com/heynemann/pynq"}]}], [{"text": ["I'm not an expert, but the Dejavu people claims Dejavu makes much of what LINQ does, and did it way before LINQ.", "Could be worth checking out:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://us.pycon.org/2009/conference/schedule/event/70/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://us.pycon.org/2009/conference/schedule/event/70/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://us.pycon.org/2009/conference/schedule/event/70/"}]}], [{"text": ["If you are looking for an ORM then there is SQLAlchemy"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SQLAlchemy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}]}], [{"text": ["I don't know much about Linq but you may be interested in this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://code.activestate.com/recipes/442447/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.activestate.com/recipes/442447/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/442447/"}]}, {"text": ["It allows using generator expressions to query an SQL database."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You may want to look at kalamar: http://dyko.org/api/kalamar.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://dyko.org/api/kalamar.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://dyko.org/api/kalamar.html"}]}, {"text": ["It is an unified data access library using a syntax more or less similar to linq for accessing data stored in different format (xml, mp3, ...) on heterogeneous backend (files, sql, ...)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I haven't used it yet, but this shows promise:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]