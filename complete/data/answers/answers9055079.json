[[{"text": ["Don't use 'dict' as a variable name, it will shadow the builtin dict() function."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list1 =['a','b','c','d']\nd = {'a':24, 'b':53 ,'c':26, 'd':9}\nnew_list = [d[k] for k in list1]\nassert new_list == [24, 53, 26, 9]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Assuming all the elements in list1 are keys in dict, this is the simplest solution I can think of :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list1 =['a','b','c','d']\nnew_list = []\ndict = {'a':24, 'b':53 ,'c':26, 'd':9}\n\nfor it in list1:\n    new_list.append(dict[it])\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n list1 =['a','b','c','d']\nd = {'a':24, 'b':53 ,'c':26, 'd':9}\nnew_list = map(lambda x: d[x], list1)\n</code>\n</pre>\n", "senID": 0}, {"text": ["or if you really need to append instead of replacing:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n new_list.extend(map(lambda x: d[x], list1))\n</code>\n</pre>\n", "senID": 2}], [{"text": ["What about this?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for key in list1:\n    new_list.append(dict[key])\n\nprint list1\n</code>\n</pre>\n", "senID": 1}, {"text": ["Example output:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [24, 53, 26, 9]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Try this: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n lst = ['a','b','c','d']\ndct = {'a':24, 'b':53 ,'c':26, 'd':9}\nnew_list = [dct[k] for k in lst]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This works:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n list1 =['a','b','c','d']\nd = {'a':24, 'b':53 ,'c':26, 'd':9}\nnew_list=[x[1] for x in dict.items()]\noutput=[24, 26, 53, 9]\n</code>\n</pre>\n", "senID": 1}]]