[[{"code": "<pre>\n<code>\n User_Input_list = User_input.split()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The easiest solution is probably to use split:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "split", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"steve at the office\".split()\n['steve', 'at', 'the', 'office']\n</code>\n</pre>\n", "senID": 1}, {"text": ["But this won't remove punctuation, which may or may not be a problem for you:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"steve at the office.\".split()\n['steve', 'at', 'the', 'office.']\n</code>\n</pre>\n", "senID": 3}, {"text": ["You could use re.split() to only pluck out letters:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "re.split()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; re.split('\\W+', 'steve at the office.')\n['steve', 'at', 'the', 'office', '']\n</code>\n</pre>\n", "senID": 5}, {"text": ["But as you can see above you might end up with empty entries to deal with, and things worse when you have more subtle punctuation:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; re.split(\"\\W+\", \"steve isn't at the office.\")\n['steve', 'isn', 't', 'at', 'the', 'office', '']\n</code>\n</pre>\n", "senID": 7}, {"text": ["So you could do some work here to pick a better regular expression, but you'll need to decide how you want to handle text like steve isn't at the 'the office'."], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "steve isn't at the 'the office'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["So to select the right solution for you, you'll have to think about what input you'll get and what output you want."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}], [{"text": ["Basicaly,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["you should do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n User_Input_list = User_input.split(' ')\n</code>\n</pre>\n", "senID": 2}, {"text": ["and that's it..."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"code": "<pre>\n<code>\n User_input = raw_input(\"Please enter a search criterion: \")\nUser_Input_list = User_input.split(\" \")\n</code>\n</pre>\n", "senID": 0}, {"text": ["see:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["http://docs.python.org/library/stdtypes.html"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://docs.python.org/library/stdtypes.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html"}]}], [{"text": ["Do the following"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n User_input = raw_input(\"Please enter a search criterion: \")\n</code>\n</pre>\n", "senID": 1}, {"text": ["User_Input_list = User_input.split()"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "User_Input_list = User_input.split()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You found re already, there is a nice example of splitting a string:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n re.split('\\W+', 'Words, words, words.')\n</code>\n</pre>\n", "senID": 1}, {"text": ["Like this you get all words, all punctuation removed."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]