[[{"text": ["The best-known library is PIL.", "However if you are simply doing basic manipulation, you are probably better off with the Python bindings for ImageMagick, which will be a good deal more efficient than writing the transforms in Python."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "PIL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://effbot.org/zone/pil-index.htm"}, {"text": "ImageMagick", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/ImageMagick"}]}], [{"text": ["You also have an approach to image processing based on \"standard\" scientific modules: SciPy has a whole package dedicated to image processing: scipy.ndimage.", "Scipy is in effect the standard general numerical calculations package; it is based on the de facto standard array-manipulation module NumPy: images can also be manipulated as array of numbers.", "As for image display, Matplotlib (also part of the \"science trilogy\") makes displaying images quite simple."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "SciPy", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "scipy.ndimage", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://docs.scipy.org/doc/scipy/reference/tutorial/ndimage.html"}, {"text": "NumPy", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://numpy.org/"}, {"text": "Matplotlib", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/gallery.html"}, {"href": "http://matplotlib.sourceforge.net/examples/pylab_examples/image_demo3.html", "text": "quite simple", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["SciPy is still actively maintained, so it's a good investment for the future.", "Furthermore, SciPy currently runs with Python 3 too, while the Python Imaging Library (PIL) does not."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Depending on what you mean by \"image processing\", a better choice might be in the numpy based libraries: mahotas, scikits.image, or scipy.ndimage.", "All of these work based on numpy arrays, so you can mix and match functions from one library and another."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "mahotas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://luispedro.org/software/mahotas"}, {"text": "scikits.image", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://scikits.appspot.com/image"}, {"text": "scipy.ndimage", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.scipy.org/SciPyPackages/Ndimage"}]}, {"text": ["I started the website http://pythonvision.org which has more information on these."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pythonvision.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pythonvision.org"}]}], [{"text": ["There is actually a wonderful Python Imaging Library (PIL).", "It gives you the ability to alter existing images, including anti-aliasing capabilities, and create new images with text and such.", "You can also find a decent introductory tutorial in the PIL handbook provided on the aforementioned site."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Python Imaging Library (PIL)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://effbot.org/zone/pil-index.htm"}, {"text": "decent introductory tutorial", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://effbot.org/imagingbook/introduction.htm"}]}], [{"text": ["There's also pycairo, which might be more suitable depending on your needs."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pycairo", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.cairographics.org/pycairo/"}]}], [{"text": ["If you are creating a custom image processing effect, you may find PythonPixels useful.", "http://halfhourhacks.blogspot.com/2008/03/pythonpixels.html\nIt is intended for writing and experimenting with image processing."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://halfhourhacks.blogspot.com/2008/03/pythonpixels.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://halfhourhacks.blogspot.com/2008/03/pythonpixels.html"}]}], [{"text": ["To complete the list: opencv\nhttp://opencv.willowgarage.com/documentation/python/index.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://opencv.willowgarage.com/documentation/python/index.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://opencv.willowgarage.com/documentation/python/index.html"}]}], [{"text": ["I have done some basic image processing in PIL.", "You can check it out on my blog"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://prabhatgodse.blogspot.com/2009/10/fun-with-image-processing-in-python.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://prabhatgodse.blogspot.com/2009/10/fun-with-image-processing-in-python.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://prabhatgodse.blogspot.com/2009/10/fun-with-image-processing-in-python.html"}]}], [{"text": ["VIPS should be fast and uses multiple CPUs:\nhttp://www.vips.ecs.soton.ac.uk/index.php?title=Speed_and_Memory_Use"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.vips.ecs.soton.ac.uk/index.php?title=Speed_and_Memory_Use", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.vips.ecs.soton.ac.uk/index.php?title=Speed_and_Memory_Use"}]}]]