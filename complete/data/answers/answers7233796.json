[[{"text": ["I ... think ... this might be close to what you want:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n res = [z for z in ((x, y[i]) for i in I)]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Itertools can help with this sort of thing:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Itertools", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/itertools.html"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; y = I = range(5)\n&gt;&gt;&gt; x = 'x'\n&gt;&gt;&gt; res = list(itertools.chain.from_iterable((x, y[i]) for i in I))\n&gt;&gt;&gt; res\n['x', 0, 'x', 1, 'x', 2, 'x', 3, 'x', 4]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n res = reduce(tuple.__add__,  [(x, y[i]) for i in I])\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The map style:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n res = []\nmap(res.extend, ((x, y[i]) for i in I))\n</code>\n</pre>\n", "senID": 1}, {"text": ["The reduce style:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n res = reduce(lambda arr, i: arr + [x, y[i]], I, [])\n</code>\n</pre>\n", "senID": 3}], [{"code": "<pre>\n<code>\n sum(([x, y[i]] for i in I), [])\n</code>\n</pre>\n", "senID": 0}, {"text": ["Like bpgergo's, but with lists, and with a simpler way of joining them together."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I think this should do what you are looking for:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; from itertools import chain, izip, repeat\n&gt;&gt;&gt; x = [1, 2]\n&gt;&gt;&gt; y = [['a', 'b'], ['c', 'd']]\n&gt;&gt;&gt; list(chain(*izip(repeat(x), y)))\n[[1, 2], ['a', 'b'], [1, 2], ['c', 'd']]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note that this will have shallow copies of the inner lists (same as other solutions), so make sure you understand the following behavior:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; z = list(chain(*izip(repeat(x), y)))\n&gt;&gt;&gt; z\n[[1, 2], ['a', 'b'], [1, 2], ['c', 'd']]\n&gt;&gt;&gt; x.append(3)\n&gt;&gt;&gt; z\n[[1, 2, 3], ['a', 'b'], [1, 2, 3], ['c', 'd']]\n&gt;&gt;&gt; z[0].append(4)\n&gt;&gt;&gt; z\n[[1, 2, 3, 4], ['a', 'b'], [1, 2, 3, 4], ['c', 'd']]\n&gt;&gt;&gt; y[1].append('e')\n&gt;&gt;&gt; z\n[[1, 2, 3, 4], ['a', 'b'], [1, 2, 3, 4], ['c', 'd', 'e']]\n</code>\n</pre>\n", "senID": 3}]]