[[{"text": ["PyChart \"is a Python library for creating high quality Encapsulated Postscript, PDF, PNG, orSVGcharts."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "PyChart", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://home.gna.org/pychart/"}, {"text": "\"is a Python library for creating high quality Encapsulated Postscript, PDF, PNG, orSVGcharts.\"", "childNum": 1, "tag": "em", "childList": [{"text": "SVG", "tag": "strong"}]}, {"text": "SVG", "childNum": 0, "tag": "strong", "childList": []}]}], [{"text": ["As you're looking for simple line graphics, probably, CairoPlot will fit your needs as it can generate svg output files out of the box.", "Take a look at this."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "CairoPlot", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://linil.wordpress.com/2008/09/16/cairoplot-11/"}, {"text": "this", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://linil.files.wordpress.com/2008/06/cairoplot%5Fdotlineplot.png"}]}, {"src": "http://linil.files.wordpress.com/2008/06/cairoplot%5Fdotlineplot.png?w=450h=300", "tag": "img", "senID": 1}, {"text": ["This example image shows only a few of its capabilities.", "Using the trunk version available at launchpad you'll be able to add a legend box and add axis titles."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "launchpad", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://launchpad.net/cairoplot"}]}, {"text": ["Besides that, using the trunk version, it's possible to generate:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "ul", "num": 5, "lis": [{"text": "DotLine charts (the ones I believe you need)", "tag": "none", "senID": 4}, {"text": "Scatter charts", "tag": "none", "senID": 5}, {"text": "Pie/Donut charts", "tag": "none", "senID": 6}, {"text": "Horizontal/Vertical Bar charts", "tag": "none", "senID": 7}, {"text": "Gantt charts", "tag": "none", "senID": 8}]}], [{"text": ["pyCairo is an option worth looking at."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyCairo", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cairographics.org/pycairo/"}]}], [{"text": ["Here's a general purpose SVG library in Python: pySVG."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pySVG", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codeboje.de/pysvg/"}]}], [{"text": ["Try using matplotlib.", "You can configure it with a SVG backend."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "matplotlib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/"}, {"text": "backend", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://matplotlib.sourceforge.net/faq/installing%5Ffaq.html#what-is-a-backend"}]}], [{"text": ["You can use Graphviz to generate diagrams in SVG format.", "There are Python bindings to Graphviz e.g., pydot -- Python interface to Graphviz's Dot language."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Graphviz", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.graphviz.org/"}, {"text": "pydot", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pydot/"}]}], [{"text": ["svgfig is worth a look:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://code.google.com/p/svgfig/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.google.com/p/svgfig/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/svgfig/"}]}], [{"text": ["svgfig looked like a more substantial project, mentioning several iterations, but the installer gave an error on mac os x.  i'm working with pysvg now, will update later"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Being not exactly related to SVG plots, but searching for the same thing I have found a good source of carefully collected useful info to answer your question:\nhttp://wiki.python.org/moin/NumericAndScientific/Plotting"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://wiki.python.org/moin/NumericAndScientific/Plotting", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/NumericAndScientific/Plotting"}]}], [{"text": ["I have tried to collate a list of available charting libraries(its an ongoing work, wherein i keep updating the list) : http://blizzardzblogs.blogspot.com/2010/12/data-visualization-charts-and.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://blizzardzblogs.blogspot.com/2010/12/data-visualization-charts-and.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://blizzardzblogs.blogspot.com/2010/12/data-visualization-charts-and.html"}]}, {"text": ["I feel that protovis would do the job for you.", "Its "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "light weight, ", "tag": "none", "senID": 2}, {"text": "generates svg (which can be exported easily) and ", "tag": "none", "senID": 3}, {"text": "is javascript", "tag": "none", "senID": 4}]}, {"text": ["So nothing more to learn :)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]]