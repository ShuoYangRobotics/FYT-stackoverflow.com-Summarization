[[{"code": "<pre>\n<code>\n indata = open(from_file).read()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["shutil is the way to do one-liner file copies in Python:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "shutil", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/shutil.html"}]}, {"code": "<pre>\n<code>\n shutil.copy(sys.argv[1], sys.argv[2])\n</code>\n</pre>\n", "senID": 1}, {"text": ["Putting the import shutil, sys on the same line as this one (with a semicolon in-between, of course) would however be stylistically goofy;-)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "import shutil, sys", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Well you can just do \"algebraic substitution,\" right?", "...assuming you don't care about the \"UI\"..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n open(to_file, 'w').write(open(from_file).read())\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I agree with the algebraic substitution mentioned by @dash-tom-bang.", "My functioning Exercise 17 extra credit has 5 lines.", "The operation is being conducted on one line."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["open(to_file, 'w').write(open(from_file).read())"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "open(to_file, 'w').write(open(from_file).read())", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["followed by a simple 'print' for verification feedback"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["print \"File %s copied to %s\" % (from_file, to_file)"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "print \"File %s copied to %s\" % (from_file, to_file)", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I should have a 6th line that replaces the original ''output.close'' but I am confused about how to do this without the ''output'' variable?", "Ahh, since I now have no output variable there is nothing to close."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Ahh, since I now have no output variable there is nothing to close.", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["btw- It is a little spooky for me to see the same exact line typed here that I have worked out and entered myself in gedit.", "Great stuff, I am really enjoying the mental challenge and community support. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit:answered my own question"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["try the following code:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import shutil, sys; shutil.copy(sys.argv[0], sys.argv[2])\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n from sys import argv\nopen(argv[2], 'w').write(open(argv[1]).read())\n</code>\n</pre>\n", "senID": 0}]]