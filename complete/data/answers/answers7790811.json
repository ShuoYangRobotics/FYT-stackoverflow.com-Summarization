[[{"text": ["Do that"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = 'hello ' + my_name + ', how are you doing'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you want to have something similar, you could create a function:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n function parse(str) {\n    var args = [].slice.call(arguments, 1),\n        i = 0;\n\n    return str.replace(/%s/g, function() {\n        return args[i++];\n    });\n}\n</code>\n</pre>\n", "senID": 1}, {"text": ["Usage: "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n s = parse('hello %s, how are you doing', my_name);\n</code>\n</pre>\n", "senID": 3}, {"text": ["This is only a simple example and does not take into account different kinds of data types (like %i, etc) or escaping of %s.", "But I hope if gives you some idea.", "I'm pretty sure there are also libraries out there which provide a function like this."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "%i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "%s", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Try sprintf in JS\n or you could use this gist"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "sprintf in JS", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.diveintojavascript.com/projects/javascript-sprintf"}, {"href": "https://gist.github.com/1138843/a30bb8009a7a2a24ddcaf19c44d0f983d50613c7", "text": "gist", "childNum": 0, "tag": "a", "childList": []}]}], [{"code": "<pre>\n<code>\n var user = \"your name\";\nvar s = 'hello ' + user + ', how are you doing';\n</code>\n</pre>\n", "senID": 0}], [{"text": ["util.format does this. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "util.format", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/joyent/node/commit/874260b40fefc03aec7638a736b004b3ca0c23f3#lib/util.js"}]}, {"text": ["It will be part of v0.5.3 and can be used like this:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "v0.5.3", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/joyent/node/zipball/v0.5.3"}]}, {"code": "<pre>\n<code>\n var uri = util.format('http%s://%s%s', \n      (useSSL?'s':''), apiBase, path||'/');\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Maybe my little String extension works for you?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n String.prototype.template = String.prototype.template ||\n    function (){\n      var   args = Array.prototype.slice.call(arguments)\n           ,str  = this\n      ;\n      function replacer(a){\n       var aa = parseInt(a.substr(1),10)-1;\n       return args[aa];\n      }\n      return  str.replace(/(\\$\\d+)/gm,replacer)\n};\n//example\nvar  wrld = 'world'\n    ,hay  = 'how are you today?'\n    ,str  = 'hello $1, $2'\n;\nalert(str.template(wrld,hay)); //=&gt; hello world, how are you today?\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you are using node.js, console.log() takes format string as a first parameter:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "console.log()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://nodejs.org/docs/v0.5.9/api/all.html#console.log"}]}, {"code": "<pre>\n<code>\n console.log('count: %d', count);\n</code>\n</pre>\n", "senID": 1}]]