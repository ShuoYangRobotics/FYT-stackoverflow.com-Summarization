[[{"text": ["It's hard for those of use who have been programming for years to \"get\" what it feels like to start from nothing.", "I would steer clear of anything needing more than 5 lines of code."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You need to decide the order in which you cover things such as User Input, Output, if, else, while, for, file io etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["When covering IF do they already know how to get some user input?", "Print some output?", "Code a FOR loop?", "Do arithmentic on integers?", "Determine whether a number is divisible by another number? "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The answers to these questions constrains your examples for IF."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I'd suggest doing Output, Arithmentic, FOR, Divisibility (modulus), User Input before doing IF."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Then I can pose problems such as"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n Print the first 100 odd numbers\nDetermine the factors of a number entered  by the user\nPlay a number guessing game (User enters a guess, you print YES or Higher or Lower)\n</code>\n</pre>\n", "senID": 6}], [{"text": ["\"Figure out whether a given year is a leap year\" springs to mind almost immediately.", "Just give 'em the rules and turn 'em loose."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Other possibilities (albeit with stuff other than if statements):"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 3, "lis": [{"text": "Hunt the Wumpus (you may have to google for this one, I'm showing my age).", "tag": "none", "senID": 2}, {"text": "The perennial \"detect a win in a Tic Tac Toe (Noughts and Crosses) game\" (you ", "tag": "none", "senID": 3}, {"text": "Guessing a number between 1 and 100 as quickly as possible (higher, lower).", "tag": "none", "senID": 4}]}, {"text": ["For nothing but if/else statements, the leap year one is good.", "You could also consider:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "if/else", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 5, "lis": [{"text": "Test if a number is a multiple of 3, 5 or 7.", "tag": "none", "senID": 6}, {"text": "Given an age, figure out whether someone's a baby, toddler, child, teenager, adult or old codger.", "tag": "none", "senID": 7}, {"text": "Calculate grades A-F based on final percentage score.", "tag": "none", "senID": 8}, {"text": "Given a number on the roulette table, figure out whether it's red/black, high/low and odd/even.", "tag": "none", "senID": 9}, {"text": "Given a blackjack hand, check if it's okay or bust (this is good since J/Q/K morph into 10). You could also figure out whether to draw another card (if total under 17 for example).", "tag": "none", "senID": 10}]}, {"text": ["That's just a smattering of possibilities that you could get away with."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}], [{"text": ["Try a simple game, like if you press 'L', turn left, if you press 'R', turn right, if there's a monster, you die etc."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["There are numerous of options here.", "Maybe let them build a simple calculator, taking into account division by zero, odd/even numbers and the like."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "division by zero", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "odd/even", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["Edit: Found this simple excercise on if-else (in java) which can be transformed into Python."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "excercise on if-else", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://tecnoesis.wordpress.com/category/java-installations-configurations-technology/core-java-java-installations-configurations-technology/sun-microsystems-educational-services-course/wj1103a-using-decision-and-looping-constructs-with-the-java-programming-language/module-1-3-using-decision-and-looping-constructs-with-the-java-programming-language-wj-1103a-e-core-java-java-installations-configurations-technology/exercise-1-%E2%80%93-using-if-and-if-else/"}]}], [{"text": ["In my opinion, the if statement is an interesting subject in Python.", "I would recommend to take into account the philosophy of the language when introducing it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Most of time, I don't use if as an alternative to the C++ switch.", "I do prefer a dictionnary of functions."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "switch", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["I also try to follow the It's easier to ask forgiveness than permission rule and I do prefer to catch exceptions."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "It's easier to ask forgiveness than permission", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I think that your examples should take that into account.", "So i wouldn't use the monster game or the division by zero ideas.", "It can be funny to implement but is not very pythonic in my opinion."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "monster game", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "division by zero", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["I mainly use if as a filter. "], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I think you should'nt take any difficult algorithm as an example if your goal is to teach the syntax of the language.", "Learning how to program is certainly a sufficient challenge."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["So I think any stupid example like the one below should work. "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n class Song:\n    def __init__(self, title, year):\n         self.title = title\n         self.year = year\n\nsongs = [Song('Blackbird', 1968), Song('Penny Lane', 1967), Song('Jenny Wren', 2005)]\nfor song in songs:\n    if song.year &lt; 1970:\n        print song.title, 'by the Beatles'\n    else:\n        print song.title, 'is not a Beatles song'\n</code>\n</pre>\n", "senID": 7}, {"text": ["It could also be a 1st step for the list comprehension if you plan to show it."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n songs = [Song('Blackbird', 1968), Song('Penny Lane', 1967), Song('Jenny Wren', 2005)]\nprint [song.title for song in songs if song.year&lt;1970]\n</code>\n</pre>\n", "senID": 9}], [{"text": ["I did demonstration of the subject in DaniWeb by number guess game.", "Something similar maybe?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "DaniWeb by number guess game", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.daniweb.com/code/snippet287950.html"}]}, {"text": ["Using if..else in print statement instead of multiline if is my favorite use of the construct."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I saw other answers to suggest things for normal if statement so I cooked up one myself:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I think of practical value would be to use if in break statement as reaction to user input.", "Same time you can teach try...except ie when not to use if in Python."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Once you make it to looping and/or functions, a great one would be \"four is magic\" - four is the only word with the same # of letters as the number, and supposedly all numbers converge to four.", "So the game goes something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n seventeen is nine\nnine is four\nfour is magic\n</code>\n</pre>\n", "senID": 1}, {"text": ["or (discounting spaces):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n one hundred is ten\nten is three\nthree is five\nfive is four\nfour is magic\n</code>\n</pre>\n", "senID": 3}, {"text": ["Of course if you just wanted to stick to if/else at the moment you could fairly easily do this for the numbers 0-10, and just have a series of 11 if...else blocks (1-5 and you'd need even less)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["One of the best is Project Euler problem #1."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://projecteuler.net/index.php?section=problems&amp;id=1"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://projecteuler.net/index.php?section=problems&amp;id=1", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://projecteuler.net/index.php?section=problems&id=1"}]}, {"text": ["This requires considerable care to get the if-conditions exactly right."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I like the \"Three men and a monkey on an island\" problem:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The general strategy for solving this is to use a for-loop to check all numbers from 1-10,000 (or some other large number).", "You need to use if statements to check the remainder.", "You can later expand this problem to a more general word problem of X-men and Y-monkeys ... this requires a nested for-loop."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["You could also prep your beginner programmers to pass the FizzBuzz test.", "Seeing how this is an extremely common filtering function for hiring programmers you could cite: "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "FizzBuzz test", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://weblog.raganwald.com/2007/01/dont-overthink-fizzbuzz.html"}]}]]