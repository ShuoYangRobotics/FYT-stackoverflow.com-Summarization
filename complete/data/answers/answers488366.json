[[{"text": ["Under Windows it's possible for you to make changes to environment variables persistent via the registry with this recipe, though it seems like overkill."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this recipe", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/416087/"}]}, {"text": ["To echo Brian's question, what are you trying to accomplish?", "There is probably an easier way."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["According to this discussion, you cannot do it.", "What are you trying to accomplish?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this discussion", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bytes.com/groups/python/22914-os-environ-os-path-chdir"}]}], [{"text": ["I don't believe you can do this; there are two work-arounds I can think of."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://code.activestate.com/recipes/159462/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://code.activestate.com/recipes/159462/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/159462/"}]}], [{"text": ["I think you are a bit confused here.", "There is no 'system' environment.", "Each process has their own environment as part its memory.", "A process can only change its own environment.", "A process can set the initial environment for processes it creates."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you really do think you need to set environment variables for the system you will need to look at changing them in the location they get initially loaded from like the registry on windows or your shell configuration file on Linux."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You are forking a new process and cannot change the environment of the parent process as you cannot do if you start a new shell process from the shell"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You might want to try Python Win32 Extensions, developed by Mark Hammond, which is included in the ActivePython (or can be installed separately).", "You can learn how to perform many Windows related tasks in Hammond's and Robinson's book."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "Python Win32 Extensions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pywin32/"}, {"text": "ActivePython", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.activestate.com/activepython/downloads"}, {"text": "Hammond's and Robinson's book", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://oreilly.com/catalog/9781565926219/"}]}, {"text": ["Using PyWin32 to access windows COM objects, a Python program can use the Environment Property (a collection of environment variables) of the WScript.Shell object."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "PyWin32", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "COM objects", "childNum": 0, "tag": "em", "childList": []}, {"href": "http://msdn.microsoft.com/en-us/library/fd7hxfdd.aspx", "text": "Environment Property", "childNum": 0, "tag": "a", "childList": []}, {"text": "WScript.Shell", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Think about it this way."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You're not setting shell environment variables."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You're spawning a subshell with some given environment variable settings; this subshell runs your application with the modified environment."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["From within Python?", "No, it can't be done!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you are not bound to Python, you should consider using shell scripts (sh, bash, etc).", "The \"source\" command allows you to run a script that modifies the environment and will \"stick\" like you want to the shell you \"sourced\" the script in.", "What's going on here is that the shell executes the script directly rather creating a sub-process to execute the script."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This will be quite portable - you can use cygwin on windows to do this."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Look here."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1085852/interface-for-modifying-windows-environment-variables-from-python"}]}]]