[[{"text": ["To count the number of appearances:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from collections import defaultdict\n\nappearances = defaultdict(int)\n\nfor curr in a:\n    appearances[curr] += 1\n</code>\n</pre>\n", "senID": 1}, {"text": ["To remove duplicates:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a = set(a)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Since the list is ordered you can do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a = [1,1,1,1,2,2,2,2,3,3,4,5,5]\nfrom itertools import groupby\n[len(list(group)) for key, group in groupby(a)]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Output:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [4, 4, 2, 1, 2]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Counting the frequency of elements is probably best done with a dictionary:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n b = {}\nfor item in a:\n    b[item] = b.get(item, 0) + 1\n</code>\n</pre>\n", "senID": 1}, {"text": ["To remove the duplicates, use a set:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a = list(set(a))\n</code>\n</pre>\n", "senID": 3}], [{"text": ["In Python 2.7, you can use collections.Counter:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "collections.Counter", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import collections\na = [1,1,1,1,2,2,2,2,3,3,4,5,5]\ncounter=collections.Counter(a)\nprint(counter)\n# Counter({1: 4, 2: 4, 3: 2, 5: 2, 4: 1})\nprint(counter.values())\n# [4, 4, 2, 1, 2]\nprint(counter.keys())\n# [1, 2, 3, 4, 5]\nprint(counter.most_common(3))\n# [(1, 4), (2, 4), (3, 2)]\n</code>\n</pre>\n", "senID": 1}, {"text": ["If, like me, you are using Python 2.6 or older, you can download it here. "], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.activestate.com/recipes/576611/"}]}], [{"text": ["For your first question, iterate the list and use a dictionary to keep track of an elements existsence. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For your second question, just use the set operator."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n seta = set(a)\nb = [a.count(el) for el in seta]\na = list(seta) #Only if you really want it.\n</code>\n</pre>\n", "senID": 0}], [{"text": ["In Python 2.7+, you could use collections.Counter to count items"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "collections.Counter", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/3.1/whatsnew/2.7.html#new-improved-and-deprecated-modules"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = [1,1,1,1,2,2,2,2,3,3,4,5,5]\n&gt;&gt;&gt;\n&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; c=Counter(a)\n&gt;&gt;&gt;\n&gt;&gt;&gt; c.values()\n[4, 4, 2, 1, 2]\n&gt;&gt;&gt;\n&gt;&gt;&gt; c.keys()\n[1, 2, 3, 4, 5]\n</code>\n</pre>\n", "senID": 1}]]