[[{"text": ["Just found sys.executable - the full path to the current Python executable, which can be used to run the script (instead of relying on the shbang, which obviously doesn't work on Windows)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "sys.executable", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import sys\nimport subprocess\n\ntheproc = subprocess.Popen([sys.executable, \"myscript.py\"])\ntheproc.communicate()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["When you are running a python script on windows in subprocess you should use python in front of the script name.", "Try:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n process = subprocess.Popen(\"python /the/script.py\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["How about this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nimport subprocess\n\ntheproc = subprocess.Popen(\"myscript.py\", shell = True)\ntheproc.communicate()                   # ^^^^^^^^^^^^\n</code>\n</pre>\n", "senID": 1}, {"text": ["This tells subprocess to use the OS shell to open your script, and works on anything that you can just run in cmd.exe."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "subprocess", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Additionally, this will search the PATH for \"myscript.py\" - which could be desirable."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["It looks like windows tries to run the script using its own EXE framework rather than call it like "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n python /the/script.py\n</code>\n</pre>\n", "senID": 1}, {"text": ["Try,"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n subprocess.Popen([\"python\", \"/the/script.py\"])\n</code>\n</pre>\n", "senID": 3}, {"text": ["Edit: \"python\" would need to be on your path."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["You are using a pathname separator which is platform dependent.", "Windows uses \"\\\" and Unix uses \"/\"."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Yes subprocess.Popen(cmd, ..., shell=True) works like a charm.", "On Windows the .py file extension is recognized, so Python is invoked to process it (on *NIX just the usual shebang).", "The path environment controls whether things are seen.", "So the first arg to Popen is just the name of the script."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "subprocess.Popen(cmd, ..., shell=True)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ".py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "Popen", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "just the name of the script", "childNum": 0, "tag": "em", "childList": []}]}, {"code": "<pre>\n<code>\n subprocess.Popen(['myscript.py', 'arg1', ...], ..., shell=True)\n</code>\n</pre>\n", "senID": 1}]]