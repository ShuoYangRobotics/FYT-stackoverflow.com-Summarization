[[{"text": ["That is what a framework does.", "Some frameworks like Django are fairly rigid and others like Pylons make it easier to mix and match. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Since you will likely be using some of the WSGI components from the Paste project sooner or later, you might as well read this article from the Paste folks about a Do-It-Yourself Framework.", "I'm not suggesting that you should go and build your own framework, but that the article gives a good explanation of how the WSGI stack works and how things go together."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Do-It-Yourself Framework", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pythonpaste.org/do-it-yourself-framework.html"}]}], [{"text": ["I'd have to say that Apache/mod_wsgi is probably the most \"manageable\" of the setups I've used."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["nginx/fcgi is the fastest, but its a bit of a headache."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["What middleware do you think you need?", "You may very well not need to include any WSGI \u2018middleware\u2019-like components at all.", "You can perfectly well put together a loose \u2018pseudo-framework\u2019 of standalone libraries without needing to \u2018wrap\u2019 the application in middleware at all."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["(Personally I use a separate form-reading library, data access layer and template engine, none of which know about each other or need to start fiddling with the WSGI environ."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "environ", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["My advice is to read the PEP on WSGI, specifically the part on middleware.", "If you have a question about anything with the words \"standard\" and \"WSGI\" in it, the answer is either there, or you're asking the wrong question."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "PEP", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0333/"}, {"text": "middleware", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0333/#middleware-components-that-play-both-sides"}]}], [{"text": ["If you liked the Do-It-Yourself-Framework tutorial mentioned before, but you want to manage these things in a config file, Paste Deploy would be the obvious answer.", "(It is mentioned in the tutorial, but only very briefly in the very last paragraph)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Paste Deploy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pythonpaste.org/deploy/"}]}, {"text": ["This is what the Pylons framework uses, by the way (and Turbogears 2, which is built upon Pylons, also)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["\"it seems too simple when working with a number of middleware packages."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["How big a number?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You won't be working with hundreds or thousands.  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["It will be (a) a small number (under a dozen) and (b) the \"right\" order isn't magical. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Each piece of middleware will have a very, very specific job and very specific requirements for what must come before it.  "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["It's much less confusing than you're assuming."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]]