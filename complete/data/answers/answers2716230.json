[[{"text": ["PhantomJS and PyPhantomJS are what I use for tasks like these."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "PhantomJS", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/phantomjs/"}, {"href": "http://dev.umaclan.com/projects/pyphantomjs", "text": "PyPhantomJS", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["What it is, is a headless WebKit based browser which is fully controllable via JavaScript.", "There's a C++ implementation (PhantomJS) and a Python one (PyPhantomJS).", "I prefer the Python one though, because it has a plugin system which allows you to add functionality to the core without actually modifying any code, unlike the C++ one.", ":)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Looks like http://watin.sourceforge.net/ might be a good way to go."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://watin.sourceforge.net/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://watin.sourceforge.net/"}]}, {"text": ["If you don't have to go pure Python, you could do IronPython since it's a C# project."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["There is Kapow.", "Its pure Java and costs money:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://kapowtech.com/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://kapowtech.com/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://kapowtech.com/"}]}, {"text": ["And there is Lixto: Its Eclipse based and uses Mozilla Gecko as rendering engine (unless they already changed it to WebKit, as they said they'll do years ago).", "Its very nice and also costs money:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["http://www.lixto.com/?page_id=50"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://www.lixto.com/?page_id=50", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.lixto.com/?page_id=50"}]}, {"text": ["They are both graphical tools where you define the site navigation and what should be extracted by point and click.", "But you can also write xpath and regular expressions and even JavaScript that runs in the sites context."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I used them both in the lectures web data extraction and applied web data extraction at the technical university Vienna (Lixto is written by the Professor who held the lecture)."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["take a look at this little doosy on ajaxian"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://ajaxian.com/archives/server-side-rendering-with-yui-on-node-js"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://ajaxian.com/archives/server-side-rendering-with-yui-on-node-js", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://ajaxian.com/archives/server-side-rendering-with-yui-on-node-js"}]}, {"text": ["It also talks about Aptana Jaxer which I think runs on a headless firefox so is basically the Mozilla browser engine in all it's glory."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Aptana Jaxer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jaxer.org/"}]}], [{"text": ["HTMLUnit in Java is very good.", "I think it's only the Java implementations of headless browsers that manage to provide Javascript support. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "HTMLUnit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://htmlunit.sourceforge.net/"}]}, {"text": ["MaxQ, I read about here, sounds like it might be interesting: \"written in Java, generates Jython scripts\""], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "MaxQ", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://maxq.tigris.org/"}, {"href": "http://agiletesting.blogspot.com/2005/02/web-app-testing-with-python-part-1.html", "text": "here", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["There is an absolute ton of free software technology now available: take your pick at http://wiki.python.org/moin/WebBrowserProgramming but if you have specific questions join pyjamas-dev on google groups and i'll be happy to give further details, there.", "brief answer: you can run pywebkitgtk \"headless\", or you can use xulrunner (via python-hulahop) again using pygtk without actually doing \"browserwidget.show()\", and there's also pykhtml.", "also you could  use python COM to connect to MSHTML.DLL."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://wiki.python.org/moin/WebBrowserProgramming", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/WebBrowserProgramming"}]}, {"text": ["these are all \"cheat\" methods: using python bindings to a graphical web browser engine without actually firing up the graphical bit.", "if you really wanted to put some serious hard-core programming in, you could create a \"port\" of webkit which was not connected to a GUI toolkit: as an experienced webkit programmer i'd put it as around... 2 weeks of full-time effort to make such a \"headless\" version of webkit."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "really", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "not", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["l."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Try HtmlUnit !!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]