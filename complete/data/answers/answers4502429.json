[[{"code": "<pre>\n<code>\n def factorial(n):\n    result = 1 if n &lt;= 1 else n * factorial(n - 1)\n    print '%d! = %d' % (n, result)\n    return result\n</code>\n</pre>\n", "senID": 0}], [{"text": ["I've no experience with Python, but something like this?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def factorial( n ):\n   if n &lt;1:   # base case\n       return 1\n   else:\n       f = n * factorial( n - 1 )  # recursive call\n       print \"%2d! = %d\" % ( n, f )\n       return f\n</code>\n</pre>\n", "senID": 1}], [{"text": ["try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def factorial( n ):\n   if n &lt;1:   # base case\n       print \"%2d! = %d\" % (n, n)\n       return 1\n   else:\n       temp = factorial( n - 1 )\n       print \"%2d! = %d\" % (n, n*temp)\n       return n * temp  # recursive call\n</code>\n</pre>\n", "senID": 1}, {"text": ["One thing I noticed is that you are returning '1' for n&lt;1, that means your function will return 1 even for negative numbers.", "You may want to fix that."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n def factorial( n ):\n   if n &lt;1:   # base case\n       return 1\n   else:\n       returnNumber = n * factorial( n - 1 )  # recursive call\n       print(str(n) + '! = ' + str(returnNumber))\n       return returnNumber\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Print the results immediately before returning them."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Is this homework by any chance?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def traced_factorial(n):\n  def factorial(n):\n    if n &lt;= 1:\n      return 1\n    return n * factorial(n - 1)\n  for i in range(1, n + 1):\n    print '%2d! = %d' %(i, factorial(i))\n</code>\n</pre>\n", "senID": 1}, {"text": ["Give PEP227 a read for more details.", "The short of it is that Python lets you define functions within functions."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "PEP227", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0227/"}]}], [{"text": ["One more"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def fact(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return x * fact(x-1)\n\nfor x in range(0,10):\n    print '%d! = %d' %(x, fact(x))\n</code>\n</pre>\n", "senID": 1}]]