[[{"text": ["The python way of writing web applications is not cgi-bin.", "It is by using WSGI."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "WSGI", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://wsgi.org"}]}, {"text": ["WSGI is a standard interface between web servers and Python web applications or frameworks.", "The PEP 0333 defines it."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "PEP 0333", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0333/"}]}, {"text": ["There are no disadvantages in using it instead of CGI.", "And you'll gain a lot.", "Beautiful URLs is just one of the neat things you can do easily."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Also, writing a WSGI application means you can deploy on any web server that supports the WSGI interface.", "Apache does so by using mod_wsgi."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "mod_wsgi", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/"}]}, {"text": ["You can configure it in apache like that:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n WSGIScriptAlias /myapp /usr/local/www/wsgi-scripts/myapp.py\n</code>\n</pre>\n", "senID": 5}, {"text": ["Then all requests on http://myserver.domain/myapp will go to myapp.py's application callable, including http://myserver.domain/myapp/something/here. "], "childNum": 3, "tag": "p", "senID": 6, "childList": [{"text": "http://myserver.domain/myapp", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "application", "childNum": 0, "tag": "code", "childList": []}, {"text": "http://myserver.domain/myapp/something/here", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["example myapp.py:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "myapp.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def application(environ, start_response):\n    start_response('200 OK', [('Content-type', 'text/plain')])\n    return ['Hello World!']\n</code>\n</pre>\n", "senID": 8}], [{"text": ["Just use some good web framework e.g.", "django and you can have such URLs\nmore than URLs you will have a better infrastructure, templates, db orm etc"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I think you can do this by rewriting URL through Apache configuration.", "You can see the Apache documentation for rewriting here."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://httpd.apache.org/docs/2.0/misc/rewriteguide.html"}]}], [{"text": ["You have to use URL Rewriting."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["It is not a noob question, it can be quite tricky :)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["http://httpd.apache.org/docs/2.0/misc/rewriteguide.html"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://httpd.apache.org/docs/2.0/misc/rewriteguide.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://httpd.apache.org/docs/2.0/misc/rewriteguide.html"}]}, {"text": ["Hope you find it helpful"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["this is an excerpt from a .htaccess that I use to achieve such a thing, this for example redirects all requests that were not to index.php to that file, of course you then have to check the server-variables within the file you redirect to to see, what was requested."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Or you simply make a rewrite rule, where you use a RegExp like ^.*\\/cgi-bin\\/.", "*\\.py$ to determine when and what to rewrite.", "Such a RegExp must be crafted very carefully, so that rewriting only takes place when desired."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "^.*\\/cgi-bin\\/.*\\.py$", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On   #activate rewriting\n    RewriteBase /      #url base for rewriting\n    RewriteCond %{REQUEST_FILENAME} !index.php #requested file is not index.php\n    RewriteCond %{REQUEST_FILENAME} !^.*\\.gif$ #requested file is no .gif\n    RewriteCond %{REQUEST_FILENAME} !^.*\\.jpg$ #requested file is no .jpg\n    RewriteCond %{REQUEST_FILENAME} !-d        #is not a directory\n    RewriteRule . /index.php [L]               #send it all to index.php\n&lt;/IfModule&gt;\n</code>\n</pre>\n", "senID": 2}, {"text": ["The above Example uses RewriteConditions to determine when to rewrite ( .gif's, .jpeg's and index.php are excluded )."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "RewriteCond", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Hmm, so thats a long text already.", "Hope it was a bit helpful, but you won't be able to avoid learning the syntax of the Apache RewriteEngine."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["You'll find the ScriptAlias directive helpful.", "Using"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "ScriptAlias", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n ScriptAlias /urlpath /your/cgi-bin/script.py\n</code>\n</pre>\n", "senID": 1}, {"text": ["you can access your script via http://yourserver/urlpath."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://yourserver/urlpath", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["You also might want to look into mod_passenger, though the last time I used it, WSGI was kind of a \"second-class citizen\" within the library\u2014it could detect WSGI scripts if it were used to serve the whole domain, but otherwise there are no directives to get it to run a WSGI app."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "mod_passenger", "tag": "a", "pos": 0, "childList": [{"text": "mod_passenger", "tag": "code"}], "childNum": 1, "href": "http://modrails.com"}, {"text": "mod_passenger", "childNum": 0, "tag": "code", "childList": []}]}]]