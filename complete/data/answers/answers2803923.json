[[{"code": "<pre>\n<code>\n re.search( r\"Oxygen: *([\\d.]+)\", String ).group( 1 )\n</code>\n</pre>\n", "senID": 0}], [{"text": ["What for?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print String.split()[4]\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n import re\nstring = \"blabla Oxygen:      10.10 blabla\"\nregex_oxygen = re.compile('''Oxygen:\\W+([0-9.]*)''')\nresult = re.findall(regex_oxygen,string)\nprint result\n</code>\n</pre>\n", "senID": 0}], [{"text": ["For general parsing of lists like this one could"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\nString = \"MEASUREMENT   3835    303 Oxygen:     235.78 Saturation:      90.51\"\nString = String.replace(':','')\nvalue_list=re.split(\"MEASUREMENT\\W+[0-9]+\\W+[0-9]+\\W\",String)[1].rstrip().split()\nvalues = dict(zip(value_list[::2],map(float,value_list[1::2])))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I believe the answer to you specific problem has been posted.", "However I wanted to show you a few ressource for regular expression for python.", "The python documentation on regular expression is the place to start. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python documentation on regular expression", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/re.html"}]}, {"text": ["O'reilly also has many good books on the subject, either if you want to understand regular expression deep down or just enough to make things work."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "many good books on the subject", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.oreilly.com/?q=regular+expressions"}]}, {"text": ["Finally regular-expressions.info is a good ressource for regular expression among mainstream languages.", "You can even test your regular expression on the website."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "regular-expressions.info", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.regular-expressions.info/"}]}], [{"text": ["I would like to share my ?is this an email?", "regex expresion, just to inspire you.", ":)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n 9 emailregex = \"^[a-zA-Z.a-zA-Z]+@mycompany.org$\"\n 10\n 11 def validateEmail(email):\n 12         \"\"\"returns 1 if is an email, 0 if not \"\"\"\n 13         # len(x.y@mycompany.org) = 17\n 14         if len(email)&gt;=17:\n 15                 if re.match(emailregex,email)!= None:\n 16                         return 1\n 17         return 0\n</code>\n</pre>\n", "senID": 1}]]