[[{"text": ["If you want to modify the list in-place,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n a[:] = [x for x in a if x != [1, 1]]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Use a list comprehension:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [x for x in a if x != [1, 1]]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Google finds Delete all items in the list, which includes gems such as"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Delete all items in the list", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://old.nabble.com/Delete-all-items-in-the-list-td22222046.html"}]}, {"code": "<pre>\n<code>\n from functools import partial\nfrom operator import ne\na = filter(partial(ne, [1, 1]), a)\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n new_list = filter(lambda x: x != [1,1], a)\n</code>\n</pre>\n", "senID": 0}, {"text": ["Or as a function:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def remove_all(element, list):\n    return filter(lambda x: x != element, list)\n\na = remove([1,1],a)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Or more general:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def remove_all(elements, list):\n    return filter(lambda x: x not in elements, list)\n\na = remove(([1,1],),a)\n</code>\n</pre>\n", "senID": 4}], [{"code": "<pre>\n<code>\n def remAll(L, item):\n    answer = []\n    for i in L:\n        if i!=item:\n            answer.append(i)\n    return answer\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n filter([1,1].__ne__,a)\n</code>\n</pre>\n", "senID": 0}]]