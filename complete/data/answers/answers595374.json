[[{"text": ["Actually, Guido vetoed the idea: http://bugs.python.org/issue1093"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://bugs.python.org/issue1093", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bugs.python.org/issue1093"}]}, {"text": ["But, as noted in that issue, you can make one pretty easily:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import operator\nreduce(operator.mul, (3, 4, 5))\n</code>\n</pre>\n", "senID": 2}], [{"text": ["There isn't one built in, but it's simple to roll your own, as demonstrated here:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/493853/which-python-module-is-suitable-for-data-manipulation-in-a-list/494034#494034"}]}, {"code": "<pre>\n<code>\n import operator\ndef prod(lst):\n    return reduce(operator.mul, lst)\n</code>\n</pre>\n", "senID": 1}, {"text": ["See answers to this question:  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["http://stackoverflow.com/questions/493853/which-python-module-is-suitable-for-data-manipulation-in-a-list"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://stackoverflow.com/questions/493853/which-python-module-is-suitable-for-data-manipulation-in-a-list", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/493853/which-python-module-is-suitable-for-data-manipulation-in-a-list"}]}], [{"code": "<pre>\n<code>\n Numeric.product\n</code>\n</pre>\n", "senID": 0}, {"text": ["( or "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n reduce(lambda x,y:x*y,[3,4,5])\n</code>\n</pre>\n", "senID": 2}, {"text": [], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Use this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def prod( iterable ):\n    p= 1\n    for n in iterable:\n        p *= n\n    return p\n</code>\n</pre>\n", "senID": 1}, {"text": ["Since there's no built-in prod function."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "prod", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["There's a \"prod()\" in numpy that does what you're asking for."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If Python had one it would be called product(), unfortunately it doesn't.", "You can do something like Steve B. mentioned."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]