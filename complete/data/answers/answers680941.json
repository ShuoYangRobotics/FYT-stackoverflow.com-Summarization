[[{"text": ["you might find getattr useful, I guess"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "getattr", "tag": "a", "pos": 0, "childList": [{"text": "getattr", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html?highlight=getattr#getattr"}, {"text": "getattr", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n import module\ngetattr(module, status.lower())(*args, **kwargs)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The canonical way to do this is to use a dictionary to emulate switch or if/elif.", "You will find several questions to similar problems here on SO."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "switch", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "if/elif", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Put your functions into a dictionary with your status codes as keys:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n funcs = {\n    'CONNECT': connect,\n    'RAWFEED': rawfeed,\n    'RAWCONFIG' : rawconfig,\n    'TESTFEED': testfeed\n}\nfuncs[status](*args, **kwargs)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["assuming that these functions belong to some module:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import module\nreturn getattr(module, status.lower()).__call__(*args, **kwargs)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["it seams that you can use getattr in a slightly different (in my opinion more elegant way)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import math\ngetattr(math, 'sin')(1)\n</code>\n</pre>\n", "senID": 1}, {"text": ["or if function is imported like below"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from math import sin\n</code>\n</pre>\n", "senID": 3}, {"text": ["sin is now in namespace so you can call it by"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n vars()['sin'](1)\n</code>\n</pre>\n", "senID": 5}], [{"text": ["Look at this: getattra as a function dispatcher"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "getattra as a function dispatcher", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://diveintopython.org/power%5Fof%5Fintrospection/getattr.html#d0e9362"}]}], [{"text": ["I encountered the same problem previously.", "Have a look at this question, I think its what you are looking for."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Dictionary or If Statements"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Dictionary or If Statements", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/277965/dictionary-or-if-statements-jython"}]}, {"text": ["Hope this is helpful"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Eef"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Some improvement to SilentGhost's answer:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n globals()[status.lower()](*args, **kwargs)\n</code>\n</pre>\n", "senID": 1}, {"text": ["if you want to call the function defined in the current module."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Though it looks ugly.", "I'd use the solution with dictionary."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["some change from previous one:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n funcs = {\n'CONNECT': connect,\n'RAWFEED': rawfeed,\n'RAWCONFIG' : rawconfig,\n'TESTFEED': testfeed\n}\n\nfunc = funcs.get('status')\nif func\uff1a\n    func(*args, **kwargs)\n</code>\n</pre>\n", "senID": 1}]]