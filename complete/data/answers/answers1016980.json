[[{"text": ["I for one love django-annoying's render_to method."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "django-annoying", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bitbucket.org/offline/django-annoying/"}, {"text": "render_to", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n @render_to('template.html')\ndef foo(request):\n    bar = Bar.objects.all() \n    return {'bar': bar}\n\n# equivalent to\ndef foo(request):\n    bar = Bar.objects.all() \n    return render_to_response('template.html',\n                              {'bar': bar},\n                              context_instance=RequestContext(request))\n</code>\n</pre>\n", "senID": 1}, {"text": ["I've not used any of the others yet, though I've been looking at django-debug-toolbar."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I use django-extensions in every project.", "There's a lot of stuff in there I never use, but it's worth it for the management commands shell_plus and runserver_plus alone."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "django-extensions", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/django-extensions/django-extensions/tree/master"}, {"text": "shell_plus", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://github.com/django-extensions/django-extensions/blob/ebf37ffb52e4d41c3c678c12dfb1138abdff1ea9/django_extensions/management/commands/shell_plus.py"}, {"href": "http://github.com/django-extensions/django-extensions/blob/ebf37ffb52e4d41c3c678c12dfb1138abdff1ea9/django_extensions/management/commands/runserver_plus.py", "text": "runserver_plus", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Shell_plus just autoloads all your models: a major timesaver (EDIT: forgot something equally important: it also makes use of ipython if installed, for tab completion and other conveniences).", "Runserver_plus (requires Werkzeug) gives you an interactive 500 error debug page.", "You can jump into an AJAX console at any point in the traceback - brilliant."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "ipython", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://ipython.scipy.org/"}]}, {"text": ["The print_user_for_session command is also handy if you get an error email off a live site and want to contact the user who experienced the error."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "print_user_for_session", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/django-extensions/django-extensions/blob/ebf37ffb52e4d41c3c678c12dfb1138abdff1ea9/django_extensions/management/commands/print_user_for_session.py"}]}, {"text": ["update: Django's built-in management shell also now uses IPython if available.", "And it's relatively easy to create an IPython user profile to auto-import models and anything else you want auto-imported.", "I no longer use django-extensions."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}], [{"text": ["I have found django-logging to be a big help during development"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "django-logging", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/django-logging/wiki/Overview"}]}], [{"code": "<pre>\n<code>\n from IPython.Shell import IPShellEmbed\nipshell = IPShellEmbed()\n\nipshell() # This call anywhere in your program will start IPython.\n</code>\n</pre>\n", "senID": 0}, {"text": ["This way, when you are at a view, you can get into the command line there and explore.", "All required models will be imported anyway and are an easy replacement for shell_plus.", "To me, it even replaces the runserver_plus of django-command-extensions."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "shell_plus", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "runserver_plus", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "django-command-extensions", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["(Because I found what I use often, is not a common prevalent idea, I answered it myself."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The single most useful Django development addon we use is  django-evolution.", "It is a schema update solution that takes a lot of the manual work out of changes in existing models.", "It has saved me countless hours of work."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "django-evolution", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/django-evolution/"}]}], [{"text": ["Try djangodevtools, including the commands Alias, Coverage, itest, selenium, etc.", "Some extra commands are very cool!"], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "djangodevtools", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://os4d.org/djangodevtools"}, {"text": "Alias", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Coverage", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "itest", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "selenium", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]]