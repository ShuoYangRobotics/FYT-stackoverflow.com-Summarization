[[{"text": ["This is easy in any language, but the mechanism varies.", "With wget and a shell:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n wget 'http://search.twitter.com/search.json?q=hi' -O hi.json\n</code>\n</pre>\n", "senID": 1}, {"text": ["To append:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n wget 'http://search.twitter.com/search.json?q=hi' -O - &gt;&gt; hi.json\n</code>\n</pre>\n", "senID": 3}, {"text": ["With Python:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n urllib.urlretrieve('http://search.twitter.com/search.json?q=hi', 'hi.json')\n</code>\n</pre>\n", "senID": 5}, {"text": ["To append:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n hi_web = urllib2.urlopen('http://search.twitter.com/search.json?q=hi');\nwith open('hi.json', 'ab') as hi_file:\n  hi_file.write(hi_web.read())\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Here's the (verbose ;) ) Java variant:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n InputStream input = null;\nOutputStream output = null;\ntry {\n    input = new URL(\"http://search.twitter.com/search.json?q=hi\").openStream();\n    output = new FileOutputStream(\"/output.json\");\n    byte[] buffer = new byte[1024];\n    for (int length = 0; (length = input.read(buffer)) &gt; 0;) {\n        output.write(buffer, 0, length);\n    }\n    // Here you could append further stuff to `output` if necessary.\n} finally {\n    if (output != null) try { output.close(); } catch (IOException logOrIgnore) {}\n    if (input != null) try { input.close(); } catch (IOException logOrIgnore) {}\n}\n</code>\n</pre>\n", "senID": 1}, {"text": ["See also:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "See also", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 3, "lis": [{"text": ["Java IO tutorial"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["Java URLConnection tutorial"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}, {"text": ["How to use URLConnection"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}]}], [{"text": ["In shell:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n wget -O output.json 'http://search.twitter.com/search.json?q=hi'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use CURL"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "CURL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/CURL"}]}, {"code": "<pre>\n<code>\n curl -d \"q=hi\" http://search.twitter.com -o file1.txt\n</code>\n</pre>\n", "senID": 1}], [{"text": ["In PHP:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n $outfile= 'result.json';\n$url='http://search.twitter.com/search.json?q=hi';\n$json = file_get_contents($url);\nif($json) { \n    if(file_put_contents($outfile, $json, FILE_APPEND)) {\n      echo \"Saved JSON fetched from \u201c{$url}\u201d as \u201c{$outfile}\u201d.\";\n    }\n    else {\n      echo \"Unable to save JSON to \u201c{$outfile}\u201d.\";\n    }\n}\nelse {\n   echo \"Unable to fetch JSON from \u201c{$url}\u201d.\";\n}\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can use Jackson:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Jackson", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://jackson.codehaus.org/"}]}, {"code": "<pre>\n<code>\n ObjectMapper mapper = new ObjectMapper(); \n Map&lt;String,Object&gt; map = mapper.readValue(url, Map.class);\n mapper.writeValue(new File(\"myfile.json\"), map);\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here is another way of doing this with PHP and fOpen."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &lt;?php\n// Define your output file name and your search query\n$output = 'result.txt';\n$search = 'great';\n\nwrite_twitter_to_file($output, $search);\n\n/*\n * Writes Json responses from twitter API to a file output.\n * \n * @param $output: The name of the file that contains the output \n * @param $search: The search term query to use in the Twitter API\n*/\n\nfunction write_twitter_to_file($output, $search) {\n    $search = urlencode($search);\n    $url = 'http://search.twitter.com/search.json?q=' . $search;\n    $handle = fopen($url, \"r\");\n\n    if ($handle) {\n        while (($buffer = fgets($handle, 4096)) !== false) {\n            file_put_contents($output, $buffer, FILE_APPEND);\n            echo \"Output has been saved to file&lt;br/&gt;\";\n        }\n\n        if (!feof($handle)) {\n            echo \"Error: unexpected fgets() fail\\n\";\n        }\n\n        fclose($handle);\n    }\n\n}\n?&gt;\n</code>\n</pre>\n", "senID": 1}]]