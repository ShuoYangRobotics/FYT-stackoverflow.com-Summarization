[[{"code": "<pre>\n<code>\n with open('myfile.txt', 'r') as f:\n  first_line = f.readline()\n</code>\n</pre>\n", "senID": 0}, {"text": ["Some notes, thanks to commenters:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"code": "<pre>\n<code>\n infile = open('filename.txt', 'r')\nfirstLine = infile.readline()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Lots of other answers here, but to answer precisely the question you asked:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "precisely", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; f = open('myfile.txt')\n&gt;&gt;&gt; data = f.read()\n&gt;&gt;&gt; # I'm assuming you had the above before asking the question\n&gt;&gt;&gt; first_line = data.split('\\n', 1)[0]\n</code>\n</pre>\n", "senID": 1}, {"text": ["In other words, if you've already read in the file (as you said), and have a big block of data in memory, then to get the first line from it efficiently, do a split() on the newline character, once only, and take the first element from the resulting list."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Note that this does not include the \\n character at the end of the line, but I'm assuming you don't want it anyway (and a single-line file may not even have one).", "Also note that although it's pretty short and quick, it does make a copy of the data, so for a really large blob of memory you may not consider it \"efficient\".", "As always, it depends..."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "\\n", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["This should do it:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f = open('myfile.txt')\nfirst = f.readline()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I'm going to go ahead and spice this up a little bit:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n with open('myfile.txt','r') as f:\n    line = f.readline()\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n fline=open(\"myfile\").readline().rstrip()\n</code>\n</pre>\n", "senID": 0}], [{"text": ["To go back to the beginning of an open file, do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n my_file.seek(0)\n</code>\n</pre>\n", "senID": 1}]]