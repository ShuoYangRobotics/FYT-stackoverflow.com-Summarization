[[{"code": "<pre>\n<code>\n for x in xrange(256):\n    for y in xrange(256):\n        print '%02x %02x' % (x, y)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You need to set char2 = 0 before"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "char2 = 0", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n for p in range(255):\n</code>\n</pre>\n", "senID": 1}, {"text": ["And actually, you don't need counters - char,char2"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Following will work from 0 to ff"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for x in range(256):\n    for p in range(256):\n        print chr(x).encode(\"hex\"),chr(p).encode(\"hex\")\n</code>\n</pre>\n", "senID": 4}], [{"text": ["A one liner as well (minus the import):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import itertools\nhexs = itertools.product(*([[chr(x).encode(\"hex\") for x in range(256)]] * 2))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["To print a hex value, just do something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for i in range(255):\n    print \"%x\" % i\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Output first, then increment."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "then", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["Why not something simple like?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for x in range(0, int(\"FFFF\", 16)):\n    print \"%x\" % x\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you're using python 2.6, there is a 4-line way to do what you're trying:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import itertools\n\nchar_pair_list = itertools.product(range(256),range(256))\nfor char_pair in char_pair_list:\n    print str(chr(char_pair[0])).encode(\"hex\"), ',' , str(chr(char_pair[1])).encode(\"hex\")\n</code>\n</pre>\n", "senID": 1}]]