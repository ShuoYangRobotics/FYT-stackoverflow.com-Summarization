[[{"text": ["If you are using it in a formatted string with the format() method which is preferred over the older style ''% formatting"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "format()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "''%", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 'One hundred and twenty three with three leading zeros {0:06}.'.format(123)\n'One hundred and twenty three with three leading zeros 000123.'\n</code>\n</pre>\n", "senID": 1}, {"text": ["See\nhttp://docs.python.org/library/stdtypes.html#str.format\nhttp://docs.python.org/library/string.html#formatstrings"], "childNum": 4, "tag": "p", "senID": 2, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"href": "http://docs.python.org/library/stdtypes.html#str.format", "text": "http://docs.python.org/library/stdtypes.html#str.format", "childNum": 0, "tag": "a", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"href": "http://docs.python.org/library/string.html#formatstrings", "text": "http://docs.python.org/library/string.html#formatstrings", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Here is an example with variable width"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '{num:0{width}}'.format(num=123, width=6)\n'000123'\n</code>\n</pre>\n", "senID": 4}, {"text": ["You can even specify the fill char as a variable"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '{num:{fill}{width}}'.format(num=123, fill='0', width=6)\n'000123'\n</code>\n</pre>\n", "senID": 6}], [{"text": ["There is a string method called zfill:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '12344'.zfill(10)\n0000012344\n</code>\n</pre>\n", "senID": 1}, {"text": ["It will pad the left side of the string with zeros to make the string length N (10 in this case)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n '%0*d' % (5, 123)\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n print \"%03d\" % (43)\n</code>\n</pre>\n", "senID": 0}, {"text": ["Prints "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Use string formatting"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n print '%(#)03d' % {'#': 2}\n002\nprint '%(#)06d' % {'#': 123}\n000123\n</code>\n</pre>\n", "senID": 1}, {"text": ["More info here: link text"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "link text", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/release/2.4.4/lib/typesseq-strings.html"}]}], [{"code": "<pre>\n<code>\n count=5\nnum='123'\n'0'*(count-len(num))+num\n</code>\n</pre>\n", "senID": 0}]]