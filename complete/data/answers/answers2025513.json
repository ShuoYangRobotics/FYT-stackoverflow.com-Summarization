[[{"code": "<pre>\n<code>\n re.sub(\"\\s*\\[.*?\\]\", \"\", string)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you are sure [Tag Name] is always come after Article Name, you could do this without regex."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; string=\"Article Name [Tag Name]\"\n&gt;&gt;&gt; string[:string.find(\" [\")]\n'Article Name'\n</code>\n</pre>\n", "senID": 1}, {"text": ["or with .partition"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; string.partition(\" [\")[0]\n'Article Name'\n</code>\n</pre>\n", "senID": 3}], [{"text": ["This does not use regex so if that is a requirement this is not an answer but you could do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n string = string.split('[')[0].strip()\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n re.sub(r\"(.*) \\[.*\\]\", r\"\\1\", string)\n</code>\n</pre>\n", "senID": 0}, {"text": ["This will only remove the tag if it's at the end of the string."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Even better without regex:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n txt = \"Article Name [Tag Name]\"\nif txt.rfind('[') and txt.rfind(']') &gt; txt.rfind('['): txt = txt[:txt.rfind('[')]\nif txt[-1] == ' ': txt = txt[:-1]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["here's one for multiple instances of [] tags"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; string = \"Article Name [Tag Name] blah blah [tag name2] blah blah [tag name3]\"\n&gt;&gt;&gt; for i in string.split(\"]\"):\n...   print i[ : i.find(\"[\") ]\n...\nArticle Name\n blah blah\n blah blah\n</code>\n</pre>\n", "senID": 1}]]