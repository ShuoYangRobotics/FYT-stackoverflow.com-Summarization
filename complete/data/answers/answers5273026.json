[[{"text": ["Try converting Number to an integer first:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Number", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n i = int(Number)                                                                 \nprint \"You selected:\", List[i]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Incidentally, it's good Python style to make variables lower case, and keep identifiers that begin with a capital letter for classes.", "So, instead of List you could use my_list and instead of Number just use number.", "(You shouldn't use list as a variable name since that will hide the built-in list type."], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": "List", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "my_list", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Number", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "number", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "childList": []}]}], [{"code": "<pre>\n<code>\n l = [\"a\", \"b\", \"c\"]\nii = raw_input(\"Please select a number: \")\nprint l[ii]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["What you are attempting to do is called \"indexing\" a string.", "It is achieved as follows"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n letter_at_index = my_list[index]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note that indices start from 0, that is,"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n my_list = ['a', 'b', 'c']\na = my_list[0]\nb = my_list[1]\nc = my_list[2]\n</code>\n</pre>\n", "senID": 3}, {"text": ["Negative indices can be specified as well, for example"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n c = my_list[-1]\n</code>\n</pre>\n", "senID": 5}, {"text": ["More info under Sequence Types here"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html"}]}], [{"code": "<pre>\n<code>\n List = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\nprint \"The list has the following\", len(List), \"list:\", List\ntry:\n    Number = raw_input (\"Please select a number: \")\n    item = List[int(Number)]\n    print \"The list item at\", Number, \"is\", item\nexcept EOFError:\n    print \"Error.  Nothing entered\"\nexcept ValueError:\n    print \"Error.  Expecting a number instead of:\", Number\nexcept IndexError:\n    print \"Error.  Number out of range:\", Number\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n List = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n\nprint \"The list has the following length: \"+str( len(List))+ \"\\n list:\"+repr( List)\n\nList.append(raw_input(\"\\nWhich item would you like to add? \"))\n\nprint \"\\nThe list has the following length: \"+str( len(List))+ \"\\n list:\"+repr( List)\n\nprint '\\nThe item at the position you entered is : '+\\\n      repr(List[int(raw_input (\"\\nPlease select a number: \"))])[1:-1]\n</code>\n</pre>\n", "senID": 0}, {"text": ["Result"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n The list has the following length: 6\n list:['a', 'b', 'c', 'd', 'e', 'f']\n\nWhich item would you like to add? (12,52,145)\n\nThe list has the following length: 7\n list:['a', 'b', 'c', 'd', 'e', 'f', '(12,52,145)']\n\nPlease select a number: 6\n\nThe item at the position you entered is : (12,52,145)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["try the following:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n i = None\nlistend = len(List)-1\nwhile i == None:\n    try:\n        print ''\n        raw = raw_input(\"Which item would you like to add? \")\n        i = int(raw)\n        value = List[i]\n    except IndexError:\n        print i, 'is out of bounds. Expecting an integer from 0 to', listend \n        i = None\n    except:\n        print 'You entered \"%s\" however I was expecting an integer from 0 to %s'%(raw, listend)\n    else:\n        print 'Result:', List[i]\n</code>\n</pre>\n", "senID": 1}, {"text": ["It is often useful to loop while waiting for acceptable input in this way - you will notice that i is only set to something other than None  if int(raw) runs successfully, and if it is out of your list's bounds you set it back to None.", "The else statement is not strictly necessary as its content could go outside of the while loop, however it seem to be the situation it was designed for - running a block of code only if the try block has not thrown an exception, while not handling exceptions itself."], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": "i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "None", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "int(raw)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "None", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "else", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "while", "childNum": 0, "tag": "code", "childList": []}]}]]