[[{"text": ["neat package!", "i didn't know about this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["According to the doc, the save(filename_or_stream) method takes either a filename to save on, or a file-like stream to write on."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "save(filename_or_stream)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["And a Django response object happens to be a file-like stream!", "so just do xls.save(response).", "Look the Django docs about generating PDFs with ReportLab to see a similar situation."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "xls.save(response)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "generating PDFs", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/howto/outputting-pdf/#complex-pdfs"}]}, {"text": ["edit: (adapted from ShawnMilo's comment):"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def xls_to_response(xls, fname):\n    response = HttpResponse(mimetype=\"application/ms-excel\")\n    response['Content-Disposition'] = 'attachment; filename=%s' % fname\n    xls.save(response)\n    return response\n</code>\n</pre>\n", "senID": 4}, {"text": ["then, from your view function, just create the xls object and finish with "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "xls", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n return xls_to_response(xls,'foo.xls')\n</code>\n</pre>\n", "senID": 6}], [{"text": ["Still in development as I type this but http://code.google.com/p/django-excel-templates/ Django excel templates project aims to do what your asking."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://code.google.com/p/django-excel-templates/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/django-excel-templates/"}]}, {"text": ["Specifically look at the tests.", "Here is a simple case:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #\nfrom django_excel_templates import *\nfrom django_excel_templates.color_converter import *\nfrom models import *\nfrom django.http import HttpResponse\n\ndef xls_simple(request):\n\n    ## Simple ##\n    testobj = Book.objects.all()\n\n    formatter = ExcelFormatter()\n    simpleStyle = ExcelStyle(vert=2,wrap=1)\n    formatter.addBodyStyle(simpleStyle)\n    formatter.setWidth('name,category,publish_date,bought_on',3000)\n    formatter.setWidth('price',600)\n    formatter.setWidth('ebook',1200)\n    formatter.setWidth('about',20000)\n\n    simple_report = ExcelReport()\n    simple_report.addSheet(\"TestSimple\")\n    filter = ExcelFilter(order='name,category,publish_date,about,bought_on,price,ebook')\n    simple_report.addQuerySet(testobj,REPORT_HORZ,formatter, filter)\n\n    response = HttpResponse(simple_report.writeReport(),mimetype='application/ms-excel')\n    response['Content-Disposition'] = 'attachment; filename=simple_test.xls'\n    return response\n</code>\n</pre>\n", "senID": 2}], [{"text": ["You can save your XLS file to a StringIO object, which is file-like."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "StringIO", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stringio.html"}]}, {"text": ["You can return the StringIO object's getvalue() in the response.", "Be sure to add headers to mark it as a downloadable spreadsheet."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "getvalue()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["You might want to check huDjango which comes fith a function called serializers.queryset_to_xls() do convert a queryset into an downloadable Excel Sheet."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "huDjango", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://cybernetics.hudora.biz/projects/wiki/huDjango"}, {"text": "serializers.queryset_to_xls()", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["If your data result doesn't need formulas or exact presentation styles, you can always use CSV.", "any spreadsheet program would directly read it.", "I've even seen some webapps that generate CSV but name it as .XSL just to be sure that Excel opens it"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Use https://bitbucket.org/kmike/django-excel-response"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "https://bitbucket.org/kmike/django-excel-response", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://bitbucket.org/kmike/django-excel-response"}]}]]