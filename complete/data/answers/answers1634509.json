[[{"text": ["You can't undo one graphic written over the top of another graphic any more than you can undo one chalk illustration drawn over the top of another chalk illustration on the same board."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["What is typically done in graphics is what you'd do with the chalkboard - clear the whole lot, and next time only redraw what you want to keep."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I don't know what API you're using, so here's a vague answer:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In virtually all cases \"clearing\" a surface simply blits a coloured quad of the same size as the surface onto it.", "The colour used is whatever you want your clear colour to be. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If you know how do blit, just blit a  white quad of the same size onto the surface."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["For pygame you can use Surface.fill"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Surface.fill", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.pygame.org/docs/ref/surface.html#Surface.fill"}]}], [{"text": ["Fill the surface with fill, then make it transparent with set_alpha"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n surface.fill\nsurface.set_alpha(255)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["When I dont care about performance, I use:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n mysurface.fill((0,0,0))\n</code>\n</pre>\n", "senID": 1}, {"text": ["Which will draw the specified color (black in this case) across the entire surface.", "Is that what you meant by \"clear\"?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Oh, and you need, of course, to \"flip\" the surface after doing this for it to be visible on the screen."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["I had this problem too"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["To create the surface:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n mask=pygame.Surface((180,100),pygame.SRCALPHA)\n</code>\n</pre>\n", "senID": 2}, {"text": ["To clear the surface:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n mask.fill\nmask.set_alpha(255)\n</code>\n</pre>\n", "senID": 4}, {"text": ["Draw your lines/images etc"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Then blit this surface onto your main surface using the Alpha Blend flag"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n screen.blit(mask,(0,0),special_flags=(pygame.BLEND_RGBA_ADD))\n</code>\n</pre>\n", "senID": 7}]]