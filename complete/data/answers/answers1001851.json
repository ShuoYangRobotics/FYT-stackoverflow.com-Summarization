[[{"text": ["According to python documentation, this is expected behavior: http://www.python.org/doc/2.4.4/lib/module-sys.html:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "this is expected behavior", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://www.python.org/doc/2.4.4/lib/module-sys.html", "text": "http://www.python.org/doc/2.4.4/lib/module-sys.html", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Under python-2.6 it is different: http://docs.python.org/tutorial/modules.html#the-module-search-path"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/tutorial/modules.html#the-module-search-path", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/modules.html#the-module-search-path"}]}], [{"text": ["I found the problem (I've missed early on when somebody pointed me to http://stackoverflow.com/questions/897792/pythons-sys-path-value)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://stackoverflow.com/questions/897792/pythons-sys-path-value", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/897792/pythons-sys-path-value"}]}, {"text": ["It seems that easy_install creates a pth file /usr/lib/python2.4/site-packages/easy-install.pth which is then loaded by site.py.", "This inserts the site-packages path in the sys path before the PYTHONPATH.", "Not nice."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I see '/usr/lib/python2.4/site-packages' in your path prior to '/home/me/dev/project/src', does that matter?", "What happens when you switch the two?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["From the docs:  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["So perhaps you didn't find your working copy on your PYTHONPATH as you had thought?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I think you set up PYTHONPATH to /home/me/build/project/src since /home/me/dev/project/src does not appear in sys.path, but /home/me/build/project/src does."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I don't believe you have any control over where the PYTHONPATH gets inserted into the actual path list.", "But that's not the only way to modify the path - you can update sys.path yourself, before you try to import the project."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Edit: In your specific case, you can modify the path with"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Edit:", "childNum": 0, "tag": "b", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import sys\nsys.path.insert(2, '/home/me/dev/project/src')\n</code>\n</pre>\n", "senID": 2}], [{"text": ["It sounds like the src directory doesn't have an __init__.py file.", "It's not a proper package."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "src", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "__init__.py", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Not a direct answer to you question, but you could also use a virtualenv to create a development environment.", "In that virtualenv you can then install your product in /home/me/dev/project/src as a development package: \"python setup.py develop\"."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "virtualenv", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/virtualenv"}]}, {"text": ["This way you don't have to change your PYTHONPATH manually.", "Just activate the virtualenv if you want to use the development code."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]