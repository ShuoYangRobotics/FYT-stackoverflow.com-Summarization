[[{"text": ["It's sorting them as strings, so the order is 'alphabetically'.", "Which is to say, it's going character by character and comparing, instead of comparing them as scalar values."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["So do:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n sorted_triplets = sorted(triplets, key=lambda x: int(x[0]))\n</code>\n</pre>\n", "senID": 2}, {"text": ["And it should work."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["convert strings to numbers"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n sorted(triplets, key=lambda x: int(x[0]))\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Convert exon_start to an integer, strings are sorted lexicographically."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Right, because what you have are strings, not numbers.", "It will be sorted lexicographically.", "You may want to convert them to numbers (integers) first."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["It seems like your \"number\" is actually a string.", "Convert this string to an integer ( int(string) ), then the sorting should work"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Add int() call."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n sorted_triplets = sorted(triplets, key=lambda x: int(x[0]))\n</code>\n</pre>\n", "senID": 1}]]