[[{"text": ["I'm using no-framework approach with these libraries:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "werkzeug: lib for wrappers on request/response, nice handling for wsgi applications, has great dev server, and contrib modules for session management.", "tag": "none", "senID": 1}, {"text": "jinja2: template engine. Far more flexible that django templates", "tag": "none", "senID": 2}, {"text": "sqlalchemy: ask anyone - the best orm/expression builder around by far! Can run circles around django's orm.", "tag": "none", "senID": 3}]}, {"text": ["I've tried django and spring - too heavy coupled, not flexible enough for my taste.", "Pylons can be a sound choice.", "Whatever you chose: use sqlalchemy and you won't regret it.", "There are good template engines, you can choose your own, but jinja2 is the best (and most used).", "Werkzeug is my personal choice since I simply trust the people from http://pocoo.org."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://pocoo.org", "tag": "a", "pos": 4, "childList": [], "childNum": 0, "href": "http://pocoo.org"}]}], [{"text": ["I went straight from never using a framework, straight to Django and have never looked back.", "I use it for everything and anything!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I also had no knowledge of Python before using Django and learned it in tandem with Django."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I know Django is the short and safe answer, but a very, very interesting and more flexible alternative would be Pyramid."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pyramid", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.pylonshq.com/pyramid/dev/"}]}, {"text": ["It's a mature framework that used to go by the name of repoze.bfg, now part of the Pylons project.", "While Django is monolithic, the Pylons/Pyramid project integrates several different components, each of them arguably better than their Django counterpart, or lets you swap them easily  (for instance, ORM or templates)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Using Pyramid would give you a high combo bonus, since the consensus is that TurboGears v3 will be based on that as well."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The short answer is: Django"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/"}]}], [{"text": ["If you're looking for an all-in-one framework, Django is probably your safest bet, as it's probably the most widely-used of its kind."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/"}]}, {"text": ["If you decide that lightweight components are better than giant frameworks, here are some outstanding ones that you might try using together:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": ["Flask"], "childNum": 0, "tag": "a", "senID": 2, "childList": []}, {"text": ["Jinja2"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["WTForms"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}, {"text": ["SQLAlchemy"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}]}, {"text": ["Since you mentioned mod_python, you should know that WSGI is the current standard for connecting web servers to Python web application frameworks.", "As such, mod_wsgi has replaced mod_python in Apache land.", "You might not have to deal with this stuff, though, since modern Python web frameworks have built-in test servers, and some (e.g.", "Django) are directly supported by various hosting services."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "WSGI", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wsgi.org/wsgi/"}, {"text": "mod_wsgi", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/"}]}, {"text": ["I have read good things about WebFaction, particularly regarding their support for python web applications."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "WebFaction", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.webfaction.com/"}]}, {"text": ["Some day, depending on your needs, you might want to learn about NoSQL and Google's App Engine."], "childNum": 2, "tag": "p", "senID": 8, "childList": [{"text": "NoSQL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/NoSQL"}, {"href": "http://code.google.com/appengine/", "text": "App Engine", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Django if you need a \"mainstream\" and all-included kind of framework.", "CherryPy if you hate magic and want a more pythonic and DIY kind of way.", "For something in between, do your own research.", "Nobody can answer this question other than yourself."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "Django", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.djangoproject.com/"}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "CherryPy", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.cherrypy.org/"}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}]}, {"text": ["To deal with database, use SQLAlchemy, because it's mainstream and have no cons."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "SQLAlchemy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/"}, {"text": "and", "childNum": 0, "tag": "em", "childList": []}]}], [{"text": ["Give Spring Python a look.", "Spring has had great success with Java.", "I think it's quite architecturally sound."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Spring Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://springpython.webfactional.com/"}]}], [{"text": ["In terms of doing things in a safe, sensible, scalable way, it doesn't get much more scalable than Google App Engine.", "It has its own datastore API that is different from MySQL, but more scalable."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Google App Engine", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/appengine/docs/python/"}, {"text": "datastore API", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.google.com/appengine/docs/python/datastore/"}]}, {"text": ["You had mentioned generating forms from Python or from PHP.", "This is generally not such a great idea, because it increases user latency by forcing the user to wait on server-side text processing before seeing their page.", "It is generally best to use Python or PHP only for returning data or modifying data, and to serve static pages without running them through a text processor or interpreter.", "You can use JavaScript and XMLHttpRequest from a static page to fetch data from a Python-backed page, and then populate the content of the page.", "This allows the user to see the general layout of the page, and to have it fill out with content as the content becomes available."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Although you may dread the fiddly-ness of JavaScript, it's really not possible to have truly dynamic and interactive pages without it.", "Without JavaScript, the only way the page can change or update is by reloading the page, which requires yet another round-trip to your server, which is bad for latency."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Most of these are irrelevant.", "Hate to be rude, but it helps to focus, narrowly, on your problem.", "Fewer words.", "More information.", "Less personal background."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Doesn't help anyone suggest a framework."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Doesn't help anyone suggest a framework.", "They're all in Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If it isn't crucial to you, it doesn't matter in this question.", "This doesn't help anyone suggest a framework."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Doesn't help anyone suggest a framework.", "Everyone's background is quirky."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Doesn't help anyone suggest a framework.", "HTML is a struggle; which has nothing to do with any framework."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Only matters if you try to use it as-is.", "Be open to reworking your database.", "90% of the time, your legacy database doesn't work well with frameworks and ORM's.", "Plan to discard one or two versions of the database before you learn how things work."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Use Django.", "It does all this for you from the model."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["That's why people use Flash/Flex, Dojo or other non-HTML front-end development tools."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Perhaps you should find someone else to do this for you."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Welcome to the web.", "Either get over it now or find someone else.  "], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["It's not \"sensible\".", "It's \"mandatory\".", "Your test script is unlikely to fit with any framework."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["Don't. "], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Plan on weeping.", "You can never know in advance how things will turn out.", "Either get used to the idea of rework or find another project.", "Seriously."], "childNum": 0, "tag": "p", "senID": 13, "childList": []}], [{"text": ["Mr Grouchy ses \"Do it with php!\".", ":-)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Seriously vanilla php is probably the easiest and simplest way to develop a web site.", "Its a mature well structured language, it has a massive amount of libraries and interfaces available from PEAR, and it runs efficiently, it is supported by almost all hosting companies and scales up tremeddously well.", "If you insist on using a framework then CAKE or Zend do the job."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Python has a number of drawbacks in this area: fragmentation -- there are just too may web frameworks none of which has really taken off, performance -- python still eats cpu cycles doing the simplest of tasks, support -- finding cheap and reliable python hosting is stil a pain.   "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]