[[{"text": ["It's a lot easier than that:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n List = open(\"filename.txt\").readlines()\n</code>\n</pre>\n", "senID": 1}, {"text": ["This returns a list of each line in the file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n my_list = [line.split(',') for line in open(\"filename.txt\")]\n</code>\n</pre>\n", "senID": 0}], [{"text": ["A file is almost a list of lines.", "You can trivially use it in a for loop."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "almost", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "for", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n myFile= open( \"SomeFile.txt\", \"r\" )\nfor x in myFile:\n    print x\nmyFile.close()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or, if you want an actual list of lines, simply create a list from the file."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n myFile= open( \"SomeFile.txt\", \"r\" )\nmyLines = list( myFile )\nmyFile.close()\nprint len(myLines), myLines\n</code>\n</pre>\n", "senID": 3}, {"text": ["You can't do someList[i] to put a new item at the end of a list.", "You must do someList.append(i)."], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": "someList[i]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "new", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "someList.append(i)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Also, never start a simple variable name with an uppercase letter.", "List confuses folks who know Python."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "never", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "List", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Also, never use a built-in name as a variable.", "list is an existing data type, and using it as a variable confuses folks who know Python."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "never", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["f.readlines() returns a list that contains each line as an item in the list"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["if you want eachline to be split(\",\") you can use list comprehensions"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n [ list.split(\",\") for line in file ]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Please read PEP8.", "You're swaying pretty far from python conventions."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PEP8", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"text": ["If you want a list of lists of each line split by comma, I'd do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = []\nfor line in in_file:\n    l.append(line.split(','))\n</code>\n</pre>\n", "senID": 2}, {"text": ["You'll get a newline on each record.", "If you don't want that:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n l = []\nfor line in in_file:\n    l.append(line.rstrip().split(','))\n</code>\n</pre>\n", "senID": 4}], [{"text": ["I am not sure about Python but most languages have push/append function for arrays."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]