[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; L = [0,10,20,40]\n&gt;&gt;&gt; L[::-1]\n[40, 20, 10, 0]\n</code>\n</pre>\n", "senID": 0}, {"text": ["Extended slice syntax is explained well here: http://docs.python.org/release/2.3.5/whatsnew/section-slices.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/release/2.3.5/whatsnew/section-slices.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/release/2.3.5/whatsnew/section-slices.html"}]}, {"text": ["By special request in a comment this is the most current slice documentation."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "this is the most current slice documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#slice"}]}], [{"text": ["You can make use of the reversed function for this as:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "reversed", "tag": "a", "pos": 0, "childList": [{"text": "reversed", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/release/2.4.4/whatsnew/node7.html"}, {"text": "reversed", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; array=[0,10,20,40]\n&gt;&gt;&gt; for i in reversed(array):\n...     print i\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; L = [0,10,20,40]\n&gt;&gt;&gt; L.reverse()\n&gt;&gt;&gt; L\n[40, 20, 10, 0]\n</code>\n</pre>\n", "senID": 0}, {"text": ["Or "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; L[::-1]\n[40, 20, 10, 0]\n</code>\n</pre>\n", "senID": 2}], [{"code": "<pre>\n<code>\n for x in array[::-1]:\n    do stuff\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n array=[0,10,20,40]\nfor e in reversed(array):\n  print e\n</code>\n</pre>\n", "senID": 0}], [{"text": ["The most direct translation of your requirement into Python is this for statement:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "for", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n for i in xrange(len(array) - 1, -1, -1):\n   print i, array[i]\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is rather cryptic but may be useful."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you just use the array once (and can discard it), the most idiomatic solution is:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n array = [0,10,20,40]\nwhile array:\n     item = array.pop()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You just need to think backwards."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for (i=array.length(); i&gt;0; i--)\n</code>\n</pre>\n", "senID": 1}]]