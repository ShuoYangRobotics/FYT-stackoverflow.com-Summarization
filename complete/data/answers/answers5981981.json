[[{"text": ["You want:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n number = int(number)\n</code>\n</pre>\n", "senID": 1}, {"text": ["At the moment, 'number' is a string (i.e.", "'1' rather than 1) so multiplying it by four naturally just gives you '1111'.", "Using int() will give you an integer representation of the string."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The problem is that when a user inputs a number (or anything), that input is stored as a string.", "Therefore, when you get the user's input, you are not getting 1 - rather, you are getting '1'."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "1", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "'1'", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '1' * 4\n'1111'\n\n&gt;&gt;&gt; 1 * 4\n4\n</code>\n</pre>\n", "senID": 1}, {"text": ["The fix is to change"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n number = droid.dialogGetInput('Input', 'Enter a number between 1 and 10').result\n</code>\n</pre>\n", "senID": 3}, {"text": ["to"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n number = int(droid.dialogGetInput('Input', 'Enter a number between 1 and 10').result)\n</code>\n</pre>\n", "senID": 5}, {"text": ["Cheers"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}], [{"text": ["I believe that your number is a string type.", "When you multiply a string by a number, it returns that many of the same string if you do something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n number4 = int(number) * 4\n</code>\n</pre>\n", "senID": 1}, {"text": ["It should work."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Your variable number is a string and not an int.", "So it does a \"string multiplication\".", "Try casting number to int or float."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n number = int (number)\n\nnumber = float (number)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I don't know this 'droid' kit, but I suspect that it's returning a string from dialogGetInput.", "If you multiply a string in python by N you get that string N times.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n>>> s = 'foo'\n>>> s*4\n'foofoofoofoo'\n>>>\n</pre>\n", "senID": 1}, {"text": ["So your program is seeing the STRING '1', not the integer 1.", "You need to convert your answer to an integer first:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n>>> s = '1' # wrong\n>>> s * 4\n'1111'\n>>> s = int('1') # right\n>>> s * 4\n4\n>>>\n</pre>\n", "senID": 3}, {"text": ["Also, be prepared to deal with someone putting in something other than a number(i.e.", "a typo or someone trying to be a jerk and crash you program on purpose)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n>>> s = 'foo'\n>>> int(s)\nTraceback (most recent call last):\n  File \"\", line 1, in \nValueError: invalid literal for int() with base 10: 'foo'\n>>>\n</pre>\n", "senID": 5}, {"text": ["Always surround conversions of data with a try:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n try:\n   s = 'foo'\n   i = int(s)\nexcept ValueError, ex:\n   MessageBox('Try again!')\n</code>\n</pre>\n", "senID": 7}], [{"text": ["Here's how your code should be for your expected output:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def times4():  \n    result = droid.dialogGetInput('Input', 'Enter a number between 1 and 10').result\n    number = int(result)\n\n    if number &gt;= 1 and number &lt;= 10:\n        number4 = number * 4  \n        droid.dialogCreateAlert('%i' % number, '%i * 4 = %i' % (number, number4))  \n        droid.dialogSetPositiveButtonText('Ok')  \n        droid.dialogShow()  \n        droid.dialogGetResponse()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Actually, dialogGetInput returns an object of class 'Result.", "' I'm having similar difficulty, because int() doesn't accept 'Result' as an argument.", "I'm not finding any reference in SL4A for what properties or methods the Result class supports."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Andrew"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]