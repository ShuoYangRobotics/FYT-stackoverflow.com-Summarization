[[{"text": ["noes = map(str, range(1, 16)) assuming you really want strings.", "If not, then noes = range(1, 16) will suffice."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "noes = map(str, range(1, 16))", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "noes = range(1, 16)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["If you're after a list of strings, you can use:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = [str(n) for n in range(1,16)] # or xrange if you wish\n&gt;&gt;&gt; x\n['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']\n</code>\n</pre>\n", "senID": 1}, {"text": ["A list of numbers can be made with either of the following:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n x = [n for n in range(1,16)]\nx = range(1,16)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["noes = range(1, 16)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "noes = range(1, 16)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["You can use map(str, range(1, 16) or [str(i) for i in range(1, 16] to get strings."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "map(str, range(1, 16)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "[str(i) for i in range(1, 16]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["range."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "range", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#range"}]}, {"text": ["xrange is similar to range, but doesn't make a list, but can be used in for loops, for example."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "xrange", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#xrange"}, {"text": "range", "childNum": 0, "tag": "code", "childList": []}, {"text": "for", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["[str(i) for i in xrange(1, 16)]"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "[str(i) for i in xrange(1, 16)]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["That's not numbers.", "You have quoted them, so they are strings.", "Numbers would be "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n noes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n</code>\n</pre>\n", "senID": 1}, {"text": ["And shorter would be "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n noes = range(1,16)\n</code>\n</pre>\n", "senID": 3}, {"text": ["I'd recommend you to read a Python tutorial."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Use "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n noes = range(1, 15);\n</code>\n</pre>\n", "senID": 1}, {"text": ["Or, if you really need strings:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n noes = [];\nfor i in range(1, 15):\n  noes.append(str(i))\n</code>\n</pre>\n", "senID": 3}], [{"text": ["I presume you then use this like"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n if AgeString in noes:\n    print \"U R 2 yng!\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["It would probably be cleaner to do logical comparison, ie"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if int(AgeStr) &lt; 16:\n    print \"Too young\"\n</code>\n</pre>\n", "senID": 3}]]