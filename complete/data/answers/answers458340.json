[[{"text": ["I have been fighting with printed (or PDF) output from Python for 8 years now and so far I came across the following approaches (in order of personal preference):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 7, "lis": [{"text": "Using ", "tag": "none", "senID": 1}, {"text": "Use plain text output. You can't get any faster. We use that for a few hundred pages per day.", "tag": "none", "senID": 2}, {"text": "Use XSLT-FO. You also have to call a Java based rendering engine like FOB. Might result in performance issues but can be mitigated by having a long running Java server process  - same approach than with Jasper. We use that for a few hundred pages per day but writing XSLT-FO documents made my head hurt. Not used for new code.", "tag": "none", "senID": 3}, {"text": "Generate ", "tag": "none", "senID": 4}, {"text": "PDF generation with the ", "tag": "none", "senID": 5}, {"text": "Directly generate Postscript. Strange but you nearly can't get more in terms of speed and control. We used that to generate contact sheets with a few hundred thousand Jpegs per day. Takes fiddling but is fun.", "tag": "none", "senID": 6}, {"text": "use ", "tag": "none", "senID": 7}]}, {"text": ["For orders, invoices and the like I highly recommend JasperReports.", "The ability to use a visual editor to define the layout is a huge time saver."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["There's LaTeX.", "Not sure if that falls into the \"as easy to use as html\" category, but it's not hard. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["By print do you mean a printer?", "If so, check ReportLab's PDF tools."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "print", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "ReportLab", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.reportlab.org/"}]}, {"code": "<pre>\n<code>\n from reportlab.pdfgen import canvas\nfrom reportlab.lib.units import cm\nc = canvas.Canvas(\"hello.pdf\")\nc.drawString(9*cm, 22*cm, \"Hello World!\")\nc.showPage()\nc.save()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["XSL Formatting Objects (part of the The Extensible Stylesheet Language Family (XSL)) if you need total control over printed documents."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "The Extensible Stylesheet Language Family (XSL)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.w3.org/Style/XSL/"}, {"text": "total", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["Then, you'll need a Formatting Objects processor, like FOP or Antenna house, to transform the XSL-FO document into PDF, or PostScript."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "FOP", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://xmlgraphics.apache.org/fop/"}, {"href": "http://www.antennahouse.com/", "text": "Antenna house", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["You might consider Sphinx, a package that translates reStructuredText files into various output formats, including HTML, and LaTeX, for printable PDF.", "It's licensed under BSD and is now the official Python documentation tool."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Sphinx", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sphinx.pocoo.org/"}]}], [{"text": ["What's wrong with just using Qt's native printing?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Qt's native printing", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://doc.trolltech.com/4.3/printing.html"}]}], [{"text": ["Or if you're on a mac, you could check out quartz bindings for Python, but it's obviously not GPL."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "quartz bindings for Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://developer.apple.com/DOCUMENTATION/GraphicsImaging/Conceptual/drawingwithquartz2d/dq_python/chapter_17_section_1.html"}]}]]