[[{"text": ["You should do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\na, b = sys.argv[1:2]\nsumm = int(a) + int(b)\nprint \"sum is\", summ\n</code>\n</pre>\n", "senID": 1}, {"text": ["There is no need for str() when printing an integer.", "But you should use int() if you want to add a and b as integers."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The error list index out of range means that you are trying to access a list item that is outside the bounds of the list."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "list index out of range", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; mylist = ['hello', 'world']\n&gt;&gt;&gt; print mylist[2]\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code>\n</pre>\n", "senID": 2}, {"text": ["In your case, the error comes from either sys.argv[1] or sys.argv[2]."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "sys.argv[1]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "sys.argv[2]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Make sure you actually pass something to the program from the command line."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Assuming your inputs are integers:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nsumm = sum(map(int,sys.argv[1:])\nprint \"sum is \", summ\n</code>\n</pre>\n", "senID": 1}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import sys\nsumm = sum(int(i) for i in sys.argv[1:])\nprint \"sum is \", summ\n</code>\n</pre>\n", "senID": 3}, {"text": ["If not, change int to float."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The second method is probably more pythonic, but the first is a little faster in this instance."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;import timeit\n&gt;&gt;&gt;t1 = timeit.Timer(\"sum(map(int,['3','5','7','9']))\")\n&gt;&gt;&gt;t2 = timeit.Timer(\"sum(int(i) for i in ['3','5','7','9'])\")\n&gt;&gt;&gt;print t1.timeit()\n3.0187220573425293\n&gt;&gt;&gt;print t2.timeit()\n3.4699549674987793\n</code>\n</pre>\n", "senID": 6}], [{"code": "<pre>\n<code>\n su = int(a) + int(b)\nprint(\"sum is %d\" % su)\n</code>\n</pre>\n", "senID": 0}, {"text": ["And you should be careful with your variable naming.", "sum shadows the built-in, it's not a good practice to do that (that is, don't name variables as built-in functions or any globally defined name)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "sum", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["If your error is \"list index out of range\", then the problem is that your list doesn't have enough items.", "Which list?", "The only list you're using is sys.argv, so to populate it, you need to pass more items on the command line."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "\"list index out of range\"", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "list", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "sys.argv", "childNum": 1, "tag": "strong", "pos": 2, "childList": [{"text": "sys.argv", "tag": "code"}]}, {"text": "sys.argv", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Alternatively, check for the length of the argument list with len(sys.argv) and prompt interactively (e.g.", "using raw_input()) to get the values if they're not in sys.argv."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "len(sys.argv)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "raw_input()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "sys.argv", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["If you wish to sum the numbers as floating points number use \"float\" instead of \"int\", like in the following snippet."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\ntry:\n   a, b = sys.argv[1:3]\n   print \"sum is \", float(a) + float(b)\nexcept ValueError:\n   print \"please give me two numbers to sum\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["Beware that floating points are different from real numbers, so that you could obtain seemingly \"strange\" results about which there is a wealth of documentation on the web."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Thanks to every one.", "I got the answer"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["for i in range (1,51):\n    if i%5==0:\n    \tprint i,\"\\n\"\n    else:\n    \tprint  i,"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]