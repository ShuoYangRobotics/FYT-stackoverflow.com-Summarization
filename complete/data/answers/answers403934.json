[[{"text": ["If you are planning to use any kind of SCM then you are going to be screwed.", "Having one file is a guaranteed way to have lots of collisions and merges that will be painstaking to deal with over time."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Stick to conventions and break apart your files.", "If nothing more than to save the guy who will one day have to maintain your code..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If your code is going to work together all the time anyway, and isn't useful separately, there's nothing wrong with keeping everything in one file.", "I can think of at least popular package (BeautifulSoup) that does this.", "Sure makes installation easier."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Of course, if it seems, down the road, that you could use part of your code with another project, or if maintainance starts to be an issue, then worry about organizing your project differently.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It seems to me from the questions you've been asking lately that you're worrying about all of this a bit prematurely.", "Often, for me, these sorts of issues are better tackled a little later on in the solution.", "Especially for smaller projects, my goal is to get a solution that is correct, and then optimal."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "then", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}], [{"text": ["It's always a now verses then argument.", "If you're under the gun to get it done, do it.", "Source control will be a problem later, as with many things there's no black and white answer.", "You need to be responsible to both your deadline and the long term maintenance of the code."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If that's the best way to organise it, you're probably doing something wrong."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If it's more than just a toy program or a simple script, then you should break it up into separate files, etc.", "It's the only sane way of doing it.", "When your project gets big enough that you need someone else helping on it, then it will make the SCM a whole bunch easier."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Additionally, sooner or later you are going to need to add a separate utility to your project, that is going to need some common code/structures.", "It's far easier to do this if you have separate source files than if you have just one big one."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Since Calling from a parent file in Python indicates serious design problems, I'd say that you have two choices."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Calling from a parent file in Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/403822/calling-from-a-parent-file-in-python"}]}, {"text": ["A module (a single file) should be a logical piece of related code.", "Not everything.", "Not a single class definition.", "There's a middle ground of modularity.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Additionally, there should be a proper one-way dependency graph from main program to components (which do NOT depend on the main program) to utility libraries and what-not (that do not know about the components OR the main program.  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Circular (or mutual) dependencies often indicate a design problem.", "Callbacks are one way out of the problem.", "Another way is to decompose the circular elements to get a proper one-way graph."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Looking at your earlier questions I would say all code in one file would be a good intermediate state on the way to a complete refactoring of your project.", "To do this you'll need a regression test suite to make sure you don't break the project while refactoring it."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "all code in one file would be a good intermediate state", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "complete refactoring of your project", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "regression test suite", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["Once all your code is in one file, I suggest iterating on the following:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Once all your code is in one file", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Depending on the size of your project, it shouldn't take too many iterations for you to reach something reasonable."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "it shouldn't take too many iterations", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]]