[[{"text": ["Useful Python XML parsers:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Any of those is better than trying to update the XML file as strings of text."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["What that means to you:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Open your file with an XML parser of your choice, find the node you're interested in, replace the value, serialize the file back out."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["What you really want to do is use an XML parser and append the new elements with the API provided."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Then simply overwrite the file."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The easiest to use would probably be a DOM parser like the one below:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["http://docs.python.org/library/xml.dom.minidom.html"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://docs.python.org/library/xml.dom.minidom.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.dom.minidom.html"}]}], [{"text": ["While I agree with Tim and Oben Sonne that you should use an XML library, there are ways to still manipulate it as a simple string object.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I likely would not try to use a single file pointer for what you are describing, and instead read the file into memory, edit it, then write it out."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n inFile = open('file.xml', 'r')\ndata = inFile.readlines()\ninFile.close()\n# some manipulation on `data`\noutFile = open('file.xml', 'w')\noutFile.writelines(data)\noutFile.close()\n</code>\n</pre>\n", "senID": 2}], [{"text": ["The quick and easy way, which you definitely should not do (see below), is to read the whole file into a list of strings using readlines().", "I write this in case the quick and easy solution is what you're looking for."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "should not do", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Just open the file using open(), then call the readlines() method.", "What you'll get is a list of all the strings in the file.", "Now, you can easily add strings before the last element (just add to the list one element before the last).", "Finally, you can write these back to the file using writelines()."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["An example might help:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n my_file = open(filename, \"r\")\nlines_of_file = my_file.readlines()\nlines_of_file.insert(-1, \"This line is added one before the last line\")\nmy_file.writelines(lines_of_file)\n</code>\n</pre>\n", "senID": 3}, {"text": ["The reason you shouldn't be doing this is because, unless you are doing something very quick n' dirty, you should be using an XML parses.", "This is a library that allows you to work with XML intelligently, using concepts like DOM, trees, and nodes.", "This is not only the proper way to work with XML, it is also the standard way, making your code both more portable, and easier for other programmers to understand. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Tim's answer mentioned checking out http://docs.python.org/library/xml.dom.minidom.html for this purpose, which I think would be a great idea."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "http://docs.python.org/library/xml.dom.minidom.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.dom.minidom.html"}]}], [{"text": ["You should read the XML file using specific XML modules.", "That way you can edit the XML document in memory and rewrite your changed XML document into the file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Here is a quick start: http://docs.python.org/library/xml.dom.minidom.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/xml.dom.minidom.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/xml.dom.minidom.html"}]}, {"text": ["There are a lot of other XML utilities, which one is best depends on the nature of your XML file and in which way you want to edit it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["To make this process more robust, you could consider using the SAX parser (that way  you don't have to hold the whole file in memory), read &amp; write till the end of tree and then start appending."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]