[[{"text": ["A word of caution: It is much more difficult to write a complete parser for plain TeX than what you might think.", "The TeX-level (not LaTeX) \\def command actually extends TeX's syntax.", "For example, \\def\\foo #1.", "{{\\bf #1}} will expand \\foo goo.", "into goo - Notice that the dot became a delimiter for the foo macro!", "Therefore, if you have to deal with any form of TeX, without restrictions on which packages may be used, it is not recommended to rely on simple parsing.", "You need TeX rendering.", "catdvi is what I use, although it is not perfect."], "childNum": 6, "tag": "p", "senID": 0, "childList": [{"text": "\\def", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "\\def\\foo #1.{{\\bf #1}}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "\\foo goo.", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "goo", "childNum": 0, "tag": "strong", "pos": 4, "childList": []}, {"text": "any", "childNum": 0, "tag": "em", "pos": 5, "childList": []}, {"text": "catdvi", "tag": "a", "pos": 7, "childList": [], "childNum": 0, "href": "http://catdvi.sourceforge.net/"}]}], [{"text": ["Try detex (shipped with most *TeX distributions), or the improved version: http://code.google.com/p/opendetex/"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "detex", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://code.google.com/p/opendetex/", "text": "http://code.google.com/p/opendetex/", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Edit: oh, I see you tried detex already.", "Still, opendetex might work for you."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["As you're considering using TeX itself for doing the rendering, I suspect that performance is not an issue.", "In this case you've got a couple of options: dvi2txt to fetch your text from a single dvi file (be prepared to generate one for each label) or even rendering dvi into raster images, if it's ok for you - that's how hevea or latex2html treats formulas."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["This is your mistake.", "You shouldn't have done that."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Use RST or some other -- better -- markup language."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Use Docutils to create LaTeX and HTML from the RST source."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Docutils", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docutils.sourceforge.net/"}]}], [{"text": ["I would try pandoc [enter link description here][1].", "It is written in Haskell, but it is a really nice latex 2 whatever converter.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["[1]: http://johnmacfarlane.net/pandoc/index.html . "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://johnmacfarlane.net/pandoc/index.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://johnmacfarlane.net/pandoc/index.html"}]}], [{"text": ["Building the other post Eduardo Leoni, I was looking at pandoc and I see that it comes with a standalone executable but also on this page it promises a way to build to a C-callable system library.", "Perhaps this is something that you can live with?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "this page", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://johnmacfarlane.net/pandoc/extras.html"}]}]]