[[{"text": ["You have a tries variable there.", "How about checking it inside while and if it reaches a certain value, you print a message to the user and exit ;)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I think what this exercise wants to teach you is the break statement.", "Before you had only one exit condition (guessing the number) but now you have also the limited number of tries. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "break", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["One straight way to do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import random\n\nprint \"\\tWelcome to 'Guess My Number'!\"\nprint \"\\nI'm thinking of a number between 1 and 100.\" \nprint \"Try to guess it in as few attempts as possible.\\n\"\n\n# set the initial values\nthe_number = random.randrange(100) + 1\n\nlimit = 5\ntries = 0\n\n# guessing loop\nwhile True: # we will test the conditions separately in the loop, not here\n    # take a guess\n    guess = int(raw_input(\"Take a guess: \"))\n    tries += 1 \n\n    # first check the number\n    if (guess &gt; the_number):\n        print \"Lower...\"\n    elif (guess &lt; the_number):\n        print \"Higher...\"\n    else: # it can only be equal here\n        print \"You guessed it!  The number was\", the_number\n        print \"And it only took you\", tries, \"tries!\\n\"\n        break # exit the while loop\n\n    # now the tries:\n    if tries == limit:\n        print \"You've used all %d of your attempts \\\nand didn't get the right answer. Shame on You!\" % limit\n        break\n\nraw_input(\"\\n\\nPress the enter key to exit.\")\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Something like this: "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import random\n\nprint \"\\tWelcome to 'Guess My Number'!\"\nprint \"\\nI'm thinking of a number between 1 and 100.\" \nprint \"Try to guess it in as few attempts as possible.\\n\"\n\n# set the initial values\nthe_number = random.randrange(100) + 1\nguess = int(raw_input(\"Take a guess: \"))\ntries = 1\nmax_tries = 5\n\n# guessing loop\nwhile ((tries &lt; max_tries) &amp;&amp; (guess != the_number)):\n    if (guess &gt; the_number):\n        print \"Lower...\"\n    else:\n        print \"Higher...\"\n    tries += 1\n    guess = int(raw_input(\"Take a guess: \"))\n\nif tries == max_tries:\n    print \"Max # of tries exceeded\"\nelse:\n    print \"You guessed it!  The number was\", the_number\n    print \"And it only took you\", tries, \"tries!\\n\"\n\nraw_input(\"\\n\\nPress the enter key to exit.\")\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You don't have a loop around the guessing, which means the guessing happens only once.", "You need to put the whole guessing and testing structure inside some sort of loop (for or while)."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "for", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "while", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Your attempt is almost correct\".", "There are two problems I can see.", "The first lies here:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "almost", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print \"You guessed it!  The number was\", the_number\nprint \"And it only took you\", tries, \"tries!\\n\"\n</code>\n</pre>\n", "senID": 1}, {"text": ["Think about how you can execute the above only if max tries was not exceeded.", "Hint: You need to add one line and make a minor adjustment to the two lines above."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "not", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["The second lies here:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n else:\n        print \"You've used all \" + limit -1 +\"of your attempts \\\nand didn't get the right answer. Shame on You!\"\n</code>\n</pre>\n", "senID": 4}, {"text": ["Will that else block ever execute?", "Take a look back at the while condition to see why.", "Again, there's a simple way to fix this."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "else", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "while", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["I'm just starting with programming and Python as well, using the same book.", "Here is what I came up with, and it seems to work!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # Guess My Number\n#\n# The computer picks a random number between 1 and 100\n# The player tries to guess it and the computer lets\n# the player know if the guess is too high, too low\n# or right on the money\n\nimport random  \n\nprint(\"\\tWelcome to 'Guess My Number'!\")\nprint(\"\\nI'm thinking of a number between 1 and 100.\")\nprint(\"Try to guess it in as few attempts as possible.\\n\")\n\n# set the initial values\nthe_number = random.randint(1, 100)\nguess = int(input(\"Take a guess: \"))\n\ntries = 1\nmax_tries = 8\n\n# guessing loop\nwhile tries &lt; max_tries and guess != the_number:\n\n    if guess &gt; the_number:\n        print(\"Lower...\")\n    elif guess &lt; the_number:\n        print(\"Higher...\")\n\n    guess = int(input(\"Take a guess: \"))\n    tries += 1\n\n# having it stop if person uses maximum number of tries\nif tries &gt;= max_tries:\n\n    print(\"Ruh roh.  Looks like you're finished, pardner. The number was\", the_number)\n\n# text if person gets the right number within the number of tries.\nelse:\n    if guess == the_number:\n        print(\"You guessed it!  The number was\", the_number)\n        print(\"And it only took you\", tries, \"tries!\\n\")\n\ninput(\"\\n\\nPress the enter key to exit.\")\n</code>\n</pre>\n", "senID": 1}]]