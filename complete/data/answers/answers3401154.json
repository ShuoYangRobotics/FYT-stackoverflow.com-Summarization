[[{"text": ["You want this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [x[0].split('=') for x in li]\n# prints [['a', 'b'], ['c', 'd']]\n</code>\n</pre>\n", "senID": 1}, {"text": ["To grab a question from a comment further down the post, the reason split works for x[0] is that x represents the inner list.", "That's accomplished by the for x in li.", "Also, I fixed mine to read for x in li and not for x in test as I had assigned your examples to a variable called 'test' on my system."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "for x in li", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "for x in li", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "for x in test", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["You can use map():"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "map()", "tag": "a", "pos": 0, "childList": [{"text": "map()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html#map"}, {"text": "map()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; li = [['a=b'],['c=d']]\n&gt;&gt;&gt; map(lambda x: x[0].split('='), li)\n[['a', 'b'], ['c', 'd']]\n</code>\n</pre>\n", "senID": 1}, {"text": ["This traverses the list li and applies the lambda function to every element.", "As every element of the list is again a list with one element, x[0] takes this element, which is a string, splits it and returns a new list with both values."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "li", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "lambda", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "x[0]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Warning - its been a while since I did any python, but your issue is more general."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You are correct in that split applies to strings. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["What you need to do is split the VALUE contained in your list not the list itself."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["So you would do something like"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n newValue = split('=', li[0][0]) \nli[0] = newValue\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Is this what you are looking for ?", "map(lambda y:y.split('='),map(lambda x:x[0], li))"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "map(lambda y:y.split('='),map(lambda x:x[0], li))", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["Presuming each sublist consists of individual strings of the form a=b:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "a=b", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; [el[i].split('=') for el in li for i in range(len(el))]\n[['a', 'b'], ['c', 'd']]\n</code>\n</pre>\n", "senID": 1}, {"text": ["(Indeed, what you're splitting is the inner string a=b.", "So the split() string method works fine."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "a=b", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "split()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["EDIT: A much more elegant way of doing this double list comprehension is:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; [a.split('=') for el in li for a in el]\n[['a', 'b'], ['c', 'd']]\n</code>\n</pre>\n", "senID": 4}, {"text": ["There have been a number of good suggestions made, so the OP should be able to learn a good amount of Python for it.", "Important to remember is that what is being split is li[i][j], ie an item of the list that is an item of the list li."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["You can do it with this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n [k[0].split(\"=\") for k in li]\n</code>\n</pre>\n", "senID": 1}]]