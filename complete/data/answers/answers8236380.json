[[{"text": ["Python does not require semi-colons to terminate statements.", "Semi colons can be used to delimit statements if you wish to put multiple statements on the same line."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "require", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "can", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Now, why is this allowed?", "It's a simple design decision.", "I don't think Python needs this semi-colon thing, but somebody thought it would be nice to have and added it to the language."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "why", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}], [{"text": ["http://docs.python.org/reference/compound_stmts.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/reference/compound_stmts.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/compound_stmts.html"}]}, {"text": ["Summarizing:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n compound_stmt ::=  if_stmt\n                   | while_stmt\n                   | for_stmt\n                   | try_stmt\n                   | with_stmt\n                   | funcdef\n                   | classdef\n                   | decorated\nsuite         ::=  stmt_list NEWLINE | NEWLINE INDENT statement+ DEDENT\nstatement     ::=  stmt_list NEWLINE | compound_stmt\nstmt_list     ::=  simple_stmt (\";\" simple_stmt)* [\";\"]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["A quote from \"When Pythons Attack\""], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "When Pythons Attack", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://onjava.com/pub/a/python/2004/02/05/learn_python.html"}]}], [{"text": ["As everyone else has noted, you can use semicolons to separate statements.", "You don't have to, and it's not the usual style."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "can", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "have", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["As for why this is useful, some people like to put two or more really trivial short statements on a single line (personally I think this turns several trivial easily skimmed lines into one complex-looking line and makes it harder to see that it's trivial)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But it's almost a requirement when you're invoking Python one liners from the shell using python -c '&lt;some python code&gt;'.", "Here you can't use indentation to separate statements, so if your one-liner is really a two-liner, you'll need to use a semicolon.", "And if you want to use other arguments in your one-liner, you'll have to import sys to get at sys.argv, which requires a separate import statement.", "e.g."], "childNum": 5, "tag": "p", "senID": 2, "childList": [{"text": "python -c '&lt;some python code&gt;'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "can't", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "sys", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "sys.argv", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "import", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n python -c \"import sys; print ' '.join(sorted(sys.argv[1:]))\" 5 2 3 1 4\n1 2 3 4 5\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Multiple statements on one line may include semicolons as separators.", "For example: http://docs.python.org/reference/compound_stmts.html In your case, it makes for an easy insertion of a point to break into the debugger."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/reference/compound_stmts.html", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/compound_stmts.html"}]}, {"text": ["Also, as mentioned by Mark Lutz in the Learning Python Book, it is technically legal (although unnecessary and annoying) to terminate all your statements with semicolons. "], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Learning Python Book", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://books.google.com/books?id=1HxWGezDZcgC&pg=PA390&lpg=PA390&dq=semicolons+technically+legal+python&source=bl&ots=LjGfWKb6lW&sig=PzxNVu0ZoEQA-KxUZ1W5OB9qTJw&hl=en&ei=dVLMTun4FoTC2wWkm-ipDw&sa=X&oi=book_result&ct=result&resnum=1&ved=0CBwQ6AEwAA#v=onepage&q=semicolons%20technically%20legal%20python&f=false"}, {"text": "all", "childNum": 0, "tag": "em", "childList": []}]}], [{"text": ["Python uses the ; as a separator, not a terminator.", "You can also use them at the end of a line, which makes them look like a statement terminator, but this is legal only because blank statements are legal in Python -- a line that contains a semicolon at the end is two statements, the second one blank."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": ";", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "look", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}], [{"text": ["semicolons are part of valid syntax: http://docs.python.org/reference/compound_stmts.html"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/reference/compound_stmts.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/reference/compound_stmts.html"}]}], [{"text": ["Python does let you use a semi-colon to denote the end of a statement if you are including more than one statement on a line."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Semicolons can be used to one line two or more commands.", "They don't have to be used, but they aren't restricted."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://www.tutorialspoint.com/python/python_basic_syntax.htm"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.tutorialspoint.com/python/python_basic_syntax.htm", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.tutorialspoint.com/python/python_basic_syntax.htm"}]}]]