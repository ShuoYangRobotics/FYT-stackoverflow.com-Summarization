[[{"text": ["There are many ways to do this, one way is to use str.partition:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "str.partition", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.partition"}]}, {"code": "<pre>\n<code>\n text='./money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]'\nbefore,_,after = text.partition('[')\nprint(after[:-1])\n# 27-10-2011 17:07:02\n</code>\n</pre>\n", "senID": 1}, {"text": ["Another is to use str.split:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "str.split", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.split"}]}, {"code": "<pre>\n<code>\n before,after = text.split('[',1)\nprint(after[:-1])\n# 27-10-2011 17:07:02\n</code>\n</pre>\n", "senID": 3}, {"text": ["or str.find and str.rfind:"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "str.find", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#str.find"}, {"href": "http://docs.python.org/library/stdtypes.html#str.rfind", "text": "str.rfind", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n ind1 = text.find('[')+1\nind2 = text.rfind(']')\nprint(text[ind1:ind2])\n</code>\n</pre>\n", "senID": 5}, {"text": ["All these methods rely on the desired substring immediately following the first left-bracket [. "], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "[", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["The first two methods also rely on the desired substring ending at the next-to-last character in text.", "The last method (using rfind) searches from the right for the index of the right-bracket, so it is a little more general, and does not depend on quite so many (potential off-by-one) constants."], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "text", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "rfind", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["If your string has always the same structure this is probably the simplest solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n s = r'./money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]'\ns[s.find(\"[\")+1:s.find(\"]\")]\n</code>\n</pre>\n", "senID": 1}, {"text": ["Update:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["After seeing some of the other answers this is a slight improvement:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n s[s.find(\"[\")+1:-1]\n</code>\n</pre>\n", "senID": 4}, {"text": ["Exploiting the fact that the closing square bracket is the last character in your string."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["If the format is \"fixed\", you can also use this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = './money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]'\n&gt;&gt;&gt; s[-20:-1:]\n'27-10-2011 17:07:02'\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You can also use regular expression:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\n\ns = './money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]'\nprint re.search(r'\\[(.*?)\\]', s).group(1)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Try with a regex : "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import re\nre.findall(\".*\\[(.*)\\]\", './money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]')\n\n&gt;&gt;&gt; ['27-10-2011 17:07:02']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Probably the easiest way(if you know the string will always be in this format"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = './money.log_rotated.27.10.2011_17:15:01:[27-10-2011 17:07:02]'\n&gt;&gt;&gt; s[s.index('[') + 1:-1]\n'27-10-2011 17:07:02'\n</code>\n</pre>\n", "senID": 1}]]