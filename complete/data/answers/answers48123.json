[[{"text": ["I would say that it depends: if you find that using Glade you can build the apps you want or need to make than that's absolutely fine.", "If however you actually want to learn how GTK works or you have some non-standard UI requirements you will have to dig into GTK internals (which are not that complicated)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "have", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["Personally I'm usually about 5 minutes into a rich client when I need some feature or customization that is simply impossible through a designer such as Glade or Stetic.", "Perhaps it's just me.", "Nevertheless it is still useful for me to bootstrap window design using a graphical tool."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Stetic", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.mono-project.com/Stetic"}]}, {"text": ["My recommendation: if making rich clients using GTK is going to be a significant part of your job/hobby then learn GTK as well since you will need to write that code someday."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "will", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["P.S.", "I personally find Stetic to be superior to Glade for design work, if a little bit more unstable."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Stetic", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.mono-project.com/Stetic"}]}], [{"text": ["Use GtkBuilder instead of Glade, it's integrated into Gtk itself instead of a separate library."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The main benefit of Glade is that it's much, much easier to create the interface.", "It's a bit more work to connect signal handlers, but I've never felt that matters much."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Glade is very useful for creating interfaces, it means you can easily change the GUI without doing much coding.", "You'll find that if you want to do anything useful (e.g.", "build a treeview) you will have to get familiar with various parts of the GTK documentation  - in practice finding a good tutorial/examples. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I started out using glade, but soon moved to just doing everything in code.", "Glade is nice for simple things, and it's good when you're learning how GTK organizes the widgets (how things are packed, etc).", "Constructing everything in code, however, you have much more flexibility.", "Plus, you don't have the glade dependency."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["If you're writing a traditional GUI application which reuses a lot of standard components from GTK+ (buttons, labels, containers etc.", ") I'd personally go with Glade + Kiwi (a convenience framework for building GTK+ GUI applications). "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The single greatest advantage to using Glade is that it greatly reduces layout/packing code.", "Here's an extremely simply example which already shows the issues with manually laying out a GUI (without using any helper functions): "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n container = gtk.HBox()\nlabel = gtk.Label(str=\"test\")\ncontainer.add(label)\n</code>\n</pre>\n", "senID": 2}, {"text": ["For more examples take a look here.", "Even if you're writing a complicated custom widget you can always create a placeholder in Glade and replace that after instantiation. "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "look here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://marcin.af.gliwice.pl/if-then-else-20071113232114"}]}, {"text": ["It shouldn't be all too long now for the Glade team to release a new version of the designer (3.6.0).", "This new version will add support for GtkBuilder, which replaces libglade (the actual library that transforms the Glade XML files into a widget tree).", "The new Glade designer also once again adds support for defining catalogs (sets of widgets) in Python, so you can easily add your own custom widgets."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["I usually start with Glade until I come to a point where it doesn't have the features I need, e.g.", "creating a wizard.", "As long as I'm using the standard widgets that Glade provides, there's really no reason to hand-code the GUI."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The more comfortable I become with how Glade formats the code, the better my hand-coding becomes.", "Not to mention, it's real easy to use Glade to make the underlying framework so you don't have to worry about all the initializations."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I recommend using Glade for rapid development, but not for learning.", "Why?", "because some times you will need to tune up some widgets in order to work as you want they to work, and if you don't really know/understand the properties attributes of every widget then you will be in troubles."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["For quick and simple screens I use Glade.", "But for anything that needs finer levels of control, I create a custom classes for what I actually need (this is important, because it's too easy to get carried away with generalisations)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["With a skinny applications specific classes, I can rapidly change the look and feel application wide from a single place.", "Rather like using CSS to mantain consistency for web sites."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Personally I would recommend coding it out instead of using Glade.", "I'm still learning python and pyGtk but I will say that writing out the UI by hand gave me a lot of insight on how things work under the hood. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Once you have it learned I'd say to give glade, or other UI designers a try but definitely learn how to do it the \"hard\" way first."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["First, start to put this in perspective."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You will be using GTK.", "This is a huge C library built in 1993 using the best traditions of 1970s coding style.", "It was built to help implement the GIMP, a Photoshop competitor wanna-be with user interface blunders of legend.", "A typical gui field might have forty or more parameters, mostly repetitive, having getters and setters.", "There will be pain."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The GTK itself manages a complete dynamic type system in C using GObject.", "This makes debugging a special joy that requires manually walking through arrays of pointers to methods full of generic argument lists with implicit inheritance.", "You will also be jumping through Pango libraries when you least expect it, e.g., using a Pango constant for where in a label the ellipsis go when the page is small.", "Expect more pain."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["By now, you are probably vowing to wrap all your GTK interactions in a Model-View-Controller architecture specific to your application.", "This is good."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Using Glade, or gtkBuilder, or Stetic, will help coral the huge coupling problem of forty parameters to a function.", "Glade provides a basic GUI builder to drag and drop components together.", "The parameters and inherited parameters are somewhat separated out.", "The output of Glade is .glade XML file which you will then read in, attach your callbacks (\"signal handlers\") to identically named functions, and query or update the in-memory version of that XML to get widgets that you then use pyGTK to manipulate.", "Glade itself is a creaky and not well maintained.  "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Using pyGTK gives you annoyingly fine grained control in order to build your GUI.", "This will be verbose, copy-and-paste code.", "Each attribute will be a separate function call.", "The attribute setter does not return anything, so chaining the calls is out of the question.", "Usually, your IDE will give only minimal help on what functions mean and you will be constantly referring to DevHelp or some other tool."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["One would almost expect GTK GUIs were meant to fail."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]]