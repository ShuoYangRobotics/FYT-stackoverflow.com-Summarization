[[{"text": ["As other answers have said, you are looking for re.MULTILINE, but even with that your regex won't work."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "re.MULTILINE", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["$ matches the position before the line break, and ^ matches the start of a line, so $^ in the middle of a regex will never match.", "For example:"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "$", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "before", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "^", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "$^", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; re.search(\"^(.*)$^.*$\", multiline_string, re.M)    # won't match\n&gt;&gt;&gt; re.search(\"^(.*)$\\n^.*$\", multiline_string, re.M)  # will match\n&lt;_sre.SRE_Match object at 0xb7f3e5e0&gt;\n</code>\n</pre>\n", "senID": 2}, {"text": ["You need something to match the end of line characters between the $ and the ^."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "$", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "^", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Take a look at re.MULTILINE."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "re.MULTILINE", "tag": "a", "pos": 0, "childList": [{"text": "re.MULTILINE", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/re.html#re.MULTILINE"}, {"text": "re.MULTILINE", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["I quote:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You have to use re.MULTILINE ( or even re.DOTALL if you change regex and depending on what you actually want to match / do )"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://docs.python.org/library/re.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://docs.python.org/library/re.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/re.html"}]}, {"text": ["BTW, what are you doing with - ^(.*\\|.*)$^.", "*$ - that is not a very good regex!", "( ignoring the fact that you have the multiple $ and ^ which is the point of the question."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "^(.*\\|.*)$^.*$", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "$", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "^", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["I would refer to the python regex manual http://docs.python.org/library/re.html#re.MULTILINE"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://docs.python.org/library/re.html#re.MULTILINE", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/re.html#re.MULTILINE"}]}], [{"text": ["Prefixing your regex with (?m) should do what you need (tells the regex engine that it's going to receive multiline texts, and that ^/$ match the beginning/end of a line instead of the whole text)."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Edit: after looking at your regex a bit more, I think you also need to put (?s), meaning that you want dot to match newline characters.", "For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n (?m)(?s)^hello.*?world$\n</code>\n</pre>\n", "senID": 2}, {"text": ["correctly matched \"helloworld\" for me in a case like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n dssdf\nhello\nworld\nsdfasdf\n</code>\n</pre>\n", "senID": 4}], [{"text": ["To add to other answers.", "You can get away with putting the re.MULTILINE modifier directly into the regex:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n (?m)^(.*\\|.*)$\\n^.*$\n</code>\n</pre>\n", "senID": 1}]]