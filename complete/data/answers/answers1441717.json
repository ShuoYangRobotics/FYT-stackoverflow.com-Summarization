[[{"text": ["I am assuming you want static maps. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"src": "http://files.eduardoleoni.com/mapUS.png", "tag": "img", "senID": 1}, {"text": ["1) Get the shapefiles of the zip boundaries and state boundaries at census.gov: "], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "zip", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.census.gov/geo/www/cob/zt%5Fmetadata.html"}, {"href": "http://www.census.gov/geo/www/cob/st2000.html", "text": "state", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["2) Use the plot.heat function I posted in this SO question."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "SO question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1260965/developing-geographic-thematic-maps-with-r"}]}, {"text": ["For example (assumes you have the maryland shapefiles in the map subdirectory):"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n library(maptools)\n##substitute your shapefiles here\nstate.map &lt;- readShapeSpatial(\"maps/st24_d00.shp\")\nzip.map &lt;- readShapeSpatial(\"maps/zt24_d00.shp\")\n## this is the variable we will be plotting\nzip.map@data$noise &lt;- rnorm(nrow(zip.map@data))\n## put the lab point x y locations of the zip codes in the data frame for easy retrieval\nlabelpos &lt;- data.frame(do.call(rbind, lapply(zip.map@polygons, function(x) x@labpt)))\nnames(labelpos) &lt;- c(\"x\",\"y\")                        \nzip.map@data &lt;- data.frame(zip.map@data, labelpos)\n## plot it\npng(file=\"map.png\")\n## plot colors\nplot.heat(zip.map,state.map,z=\"noise\",breaks=c(-Inf,-2,-1,0,1,2,Inf))\n## plot text\nwith(zip.map@data[sample(1:nrow(zip.map@data), 10),] , text(x,y,NAME))\ndev.off()\n</code>\n</pre>\n", "senID": 5}], [{"text": ["There are many ways to do this in R (see the spatial view); many of these depend on the \"maps\" package."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "spatial view", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cran.r-project.org/web/views/Spatial.html"}, {"href": "http://cran.r-project.org/web/packages/maps/index.html", "text": "depend on the \"maps\" package", "childNum": 0, "tag": "a", "childList": []}]}, {"tag": "ul", "num": 4, "lis": [{"text": ["Check out this cool example of the US 2004 election.", "It ends up looking like this:"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "cool example of the US 2004 election", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.ai.rug.nl/~hedderik/R/US2004/"}, {"text": "", "childNum": 0, "tag": "img", "pos": 1, "childList": []}]}, {"text": ["Here's a slightly ugly example of a model that uses the \"maps\" package with \"lattice\"."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "that uses the \"maps\" package with \"lattice\".", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://addictedtor.free.fr/graphiques/sources/source_146.R"}]}, {"text": "Andrew Gelman made some very nice plots like this.  See, for instance, ", "tag": "none", "senID": 3}, {"text": ["Here's a very simple example using the \"gmaps\" package, which shows a map of Arrests by state for arrests per 100,000 for Murder:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "using the \"gmaps\" package", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cran.r-project.org/web/packages/gmaps/index.html"}]}]}], [{"text": ["Someone may have something more direct for you, but I found O'Reilly's 'Data Mashups in R' very interesting... in part, it's a spatial mapping of home foreclosure auctions."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://oreilly.com/catalog/9780596804770/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://oreilly.com/catalog/9780596804770/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://oreilly.com/catalog/9780596804770/"}]}], [{"text": ["There is a rich and sophisticated series of packages in R to plot, do analysis, and other functions related to GIS.", "One place to get started is the CRAN task view on Spatial Data:\nThis is a complex and sometimes arcane world, and takes some work to understand. "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Spatial Data", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://cran.r-project.org/web/views/Spatial.html"}]}, {"text": ["If you are looking for a free, very functional mapping application, may I suggest:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["MapWindow ( mapwindow.com)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Daniel Levine at TechCrunch Trends has done nice things with the maps package in R.  He has code available on his site, too."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "Daniel Levine at TechCrunch Trends", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://trends.techcrunch.com/"}, {"text": "maps", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Paul's suggestion of looking into Processing - which Ben Fry used to make zipdecode - is also a good one, if you're up for learning a (Java-like) new language."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Depending on your application, a long way around might be to use something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://googlemapsmania.blogspot.com/2006/07/new-google-maps-us-zip-code-mashups.html"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://googlemapsmania.blogspot.com/2006/07/new-google-maps-us-zip-code-mashups.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://googlemapsmania.blogspot.com/2006/07/new-google-maps-us-zip-code-mashups.html"}]}, {"text": ["To map your data.", "If that wasn't quite what you wanted, you can get raw zip code shapefiles from census.gov and do it manually, which is quite a pain."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Also, if you haven't seen it, this is a neat way to interact with similar data, and might offer some pointers:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["http://benfry.com/zipdecode/"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://benfry.com/zipdecode/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://benfry.com/zipdecode/"}]}], [{"text": ["Check out this excellent online visualization tool by IBM\nhttp://manyeyes.alphaworks.ibm.com/manyeyes/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://manyeyes.alphaworks.ibm.com/manyeyes/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://manyeyes.alphaworks.ibm.com/manyeyes/"}]}, {"text": ["EDIT FYI, ManyEyes uses the Prefuse visualization toolkit for some of its viz.", "Even though it is a java-based framework, they also provide a Flash/ActionScript tool for the web."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "Prefuse visualization toolkit", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://prefuse.org/gallery/"}]}], [{"text": ["In Python, you can use shapefiles from the US census along with the basemap package.", "Here is an example of filling in states according to population."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "basemap", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "filling in states", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://matplotlib.svn.sourceforge.net/viewvc/matplotlib/trunk/toolkits/basemap/examples/fillstates.py?view=markup"}]}]]