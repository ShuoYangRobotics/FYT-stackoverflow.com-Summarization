[[{"text": ["I think you can simplify your statement with something like this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n filtered = filter(lambda x: x in words, common)\n</code>\n</pre>\n", "senID": 1}, {"text": ["That's checking each element in common for it's presence in words and removing based on it.", "You may need to try x not in words depending on what you're desired result is, but I think that should come close."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "x not in words", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["I wanted to add one other approach, that might also come close, though I would need to see examples of your initial lists to test it fully."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n filtered = [x for x in common if x in words]\n</code>\n</pre>\n", "senID": 4}, {"text": ["-- EDITED -- I had the syntax in the list comprehension backwards, but caught it after I saw the comment.", "Thanks!"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["You can't delete items from the list you're iterating over.", "Try iterating over a copy of the list instead."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for w in common[:]:\n    for i in range(1,n):\n        if not w in words[i]:\n            common.remove(w)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["You are modifying the list while trying to iterate through it.", "You could modify the first line of the code to iterate through a copy of the list (using common[:])."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["From the Python docs:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "the Python docs", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/controlflow.html"}]}], [{"text": ["If you delete (say) item 5, then the old item 6 will now be item 5.", "So if you think to move to item 6 you will skip it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Is it possible to iterate backwards over that list?", "Then index-changes happen in parts you already processed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Unfortunately, I didn't have cookies enabled when I posted, so I'm stuck with adding an answer as the only apparent way of replying.", "Thank you all for your assistance.", "Iterating over a copy did work, of course. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]