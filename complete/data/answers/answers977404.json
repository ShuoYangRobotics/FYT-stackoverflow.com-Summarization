[[{"text": ["There are two things that are relevant between C++ and Python that will affect your time-to-develop any project including a game.", "There are the languages themselves and the libraries.", "I've played with the SDL to some extent and peeked at PyGame and for your specific instance I don't think the libraries are going to be much of a factor.", "So I'll focus on the languages themselves."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Python is a dynamically-typed, garbage-collected language.", "C++ is a statically-typed, non-garbage-collected language.", "What this means is that in C++ a lot of your development time will be spent managing memory and dealing with your type structure.", "This affords you a lot of power, but the question is do you really need it?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If you're looking to write a simple game with some basic graphics and some good gameplay, then I don't think you truly need all the power that C++ will give you.", "If you're looking to write something that will push the envelope, be the next A-list game, be the next MMO, fit on a console or a handheld device, then you will likely need the power that C++ affords."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["The power of Python is in it's ability to allow you to focus more on the problem than having to deal with testing low-level issues such as memory allocation.", "I can't count how many times days of development have been wasted tracking down memory leaks in C or C++.", "An advantage of all high level languages."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Python is very easy to learn compared to C++,so you can be up to speed a lot quicker in doing basic programming tasks.", "Therefore, you'll move quicker into advanced tasks as well."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["C++ has a lot of power but has many ways to shoot yourself in the foot compared to Python(not saying that can't be done in Python).  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The compile/debug cycle can get old sometimes in C++ depending on what you're trying to do.", "Although technically speaking, everytime you run a Python script it's getting \"compiled\" per se, it's just a quicker cycle.", "A good IDE can help alleviate this is in Python by automatically checking your code for syntax errors while you type it out."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you have some code you want to test inside a larger project, it's a hassle sometimes to isolate it for testing.", "Whereas a good Python interpreter such as IPython, makes it easy to test a small bit of code and see how the language behaves and paste it into a file."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "IPython", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://ipython.scipy.org/moin/"}]}, {"text": ["Python also interfaces very well with existing C/C++ code through many numerous ways.", "That way if a new whizbang Python module you created is really slow, then you can soup it up in C/C++ then wrap it up with Python through ctypes, Boost::Python, or SWIG."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "ctypes", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/ctypes.html"}, {"href": "http://www.boost.org/doc/libs/1%5F39%5F0/libs/python/doc/index.html", "text": "Boost::Python", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://www.swig.org/", "text": "SWIG", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["And most of all, Python comes with a great standard library that has a lot of stuff figured out for you.", "It's just a matter of putting the pieces altogether!", "It has a great community behind it, so if it's not in the standard library, there's a good chance someone out there has solved the problem (PyGame, Numpy, SciPy, Pyserial, PyWin, etc.", ") for you.", "You can just google it, grab it and plop the code right into your program...away you go!"], "childNum": 5, "tag": "p", "senID": 6, "childList": [{"text": "PyGame", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.pygame.org/news.html"}, {"text": "Numpy", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://numpy.scipy.org/"}, {"text": "SciPy", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.scipy.org/"}, {"text": "Pyserial", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/PySerial"}, {"text": "PyWin", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://sourceforge.net/projects/pywin32/"}]}], [{"text": ["I've heard these complaints before about C++, but the fact is, programming in any language with which you are unfamiliar is time consuming.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I good C++ programmer can probably crank out the app much faster than an okay Python programmer and visa versa.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I think C++ often gets a bad rep because it allows you get much lower level - pointers, memory management, etc, and if you aren't used to thinking about such things, it can take a bit of time.", "If you are used to working in that environment, it can become second nature."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Unless choice of language is something imposed upon you by your company, team, client, etc.", "I usually recommend that folks go with the language they are most comfortable with OR most interested in learning more about.", "If speed is the issue you are concerned with, look at the learning curve for each language and your past experience.", "C++ tends to have a higher learning curve, but that too depends on the person."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Kindof a non-answer I know."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["If your main programming experience comes from short, math-based puzzle\nproblems, then it will probably be much quicker for you to learn Python than\nC++.", "Python's garbage collection is a big win if you haven't written large\nprograms before.", "Managing memory yourself is easy to get wrong and can be\nreally hard to debug.", "On a more subjective note, a lot people find Python more\nreadable.  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["That being said, static typing might be helpful if you're just making the move\nto larger programs.", "The compiler will catch some things that will only show up\nat run time with Python.", "And the freedom that Python's dynamic typing allows\nisn't always a boon if you're new to larger programs.", "While that freedom can be\na good thing for someone who has had some design experience, being forced to\nobey the constraints imposed by static typing might prevent you from making some\nbad choices if you're still learning."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For those reasons, I wouldn't rule out Java.", "It's statically typed and it's\ngarbage collected.", "It's also a simpler language than C++, but it has a similar\nsyntax.", "So if you want to work on future projects where performance is more\nimportant, you'll be in a good position to make the transition to C++.", "I'm not\nsure what the options are for Java game development libraries, but I know I've\nlost many hours to some pretty addicting Java games, so they must be out there.", "I don't know if Java will allow you to get as close to the metal as Pygame or\nSDL will, but in the beginning you probably won't be pushing the performance\nenvelope anyway.", "Making a complete game is a fair amount of work (more than most\naspiring game developers anticipate), and if your first project won't fit within\nthe performance constraints of Java then you might want to consider scaling it\nback anyway."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["It's time consuming because in C++ you have to deal with more low-level tasks.", "In Python you are free to focus on the development of the actual game instead of dealing with memory management etc."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["there are many things that make c++ longer to develop in.", "Its lower level, has pointers, different libraries for different systems, the type system, and there are others I am sure I am missing."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Short Answer"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Yes python is faster in terms of development time.", "There are many case studies in real life that show this.", "However, you don't want to do a 3d graphics engine in Python. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Python has some big advantages over programming languages like C++.", "I myself have programmed a lot with C++, C and other programming languages.", "Lately I am also programming in Python and I got to like it very much!"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["You can have a quick start with Python.", "Since it is rather simple to learn (at least with some programming experience and enough abstract thinking), you can have fast successes.", "Also the script-like behaviour makes starting easy and it is also possible, to quickly test some things in the integrated shell.", "This can also be good for debugging."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The whole language is packed with powerful features and it has a good and rather complete set of libraries."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["There was the argument that with the \"right library\" you can develop as quickly with C++ as with Python.", "This might (partly) be, but I myself have never experienced it, because such libraries are rare.", "I had also a big library at hand, but still lacked many valuable features in C++.", "The so called \"standard template library\" STL makes things even worse in my opinion.", "It is a really powerful library.", "But it is also that complex, that it adds the complexity of an additional programming language to C++.", "I really disliked it and in a company I worked in, much worktime was lost, because the compiler was not able to give useful error-output in case of errors in the STL."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Python is different.", "Instead of putting the \"speed of the programm\" on the throne -- sacrificing all else (as C++ and especially the STL does) -- it puts \"speed of development\" first.", "The language gives you a powerful toolkit and it is accompanied by a huge library.", "When you need speed, you can also implement time critical things in C or C++ and call it from Python."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["There is also at least one big online Game implemented in Python."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["I'd focus more on choosing a framework to build your game on than trying to pick a language.", "Unless the goal is to learn how games work inside and out, you're going to want to use a framework.", "Try out a couple, and pick the one that meets your requirements and feels nice to you."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Once you've picked the framework, the language choice becomes easy - use the language for which the framework is written."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["There are many options for game frameworks in C++ - pygame works for python.", "There are many that work with other languages/tools as well (including .NET, Lua, etc."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Do you have any programming experience at all?", "If not, I would start with Python which is easier to learn, even if it is not a better tool for game development.", "If you decide you want to program games for living, you'll probably need to switch to C++ at some point."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Note that SDL is currently slow, because it basically doesn't use hardware acceleration.", "SFML is an alternative of choice, and is available in Python too."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SFML", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://sfml-dev.org/"}]}], [{"text": ["It takes about the same amount of time to write the same code in pretty much all of the high level languages.", "The win is that in certain languages it is easier to use other peoples code.", "In a lot of Python/Ruby/Perl apps, you write 10% of the code and import libraries to do the other 90%.", "That is harder in C/C++ since the libraries have different interfaces and other incompatibilities."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["C++ vs Python is a pretty personal choice.", "Personally I feel I lose more time with not having the C/Java class system (more run time errors/debugging time, don't have anywhere near as good auto completion, need to do more documentation and optimization) than I gain (not having to write interfaces/stub function and being able to worry less about memory managment).", "Other people feel the exact opposite."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In the end it probably depends on the type of game.", "If your processor intensive go to C++ (maybe with a scripting language if it makes sense).", "Otherwise use whatever language you prefer "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Why limit yourself to those two options?", "With C# or Java you get access to a huge collection of useful libraries plus garbage collection and (in the case of C#) JIT compiling."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Furthermore, you're saying that you're looking to do game development, but from your task description it sounds like you're also looking at coding your own engine.", "Is that part of the exercise?", "Otherwise you should definitely take a look at the available Indie engines out there - lots are cheap of not free and open source."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Needless to say, working from an existing engine is definitely faster than going from scratch :)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Some people would argue that development time is slower in C++ when compared to Python. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Wouldn't it be the case that the time you saved in developing an application (or game) in python is the time you gonna use in improving performance after its developed?", "and in the later part when you have least options left?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It largely depends upon the purpose for which you are going to develop the application. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If you are thinking for an enterprise application in which case it is going to be hit by millions (web-app) or an application with focus on low-footprint, faster loading into memory, faster execution, then your choice is C++. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["If you are projecting your application for not being use at this level, surely Python is the choice to go for. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Maintainability is considerable, but disciplined code can overcome this."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Largely depends upon long term projections.", "On how serious and critical the application is going to be."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]]