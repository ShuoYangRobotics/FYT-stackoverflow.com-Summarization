[[{"text": ["In my case the cause was missing SERVER_EMAIL setting."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "SERVER_EMAIL", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://docs.djangoproject.com/en/dev/ref/settings/#std%3asetting-SERVER_EMAIL"}]}, {"text": ["The default for SERVER_EMAIL is 'root@localhost'.", "But many of email servers including \nmy email provider do not accept emails from such suspicious addresses.", "They silently drop the emails."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Changing the sender email address to 'django@my-domain.com' solved the problem.", "In settings.py:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n SERVER_EMAIL = 'django@my-domain.com'\n</code>\n</pre>\n", "senID": 3}], [{"text": ["My web hosting provider - Webfaction - only allows emails to be sent From an email that has been explicitly created in the administrator panel.", "Creating one fixed the problem."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Make sure your EMAIL_HOST and EMAIL_PORT are set up right in settings.py (these refer to your SMTP server).", "It might be assuming that you have an SMTP server running on localhost."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["To test this locally, run Python's built-in test SMTP server:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n python -m smtpd -n -c DebuggingServer localhost:1025\n</code>\n</pre>\n", "senID": 2}, {"text": ["Then set these values in your settings.py"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n EMAIL_HOST='localhost'\nEMAIL_PORT=1025\n</code>\n</pre>\n", "senID": 4}, {"text": ["Trigger a 500 error, and you should see the e-mail appear in the python smtpd terminal window."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}], [{"text": ["Although it's been a while, here's my response, so that other people can benefit in the future."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In my case, what was preventing emails to be sent to the ADMINS list, when an error occured, was an application specific setting.", "I was using django-piston, which provides the setting attributes PISTON_EMAIL_ERRORS and PISTON_DISPLAY_ERRORS.", "Setting these accordingly, enabled the application server to notify my by mail, whenever piston would crash."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Try this"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n # ./manage shell\n&gt;&gt;&gt; from django.core.mail import send_mail\n&gt;&gt;&gt; send_mail('Subject here', 'Here is the message.', 'from@example.com',['to@example.com'], fail_silently=False)\n</code>\n</pre>\n", "senID": 1}, {"text": ["With a to@example.com that you actually get email at."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["While likely not ideal, I have found using Gmail as the SMTP host works just fine.", "There is a useful guide at nathanostgard.com.  "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "nathanostgard.com", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://nathanostgard.com/archives/2007/7/2/gmail%5Fand%5Fdjango/"}]}, {"text": ["Feel free to post your relevant settings.py sections (including EMAIL_*, SERVER_EMAIL, ADMINS (just take out your real email), MANAGERS, and DEBUG) if you want an extra set of eyes to check for typos!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Make sure you have DEBUG = False"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]