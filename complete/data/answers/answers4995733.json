[[{"text": ["A solution:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nimport time\n\nprint \"processing...\\\\\",\nsyms = ['\\\\', '|', '/', '-']\nbs = '\\b'\n\nfor _ in range(10):\n    for sym in syms:\n        sys.stdout.write(\"\\b%s\" % sym)\n        sys.stdout.flush()\n        time.sleep(.5)\n</code>\n</pre>\n", "senID": 1}, {"text": ["The key is to use the backspace character '\\b' and flush stdout."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Something like this, assuming your terminal handles \\b"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\nimport time\n\ndef spinning_cursor():\n    cursor='/-\\|'\n    i = 0\n    while 1:\n        yield cursor[i]\n        i = (i + 1) % len(cursor)\n\n\nfor c in spinning_cursor():\n    sys.stdout.write(c)\n    sys.stdout.flush()\n    time.sleep(0.1)\n    sys.stdout.write('\\b')\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Sure, it's possible.", "It's just a question of printing the backspace character (\\b) in between the four characters that would make the \"cursor\" look like it's spinning ( -, \\, |, /)."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "\\b", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "-", "childNum": 0, "tag": "code", "childList": []}, {"text": "\\", "childNum": 0, "tag": "code", "childList": []}, {"text": "|", "childNum": 0, "tag": "code", "childList": []}, {"text": "/", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["For more advanced console manipulations, on unix you can use the curses python module, and on windows, you can use WConio which provides equivalent functionality of the curses library."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "curses python module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/curses.html#module-curses"}, {"href": "http://newcenturycomputers.net/projects/wconio.html", "text": "WConio", "childNum": 0, "tag": "a", "childList": []}]}], [{"code": "<pre>\n<code>\n #!/usr/bin/env python\n\nimport sys\n\nchars = '|/-\\\\'\n\nfor i in xrange(1,1000):\n    for c in chars:\n        sys.stdout.write(c)\n        sys.stdout.write('\\b')\n</code>\n</pre>\n", "senID": 0}, {"text": ["CAVEATS:\nIn my experience this doesn't work in all terminals.", "A more robust way to do this under Unix/Linux, be it more complicated is to use the curses module, which doesn't work under Windows.", "You probably want to slow it down some how with actual processing that is going on in the background."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "CAVEATS:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "curses", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/curses.html"}]}], [{"text": ["curses module.", "i'd have a look at the addstr() and addch() functions.", "Never used it though."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "curses module.", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/dev/howto/curses.html"}]}], [{"text": ["Grab the awesome progressbar module - http://code.google.com/p/python-progressbar/\nuse RotatingMarker."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "progressbar", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://code.google.com/p/python-progressbar/", "text": "http://code.google.com/p/python-progressbar/", "childNum": 0, "tag": "a", "childList": []}, {"text": "RotatingMarker", "childNum": 0, "tag": "code", "childList": []}]}], [{"code": "<pre>\n<code>\n import sys\nwhile True:\n    sys.sysout.write(\"\\\\\\b-\\b|\\b/\\b\")\n</code>\n</pre>\n", "senID": 0}, {"text": ["will print a spinning cursor."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}]]