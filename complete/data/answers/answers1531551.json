[[{"text": ["You can yank a paragraph with y}.", "This will not yank all the method if you have blank line though."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["There's a vim add-on script python_fn.vim which has, as one of its functions, a key binding to visually select a block of Python code using ]v.  You could then yank it with y as normal."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "python_fn.vim", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.vim.org/scripts/script.php?script%5Fid=30"}, {"text": "]v", "childNum": 0, "tag": "code", "childList": []}, {"text": "y", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["I usually just use visual block mode.", "Shift-V, move, and 'y'ank the highlighted block.", "There's only so many shortcuts I can keep in memory at once :) "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You can combine a search with yank, so if your function ends with return retval you can type y/return retval"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "return retval", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "y/return retval", "childNum": 0, "tag": "code", "childList": []}]}], [], [{"text": ["If you want to yank everything except the { use yi{ (or yi}).", "If you to include the curly braces use ya{ (or ya}).  "], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "{", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "yi{", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "yi}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "ya{", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "ya}", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["The i and a modifiers mean in and all.  "], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "i", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "a", "childNum": 0, "tag": "code", "childList": []}, {"text": "in", "childNum": 0, "tag": "em", "childList": []}, {"text": "all", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["To yank a word no matter where in the word you are: yiw"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "yiw", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["To yank the contents of parentheses: yi); if you want to include them, use ya("], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "yi)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "ya(", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["You can do the same for \" or ' with yi\", ya\" or yi' and ya'."], "childNum": 6, "tag": "p", "senID": 4, "childList": [{"text": "\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "'", "childNum": 0, "tag": "code", "childList": []}, {"text": "yi\"", "childNum": 0, "tag": "code", "childList": []}, {"text": "ya\"", "childNum": 0, "tag": "code", "childList": []}, {"text": "yi'", "childNum": 0, "tag": "code", "childList": []}, {"text": "ya'", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Of course, you're not limited to yanking.", "You can delete a word with diw or change it with ciw, etc... etc..."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "diw", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "ciw", "childNum": 0, "tag": "code", "childList": []}]}]]