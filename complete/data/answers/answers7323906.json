[[{"code": "<pre>\n<code>\n strings = \"foo bar apple\".split()\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n strings = r\"foo, bar, apple\".split(\", \")\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You could place all the strings in a text file, one string on each line.", "Then strings = list(open(\"datafile\", \"r\"))."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "strings = list(open(\"datafile\", \"r\"))", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["I would say that there is no easier way to create a list of strings than what you're already doing."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As other answers have pointed out, there are ways to put all the strings in one big string or file, then split them, but in my opinion that is more difficult to type than the quotes, particularly if you have a decent IDE that automatically closes string quotes.", "Also, the syntax you're already using is what anyone else who reads your code will expect; using something else just adds unnecessary confusion for almost zero gain."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["There is two major differences between what you posted:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The quotes \"\" and '' indicate that it is a string, just like [1,2,3] would be a list of integers.", "If you remove the quotes, you are essentially creating a list of python objects.", "A python object is basically the foundation of all python classes, e.g.", "integers and strings are python objects are their most basic level."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You can do something like:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n foo = \"foo\"\nbar = \"bar\"\napple = \"apple\"\nstrings = [foo,bar,apple]\n</code>\n</pre>\n", "senID": 3}], [{"text": ["If you have a lot of elements to write, you can use a program to do that (such an incredible idea from a developper !", "), and then you copy-paste the result:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n li = []\n\nch = (\"You have entered an empty string ''\\n\"\n      'Type ENTER alone if you want to stop.\\n'\n      'Type anything if you want to record the empty string : ')\n\nwhile True:\n    e = raw_input('enter : ')\n    if e=='':\n        x = raw_input(ch)\n        if x=='':  break\n    li.append(e)\n\nprint\nprint li\n</code>\n</pre>\n", "senID": 1}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n enter : 123\nenter : ocean\nenter : flower\nenter : \nYou have entered an empty string ''\nType ENTER alone if you want to stop.\nType anything if you want to record the empty string : k\nenter : once upon a time\nenter : 14 * 4\nenter : \nYou have entered an empty string ''\nType ENTER alone if you want to stop.\nType anything if you want to record the empty string : \n\n['123', 'ocean', 'flower', '', 'once upon a time', '14 * 4']\n</code>\n</pre>\n", "senID": 3}, {"text": ["What you have not to type but only copy is:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n ['123', 'ocean', 'flower', '', 'once upon a time', '14 * 4']\n</code>\n</pre>\n", "senID": 5}]]