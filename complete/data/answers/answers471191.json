[[{"text": ["It's compiled to bytecode which can be used much, much, much faster."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The reason some files aren't compiled is that the main script, which you invoke with python main.py is recompiled every time you run the script.", "All imported scripts will be compiled and stored on the disk."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python main.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Important addition byBen Blank:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Important addition byBen Blank:", "childNum": 1, "tag": "em", "pos": 0, "childList": [{"text": "Ben Blank", "tag": "a"}]}, {"href": "http://stackoverflow.com/users/46387/ben-blank", "text": "Ben Blank", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["The .pyc file is Python that has already been compiled to byte-code.", "Python automatically runs a .pyc file if it finds one with the same name as a .py file you invoke."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["\"An Introduction to Python\" says this about compiled Python files:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "says", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.network-theory.co.uk/docs/pytut/CompiledPythonfiles.html"}]}, {"text": ["The advantage of running a .pyc file is that Python doesn't have to incur the overhead of compiling it before running it.", "Since Python would compile to byte-code before running a .py file anyway, there shouldn't be any performance improvement aside from that."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["How much improvement can you get from using compiled .pyc files?", "That depends on what the script does.", "For a very brief script that simply prints \"Hello World,\" compiling could constitute a large percentage of the total startup-and-run time.", "But the cost of compiling a script relative to the total run time diminishes for longer-running scripts."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The script you name on the command-line is never saved to a .pyc file.", "Only modules loaded by that \"main\" script are saved in that way."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["There's certainly a performance difference when running a compiled script.", "If you run normal .py scripts, the machine compiles it every time it is run and this takes time.", "On modern machines this is hardly noticeable but as the script grows it may become more of an issue."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["There is a performance increase in running compiled python, however when you run a .py python will compile and store it, and as long as the .py does not change it will always use the compiled version."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["With any interpeted language when the file is used the process looks something like this:\n1.", "File is processed by the interpeter.", "2.", "File is compiled\n3.", "Compiled code is executed."], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}]}, {"text": ["obviously by using pre-compiled code you can eliminate step 2, this applies python, PHP and others."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Heres an interesting blog post explaining the differences http://julipedia.blogspot.com/2004/07/compiled-vs-interpreted-languages.html\nAnd here's an entry that explains the Python compile process http://effbot.org/zone/python-compile.htm"], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "http://julipedia.blogspot.com/2004/07/compiled-vs-interpreted-languages.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://julipedia.blogspot.com/2004/07/compiled-vs-interpreted-languages.html"}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"href": "http://effbot.org/zone/python-compile.htm", "text": "http://effbot.org/zone/python-compile.htm", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["As already mentioned, you can get a performance increase from having your python code compiled into bytecode.", "This is usually handled by python itself, for imported scripts only."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Another reason you might want to compile your python code, could be to protect your intellectual property from being copied and/or modified."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["You can read more about this in the Python documentation."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Python documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/modules.html#compiled-python-files"}]}], [{"text": ["Yep, performance is the main reason and, as far as I know, the only reason."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If some of your files aren't getting compiled, maybe Python isn't able to write to the .pyc file, perhaps because of the directory permissions or something.", "Or perhaps the uncompiled files just aren't ever getting loaded... (scripts/modules only get compiled when they first get loaded)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Another advantage is that if you have a password in your program that someone needs to type, they could simply look in the .py file and find the password, but you can't see the source of a .pyc file."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]