[[{"text": ["For Windows, you can use winsound.", "It's built in"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import winsound, sys\n\ndef beep(sound):\n    winsound.PlaySound('%s.wav' % sound, winsound.SND_FILENAME)\n\nif __name__ == '__main__':\n    beep(sys.argv[1])\n</code>\n</pre>\n", "senID": 1}, {"text": ["You should be able to use ossaudiodev for linux:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from wave import open as waveOpen\nfrom ossaudiodev import open as ossOpen\ns = waveOpen('tada.wav','rb')\n(nc,sw,fr,nf,comptype, compname) = s.getparams( )\ndsp = ossOpen('/dev/dsp','w')\ntry:\n  from ossaudiodev import AFMT_S16_NE\nexcept ImportError:\n  if byteorder == \"little\":\n    AFMT_S16_NE = ossaudiodev.AFMT_S16_LE\n  else:\n    AFMT_S16_NE = ossaudiodev.AFMT_S16_BE\ndsp.setparameters(AFMT_S16_NE, nc, fr)\ndata = s.readframes(nf)\ns.close()\ndsp.write(data)\ndsp.close()\n</code>\n</pre>\n", "senID": 3}, {"text": ["(Credit for ossaudiodev: Bill Dandreta http://mail.python.org/pipermail/python-list/2004-October/288905.html)"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "http://mail.python.org/pipermail/python-list/2004-October/288905.html", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mail.python.org/pipermail/python-list/2004-October/288905.html"}]}], [{"text": ["The Snack Sound Toolkit can play wav, au and mp3 files.  "], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "The Snack Sound Toolkit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.speech.kth.se/snack/"}]}, {"code": "<pre>\n<code>\n s = Sound() \ns.read('sound.wav') \ns.play()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Definitely use Pyglet for this.", "It's kind of a large package, but it is pure python with no extension modules.", "That will definitely be the easiest for deployment.", "It's also got great format and codec support."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Pyglet", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyglet.org"}]}, {"code": "<pre>\n<code>\n import pyglet\n\nmusic = pyglet.resource.media('music.mp3')\nmusic.play()\n\npyglet.app.run()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["I like pygame, and the command below should work:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n pygame.init()\npygame.mixer.Sound('sound.wav').play()\n</code>\n</pre>\n", "senID": 1}, {"text": ["but it doesn't on either of my computers, and there is limited help on the subject out there.", "edit: I figured out why the pygame sound isn't working for me, it's not loading most sounds correctly, the 'length' attribute is ~0.0002 when I load them.", "maybe loading them using something other than mygame will get it morking more generally."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["with pyglet I'm getting a resource not found error Using the above example, wigh both relative and full paths to the files."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["using pyglet.media.load() instead of pyglet.resource.media() lets me load the files."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "pyglet.media.load()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "pyglet.resource.media()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["but sound.play() only plays the first fraction of a second of the file, unless I run pyglet.app.run() which blocks everything else..."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "sound.play()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "pyglet.app.run()", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["pyMedia's sound example does just that.", "This should be all you need."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "just that", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pymedia.org/tut/play_wav.html"}]}, {"code": "<pre>\n<code>\n import time, wave, pymedia.audio.sound as sound\nf= wave.open( 'YOUR FILE NAME', 'rb' )\nsampleRate= f.getframerate()\nchannels= f.getnchannels()\nformat= sound.AFMT_S16_LE\nsnd= sound.Output( sampleRate, channels, format )\ns= f.readframes( 300000 )\nsnd.play( s )\n</code>\n</pre>\n", "senID": 1}], [{"text": ["wxPython has support for playing wav files on Windows and Unix - I am not sure if this includes Macs.", "However it only support wav files as far as I can tell - it does not support other common formats such as mp3 or ogg."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["After the play() command add a delay of say 10 secs or so, it'll work"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import pygame\n\nimport time\n\npygame.init()\n\npygame.mixer.music.load(\"test.wav\")\n\npygame.mixer.music.play()\n\ntime.sleep(10)\n</code>\n</pre>\n", "senID": 1}, {"text": ["This also plays .mp3 files."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]