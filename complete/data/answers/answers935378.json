[[{"tag": "ul", "num": 3, "lis": [{"text": ["__method"], "childNum": 0, "tag": "code", "senID": 0, "childList": []}, {"text": ["__method__"], "childNum": 0, "tag": "code", "senID": 1, "childList": []}, {"text": ["_method"], "childNum": 0, "tag": "code", "senID": 2, "childList": []}]}, {"text": ["From the style guide:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"tag": "ul", "num": 4, "lis": [{"text": ["method"], "childNum": 0, "tag": "code", "senID": 0, "childList": []}, {"text": ["_method"], "childNum": 0, "tag": "code", "senID": 1, "childList": []}, {"text": ["__method"], "childNum": 0, "tag": "code", "senID": 2, "childList": []}, {"text": ["__method__"], "childNum": 0, "tag": "code", "senID": 3, "childList": []}]}], [{"text": ["These are all conventions, so they are not enforced in anyway.", "Still, you can normally expect:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n __somename__\n</code>\n</pre>\n", "senID": 1}, {"text": ["Something defined in the python language specification itself.", "Don't use this in your own naming."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n _somename\n</code>\n</pre>\n", "senID": 3}, {"text": ["This is normally supposed to be called via some different mechanism rather than directly.", "Similar to declaring something private in most other languages, but not enforced in any way."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n __somename\n</code>\n</pre>\n", "senID": 5}, {"text": ["This is really not supposed to be called directly, and is mangled internally to stop you doing so accidently.", "If you really need to call it for some reason, check the documentation to find out how."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "really", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Any of the above can apply equally to function, variable or class names."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["Methods prefaced and prefixed with the double underscore are generally so marked to indicate that they are part of the Python language specification."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["These methods were named as such to reduce the possibility of naming collisions."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Some methods with a double underscore prefix and suffix are special.", "For example, __init__ is called whenever an instance of that class is created, and __str__ is called when the object is to be printed.", "Basically, they can be called in special ways.", "You can use them like any other method, or you can invoke them through the special way associated to them."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "__init__", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "__str__", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["I don't know about double-underscore global functions (not belonging to any class), but I think there aren't any."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["The pattern of __name__ indicate \"magic\" methods.", "These are called by various functions like"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "__name__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n str(x) -&gt; x.__str__()\nrepr(x) -&gt; x.__repr__()\nx[0] -&gt; x.__getitem__(0)\netc\n</code>\n</pre>\n", "senID": 1}, {"text": ["A single underscore prefix is to indicate a private attribute, and is only followed through convention."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["a double underscore prefix initiates name-mangling, where the attribute named __attr is changed to __Class_attr upon instantiation."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The pattern you have of method_ isn't really used for anything."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "method", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]]