[[{"text": ["You can spawn a child process and use an IPC mechanism like sockets or STDIO, or even embed one interpreter in the other."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "one interpreter", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.cpan.org/~gaas/pyperl-1.0/perlmodule.pod"}, {"href": "http://search.cpan.org/~nine/Inline-Python-0.29/Python.pod", "text": "in the other", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["But why switch languages when Perl offers several Tk (Tk, Tkx, and Tcl::Tk) bindings and a very capable Wx binding?"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "Tk", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.cpan.org/perldoc/Tk"}, {"href": "http://search.cpan.org/perldoc/Tkx", "text": "Tkx", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://search.cpan.org/perldoc/Tcl%3A%3ATk", "text": "Tcl::Tk", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://search.cpan.org/perldoc/Wx", "text": "Wx binding", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["I have written and distributed GUI projects with Perl's Tk and Wx libraries."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["If you are need the ability to create stand-alone executables, check out PAR::Packer, ActiveState's PerlApp, and Cava Pacakger."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "PAR::Packer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.cpan.org/perldoc/PAR%3A%3APacker"}, {"href": "http://www.activestate.com/perl%5Fdev%5Fkit/", "text": "ActiveState's PerlApp", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://www.cava.co.uk/", "text": "Cava Pacakger", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["I hate to be another one in the chorus, but..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Of course, I only say all this because you said \"Dashboard\" which I read as \"Corporate\", which then makes me assume a Microsoft AD network..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Try the CPAN distribution Python (pyperl) for interfacing with python code."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python (pyperl)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.cpan.org/perldoc/Python"}]}], [{"text": ["Well, if you really want to write the GUI in another language (which, seriously, is just a bad idea, since it will cost you more than it could ever benefit you), the thing you should do is the following:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["But honestly, I really suggest you taking a look at the Perl GTK2 binding, it is awesome, including features such as implementing a Gtk class entirely in Perl and using it as argument to a function written in C - for instance, you can write a model class for a gtk tree entirely in Perl."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["I'd avoid inter-language calls if possible; fragility and massive increases in dependencies await you down this road.", "However, there is..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Inline::Python"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Inline::Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://search.cpan.org/perldoc/Inline%3A%3APython"}]}, {"text": ["If python must be used, the Inline::* series of modules have been generally well received.", "This lets you write python inside a perl script.", "You still have to write perl but it would let you use python libraries inside perl scripts.", "It will make things more difficult to debug, though."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Inline::*", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["Interesting project: I would opt for loose-coupling and consider an XML-RPC or JSON based approach."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I'd think the major criterion for any qualified answer would involve the details of the existing codebase.", "How is this Perl code called and how does it return it's results?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["A collection of command line utilities returning results through reasonably good textual output (\"good\" as in \"amenable to further machine parsing\" or \"pipeline friendly\") ... should be reasonably easy to call from any programming language (and Python's excellent subprocess and multiprocessing modules in particular).", "A collection of web CGI or other modules layered between Apache and some DBMS system could still be accessed with things like urlopen2 or mechanize -- but it might be better to bypass the Perl code and write Python to query the underlying (presumably canonical) model (data store)."], "childNum": 5, "tag": "p", "senID": 1, "childList": [{"text": "subprocess", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "multiprocessing", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "urlopen2", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://wwwsearch.sourceforge.net/mechanize/src/README-0.1.2b.html", "text": "mechanize", "childNum": 1, "tag": "a", "childList": [{"text": "mechanize", "tag": "code"}]}, {"text": "mechanize", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If the majority of the codebase is a set of libraries or modules ... and the functionality that your proposed dashboard requires isn't already exposed via some higher level mechanism (some command line interface, networking protocol, etc) ... then it's basically insane to consider interfacing to it through any language other than Perl.", "(Unless, by some strange and extremely unlikely twist of fate, your existing codebase and your intended implementation target are both already stable under Parrot)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Parrot", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.parrot.org/"}]}, {"text": ["Let's ask a different, broader, question:  What interface to you intend to use between your dashboard and your existing code base?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "What interface to you intend to use between your dashboard and your existing code base?", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["This question is paramount regardless of your choice of implementation language.", "If you write the dashboard in Perl it still needs to call into your existing code base in some way.", "You probably need to fix-up your code base to implement support for whatever your going to use for your dashboard.", "At the point where your codebase supports the necessary API (has command line or IPC protocol calls into the desired functionality which return results over any reasonable IPC mechanism) ... then your choice of dashboard implementation language will be essentially arbitrary."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]]