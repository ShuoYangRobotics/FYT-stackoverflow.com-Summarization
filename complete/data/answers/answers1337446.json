[[{"text": ["I've been working on a library called Pyth, which can do this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["http://pypi.python.org/pypi/pyth/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://pypi.python.org/pypi/pyth/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/pyth/"}]}, {"text": ["Converting an RTF file to plaintext looks something like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from pyth.plugins.rtf15.reader import Rtf15Reader\nfrom pyth.plugins.plaintext.writer import PlaintextWriter\n\ndoc = Rtf15Reader.read(open('sample.rtf'))\n\nprint PlaintextWriter.write(doc).getvalue()\n</code>\n</pre>\n", "senID": 3}, {"text": ["Pyth can also generate RTF files, read and write XHTML, generate documents from Python markup a la Nevow's stan, and has limited experimental support for latex and pdf output.", "Its RTF support is pretty robust -- we use it in production to read RTF files generated by various versions of Word, OpenOffice, Mac TextEdit, EIOffice, and others."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "pretty robust", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://github.com/brendonh/pyth/blob/master/pyth/plugins/rtf15/reader.py"}]}], [{"text": ["Have you checked out pyrtf-ng?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyrtf-ng", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyrtf-ng/"}]}, {"text": ["Update: The parsing functionality is available if you do a Subversion checkout, but I'm not sure how full-featured it is.", "(Look in the rtfng.parser.base module."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "rtfng.parser.base", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}], [{"text": ["OpenOffice has a RTF reader.", "You can use python to script OpenOffice, see here for more info."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "see here for more info", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://wiki.services.openoffice.org/wiki/Python"}]}, {"text": ["You could probably try using the magic com-object on Windows to read anything that smells ms-binary.", "I wouldn't recommend that though."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Actually parsing the raw data probably won't be very hard, see this example written in .bat/QBasic."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "see this example", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.infionline.net/~wtnewton/batch/rtf2txt.htm"}]}, {"text": ["DocFracis a free open source converter betweeen RTF, HTML and text.", "Windows, Linux, ActiveX and DLL platforms available.", "It will probably be pretty easy to wrap it up in python."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "DocFracis a free open source converter betweeen RTF, HTML and text. Windows, Linux, ActiveX and DLL platforms available.", "childNum": 1, "tag": "em", "pos": -1, "childList": [{"text": "DocFrac", "tag": "a"}]}, {"text": "DocFrac", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.docfrac.net/"}]}, {"text": ["RTF::TEXT::Converter- Perl extension for converting RTF into text.", "(in case You have problems withg DocFrac)."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "RTF::TEXT::Converter- Perl extension for converting RTF into text", "childNum": 1, "tag": "em", "pos": 0, "childList": [{"text": "RTF::TEXT::Converter", "tag": "a"}]}, {"text": "RTF::TEXT::Converter", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://search.cpan.org/~sargie/RTF-Parser-1.09/lib/RTF/TEXT/Converter.pm"}]}, {"text": ["A discussion on this subject on python mailing list."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "discussion", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://mail.python.org/pipermail/python-list/2001-May/084812.html"}]}, {"text": ["Official Rich Text Format (RTF) Specifications, version 1.7, by Microsoft."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Specifications", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.microsoft.com/downloads/details.aspx?FamilyID=e5b8ebc2-6ad6-49f0-8c90-e4f763e3f04f&DisplayLang=en"}]}, {"text": ["Good luck (with the limited privileges in Your working environment)."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}], [{"text": ["There is good library pyrtf-ng for all-purpose RTF handling."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyrtf-ng", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pyrtf-ng/"}]}], [{"text": ["I ran into the same thing ans I was trying to code it myself.", "It's not that easy but here is what I had when I decided to go for a commandline app.", "Its ruby but you can adapt to python very easily.", "There is some header garbage to clean up, but you can see more or less the idea."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f = File.open('r.rtf','r')\n b=0\n p=false\n str = ''\n begin\n    while (char = f.readchar)\n        if char.chr=='{'\n   b+=1 \n   next\n  end\n        if char.chr=='}'\n   b-=1 \n   next\n  end\n  if char.chr=='\\\\'\n   p=true\n   next\n  end\n  if p==true &amp;&amp; (char.chr==' ' or char.chr=='\\n' or char.chr=='\\t' or char.chr=='\\r')\n   p=false \n   next\n  end\n  if p==true &amp;&amp; (char.chr=='\\'')\n#this is the source of my headaches. you need to read the code page from the header and encode this.\n   p=false \n   str &lt;&lt; '#'\n   next\n  end\n  next if b&gt;2\n  next if p\n  str &lt;&lt; char.chr\n    end\nrescue EOFError\nend\nf.close\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Conversely, if you want to write RTFs easily from Python, you can use the third-party module rtflib.", "It's a fairly new and incomplete module but still very powerful and useful.", "Below is an example that writes \"hello world\" in rich text to an RTF called helloworld.rtf.", "This is a very primitive example, and the module can also be used to add colors, italics, tables, and many other aspects of rich text to RTF files."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "rtflib", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/viking-sudo-rm/rtflib/blob/master/rtflib.py"}]}, {"code": "<pre>\n<code>\n from rtflib import *\nfile = RTF(\"helloworld.rtf\")\nfile.startfile()\nfile.addstrict()\nfile.addtext(\"hello world\")\nfile.writeout()\n</code>\n</pre>\n", "senID": 1}]]