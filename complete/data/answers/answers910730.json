[[{"text": ["First, get it out of native Word (.doc) format."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": ".doc", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": ["Do a \"Save As XML\" and insist your users work with that file instead of the .doc file.", "They'll hardly notice the difference -- except that the file is bigger."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": ".doc", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["You can also do a \"Save As HTML\" before doing your analysis.", "This works just as well as the XML version.", "The HTML version isn't as easy for users, however, so do this prior to your analysis only."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]}, {"text": ["Once you have a parse structure (XML or HTML) you can analyze the document looking for specific tags."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["You can build on the ability of openoffice.org to read Word documents.", "The Python-UNO  bridge allows to use the standard OpenOffice.org API from the python scripting language.", "Using Python-UNO and having relevant parts of openoffice on your machine, it should be straightforward to read most Word documents."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "openoffice.org", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://openoffice.org/"}, {"text": "Python-UNO", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://wiki.services.openoffice.org/wiki/PyUNO%5Fbridge"}, {"text": "OpenOffice.org API", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Python-UNO", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}], [{"text": ["Using Visual Studio Tools for Office (VSTO), it is possible to script Word from any .NET language.", "The How to: Search for Text in Documents example shows C# and Visual Basic code, but IronPython can also call the same .NET methods."], "childNum": 9, "tag": "p", "senID": 0, "childList": [{"text": "Visual Studio Tools for Office (VSTO)", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://msdn.microsoft.com/en-us/vsto/default.aspx"}, {"text": "Word", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": ".NET", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://msdn.microsoft.com/en-us/library/f1f367bx.aspx", "text": "How to: Search for Text in Documents", "childNum": 0, "tag": "a", "childList": []}, {"text": "C#", "childNum": 0, "tag": "code", "childList": []}, {"text": "Visual Basic", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://www.codeplex.com/IronPython", "text": "IronPython", "childNum": 1, "tag": "a", "childList": [{"text": "IronPython", "tag": "code"}]}, {"text": "IronPython", "childNum": 0, "tag": "code", "childList": []}, {"text": ".NET", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["If you are ready to use IronPython (no Mac equivalent), this could be a Windows specific solution for searching inside Word documents."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "IronPython", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.codeplex.com/IronPython"}, {"text": "Word", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["Assuming you are on windows and have Word installed you can control Word from within python using COM - see Python for win32 On Linux you can do the same with OpenOffice."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Python for win32", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/download/windows/"}]}, {"text": ["Alternatively there are a bunch of string extractors for Word for both win32 or Linux, you can then use the normal python regex tools."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["See this question http://stackoverflow.com/questions/125222/extracting-text-from-ms-word-files-in-python"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://stackoverflow.com/questions/125222/extracting-text-from-ms-word-files-in-python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/125222/extracting-text-from-ms-word-files-in-python"}]}], [{"text": ["If you have a bit of cash you can buy the Aspose.Words Java API.", "With it you can programatically access and manipulate any Word document"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Aspose.Word", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.aspose.com/categories/file-format-components/aspose.words-for-.net-and-java/default.aspx"}]}], [{"text": ["I know this is a Python question but..."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["On Windows you should use VBScript (VBA Macros) and OLE to programmically access Word."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Examples | How-tos | Automating Word using OLE"], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "Examples", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.java2s.com/Code/VBA-Excel-Access-Word/CatalogVBA-Excel-Access-Word.htm"}, {"href": "http://www.kayodeok.btinternet.co.uk/favorites/kbofficewordhowto.htm#kbhowtoauto", "text": "How-tos", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://support.microsoft.com/kb/184974", "text": "Automating Word using OLE", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["On MacOSX you use VBA for older versions and AppleScript for Office 2008."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Article"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Article", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.macworld.com/article/133027/2008/04/geekfactor2505.html"}]}, {"text": ["With VBA you have a choice of either modifying the document in-place or performing an automated \"Save As\" to get the data in a more easily handled format (though be warned its HTML export is abysmal)."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I strongly recommend staying away from third-party libraries/products for this, even if you dislike vbscript.", "The format is far too complex, undocumented and inconsistent for accurate external handling.", "StarOffice/OpenOffice is proof of that.", "They've been trying for years and still haven't got accurate .doc parsing, let alone .docx.", "Yes it works in general but you run an unquantifiable risk of mangling documents once you start trying to programmically modify them outside of Word.", "You should be able to call VBscript from Python using os.system.", "I think the interpreter is wscript.exe but don't hold me to that.", "This may work though:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n os.system('start script.vb')\n</code>\n</pre>\n", "senID": 7}]]