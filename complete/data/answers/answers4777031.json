[[{"text": ["Basically every python programmer does that.", "So simply live with it.", ";)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Besides that you could omit it completely if your script is always meant to be run as an application and not imported as a module - but you are encouraged to use it anyway, even if it's not really necessary."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["PEP299 proposed a solution to this wart, namely having a special function name __main__.", "It was rejected, partly because:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "__main__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["http://www.python.org/dev/peps/pep-0299/"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "http://www.python.org/dev/peps/pep-0299/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0299/"}]}, {"text": ["So the ugliness will stay, at least as long as Guido's the BDFL."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["No, sorry, there is not.", "It doesn't look great, but it's what we've got."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["It's definitely a wart in the language, as is anything that becomes boilerplate and gets copied and pasted from file to file.", "There's no shorthand for it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["As warts and boilerplate go, though, at least it's minor."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["You mean shorter like if'__main__'==__name__: ?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "if'__main__'==__name__:", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["After asking this question, I decided to make a solution to it:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n from automain import *  # will only import the automain decorator\n\n@automain\ndef mymain():\n    print 'this is our main function'\n</code>\n</pre>\n", "senID": 1}, {"text": ["The blog post explains it, and the code is on github and can be easy_installed:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "blog post", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://slowchop.com/2011/01/25/automain/"}, {"href": "https://github.com/gak/automain", "text": "code is on github", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n easy_install automain\n</code>\n</pre>\n", "senID": 3}]]