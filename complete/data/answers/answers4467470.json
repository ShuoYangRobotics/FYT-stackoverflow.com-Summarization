[[{"code": "<pre>\n<code>\n def myfunc(x, n, step):\n  if n &gt; 0:\n    return x**n + myfunc(x, n - step, step)\n  return 1\n\nmyfunc(100, 10, 1) * myfunc(100, 10, 2)\n</code>\n</pre>\n", "senID": 0}], [{"text": ["You can use this to calculate 1+x+x^2+...+x^n:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "1+x+x^2+...+x^n", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n lambda x, n: sum([x**y for y in range(0, n + 1)])\n</code>\n</pre>\n", "senID": 1}, {"text": ["Use the logic to calculate the second function."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["Since you put a Sage tag on it, here's a fun way to do it in Sage."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n sage: R.&lt;x&gt; = PowerSeriesRing(ZZ)\n</code>\n</pre>\n", "senID": 1}, {"text": ["defines R as being power series with x as the variable.", "ZZ means that we are using integers for the coefficients.", "Now, let's look at what we can do with it:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n sage: R([1, 2])              # the array inside contains the coefficients \n1 + 2*x                      # for each element of the series\nsage: R([1]*11)              # this gives us the first power series\n1 + x + x^2 + x^3 + x^4 + x^5 + x^6 + x^7 + x^8 + x^9 + x^10\nsage: R([1,0]*5 + [1])       # and here is our second one\n1 + x^2 + x^4 + x^6 + x^8 + x^10\nsage: R([1]*11).(5)          # we can evaluate these for various x values\n12207031\nsage: R([1]*11).subs(x=5)    # an alternate way to evaluate\n12207031\nsage: f = R([1]*11)*R([1,0]*5+[1])  # this constructs the desired function\nsage: f(100)                   # we can evaluate it at any value\n</code>\n</pre>\n", "senID": 3}, {"text": ["Anyway, hopefully you now are understanding how to do this in Sage.", "I'm quite new to Sage myself, but I'm really digging it so far."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["for your fist question,"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["x=2; (given)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["n=10; (given)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["check urself whether those values r positive and whteveru want"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["result=1;"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["for(a=2;a&lt;=n;a++)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": [], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["result+=x^a;"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": [], "childNum": 0, "tag": "p", "senID": 8, "childList": []}], [{"text": ["I think this is the function you are looking for."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def f(x, n):\n    answer = 0\n    for y in range(n + 1):\n        answer += x ** n\n    return answer\n</code>\n</pre>\n", "senID": 1}, {"text": ["I don't quite understand the second part."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n function series($x, $n) {\n\n    $answer = 1;           \n\n    for($i = $n; $i &gt; 0; $i--) {\n\n         $answer += pow($x, $i);\n\n    }\n\n        return $answer;\n}\n\nseries(100, 10) * series(100, 10)\n</code>\n</pre>\n", "senID": 0}]]