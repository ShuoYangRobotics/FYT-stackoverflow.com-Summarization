[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; s = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'\n&gt;&gt;&gt; \n&gt;&gt;&gt; [item for item in s.split('|') if item.strip()]\n['Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy']\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 0}, {"text": ["If you'd rather have a tuple then:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; tuple(item for item in s.split('|') if item.strip())\n('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 2}], [{"text": ["You want str.split():"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "str.split()", "tag": "a", "pos": 0, "childList": [{"text": "str.split()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/stdtypes.html#str.split"}, {"text": "str.split()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'\n&gt;&gt;&gt; s.split('|')\n['', 'Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy', '']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["If you want to just split your string at the | character you use:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "|", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n myStr.split('|')\n</code>\n</pre>\n", "senID": 1}, {"text": ["If you also want all zero-length element removed (like the ones from the ends) you:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def myFilter(el): return len(el) &gt; 0\nfilter(myFilter, myStr.split('|'))\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Strip\n'string'.strip('|')"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Strip", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; heading = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'\n   &gt;&gt;&gt; tuple(heading.strip('|').split('|'))\n   ('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')\n</code>\n</pre>\n", "senID": 1}, {"text": ["Slice\n'string'[1:-1]"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Slice", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; heading = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'\n   &gt;&gt;&gt; tuple(heading[1:-1].split('|'))\n   ('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')\n</code>\n</pre>\n", "senID": 3}, {"text": ["For List remove the tuple() call."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "List", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "tuple()", "childNum": 0, "tag": "em", "childList": []}]}], [{"text": ["strip() gets rid of the leading and trailing chars, split() divvies up the remainder:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "strip()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "split()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s.strip('|').split('|')\n['Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy']\n</code>\n</pre>\n", "senID": 1}], [{"text": ["List"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n seq = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'.split('|')\n</code>\n</pre>\n", "senID": 1}, {"text": ["Tuple"], "childNum": 0, "tag": "h2", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n seq = tuple(seq)\n</code>\n</pre>\n", "senID": 3}, {"text": ["If you want to strip empty items, pass the output through filter(None, seq).", "If you assume outer | always, just slice with seq[1:-1]."], "childNum": 3, "tag": "p", "senID": 4, "childList": [{"text": "filter(None, seq)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "|", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "seq[1:-1]", "childNum": 0, "tag": "code", "childList": []}]}]]