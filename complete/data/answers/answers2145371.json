[[{"text": ["It sounds like the os.path.dirname function might be what you're looking for.", "You may need to call it more than once:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "os.path.dirname", "tag": "a", "pos": 0, "childList": [{"text": "os.path.dirname", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/os.path.html#os.path.dirname"}, {"text": "os.path.dirname", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import os.path\n&gt;&gt;&gt; os.path.dirname(\"test1/test2/\")\n'test1/test2'\n&gt;&gt;&gt; os.path.dirname(\"test1/test2\")\n'test1'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["str.rsplit() with the maxsplit argument.", "Or if this is a path, look in os.path or urlparse."], "childNum": 5, "tag": "p", "senID": 0, "childList": [{"text": "str.rsplit()", "tag": "a", "pos": 0, "childList": [{"text": "str.rsplit()", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/stdtypes.html#str.rsplit"}, {"text": "str.rsplit()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "maxsplit", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "os.path", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "urlparse", "childNum": 0, "tag": "code", "childList": []}]}], [{"code": "<pre>\n<code>\n newString = oldString[:oldString[:-1].rfind('/')]\n # strip out trailing slash    ----^       ^---- find last remaining slash\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; import os\n&gt;&gt;&gt; path=\"how/to/implement/this\"\n&gt;&gt;&gt; os.path.split(path)\n('how/to/implement', 'this')\n&gt;&gt;&gt; os.path.split(path)[0]\n'how/to/implement'\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; os.path.split('how/to/implement/this'.rstrip('/'))\n('how/to/implement', 'this')\n&gt;&gt;&gt; os.path.split('how/to/implement/this/'.rstrip('/'))\n('how/to/implement', 'this')\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n '/'.join(s.split('/')[:-1]+[''])\n</code>\n</pre>\n", "senID": 0}], [{"text": ["If you mean \"/\" as in path separator, the function you want is:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n os.path.dirname(your_argument)\n</code>\n</pre>\n", "senID": 1}, {"text": ["If not, then you want:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def your_function(your_argument):\n    result= your_argument.rstrip(\"/\").rpartition(\"/\")[0]\n    if result:\n        return result + \"/\"\n    return result\n</code>\n</pre>\n", "senID": 3}, {"text": ["Please specify what should be the result when \"test/\" is used as an argument: should it be \"/\" or \"\"?", "I assumed the second in my code above."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]]