[[{"text": ["I've had good luck with the Tokyo Cabinet/pytc solution.", "It's very fast (a bit faster than using the shelve module using anydbm in my implementation), both for reading and writing (though I too do far more reading).", "The problem for me was the spartan documentation on the python bindings, but there's enough example code around to figure out how to do what you need to do.", "Additionally, tokyo cabinet is quite easy to install (as are the python bindings), doesn't require a server (as you mention) and seems to be actively supported.", "You can open files in read-only mode, allowing concurrent access, or read/write mode, preventing other processes from accessing the database."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I was looking at various options over the summer, and the advice I got then was this: try out the different options and see what works best for you.", "It'd be nice if there were simply a \"best\" option, but everyone is looking for slightly different features and are willing to make different trade-offs.", "You know best."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(That said, it'd be useful to others if you shared what ended up working the best for you, and why you chose that solution over others!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["cdb can handle any database up to 4 GB, making it too small for the 20GB matter at hand."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["how about Python 3.0's dbm.ndbm ?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Another suggestion is TDB (a part of the Samba project).", "I've used it through the tdb module, however I can't say I've tested its reliability on crashes; the projects I used it in didn't have such requirements, and I can't find relevant documentation."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "TDB", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://tdb.samba.org/"}, {"text": "tdb", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/tdb/1.0"}]}], [{"text": ["how about a SQLite?"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["I've used bsddb.hashlib() with Python, it worked pretty good."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["You might like djb's cdb, which has the properties you mention."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "djb", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://cr.yp.to/"}, {"href": "http://cr.yp.to/cdb.html", "text": "cdb", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["In my query for a cross-platform ISAM-style database (similar), I also received suggestions for the embedded version of Firebird and GLib."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "my query for a cross-platform ISAM-style database", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/525065/which-embedded-database-capable-of-100-million-records-has-the-best-c-api"}, {"href": "http://www.firebirdsql.org/", "text": "Firebird", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://library.gnome.org/devel/glib/stable/", "text": "GLib", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["Riak runs on Linux, and allows you to dynamically add nodes"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]