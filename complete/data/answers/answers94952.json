[[{"text": ["PySec is another monadic parser, I don't know much about it, but it's worth looking at here"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.valuedlessons.com/2008/02/pysec-monadic-combinatoric-parsing-in.html"}]}], [{"text": ["I believe that pyparsing is based on the same principles as parsec."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pyparsing", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyparsing.wikispaces.com/"}]}], [{"text": ["An option you may consider, if an LL parser is ok to you, is to give ANTLR a try, it can generate python too (actually it is LL(*) as they name it, * stands for the quantity of lookahead it can cope with)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "ANTLR", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget"}]}], [{"text": ["There's ANTLR, which is LL(*), there's PyParsing, which is more object friendly and is sort of like a DSL, and then there's Parsing which is like OCaml's Menhir."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Parsing", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.canonware.com/Parsing/"}]}], [{"text": ["Nothing prevents you for diverting your parser from the \"context free\" path using PLY.", "You can pass information to the lexer during parsing, and in this way achieve full flexibility.", "I'm pretty sure that you can parse anything you want with PLY this way."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For a hands-on example, consider - it is a parser for ANSI C written in Python with PLY.", "It solves the classic C typedef - identifier problem (that makes C's grammar non context-sensitive) by populating a symbol table in the parser that is being used in the lexer to resolve symbol names as either types or not."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "consider", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/pycparser/"}]}], [{"text": ["ANTLR is great and has the added benefit of working across multiple languages."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "ANTLR", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.antlr.org/"}]}]]