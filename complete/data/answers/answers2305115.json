[[{"code": "<pre>\n<code>\n import fileinput\nmyinsert=\"\"\"new line1\\nnew line2\\nnew line3\"\"\"\nfor line in fileinput.input(\"file\",inplace=1):\n    linenum=fileinput.lineno()\n    if linenum==1 or linenum&gt;4 : \n        line=line.rstrip()\n    if linenum==2:\n        line=line+myinsert\n    print line\n</code>\n</pre>\n", "senID": 0}, {"text": ["Or if you file is not too big, "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import os\nmyinsert=[\"new line3\\n\",\"new line2\\n\",\"new line1\\n\"]\ndata=open(\"file\").readlines()\ndata[2:4]=\"\"\nfor i in myinsert:data.insert(2,i)\nopen(\"outfile\",\"w\").write(''.join(data))\nos.rename(\"outfile\",\"file)\n</code>\n</pre>\n", "senID": 2}], [{"text": ["For python2.6"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "python2.6", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n with open(\"file1\") as infile:\n    with open(\"file2\",\"w\") as outfile:\n        for i,line in enumerate(infile):\n            if i==2:\n                # 3rd line\n                outfile.write(\"new line1\\n\")\n                outfile.write(\"new line2\\n\")\n                outfile.write(\"new line3\\n\")\n            elif i==3:\n                # 4th line\n                pass\n            else:\n                outfile.write(line)\n</code>\n</pre>\n", "senID": 1}, {"text": ["For python3.1"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "python3.1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n with open(\"file1\") as infile, open(\"file2\",\"w\") as outfile:\n    for i,line in enumerate(infile):\n        if i==2:\n            # 3rd line\n            outfile.write(\"new line1\\n\")\n            outfile.write(\"new line2\\n\")\n            outfile.write(\"new line3\\n\")\n        elif i==3:\n            # 4th line\n            pass\n        else:\n            outfile.write(line)\n</code>\n</pre>\n", "senID": 3}], [{"text": ["Open a second file to write to, read and then write the lines you want to copy over, write the new lines, read the lines you want to skip, then copy the rest."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"code": "<pre>\n<code>\n import os\ni = open(inputFilePath, 'r')\no = open(inputFilePath+\"New\", 'w')\n\nlineNo = 0\nfor line in input:\n    lineNo += 1\n    if lineNo != 3:\n        o.write(line)\n    else:\n        o.write(myNewLines)\n\ni.close()\no.close()\nos.remove(inputFilePath)\nos.rename(inputFilePath+\"New\", inputFilePath)\n</code>\n</pre>\n", "senID": 0}, {"text": ["Hope this helps"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Read the whole file as a list of lines, then replace the lines you want to delete with a new list of lines:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n f = open('file.txt')\ndata = f.readlines()\nf.close()\ndata[2:4] = [\n    'new line1\\n',\n    'new line2\\n',\n    'new line3\\n']\nf = open('processed.txt','w')\nf.writelines(data)\nf.close()\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note that list slicing is zero-based, and [2:4] means \"element 2 up to but not including element 4\"."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["There are be several ways to achieve that"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["e.g"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for i, line in enumerate(f):\n    if i == 2:\n        o.write(myThreelines)\n    else:\n        o.write(line)\n</code>\n</pre>\n", "senID": 2}]]