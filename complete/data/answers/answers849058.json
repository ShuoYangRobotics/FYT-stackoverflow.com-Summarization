[[{"text": ["Throw hardware at the problem."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Throw hardware at the problem.", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As gs pointed out, your bottleneck is the hard disk transfer rate.", "So, no you can't use a better algorithm to improve your time, but you can buy a faster hard drive."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Edit: Another good point by gs; you could also use a RAID configuration to improve your speed.", "This can be done either with hardware or software (e.g.", "OS X, Linux, Windows Server, etc)."], "childNum": 6, "tag": "p", "senID": 2, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "RAID", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Redundant%5Farray%5Fof%5Findependent%5Fdisks"}, {"text": "hardware", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.pcguide.com/ref/hdd/perf/raid/conf/ctrlHardware-c.html"}, {"text": "OS X", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.frozennorth.org/C2011481421/E20060221212020/index.html"}, {"href": "http://linux-raid.osdl.org/index.php/Linux%5FRaid", "text": "Linux", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://www.techotopia.com/index.php/Creating%5Fand%5FManaging%5FWindows%5FServer%5F2008%5FStriped%5F%28RAID%5F0%29%5FVolumes", "text": "Windows Server", "childNum": 0, "tag": "a", "childList": []}]}, {"tag": "hr", "senID": 3}, {"text": ["Governing Equation"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Governing Equation", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["(Amount to transfer) / (transfer rate) = (time to transfer)"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "(Amount to transfer) / (transfer rate) = (time to transfer)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["(6000 MB) / (60 MB/s) = 100 seconds"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "(6000 MB) / (60 MB/s) = 100 seconds", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["(6000 MB) / (125 MB/s) = 48 seconds"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "(6000 MB) / (125 MB/s) = 48 seconds", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"tag": "hr", "senID": 8}, {"text": ["Hardware Solutions"], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "Hardware Solutions", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["The ioDrive Duo is supposedly the fastest solution for a corporate setting, and \"will be available in April 2009\"."], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "The ioDrive Duo", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.computerworld.com/action/article.do?command=viewArticleBasic&taxonomyName=storage&articleId=9129644&taxonomyId=19&intsrc=kc%5Ftop"}]}, {"text": ["Or you could check out the WD Velociraptor hard drive (10,000 rpm)."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["Also, I hear the Seagate Cheetah is a good option (15,000 rpm with sustained 125MB/s transfer rate)."], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "Cheetah", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.seagate.com/docs/pdf/datasheet/disc/ds%5Fcheetah%5F15k%5F5.pdf"}]}], [{"text": ["plain \"no\"."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "plain \"no\".", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["You've pretty much reached maximum disk speed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I mean, you could mmap the file, or read it in binary chunks, and use .count('\\n') or something.", "But that is unlikely to give major improvements."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "mmap", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/mmap.html"}, {"text": ".count('\\n')", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["If you assume that a disk can read 60MB/s you'd need 6000 / 60 = 100 seconds, which is 1 minute 40 seconds.", "I don't think that you can get any faster because the disk is the bottleneck."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["See my answer about using posix_fadvise(2) to your follow up question."], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "my answer", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/860893/is-python-automagically-parallelizing-io-and-cpu-or-memory-bound-sections/861004#861004"}, {"text": "posix_fadvise(2)", "childNum": 0, "tag": "code", "childList": []}]}], [{"text": ["The trick is not to make electrons move faster (that's hard to do) but to get more work done per unit of time."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["First, be sure your 6GB file read is I/O bound, not CPU bound."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If It's I/O bound, consider the \"Fan-Out\" design pattern."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["A parent process spawns a bunch of children."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The parent reads the 6Gb file, and deals rows out to the children by writing to their STDIN pipes.", "The 6GB read time will remain constant.", "The row dealing should involve as little parent processing as possible.", "Very simple filters or counts should be used."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Each child reads a row from STDIN, and does appropriate work.", "Each child should probably write a simple disk file with the final (summarized, reduce) results.", "Later, the results in those files can be consolidated."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]}], [{"text": ["as others have said - \"no\""], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Almost all of your time is spent waiting for IO.", "If this is something that you need to do more than once, and you have a machine with tons of ram, you could keep the file in memory.", "If your machine has 16GB of ram, you'll have 8GB available at /dev/shm to play with."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "and", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Another option:\nIf you have multiple machines, this problem is trivial to parallelize.", "Split the it among multiple machines, each of them count their newlines, and add the results."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["You can't get any faster than the maximum disk read speed."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["In order to reach the maximum disk speed you can use the following two tips:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["2 minutes sounds about right to read an entire 6gb file.", "Theres not really much you can do to the algorithm or the OS to speed things up.", "I think you have two options:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Note that Python I/O is implemented in C, so there is not much luck speeding it up further."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]