[[{"code": "<pre>\n<code>\n displayname = firstname+' '+lastname if firstname and lastname else username\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n displayname = firstname + lastname or username\n</code>\n</pre>\n", "senID": 0}, {"text": ["will work if firstname and last name has 0 length blank string"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Ok, I'm assuming you meant __unicode__() method.", "Try something like this (not tested, but real close to being correct):"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "__unicode__()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n from django.utils.encoding import smart_unicode\ndef __unicode__(self):\n    u = self.user\n    if u.firstname and u.lastname:\n        return u\"%s %s\" % (u.firstname, u.lastname)\n    return smart_unicode(u.username)\n</code>\n</pre>\n", "senID": 1}, {"text": ["I just realized you asked for the Python idiom, not the Django code.", "Oh well."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["I think this issue is better handled in the templates with something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["{{ user.get_full_name|default:user.username }}"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["That uses Django's included \"default\" filter.", "There is also a \"default_if_none\" filter if you are specifically concerned about a None value, but want to allow a blank value (i.e.", "'').", "The \"default\" filter will trigger on both a None value and a '' value."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here's the link to the Django docs on it:\nhttp://docs.djangoproject.com/en/dev/ref/templates/builtins/#default"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/#default", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/#default"}]}], [{"text": ["Something like:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n name = data.Name or \"Default Name\"\n</code>\n</pre>\n", "senID": 1}], [{"text": ["My schema would have None as an unset first- or lastname, so Frederico's answer wouldn't work.", "So:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "None", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print (\"%s %s\" % (firstname, lastname)\n       if not (firstname and lastname) \n       else username )\n</code>\n</pre>\n", "senID": 1}]]