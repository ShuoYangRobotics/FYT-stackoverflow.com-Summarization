[[{"text": ["Python has several testing frameworks, including unittest, doctest, and nose.", "The most xUnit-like is unittest, which is documented on Python.org."], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "unittest", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "doctest", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "nose", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "unittest", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": ["unittest documentation"], "childNum": 1, "tag": "a", "senID": 1, "childList": [{"text": "unittest", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["doctest documentation"], "childNum": 1, "tag": "a", "senID": 2, "childList": [{"text": "doctest", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]}], [{"text": ["I recommend nose."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "nose", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.somethingaboutorange.com/mrl/projects/nose/"}]}, {"text": ["It is the most Pythonic of the unit test frameworks.", "The test runner runs both doctests and unittests, so you are free to use whatever style of test you like."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["There's testoob which is pretty complete suite of test.Also xUnit-ie, and has a nice reporting option"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "testoob", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://testoob.sourceforge.net/"}]}], [{"text": ["@Greg: PyUnit is included in the standard library as unittest"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "unittest", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["I recommend Nose. "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["After the reasonable simple installation, you just have to run \"nosetests\" in your project folder and Nose will find all your tests and run them.", "I also like the collection of plugins (coverage, GAE, etc.", ") and the abilty to call Nose directly from within my Python scripts. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["There is also PyUnit which might be what you're looking for."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "PyUnit", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyunit.sourceforge.net/"}]}], [{"text": ["Consider py.test.", "Not exactly analogous to NUnit, but very good, with nice features including test auto-discovery and a \"Watch the tests and code - when something changes rerun the tests that failed last time.", "As soon as all the tests pass, switch to running all the tests whenever somethings changes.", "\" option."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "py.test", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://codespeak.net/py/dist/test.html"}]}], [{"text": ["Never used xUnit, so I can't tell you if the frameworks are good/bad comparativly, but here is a script I wrote which uses the unittest framework (to check the API works as it should), and the doctest (to check the examples I've given work)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://github.com/dbr/tvdb_api/tree/master/tvdb_api.py#L518-575"}]}, {"text": ["My only problem is checking something raises an exception is slightly convoluted (you have to pass it a function/lambda that raises the exception, rather than just the command itself, like the rest of the framework).. Other than that, it does what it should, reliably, and it has been included in the default python distribution for quite some time."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["nose seems to be the best combination of flexibility and convenience.", "It runs unittests, doctests, coverage (with an extension) and py.test-like tests from one framework and does so admirably.", "It has enough popularity that it has had some IDE integration done as well for Komodo Edit and I wouldn't be surprised to see it elsewhere as well."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I like it for one strong reason: I almost always doctest before writing more extensive tests in another framework.", "This is because, for basic tests, doctests kill two birds with one stone.", "You get executable tests (although they are a bit clumsy to write well sometimes) as well as API documentation and interactive documentation at the same time.", "nose will run these with the bundled doctest extension when you use a command-line option (--with-doctest)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I say this having come from py.test as my former favorite.", "While it is great, nose tests are similar enough to me that I don't miss it, and I like the integration of the various test methodologies under one roof, so to speak.", "YMMV, but I recommend taking a good look at nose before choosing another.", "If you aren't familiar with py.test tests, you should look at them as well.", "I find them terrific because they are usually written in such a way that they can be easily debugged without the testing framework, which makes one less tricky system involved in the debugging session.", "I find that alone invaluable, while they are also easier to write than unittest tests in my opinion."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "without", "childNum": 0, "tag": "em", "pos": 4, "childList": []}]}]]