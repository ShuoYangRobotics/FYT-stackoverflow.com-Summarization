[[{"code": "<pre>\n<code>\n In [17]: import itertools\n# putter around 22 times\nIn [39]: l=['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4']\n\nIn [40]: [list(g) for k,g in itertools.groupby(l,'---'.__ne__) if k]\nOut[40]: [['1', 'a', 'b'], ['2', 'c', 'd'], ['3', '123', 'e'], ['4']]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n import itertools\n\nl = ['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4']\nr = []\n\ni = iter(l)\nwhile True:\n  a = [x for x in itertools.takewhile(lambda x: x != '---', i)]\n  if not a:\n    break\n  r.append(a)\nprint r\n\n# [['1', 'a', 'b'], ['2', 'c', 'd'], ['3', '123', 'e'], ['4']]\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n import itertools\n\na = ['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4']\nb = [list(x[1]) for x in itertools.groupby(a, '---'.__eq__) if not x[0]]\n\nprint b     # or print(b) in Python 3\n</code>\n</pre>\n", "senID": 0}, {"text": ["Result is"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n [['1', 'a', 'b'], ['2', 'c', 'd'], ['3', '123', 'e'], ['4']]\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Here's a solution without itertools:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def foo(input):\n    output = []\n    currentGroup = []\n    for value in input:\n        if '-' in value:  #if we should break on this element \n            currentGroup.append( value )\n        elif currentGroup:\n            output.append( currentGroup )\n            currentGroup = []\n    if currentGroup:\n        output.append(currentGroup) #appends the rest if not followed by separator    \n    return output\n\nprint ( foo ( ['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4'] ) )\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Here's one way to do it:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n lst=['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4']\nindices=[-1]+[i for i,x in enumerate(lst) if x=='---']+[len(lst)]\nanswer=[lst[indices[i-1]+1:indices[i]] for i in xrange(1,len(indices))]\nprint answer\n</code>\n</pre>\n", "senID": 1}, {"text": ["Basically, this finds the locations of the string '---' in the list and then slices the list accordingly."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["It's been a while since I've done any python so my syntax is going to be way off, but a simple loop should suffice."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Keep track of the indexes in two numbers"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n firstList = ['1', 'a', 'b','---', '2','c','d','---','3','123','e','---','4']\nlistIndex = 0\nitemIndex = 0\nii = 0\nforeach item in firstList\n  if(firstList[ii] == '---') \n    listIndex = listIndex + 1\n    itemIndex = 0\n    ii = ii + 1\n  else secondList[listIndex][itemIndex] = firstList[ii]\n</code>\n</pre>\n", "senID": 2}]]