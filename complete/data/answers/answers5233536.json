[[{"text": ["I did it with pythonbrew on my Ubuntu 10.10 machine."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "pythonbrew", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "https://github.com/utahta/pythonbrew"}]}, {"code": "<pre>\n<code>\n $ python -V\nPython 2.6.6\n$ curl -kL http://github.com/utahta/pythonbrew/raw/master/pythonbrew-install | bash\n$ . $HOME/.pythonbrew/etc/bashrc\n$ pythonbrew install 2.7.1\n$ pythonbrew switch 2.7.1\nSwitched to Python-2.7.1\n$ python -V\nPython 2.7.1\n</code>\n</pre>\n", "senID": 1}, {"text": ["I also used it to install Python 3.2."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "I also used it to install Python 3.2", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://oylenshpeegul.typepad.com/blog/2011/02/what-no-new-version-of-ruby.html"}]}], [{"text": ["Well if the only thing you need is argparse (saw that in one of your comments!", ") you could just do :"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n pip install argparse\n</code>\n</pre>\n", "senID": 1}, {"text": ["This is not exactly an answer to the exact question :-) , but indeed if you are only missing a few feature, many 2.7 features actually come from independent projects and/or some compatibility packages can be found, eg:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": ["argparse"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["Which implementation of OrderedDict should be used in python2.6?"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}, {"text": "you should be able to replace ", "tag": "none", "senID": 5}]}, {"text": ["The list of 2.7 novelties is admittedly longer, but most of the other new features are probably not a big miss, and in exchange you do not mess around with multiple python installations on your box.", "Otherwise go with pythonbrew :-)"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "2.7 novelties", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/dev/whatsnew/2.7.html"}]}], [{"text": ["Just download Python 2.7 from http://www.python.org/download/releases/2.7.1/ and build it."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://www.python.org/download/releases/2.7.1/", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/download/releases/2.7.1/"}]}], [{"text": ["You can use virtualenv to create distinct Python environments.", "Just being newsy, but what does Python 2.7 have that you need?"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "virtualenv", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pypi.python.org/pypi/virtualenv"}]}], [{"text": ["Another option is to install ActivePython if you do not want to compile things yourself.", "It includes a binary package manager as well."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "ActivePython", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "ActivePython", "tag": "a"}]}, {"text": "ActivePython", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://activestate.com/activepython/downloads"}, {"text": "binary package manager", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://code.activestate.com/pypm/"}]}], [{"text": ["I recently backported Python 2.7 to Debian squeeze.", "Since Ubuntu 10.10 is newer than Debian squeeze, if you can do it on squeeze, you can certainly do it on Ubuntu.", "I don't have access to a Ubuntu 10.10 system.", "If I set one up, I'll test on it, and update this answer.", "So, here instead is a brief sketch of what I did on Debian."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["First, a general and obvious comment, but something that is easily overlooked.", "One should not take the listed build dependencies of a Debian package too seriously.", "They may be far more specific than needed.", "In particular, software like Python, which is designed to be portable and run over a wide array of systems.", "The runtime dependencies can be adjusted as well, but this should be done with more caution.", "However, runtime dependencies are mostly generated dynamically based on software that is already on this system, so usually that is not a big issue."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n apt-cache policy python2.7\npython2.7:\n  Installed: 2.7.2-8\n  Candidate: 2.7.2-8\n  Version table:\n     2.7.2-12 0\n         50 http://debian.csail.mit.edu/debian/ unstable/main i386 Packages\n     2.7.2-8 0\n         50 http://debian.csail.mit.edu/debian/ testing/main i386 Packages\n *** 2.7.2-8 0\n        100 /var/lib/dpkg/status\n</code>\n</pre>\n", "senID": 2}, {"text": ["Selecting the testing version we get"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n apt-get source python2.7=2.7.2-8\n</code>\n</pre>\n", "senID": 4}, {"text": ["Looking at debian/control, we see the following build dependency lines."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "debian/control", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Build-Depends: debhelper (>= 5), quilt, autoconf, libreadline-dev, libtinfo-dev, libncursesw5-dev (>= 5.3), tk8.5-dev, zlib1g-dev, blt-dev (>= 2.4z), libssl-dev, libexpat1-dev, sharutils, libbz2-dev, libbluetooth-dev [linux-any], locales [!armel !avr32 !hppa !ia64 !mipsel], libsqlite3-dev, libffi-dev (>= 3.0.5), mime-support, libgpm2 [linux-any], netbase, lsb-release, bzip2, libdb4.8-dev, gdb, python, help2man\nBuild-Depends-Indep: python-sphinx\nBuild-Conflicts: tcl8.3-dev, tk8.3-dev, tcl8.4-dev, tk8.4-dev, python2.7-xml, python-xml, autoconf2.13, libncurses5-dev"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Most of this is easily satisfied on squeeze.", "With the handy utility apt-show-versions we get on my machine"], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "apt-show-versions", "tag": "a", "pos": 1, "childList": [{"text": "apt-show-versions", "tag": "code"}], "childNum": 1, "href": "http://packages.debian.org/squeeze/apt-show-versions"}, {"text": "apt-show-versions", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n apt-show-versions debhelper quilt autoconf libreadline-dev libtinfo-dev libncursesw5-dev tk8.5-dev zlib1g-dev blt-dev \\\nlibssl-dev libexpat1-dev sharutils libbz2-dev libbluetooth-dev locales libsqlite3-dev \\\nlibffi-dev mime-support libgpm2 netbase lsb-release bzip2 libdb4.8-dev gdb python help2man python-sphinx\n\nautoconf/squeeze uptodate 2.67-2\nblt-dev/squeeze uptodate 2.4z-4.2\nbzip2/squeeze uptodate 1.0.5-6\ndebhelper/squeeze-backports uptodate 8.9.13~bpo60+1\ngdb/squeeze uptodate 7.0.1-2+b1\nhelp2man/squeeze uptodate 1.38.2\nlibbluetooth-dev/squeeze uptodate 4.66-3\nlibbz2-dev/squeeze uptodate 1.0.5-6\nlibdb4.8-dev/squeeze uptodate 4.8.30-2\nlibexpat1-dev/squeeze uptodate 2.0.1-7\nlibffi-dev/squeeze uptodate 3.0.9-3\nlibgpm2/squeeze uptodate 1.20.4-3.3\nlibncursesw5-dev/squeeze uptodate 5.7+20100313-5\nlibreadline-dev/squeeze uptodate 6.1-3\nlibsqlite3-dev/squeeze uptodate 3.7.3-1\nlibssl-dev/squeeze uptodate 0.9.8o-4squeeze5\nlibtinfo-dev not installed\nlocales/squeeze uptodate 2.11.2-10\nlsb-release/squeeze uptodate 3.2-23.2squeeze1\nmime-support/squeeze uptodate 3.48-1\nnetbase/squeeze uptodate 4.45\npython/squeeze uptodate 2.6.6-3+squeeze6\npython-sphinx/squeeze-backports uptodate 1.0.8+dfsg-2~bpo60+1\nquilt/squeeze uptodate 0.48-7\nsharutils/squeeze uptodate 1:4.9-1\ntk8.5-dev/squeeze uptodate 8.5.8-1\nzlib1g-dev/squeeze uptodate 1:1.2.3.4.dfsg-3\n</code>\n</pre>\n", "senID": 8}, {"text": ["We see that everything except libtinfo-dev is available in squeeze.", "I do have the squeeze backport versions of debhelper and python-sphinx, but both of these are also available for debian squeeze in versions satisfying the build requirements."], "childNum": 3, "tag": "p", "senID": 9, "childList": [{"text": "libtinfo-dev", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "debhelper", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "python-sphinx", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Observe also that I have libncurses5-dev installed"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n apt-show-versions libncurses5-dev\n\nlibncurses5-dev/squeeze uptodate 5.7+20100313-5\n</code>\n</pre>\n", "senID": 11}, {"text": ["Both of these packages correspond to the source package curses 5.7+20100313-5.", "Observe that libtinfo-dev in fact replaces libncurses5-dev."], "childNum": 3, "tag": "p", "senID": 12, "childList": [{"text": "curses 5.7+20100313-5", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "libtinfo-dev", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "libncurses5-dev", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n apt-cache show libtinfo-dev\n\nPackage: libtinfo-dev\nSource: ncurses\nVersion: 5.9-4\nInstalled-Size: 279\nMaintainer: Craig Small &lt;csmall@debian.org&gt;\nArchitecture: i386\nReplaces: libncurses5-dev (&lt;&lt; 5.9-3)\nDepends: libtinfo5 (= 5.9-4)\n</code>\n</pre>\n", "senID": 13}, {"text": ["One would not expect python 2.7 to develop on such a specific version of curses, and in fact it doesn't.", "However, if you try to build the packages without satisfying the dependency you get"], "childNum": 0, "tag": "p", "senID": 14, "childList": []}, {"code": "<pre>\n<code>\n debuild binary\n\ndpkg-checkbuilddeps: Unmet build dependencies: libtinfo-dev\ndpkg-checkbuilddeps: Build conflicts: libncurses5-dev\ndebuild: fatal error at line 1289:\nYou do not appear to have all build dependencies properly met.\nYou can use mk-build-deps to generate a dummy package which\nDepends on all the required packages, or you can install them\nmanually using dpkg or apt using the error messages just above\nthis message.\n</code>\n</pre>\n", "senID": 15}, {"text": ["So, it is necessary to edit debian/control.", "The simplest thing to do is just remove libncurses5-dev\nfrom the Build-Conflicts line and libtinfo-dev from the Build-Depends line, and then run debuild binary\nagain."], "childNum": 6, "tag": "p", "senID": 16, "childList": [{"text": "debian/control", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "libncurses5-dev", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "Build-Conflicts", "childNum": 0, "tag": "code", "childList": []}, {"text": "libtinfo-dev", "childNum": 0, "tag": "code", "childList": []}, {"text": "Build-Depends", "childNum": 0, "tag": "code", "childList": []}, {"text": "debuild binary", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["This should build successfully, and result in the following list of binary packages."], "childNum": 0, "tag": "p", "senID": 17, "childList": []}, {"code": "<pre>\n<code>\n ls -lah *.deb\n\n-rw-r--r-- 1 faheem staff 289K Jan 12 02:33 idle-python2.7_2.7.2-8_all.deb\n-rw-r--r-- 1 faheem staff 1.1M Jan 12 02:34 libpython2.7_2.7.2-8_i386.deb\n-rw-r--r-- 1 faheem staff 2.5M Jan 12 02:34 python2.7_2.7.2-8_i386.deb\n-rw-r--r-- 1 faheem staff  12M Jan 12 02:34 python2.7-dbg_2.7.2-8_i386.deb\n-rw-r--r-- 1 faheem staff 4.9M Jan 12 02:34 python2.7-dev_2.7.2-8_i386.deb\n-rw-r--r-- 1 faheem staff 6.0M Jan 12 02:33 python2.7-doc_2.7.2-8_all.deb\n-rw-r--r-- 1 faheem staff 692K Jan 12 02:33 python2.7-examples_2.7.2-8_all.deb\n-rw-r--r-- 1 faheem staff 1.7M Jan 12 02:34 python2.7-minimal_2.7.2-8_i386.deb\n</code>\n</pre>\n", "senID": 18}, {"text": ["Finally, one can install the binary packages with"], "childNum": 0, "tag": "p", "senID": 19, "childList": []}, {"code": "<pre>\n<code>\n dpkg -i python2.7-minimal_2.7.2-8_i386.deb python2.7_2.7.2-8_i386.deb python2.7-dev_2.7.2-8_i386.deb libpython2.7_2.7.2-8_i386.deb\n</code>\n</pre>\n", "senID": 20}, {"text": ["Sometimes dpkg can be a little difficult about satisfying dependencies when they are all installed at once, so you might have to run apt-get -f install afterwards if you get dependency errors, or alternatively install the packages in smaller groups."], "childNum": 2, "tag": "p", "senID": 21, "childList": [{"text": "dpkg", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "apt-get -f install", "childNum": 0, "tag": "code", "childList": []}]}]]