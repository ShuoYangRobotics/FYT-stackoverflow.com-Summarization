[[{"text": ["first read PEP-8 on naming conventions:"], "childNum": 2, "tag": "p", "senID": 0, "childList": [{"text": "first", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://www.python.org/dev/peps/pep-0008/", "text": "PEP-8", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n Use the function naming rules: lowercase with words separated by\n  underscores as necessary to improve readability.\n</code>\n</pre>\n", "senID": 1}, {"text": ["second you are calling mostFrequest on the class Student, not an instance of it.", "Use the method on an instance instead:"], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "second", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "mostFrequest", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Student", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n student = Student(row)\nstudent.MostFrequent()\n</code>\n</pre>\n", "senID": 3}], [{"text": ["use Student().MostFrequent()"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Student().MostFrequent()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["edit:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["beware that you use class attributes and this is dangerous.", "here an example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; class Person:\n...  name = None\n...  hobbies = []\n...  def __init__(self, name):\n...   self.name = name\n... \n&gt;&gt;&gt; a = Person('marco')\n&gt;&gt;&gt; b = Person('francesco')\n&gt;&gt;&gt; a.hobbies.append('football')\n&gt;&gt;&gt; b.hobbies\n['football']\n&gt;&gt;&gt; a.name\n'marco'\n&gt;&gt;&gt; b.name\n'francesco'\n&gt;&gt;&gt; a.name = 'mario'\n&gt;&gt;&gt; b.name\n'francesco'\n&gt;&gt;&gt; a.name\n'mario'\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["as you can see i modify marco's hobbies and francesco's hobbies are modified consequentially."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["You only rarely call methods on a  class definition (Student)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Student", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Almost always, you create an instance of the class"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n someStudent = Student(someRow)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Then you call the method on the instance (\"object\"), someStudent."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "someStudent", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n someStudent.MostFrequent()\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Student.MostFrequent means You're trying to use static method, not instance method.", "So You must first create instance by calling Student() and then call MostFrequent() on it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["P.S.", ": If this is not part of some arcane project, I urge you to follow PEP 8 and use most_frequent as method name."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["First, I recommend making function names lower case only."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["The error you get results from the usage of MostFrequent as a static method.", "For this to work, you need to explicitly pass an instance of Student as first argument."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "MostFrequent", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Student", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["If called directly on an instance of Student, the instance will implicitly be passed as first argument."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Student", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Consider using the staticmethod decorator for static usage of functions."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "staticmethod", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}], [{"text": ["What you probably want is to define most_frequent as a classmethod:"], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "most_frequent", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"href": "http://docs.python.org/library/functions.html#classmethod", "text": "classmethod", "childNum": 1, "tag": "a", "childList": [{"text": "classmethod", "tag": "code"}]}, {"text": "classmethod", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n @classmethod\ndef most_frequent(cls):\n    for choice in cls.choice_list:\n        cls.choice_dict[choice] = cls.choice_dict.get(choice, 0) + 1\n    cls.mostFrequent = sorted([(v, k) for k, v in cls.choice_dict.items()], reverse=True)\n    return cls.mostFrequent\n</code>\n</pre>\n", "senID": 1}], [{"text": ["in your class def, the method definition  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def MostFrequent(self,mostFrequent):\n</code>\n</pre>\n", "senID": 1}, {"text": ["has the extra variable mostFrequent that you probably don't want there.", "Try changing to :"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "mostFrequent", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def MostFrequent(self):\n</code>\n</pre>\n", "senID": 3}]]