[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; 'foobar'.encode('rot13')\n'sbbone'\n</code>\n</pre>\n", "senID": 0}, {"text": ["(I've heard rumors this doesn't work in Python 3.x though."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["Here's a maketrans/translate solution"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import string #fixed typo was using\nrot13 = string.maketrans( \\\n    \"ABCDEFGHIJKLMabcdefghijklmNOPQRSTUVWXYZnopqrstuvwxyz\", \\\n    \"NOPQRSTUVWXYZnopqrstuvwxyzABCDEFGHIJKLMabcdefghijklm\")\nstring.translate(\"Hello World!\", rot13)\n# 'Uryyb Jbeyq!'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["The maketrans and translate functions in the string module are handy for this type of thing.", "Of course, the encode method in Amber's response is even handier for this specific case."], "childNum": 6, "tag": "p", "senID": 0, "childList": [{"text": "maketrans", "tag": "a", "pos": 0, "childList": [{"text": "maketrans", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/string.html?highlight=maketrans#string.maketrans"}, {"text": "maketrans", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "translate", "tag": "a", "pos": -1, "childList": [{"text": "translate", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/string.html?highlight=maketrans#string.translate"}, {"text": "translate", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "string", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "encode", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Here's a general solution:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import string\n\ndef make_rot_n(n):\n lc = string.lowercase\n trans = string.maketrans(lc, lc[n:] + lc[:n])\n return lambda s: string.translate(s, trans)\n\nrot13 = make_rot_n(13)\n\nrot13('foobar')\n# 'sbbone'\n</code>\n</pre>\n", "senID": 2}], [{"text": ["its very simple"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import codecs\ncodecs.encode('foobar', 'rot13')\n&gt;&gt; 'sbbone'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["/usr/lib/python/this.py  "], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n d = {}\nfor c in (65, 97):\n    for i in range(26):\n        d[chr(i+c)] = chr((i+13) % 26 + c)\n\nprint \"\".join([d.get(c, c) for c in s])\n</code>\n</pre>\n", "senID": 1}], [{"code": "<pre>\n<code>\n s = \"foobar\"\ns.encode(\"rot13\")\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Try this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import codecs\ncodecs.encode(\"text to be rot13()'ed\", \"rot13\")\n</code>\n</pre>\n", "senID": 1}]]