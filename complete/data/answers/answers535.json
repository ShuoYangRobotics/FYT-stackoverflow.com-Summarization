[[{"text": ["One possibility is Hudson.", "It's written in Java, but there's integration with Python projects:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["I've never tried it myself, however."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(Update, Sept. 2011: After a trademark dispute Hudson has been renamed to Jenkins."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://jenkins-ci.org/", "text": "Jenkins", "childNum": 0, "tag": "a", "childList": []}]}], [{"text": ["We run Buildbot - Trac at work, I haven't used it too much since my code base isn't part of the release cycle yet.", "But we run the tests on different environments (OSX/Linux/Win) and it sends emails --and it's written in python."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Buildbot - Trac", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://buildbot.net/trac"}]}], [{"text": ["Second the Buildbot - Trac integration.", "You can find more information about the integration on the Buildbot website.", "At my previous job, we wrote and used the plugin they mention (tracbb).", "What the plugin does is rewriting all of the Buildbot urls so you can use Buildbot from within Trac.", "(http://example.com/tracbb)."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Buildbot website", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://buildbot.net/trac/wiki/BuildbotAndTrac"}]}, {"text": ["The really nice thing about Buildbot is that the configuration is written in Python.", "You can integrate your own Python code directly to the configuration.", "It's also very easy to write your own BuildSteps to execute specific tasks."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["We used BuildSteps to get the source from SVN, pull the dependencies, publish test results to WebDAV, etcetera."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I wrote an X10 interface so we could send signals with build results.", "When the build failed, we switched on a red lava lamp.", "When the build succeeded, a green lava lamp switched on.", "Good times :-)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["We use both Buildbot and Hudson for Jython development.", "Both are useful, but have different strengths and weaknesses."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["Buildbot's configuration is pure Python and quite simple once you get the hang of it (look at the epydoc-generated API docs for the most current info).", "Buildbot makes it easier to define non-testing tasks\u00a0and distribute the testers.", "However, it really has no concept of individual tests, just textual, HTML, and summary output, so if you want to have multi-level browsable test output and so forth you'll have to build it yourself, or just use Hudson."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Hudson has terrific support for drilling down from overall results into test suites and individual tests; it also is great for comparing test output between builds, but the distributed (master/slave) stuff is comparatively more complicated because you need a Java environment on the slaves too; also, Hudson is less tolerant of flaky network links between the master and slaves."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["So, to get the benefits of both tools, we run a single instance of Hudson, which catches the common test failures, then we do multi-platform regression with Buildbot."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Here are our instances:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["Jython Hudson"], "childNum": 0, "tag": "a", "senID": 5, "childList": []}, {"text": ["Jython buildbot"], "childNum": 0, "tag": "a", "senID": 6, "childList": []}]}], [{"text": ["We are using Bitten wich is integrated with trac.", "And it's python based."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Bitten", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bitten.edgewall.org/"}]}], [{"text": ["TeamCity has some Python integration."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "integration", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.jetbrains.net/confluence/display/TW/Python+Unit+Test+Reporting"}]}, {"text": ["But TeamCity is:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "not open-source", "tag": "none", "senID": 2}, {"text": "is not small, but rather feature rich", "tag": "none", "senID": 3}, {"text": "is free for small-mid teams.", "tag": "none", "senID": 4}]}], [{"text": ["I have very good experiences with Travis-CI for smaller code bases.", "The main advantages are:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Travis-CI", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://travis-ci.org/"}]}, {"tag": "ul", "num": 4, "lis": [{"text": "setup is done in less than half a screen of config file", "tag": "none", "senID": 1}, {"text": "you can do your own installation or just use the free hosted version", "tag": "none", "senID": 2}, {"text": "semi-automatic setup for github repositories", "tag": "none", "senID": 3}, {"text": "no account needed on website; login via github", "tag": "none", "senID": 4}]}, {"text": ["Some limitations:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["Python is not supported as a first class language (as of time of writing; but you can use pip and apt-get to install python dependencies; see this tutorial)"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "this tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.travisswicegood.com/2011/11/11/travis-and-python/"}]}, {"text": ["code has to be hosted on github (at least when using the official version)"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]}]]