[[{"text": ["You can use the zfill() method to pad a string with zeros:"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "zfill()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n In [3]: str(1).zfill(2)\nOut[3]: '01'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["you  most likely just need to format your integer:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n '%0*d' % (fill, your_int)\n</code>\n</pre>\n", "senID": 1}, {"text": ["e.g."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '%0*d' % (3, 4)\n'004'\n</code>\n</pre>\n", "senID": 3}], [{"text": ["You have at least two options:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "str.zfill: ", "tag": "none", "senID": 1}, {"text": [], "childNum": 0, "tag": "code", "senID": 2, "childList": []}]}, {"text": ["If on Python >2.5, see a third option in clorz's answer."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}], [{"text": ["Python 2.6 allows this:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n add_nulls = lambda number, zero_count : \"{0:0{1}d}\".format(number, zero_count)\n\n&gt;&gt;&gt;add_nulls(2,3)\n'002'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Just for the culture, on PHP, you have the function str_pad which makes exactly the job of your function add_nulls."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "str_pad", "tag": "a", "pos": 0, "childList": [{"text": "str_pad", "tag": "code"}], "childNum": 1, "href": "http://fr3.php.net/str%5Fpad"}, {"text": "str_pad", "childNum": 0, "tag": "code", "childList": []}, {"text": "add_nulls", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n str_pad($int, $cnt, '0', STR_PAD_LEFT);\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This is my python function:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def add_nulls(num, cnt=2):\n  cnt = cnt - len(str(num))\n  nulls = '0' * cnt\n  return '%s%s' % (nulls, num)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["A straightforward conversion would be (again with a function):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n def add_nulls2(int, cnt):\n    nulls = str(int)\n    for i in range(cnt - len(str(int))):\n    \tnulls = '0' + nulls\n    return nulls\n</code>\n</pre>\n", "senID": 1}]]