[[{"text": ["How about"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n x[x.rfind('.') + 1 : ]\n</code>\n</pre>\n", "senID": 1}, {"text": ["To me, that expresses what you're interested in (find the last dot, then take everything after it) more simply than a pattern or the concept of a \"longest match\"."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; 'Universe.World.Country.State.City.Street'.rpartition('.')[2]\n'Street'\n</code>\n</pre>\n", "senID": 0}], [{"code": "<pre>\n<code>\n &gt;&gt;&gt; \"Universe.World.Country.State.City.Street\".rsplit('.',1)[1]\n'Street'\n</code>\n</pre>\n", "senID": 0}, {"text": ["Edit: rpartition as suggested by SilentGhost seems to be the most efficient"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # rpartition\n$ python -m timeit -r100 -n100 -s 'x=\"Universe.World.Country.State.City.Street\"' 'x.rpartition(\".\")[-1]'\n100 loops, best of 100: 0.749 usec per loop\n\n# rfind\n$ python -m timeit -r100 -n100 -s 'x=\"Universe.World.Country.State.City.Street\"' 'x[x.rfind(\".\")+1:]'\n100 loops, best of 100: 0.808 usec per loop\n\n# rsplit\n$ python -m timeit -r100 -n100 -s 'x=\"Universe.World.Country.State.City.Street\"' 'x.rsplit(\".\",1)[1]'\n100 loops, best of 100: 0.858 usec per loop\n\n# split\n$ python -m timeit -r100 -n100 -s 'x=\"Universe.World.Country.State.City.Street\"' 'x.split(\".\")[-1]'\n100 loops, best of 100: 1.26 usec per loop\n\n# regex\n$ python -m timeit -r100 -n100 -s 'import re;rex=re.compile(r\"\\.([^.]*)$\");x=\"Universe.World.Country.State.City.Street\"' 'rex.search(x).groups()[0]'\n100 loops, best of 100: 3.16 usec per loop\n</code>\n</pre>\n", "senID": 2}], [{"text": ["Maybe:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n re.search(r\"\\.([^.]*)$\", s).groups()[0]\n</code>\n</pre>\n", "senID": 1}, {"text": ["EDIT: First version was bad :)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}], [{"text": ["If you know its always going to be the last element and a full stop you can't beat"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n \"Universe.World.Country.State.City.Street\".split(\".\")[-1]\n</code>\n</pre>\n", "senID": 1}], [{"text": ["string.rsplit('.", "', 1)[-1] with maxsplit=1 returns only the rightmost '.", "', so it also only matches once."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "string.rsplit('.', 1)[-1]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Looks like a tossup with string.rpartition('.", "')[-1]"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "string.rpartition('.')[-1]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["PS: gnibbler actually timed rsplit and it was slightly slower than rpartition, rfind."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]]