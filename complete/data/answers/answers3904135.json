[[{"code": "<pre>\n<code>\n &gt;&gt;&gt; print int('0x10', 16)\n16\n</code>\n</pre>\n", "senID": 0}], [{"text": ["Are you asking how to convert the string format hexadecimal value '16' into an integer  (that is, end up with an integer with decimal value 22)?", "It's not clear from your question.", "If so, you probably want int('16', 16)"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Sample Code :"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "Sample Code :", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print \"%x\"%int(\"2a\",16)\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Your code works for me, no apostrophes added."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n Python 2.6.4 (r264:75708, Oct 26 2009, 08:23:19) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; my_number = 16\n&gt;&gt;&gt; hex_no = hex(my_number)\n&gt;&gt;&gt; print hex_no\n0x10\n&gt;&gt;&gt; _\n</code>\n</pre>\n", "senID": 1}, {"text": ["Note, by the way, that there's no such thing as a \"hex number\".", "Hex is just a way to specify a number value.", "In the computer's memory that number value is usually represented in binary, no matter how it's specified in your source code (decimal, hex, whatever)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "specify", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Cheers &amp; hth.,"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["\u2013 Alf"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}], [{"text": ["Using the string formatters (new first, then old):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; '{:x}'.format( 12345678 )\n'bc614e'\n\n&gt;&gt;&gt; '%x' % ( 12345678 )\n'bc614e'\n</code>\n</pre>\n", "senID": 1}], [{"text": ["With Python 2.6.5 on MS Windows Vista, the command line interpreter behaves this way:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;hex(16)\n'0x10'\n&gt;&gt;&gt;print hex(16)\n0x10\n</code>\n</pre>\n", "senID": 1}, {"text": ["I guess this is the normal behavior:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt;'abc'\n'abc'\n&gt;&gt;&gt;print 'abc'\nabc\n</code>\n</pre>\n", "senID": 3}, {"text": ["I hope it helps"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]]