[[{"text": ["Most web frameworks have simple webservers embedded so you can simply start them without installing Apache etc."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["For example, have a look at the Django tutorial - they use the embedded server to run their sample project."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Django tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/intro/"}]}, {"text": ["If you don't want Django, have a look at the python webframework list: http://wiki.python.org/moin/WebFrameworks"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://wiki.python.org/moin/WebFrameworks", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/WebFrameworks"}]}], [{"text": ["Assuming, you have Python installed\n1. go to http://download.cherrypy.org/cherrypy/3.1.2/\n2. click on CherryPy-3.1.2.win32.exe and download Windows installer of CherryPy\n3. install CherryPy\n4. go to the directory created by the file extraction and then go to tutorial directory, in my case it was C:\\Python27\\Lib\\site-packages\\cherrypy\\tutorial\n5. run python tut01_helloworld.py\n6. open in your browser http://localhost:8080/"], "childNum": 13, "tag": "p", "senID": 0, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"href": "http://download.cherrypy.org/cherrypy/3.1.2/", "text": "http://download.cherrypy.org/cherrypy/3.1.2/", "childNum": 0, "tag": "a", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "CherryPy-3.1.2.win32.exe", "childNum": 0, "tag": "code", "childList": []}, {"text": "CherryPy", "childNum": 0, "tag": "code", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "CherryPy", "childNum": 0, "tag": "code", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "C:\\Python27\\Lib\\site-packages\\cherrypy\\tutorial", "childNum": 0, "tag": "code", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "python tut01_helloworld.py", "childNum": 0, "tag": "code", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "http://localhost:8080/", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Voila."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}], [{"text": ["If you just want to print \"hello world\" you can simply create and run the following Python file:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import BaseHTTPServer\nimport SimpleHTTPServer\n\nclass TestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):\n\n    def do_GET(self):\n        self.wfile.write(\"hello world\")\n\nif __name__ == \"__main__\":\n    server = BaseHTTPServer.HTTPServer((\"\", 8080), TestHandler)\n    server.serve_forever()\n</code>\n</pre>\n", "senID": 1}, {"text": ["This will serve \"hello world\" on http://localhost:8080/.", "Of course this is only a toy example.", "The next step would be to use the WSGI standard, making it compatible with a wide range of web servers (including Apache via modwsgi).", "A simple \"hello world\" WSGI example is given in the official documentation."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "http://localhost:8080/", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "modwsgi", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://code.google.com/p/modwsgi/"}, {"text": "official documentation", "tag": "a", "pos": 3, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/wsgiref.html#module-wsgiref.validate"}]}, {"text": ["For any serious web development you should probably choose one the numerous excellent web frameworks, as indicated in the other answers (e.g.", "see here for the deployment of Django)."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/howto/deployment/modwsgi/"}]}], [{"text": ["I'd suggest starting Python web development with Flask.", "It's a modern, lightweight web framework with excellent documentation, right from the installation instructions: http://flask.pocoo.org/docs/installation/"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "http://flask.pocoo.org/docs/installation/", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://flask.pocoo.org/docs/installation/"}]}], [{"text": ["Basically you should do these steps (each requiring some knowledge):"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["For web development in Python, you'll probably want to use one of the many available web frameworks."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "web frameworks", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/WebFrameworks"}]}, {"text": ["If you want to get going very quickly and easily (without even having to install Python), try the web2py framework:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "web2py", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.web2py.com/examples/default/download"}]}, {"text": ["That's it.", "The 'Welcome' scaffolding app will automatically open up in your browser with a \"Hello World\" message.", "To edit the app or create a new one, go to http://127.0.0.1:8000/admin and enter your admin password, which will take you to the web-based IDE/admin interface (see online demo).", "If you prefer, you can also edit application files in any editor or IDE (web2py applications are in the \\web2py\\applications\\ folder)."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "http://127.0.0.1:8000/admin", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://127.0.0.1:8000/admin"}, {"text": "demo", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://www.web2py.com/demo_admin/default/site"}]}, {"text": ["Note, the web2py Windows (and Mac) binary distribution includes a Python interpreter, so it does not require an existing installation of Python.", "If you want to use your own Python installation, you can simply download the web2py source code distribution instead (same process as above, but you'll click on web2py.py instead of web2py.exe to start web2py)."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "source code", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.web2py.com/examples/static/web2py_src.zip"}]}, {"text": ["Although web2py is extremely easy to set up, learn, and use, it's also a well-integrated full-stack framework with lots of features and flexibility.", "It's got excellent documentation, and if you need any help, there's a very friendly and responsive mailing list."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "documentation", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.web2py.com/book"}, {"href": "https://groups.google.com/forum/?fromgroups#!forum/web2py", "text": "mailing list", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["Note, if you're going to run your own Python installation on Windows, in addition to installing the Windows binary, be sure to install pywin32 as well."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "Windows binary", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://python.org/download/"}, {"href": "http://sourceforge.net/projects/pywin32/", "text": "pywin32", "childNum": 0, "tag": "a", "childList": []}]}]]