[[{"text": ["datetime.date has a isocalendar() method, which returns a tuple containing the calendar week:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; datetime.date(2010, 6, 16).isocalendar()[1]\n24\n</code>\n</pre>\n", "senID": 1}, {"text": ["datetime.date.isocalendar() is an instance-method returning a tuple containing year, weeknumber and weekday for the given date instance."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "datetime.date.isocalendar()", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html#datetime.date.isocalendar"}]}], [{"text": ["I believe date.isocalendar() is going to be the answer.", "This article explains the math behind ISO 8601 Calendar.", "Check out the date.isocalendar() portion of the datetime page of the Python documentation."], "childNum": 3, "tag": "p", "senID": 0, "childList": [{"text": "date.isocalendar()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "This article", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.phys.uu.nl/~vgent/calendar/isocalendar.htm"}, {"text": "datetime page", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html#datetime.date.isocalendar"}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; dt = datetime.date(2010, 6, 16) \n&gt;&gt;&gt; wk = dt.isocalendar()[1]\n24\n</code>\n</pre>\n", "senID": 1}, {"text": [".isocalendar() return a 3-tuple with (year, wk num, wk day).", "dt.isocalendar()[0] returns the year,dt.isocalendar()[1] returns the week number, dt.isocalendar()[2] returns the week day.", "Simple as can be."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "dt.isocalendar()[0]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "dt.isocalendar()[1]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "dt.isocalendar()[2]", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}], [{"text": ["Here's another option:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import time\nfrom time import gmtime, strftime\nd = time.strptime(\"16 Jun 2010\", \"%d %b %Y\")\nprint(strftime(\"%U\", d))\n</code>\n</pre>\n", "senID": 1}, {"text": ["which prints 24."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "24", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["See: http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior"}]}], [{"text": ["Look at datetime.datetime.isocalendar."], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "datetime.datetime.isocalendar", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/datetime.html#datetime.datetime.isocalendar"}]}], [{"text": ["The ISO week suggested by others is a good one, but it might not fit your needs.", "It assumes each week begins with a Monday, which leads to some interesting anomalies at the beginning and end of the year."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["If you'd rather use a definition that says week 1 is always January 1 through January 7 regardless of the day of the week, here it is."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; testdate=datetime.datetime(2010,6,16)\n&gt;&gt;&gt; print ((testdate - datetime.datetime(testdate.year,1,1)).days / 7) + 1\n24\n</code>\n</pre>\n", "senID": 2}], [{"text": ["generally to get the current week number (starts from sunday)\n'"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}]]