[[{"text": ["You can use finally :)"], "childNum": 1, "tag": "p", "senID": 0, "childList": [{"text": "finally", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["This should do what you want:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n try:\n    #do some things\nfinally:\n    myClass.close()\n</code>\n</pre>\n", "senID": 2}], [{"text": ["You can chain try, except and finally since Python 2.5:"], "childNum": 4, "tag": "p", "senID": 0, "childList": [{"text": "try", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "except", "childNum": 0, "tag": "code", "childList": []}, {"text": "finally", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://docs.python.org/reference/compound_stmts.html#the-try-statement", "text": "since Python 2.5", "childNum": 0, "tag": "a", "childList": []}]}, {"code": "<pre>\n<code>\n try:\n    # Do some things...\n    pass\nexcept Exception, error:\n    # Log the error...\n    raise\nfinally:\n    myClass.close()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["This is equivalent to your code:"], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n try:\n    #do some things\nfinally:\n    myClass.close()\n</code>\n</pre>\n", "senID": 1}, {"text": ["First it calls myClass.close() and if there was a error it is raised again."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "myClass.close()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["You can also have this to handle specific exceptions:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n try:\n    #do some things\nexcept Exception, error:\n    raise # re-raise the original exception\nfinally:\n    myClass.close()\n</code>\n</pre>\n", "senID": 4}], [{"text": ["Next to a finally (that would work) you could also use a context manager that calls your myClass.close() method on exit."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}], [{"text": ["Nest it."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n try:\n  try:\n    ...\n  except ...:\n    raise error\nfinally:\n  myClass.close()\n</code>\n</pre>\n", "senID": 1}], [{"text": ["Regardless this will not work.", "If you already raised an exception/error the first time you invoked myClass.close(), calling it again will be of no help.", "The error handling keywords are for implementing fallbacks, reporting and routing of the error-flow."], "childNum": 0, "tag": "p", "senID": 0, "childList": []}, {"text": ["See here for error handling:\nPython Error Handling with try/finally"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python Error Handling with try/finally", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1611561/python-error-handling-with-try-finally"}]}]]