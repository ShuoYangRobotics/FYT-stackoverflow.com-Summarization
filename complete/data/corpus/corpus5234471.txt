Question (ID-5234471): while loop python question The following is a method in a particular class that creates a simple calculator in python. It's intended to wait for a button to be clicked and return the label of that that button: 

 def getButton(self):
 while True:
  p = self.win.getMouse()
  for b in self.buttons:
   if b.clicked(p):
    return b.getLabel()
 

 The self.buttons variable is a list of all the calculator buttons. Clicked is a method that checks if the button has been clicked. What I don't understand is the "while True" boolean while loop. What is it testing to be true or false? In what case will the it not be true? 
 Answers (Total-6): #0 This is an example of a busy wait . This program will get stuck in this loop, eternally checking to see if any button b in self.buttons has been clicked. At this point, it will break from the busy wait to return b 's label. 

 So, in essence, it's not testing for anything . It's just waiting until a condition is met. 

 That being said, the busy wait is considered an anti-pattern . If you have control over this codebase (and this is more than just a trivial toy application), consider looking into whether this condition can be checked as part of a larger application main loop, or if the object provides a way that that event can be waited on (say, with a callback, or in a separate thread). 
 #1 True is always true. The while loop will run forever, until it is exited "by hand" when it executes the return statement. 
 #2 There are a number of ways to exit an infite loop: 

 
 return exits the current function (and thereby all loops within the function) 
 break exits only the current loop 
 Any uncaught exception 
 Additionally, sometimes you want an infinite loop, for example in a server case. You can still kill it by calling sys.exit or similar process-ending methods 
 
 #3 Control mechanisms such as while, if, etcetera check a boolean value. A typical check such as "a == 5" is either true or false. But you can also simply enter "True", in which case the condition will always be true. 

 In other words: "while true" is an infinite loop, and the code never stops running until the return b.getLabel() statement is reached. 
 #4 It's not testing. 

 while True means loop forever. While loops until its expression is false. True is never false. 
 #5 The only suggestion I could give is that it by sending it into an infinite loop like, it will always be listening for the button click. You will probably need to write an exit within that loop once it the button was clicked.