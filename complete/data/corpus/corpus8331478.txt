Question (ID-8331478): Is it possible to split and assign a string in a single statement in Python? Can a string be split and some of the words be assigned to a tuple in Python.
E.g 

  a = "Jack and Jill went up the hill"
 (user1 , user2) = a.split().pick(1,3) #picks 1 and 3 element in the list.
 

 Is such a one liner possible? If so what is the syntax. 
 Answers (Total-6): #0 If you want to get fancy, you could use operator.itemgetter : 

 
 Return a callable object that fetches item from its operand using the operandâ€™s __getitem__() method. If multiple items are specified, returns a tuple of lookup values. 
 

 Example: 

 &gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; pick = itemgetter(0, 2)
&gt;&gt;&gt; pick("Jack and Jill went up the hill".split())
('Jack', 'Jill')
 

 Or as a one-liner (w/o the import): 

 &gt;&gt;&gt; user1, user2 = itemgetter(0, 2)("Jack and Jill went up the hill".split())
 
 #1 You can do something like this 

 a = "Jack and Jill went up the hill"
user1, _, user2, _ = a.split(" ", 3)
 

 where _ means that we don't care of the value, and split(" ", 3) split the string in 4 segments. 
 #2 The first that comes to my mind is: 

 &gt;&gt;&gt; a = "Jack and Jill went up the hill"
&gt;&gt;&gt; [e for n, e in enumerate(a.split()) if n in (0, 2)]
['Jack', 'Jill']
 

 In case you wonder: enumerate generates tuples with a progressive number as first element and an element of the enumerated iterable as second. 

 EDIT: As said in the comments by @kindall, the final step would be: 

 &gt;&gt;&gt; user1, user2 = [e for n, e in enumerate(a.split()) if n in (0, 2)]
&gt;&gt;&gt; user1
'Jack'
&gt;&gt;&gt; user2
'Jill'
 

 but I chose not to do the assignment just to keep the example more to the point (sorry if this confused somebody). 
 #3 I'd rather do this in two lines, but here's a one-liner: 

 user1, user2 = [token for (i, token) in enumerate(a.split()) if i in (0, 2)] 

 Here's what I would do instead (just for readability and less chance of introducing bugs if needs to be changed in the future). 

 tokens = a.split()
user1 = tokens[0]
user2 = tokens[2]
 
 #4 This does the trick: 

 user1, user2 = a.split()[0::2][:2] 

 Pick the first two elements of the sequence counting from 2 in 2. 
 #5 Slicing supports a step parameter 

 a = "Jack and Jill went up the hill"
(user1 , user2) = a.split()[0:4:2] #picks 1 and 3 element in the list
 

 but while it's possible to write funky oneliners in Python for sure it's not the best language for that kind of exercise.