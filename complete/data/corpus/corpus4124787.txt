Question (ID-4124787): Python: multiple possible values for function arguments I've inherited some Python code that looks like this: 

 name = 'London'
code = '0.1'
notes = 'Capital of England'
ev = model.City(key=key, code=code, name=name or code, notes=notes)
 

 In the spirit of learning, I'd like to know what's going on with the name or code argument. Is this saying 'Use name if it's not null, otherwise use code '? 

 And what is the technical term for supplying multiple possible arguments like this, so I can read up on it in the Python docs? 

 Thanks! 
 Answers (Total-7): #0 Almost. It says use name if it does not evaluate to false . Things that evaluate to false include, but are not limited to: 

 
 False 
 empty sequences ( (), [], "" ) 
 empty mappings ( {} ) 
 0 
 None 
 

 Edit Added the link provided by SilentGhost in his comment to the answer. 
 #1 In python, the or operator returns the first operand, unless it evaluates to false, in which case it returns the second operand. In effect this will use name , with a default fallback of code if name is not specified. 
 #2 Fire up a Python console: 

 &gt;&gt;&gt; name = None
&gt;&gt;&gt; code = 0.1
&gt;&gt;&gt; name or code
0.10000000000000001
 

 In case name evaluates to false the expression will evaluate to code. Otherwise name will be used. 
 #3 Correct, that idiom take the first value that evaluates to True (generally not None). Use with care since valid values (like zero) may inadvertently be forsaken. A safer approach is something like: 

 if name is not None:
 # use name
 

 or 

 name if name is not None else code
 
 #4 Yes, to understand that boolean trick I recommend you reading this chapter of Dive into Python: 

 "In Python, and and or perform boolean logic as you would expect, but they do not return boolean values; instead, they return one of the actual values they are comparing." 

 http://diveintopython.org/power_of_introspection/and_or.html 
 #5 You've it it roughly correct, but 'null' is not precisely what decides. Basically anything that will evaluate to false (0, false, empty string '') will cause the second string to be displayed instead of the first. 'x or y' in this sense is kind of equivalent to: 

 if x: x 
else: y 

 Some console play: 

 
 
  
  x = '' 
  y = 'roar' 
  x or y 
  -'roar' 
  x = 'arf' 
  x or y 
  -'arf' 
  x = False 
  x or y 
  -'roar' 
  
 
 
 #6 
 In the spirit of learning, I'd like to
 know what's going on with the name or
 code argument. Is this saying 'Use
 name if it's not null, otherwise use
 code'? 
 

 yes basically but Null in python can mean more than one thing (empty string , none ..) 

 like in your case: 

 &gt;&gt;&gt; name = 'London'
&gt;&gt;&gt; code = 0.1
&gt;&gt;&gt; name or code
'London'
&gt;&gt;&gt; name = ''
&gt;&gt;&gt; code = 0.1
&gt;&gt;&gt; name or code
0.1000....
 

 but it weird thew that a function parameter can be integer sometimes and a string other times. 

 Hope this can help :=)