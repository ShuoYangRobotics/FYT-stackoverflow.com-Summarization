Question (ID-8865878): Skipping every other element after the first I have the general idea of how to do this in Java, but I am learning Python and not sure how to do it. 

 I need to implement a function that returns a list containing every other element of the list, starting with the first element. 

 Thus far, I have and not sure how to do from here since I am just learning how for-loops in Python are different: 

 def altElement(a):
 b = []
 for i in a:
  b.append(a)

 print b
 
 Answers (Total-6): #0 Slice notation a[low:high:increment] 

 return a[::2]
 

 where low defaults to 0 and high defaults to the length. 
 #1 b = a[::2]
 

 This uses the extended slice syntax . 
 #2 def altElement(a):
 return a[::2]
 
 #3 Alternatively, you could do: 

 for i in range(0, len(a), 2):
 #do something
 

 The extended slice notation is much more concise, though. 
 #4 items = range(10)
print items
&gt;&gt;&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
print items[1::2] # every other item after the second; slight variation
&gt;&gt;&gt; [1, 3, 5, 7, 9]
]
 
 #5 Using the for-loop like you have, one way is this: 

 def altElement(a):
 b = []
 j = False
 for i in a:
  j = not j
  if j:
   b.append(i)

 print b
 

 j just keeps switching between 0 and 1 to keep track of when to append an element to b.