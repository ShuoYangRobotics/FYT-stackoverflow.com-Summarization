Question (ID-749049): Passing a multi-line string as an argument to a script in Windows I have a simple python script like so: 

 import sys

lines = sys.argv[1]

for line in lines.splitlines():
 print line
 

 I want to call it from the command line (or a .bat file) but the first argument may (and probably will) be a string with multiple lines in it. How does one do this? 

 Of course, this works: 

 import sys

lines = """This is a string
It has multiple lines
there are three total"""

for line in lines.splitlines():
 print line
 

 But I need to be able to process an argument line-by-line. 

 EDIT: This is probably more of a Windows command-line problem than a Python problem. 

 EDIT 2: Thanks for all of the good suggestions. It doesn't look like it's possible. I can't use another shell because I'm actually trying to invoke the script from another program which seems to use the Windows command-line behind the scenes. 
 Answers (Total-6): #0 Just enclose the argument in quotes: 

 $ python args.py "This is a string
&gt; It has multiple lines
&gt; there are three total"
This is a string
It has multiple lines
there are three total
 
 #1 The following might work: 

 C:\&gt; python something.py "This is a string^
More?
More? It has multiple lines^
More?
More? There are three total"
 
 #2 This is the only thing which worked for me: 

 C:\&gt; python a.py This" "is" "a" "string^
More?
More? It" "has" "multiple" "lines^
More?
More? There" "are" "three" "total
 

 For me Johannes' solution invokes the python interpreter at the end of the first line, so I don't have the chance to pass additional lines. 

 But you said you are calling the python script from another process, not from the command line. Then why don't you use dbr' solution ? This worked for me as a Ruby script: 

 puts `python a.py "This is a string\nIt has multiple lines\nThere are three total"`
 

 And in what language are you writing the program which calls the python script? The issue you have is with argument passing , not with the windows shell, not with Python... 

 Finally, as mattkemp said, I also suggest you use the standard input to read your multi-line argument, avoiding command line magic. 
 #3 I know this thread is pretty old, but I came across it while trying to solve a similar problem, and others might as well, so let me show you how I solved it. 

 This works at least on Windows XP Pro, with Zack's code in a file called 
"C:\Scratch\test.py": 

 C:\Scratch&gt;test.py "This is a string"^
More?
More? "It has multiple lines"^
More?
More? "There are three total"
This is a string
It has multiple lines
There are three total

C:\Scratch&gt;
 

 This is a little more readable than Romulo's solution above. 
 #4 Not sure about the Windows command-line, but would the following work? 

 &gt; python myscript.py "This is a string\nIt has multiple lines\there are three total"
 

 ..or.. 

 &gt; python myscript.py "This is a string\
It has [...]\
there are [...]"
 

 If not, I would suggest installing Cygwin and using a sane shell! 
 #5 Have you tried setting you multiline text as a variable and then passing the expansion of that into your script. For example: 

 set Text="This is a string
It has multiple lines
there are three total"
python args.py %Text%
 

 Alternatively, instead of reading an argument you could read from standard in. 

 import sys

for line in iter(sys.stdin.readline, ''):
 print line
 

 On Linux you would pipe the multiline text to the standard input of args.py. 

 $ &lt;command-that-produces-text&gt; | python args.py