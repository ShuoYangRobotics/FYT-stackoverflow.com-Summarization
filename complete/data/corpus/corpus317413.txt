Question (ID-317413): Get Element value with minidom, Python I am creating a GUI frontend for the Eve Online API in Python. 

 I have successfully pulled the XML data from their server. 

 I am trying to grab the value from a node called "name" 

 from xml.dom.minidom import parse
dom = parse("C:\\eve.xml")
name = dom.getElementsByTagName('name')
print name
 

 This seems to find the node ok but the output is below: 

 [&lt;DOM Element: name at 0x11e6d28&gt;]
 

 How could I get it to print the value of the node? 

 Cheers 
 Answers (Total-6): #0 Probably something like this if it's the text part you want... 

 from xml.dom.minidom import parse
dom = parse("C:\\eve.xml")
name = dom.getElementsByTagName('name')

print " ".join(t.nodeValue for t in name[0].childNodes if t.nodeType == t.TEXT_NODE)
 

 The text part of a node is considered a node in itself placed as a child-node of the one you asked for. Thus you will want to go through all its children and find all child nodes that are text nodes. A node can have several text nodes; eg. 

 &lt;name&gt;
 blabla
 &lt;somestuff&gt;asdf&lt;/somestuff&gt;
 znylpx
&lt;/name&gt;
 

 You want both 'blabla' and 'znylpx'; hence the " ".join(). You might want to replace the space with a newline or so, or perhaps by nothing. 
 #1 It should just be 

 name[0].nodeValue
 
 #2 you can use something like this.It worked out for me 

 doc = parse('C:\\eve.xml')
my_node_list = doc.getElementsByTagName("name")
my_n_node = my_node_list[0]
my_child = my_n_node.firstChild
my_text = my_child.data 
print my_text
 
 #3 I know this question is pretty old now, but I thought you might have an easier time with ElementTree 

 from xml.etree import ElementTree as ET
import datetime

f = ET.XML(data)

for element in f:
 if element.tag == "currentTime":
  # Handle time data was pulled
  currentTime = datetime.datetime.strptime(element.text, "%Y-%m-%d %H:%M:%S")
 if element.tag == "cachedUntil":
  # Handle time until next allowed update
  cachedUntil = datetime.datetime.strptime(element.text, "%Y-%m-%d %H:%M:%S")
 if element.tag == "result":
  # Process list of skills
  pass
 

 I know that's not super specific, but I just discovered it, and so far it's a lot easier to get my head around than the minidom (since so many nodes are essentially white space). 

 For instance, you have the tag name and the actual text together, just as you'd probably expect: 

 &gt;&gt;&gt; element[0]
&lt;Element currentTime at 40984d0&gt;
&gt;&gt;&gt; element[0].tag
'currentTime'
&gt;&gt;&gt; element[0].text
'2010-04-12 02:45:45'e
 
 #4 I had a similar case, what worked for me was: 

 name.firstChild.childNodes[0].data 

 XML is supposed to be simple and it really is and I don't know why python's minidom did it so complicated... but it's how it's made 
 #5 Here is a slightly modified answer of Henrik's for multiple nodes (ie. when getElementsByTagName returns more than one instance) 

 images = xml.getElementsByTagName("imageUrl")
for i in images:
 print " ".join(t.nodeValue for t in i.childNodes if t.nodeType == t.TEXT_NODE)