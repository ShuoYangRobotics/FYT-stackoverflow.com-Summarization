Question (ID-3259233): How do I find out if one string is in another string in Python? I need to find if string variable a is in string variable b . 

 What statement should I use for this kind of task? 
 Answers (Total-6): #0 How about 

 if a in b:
 print "a is in b"
 

 If you also want to ignore capitals: 

 if a.lower() in b.lower():
 print "a is in b"
 
 #1 if a in b:
 # ...found it, do stuff...
 

 or 

 if b.find(a) != -1:
 # ...found it, do stuff...
 

 The former is probably more pythonic, but the latter lets you catch issues sooner if a or b are not the types you were expecting, since if a or b aren't strings, the latter will always fail non-silently, whereas the former can misbehave silently in some cases (for instance, 'foo' in ['foobar'] or even 'foo' in [1,2,3] ). 
 #2 if a in b:
 # insert code here
 
 #3 Strings are treated like lists of characters in Python. Therefore, the following will work whether a is a character and b is a string or if a is an element type and b is a list: 

 if a in b:
 #foo
else:
 #bar
 

 (Internally, Python handles strings and lists differently, but you can treat them as the same thing in many operations, like list comprehensions). 
 #4 For finding one string in another, you may want to try the string find method . 

 if b.find(a) != -1: # -1 will be returned when a is not in b
 do_whatever
 
 #5 &gt;&gt;&gt; a = '1324'
&gt;&gt;&gt; b = '58132458495'
&gt;&gt;&gt; if a in b:
  print(True)

&gt;&gt;&gt; True