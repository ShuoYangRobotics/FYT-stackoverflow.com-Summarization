Question (ID-733454): Best way to format integer as string with leading zeros? I need to add leading zeros to integer to make a string with defined quantity of digits ($cnt).
What the best way to translate this simple function from PHP to Python: 

 function add_nulls($int, $cnt=2) {
 $int = intval($int);
 for($i=0; $i&lt;($cnt-strlen($int)); $i++)
  $nulls .= '0';
 return $nulls.$int;
}
 

 Is there a function that can do this? 
 Answers (Total-7): #0 You can use the zfill() method to pad a string with zeros: 

 In [3]: str(1).zfill(2)
Out[3]: '01'
 
 #1 you most likely just need to format your integer: 

 '%0*d' % (fill, your_int)
 

 e.g. 

 &gt;&gt;&gt; '%0*d' % (3, 4)
'004'
 
 #2 You have at least two options: 

 
 str.zfill: lambda n, cnt=2: str(n).zfill(cnt) 
 % formatting: lambda n, cnt=2: "%0*d" % (cnt, n) 
 

 If on Python >2.5, see a third option in clorz's answer. 
 #3 Python 2.6 allows this: 

 add_nulls = lambda number, zero_count : "{0:0{1}d}".format(number, zero_count)

&gt;&gt;&gt;add_nulls(2,3)
'002'
 
 #4 Just for the culture, on PHP, you have the function str_pad which makes exactly the job of your function add_nulls . 

 str_pad($int, $cnt, '0', STR_PAD_LEFT);
 
 #5 This is my python function: 

 def add_nulls(num, cnt=2):
 cnt = cnt - len(str(num))
 nulls = '0' * cnt
 return '%s%s' % (nulls, num)
 
 #6 A straightforward conversion would be (again with a function): 

 def add_nulls2(int, cnt):
 nulls = str(int)
 for i in range(cnt - len(str(int))):
 	nulls = '0' + nulls
 return nulls