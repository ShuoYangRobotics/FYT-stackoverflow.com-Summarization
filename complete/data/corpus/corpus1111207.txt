Question (ID-1111207): How do Python and PHP compare for ecommerce? If I were to start an ecommerce store, which language would you suggest I start with? Python or PHP? 

 And would it be wise to use Python for an ecommerce site in favor of PHP? PHP has lots of shopping carts, both open source and commercial. 

 Is Python the future of Web Development ? 

 Edit: 

 I would like to clear out that i am not asking for Shopping carts solutions and links to them. 
 Answers (Total-9): #0 Whatever language you know better. I think this should be the first criterion. 
 #1 I'm personally a fan of Python, specificity with Django for the web. For ecommerce applications there is the Satchmo Project . 
 #2 Honestly, the languages don't really matter. 

 Both PHP and Python are capable to develop great websites and there are many examples for that. 
 #3 I don't think you'll get a good answer to this one. Everyone uses php, and python ecommerce is probably mainly in-house built. If there was a popular python solution (something like django for web platforms) - then I doubt there would be any discussion. 

 However - as of now I have yet to see a good all-in one system.
On the upside, using python you can easily create something simple for your business. 

 As there are not going to be a lot of new drastic revisions to the Python language in the future, we can expect some good apps to come out soon. My bet today is on django apps. 

 Using php is probably good in the short run. Not that I would ever go back to it... 

 PS: I forgot about another one: ASP.NET (mvc?). If you are feeling particularly adventurous, they have loads of "controls" and products. However it all confuses me a lot. 
 #4 I'd think that the overall implementation of any solution you choose (whether off-the-shelf or custom built) will be more important than any inherent speed differences between Python and PHP. 

 There are some truly shocking examples out there so it's worth doing research based upon your exact requirements. A shopping cart itself is a relatively simple object with standard functionality so if this is for a small-medium size store I'd go for whatever you feel more comfortable with. 
 #5 This is a challenging question to answer. If you are going for an off the-shelf package you're going to need to use PHP - this then gives you a range of packages including Magento, osCommerce (yuck) and so on. 

 If you are planning to develop a bespoke, or partially bespoke solution, then you probably want to look at using a framework to cut down the amount of code you need to write from the outset. Again, there are various options for each language. 

 Python and Django has a web framework for satchmo that could really take the legwork out of an ecommerce build whilst giving a level of flexibility that you usually don't get from an off-the-shelf package. 
 #6 I would say that PHP carts are probably more mature and have more features than the Django ones. (Note I've only had experience with 2 PHP shopping carts and no Python ones) 

 On the other hand, PHP is a poorly designed language and is usually slower than Python in benchmarks. Depending on your needs, a Python shopping cart may suffice. 
 #7 More important than the language is the developer's ability to translate business logic into elegant and maintainable code. But I would recommend building with an MVC framework in whatever language you choose. Both PHP and Python have options there (django, CakePHP are popular choices). 
 #8 PHP's memory management issues are overlooked because it's a language designed for the web, where long lasting processes aren't a problem. 

 This is the main reason I never favor PHP.