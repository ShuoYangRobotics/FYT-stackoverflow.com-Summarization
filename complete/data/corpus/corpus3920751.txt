Question (ID-3920751): Convert string to a tuple I have a string like this: 

 '|Action and Adventure|Drama|Science-Fiction|Fantasy|' 

 How can I convert it to a tuple or a list? 

 Thanks. 
 Answers (Total-6): #0 &gt;&gt;&gt; s = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'
&gt;&gt;&gt; 
&gt;&gt;&gt; [item for item in s.split('|') if item.strip()]
['Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy']
&gt;&gt;&gt; 
 

 If you'd rather have a tuple then: 

 &gt;&gt;&gt; tuple(item for item in s.split('|') if item.strip())
('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')
&gt;&gt;&gt; 
 
 #1 You want str.split() : 

 &gt;&gt;&gt; s = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'
&gt;&gt;&gt; s.split('|')
['', 'Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy', '']
 
 #2 If you want to just split your string at the | character you use: 

 myStr.split('|')
 

 If you also want all zero-length element removed (like the ones from the ends) you: 

 def myFilter(el): return len(el) &gt; 0
filter(myFilter, myStr.split('|'))
 
 #3 Strip 
'string'.strip('|') 

  &gt;&gt;&gt; heading = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'
 &gt;&gt;&gt; tuple(heading.strip('|').split('|'))
 ('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')
 

 Slice 
'string'[1:-1] 

  &gt;&gt;&gt; heading = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'
 &gt;&gt;&gt; tuple(heading[1:-1].split('|'))
 ('Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy')
 

 For List remove the tuple() call. 
 #4 strip() gets rid of the leading and trailing chars, split() divvies up the remainder: 

 &gt;&gt;&gt; s.strip('|').split('|')
['Action and Adventure', 'Drama', 'Science-Fiction', 'Fantasy']
 
 #5 List 

 seq = '|Action and Adventure|Drama|Science-Fiction|Fantasy|'.split('|')
 

 Tuple 

 seq = tuple(seq)
 

 If you want to strip empty items, pass the output through filter(None, seq) . If you assume outer | always, just slice with seq[1:-1] .