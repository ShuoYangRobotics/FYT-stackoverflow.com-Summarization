Question (ID-58294): How do I get the external IP of a socket in Python? When I call socket.getsockname() on a socket object, it returns a tuple of my machine's internal IP and the port. However, I would like to retrieve my external IP. What's the cheapest, most efficient manner of doing this? 
 Answers (Total-6): #0 This isn't possible without cooperation from an external server, because there could be any number of NATs between you and the other computer. If it's a custom protocol, you could ask the other system to report what address it's connected to. 
 #1 The only way I can think of that's guaranteed to give it to you is to hit a service like http://whatismyip.com/ to get it. 
 #2 import socket 

 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 

 s.connect(("msn.com",80)) 

 s.getsockname() 
 #3 https://github.com/bobeirasa/mini-scripts/blob/master/externalip.py 

 '''
Finds your external IP address
'''

import urllib
import re

def get_ip():
 group = re.compile(u'(?P&lt;ip&gt;\d+\.\d+\.\d+\.\d+)').search(urllib.URLopener().open('http://jsonip.com/').read()).groupdict()
 return group['ip']

if __name__ == '__main__':
 print get_ip()
 
 #4 Using the address suggested in the source of http://whatismyip.com 

 import urllib
def get_my_ip_address():
 whatismyip = 'http://www.whatismyip.com/automation/n09230945.asp'
 return urllib.urlopen(whatismyip).readlines()[0]
 
 #5 print (urllib.urlopen('http://automation.whatismyip.com/n09230945.asp').read())