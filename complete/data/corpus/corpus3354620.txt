Question (ID-3354620): html form submission I'm looking at the html form of an external website (not maintained by myself) in the following format : 

 &lt;form onsubmit="return check(this)" method=post action=address.aspx target=ttPOST&gt;
....
&lt;/form&gt;
 

 I wish to post data to this external website without having to go through the form and pressing submit. 

 Can I simply go to the url 'address.aspx' and append it with the required input parameters ? 

 My goal is to automate the periodic posting of information, chosen from a list of frequently changing values on the website. (Using Python and AutoIt) 
 Answers (Total-6): #0 I should note that I'm unclear if you were wanting to automate the posting of data from outside a web browser or not. Others have answered doing it with script and such like from the web page so I thought I'd cover how it works when you are doing it from a standalone program. 

 For most languages you can get things that will help you simulate web requests. Most of these would probably allow you to make a post request and supply post data. I dont' know python and autoit but in teh general sense you'd just need to get the name value pairs by looking at the HTML of the form (or by examining a request being made to the server is probably better) and then make a post request. 

 As others have said if you want to just append the values to teh url then the server will need to be happy to accept a GET request instead of a post. Sometimes you will find that servers will do this happily (they don't care how form submission is done, as long as they get data), other times it will be specifically looking for a post and will ignore parameters passed as part of the querystring. 
 #1 You can use JQuery.post() 

 &lt;form action="#" class="myForm" method="post"&gt;
 &lt;input type="text" id="field1" name="field1" value="" runat="server" /&gt;
&lt;/form&gt;
// Submit
&lt;div onclick="submit();return false;"&gt;Submit&lt;/div&gt;
 

 Then the submit() function looks like 

 function submit() {
 $.post("address.aspx", $("form.myForm").serialize(), function(data, textStatus)
 {
  // Handle success or error
 });
}
 

 In codebehind, you can access the post variables 

 Request.Form["field1"]
 
 #2 Change the method attribute from POST to GET . 

 Read about the differences here . 

 You can get away with changing the URL to go to the external site using the same syntax of GET parameter ( ?param1=val1&amp;param2=val2... ), but to achieve this you will need to write this logic yourself in javascript. 
 #3 Why do you want to get around the form submit? Submit the form and use the values in HTTP_POST. You can use HTTP_GET by changing the method to GET in the above html but the form will still submit. 

 One way to submit the params to address.aspx would be to use javascript....build a string of all the params and submit that to address.aspx when the user clicks on the submit button. You'll need to disable the submit buttons default behaviour. 
 #4 You could make AJAX GET requests (appending the data to the URL) and execute them with a certain time interval. 

 I would recommend jQuery, but it may not be ideal in a .NET environment. 

 
 jQuery.ajax() - http://api.jquery.com/jQuery.ajax/ 
 jQuery.get() - http://api.jquery.com/jQuery.get/ 
 

 NOTE : 

 
 I wish to post data to this external website without having to go through the form and pressing submit. 
 

 I took this as meaning you didn't want to actually submit the form, do you want to submit the form but simply not by pressing the submit button? If you actually want the form to submit, then you should indeed just change the form's method attribute to get instead of post . 

 If however you do wish to stay on the form page and need to post the data to some other resource with the data in the URL string (there are reasons for and aganist doing this that you should look into -- scroll down to 9.3 GET ), then just make an AJAX GET request, otherwise just POST the data using AJAX. Either way, you'll have to make some sort of an asynchronous call. 
 #5 POST is not the same as GET -- if you append the data that you want to the URL, the page will not see your variables. That is to say GETTING (a.k.a going to) http://www.the-other-site.com/address.aspx?variable1=a&amp;variable2=b will not work. 

 You need to build POST request and submit it to address.aspx . 

 If you want to do it yourself then you'll need Python's urllib2 module (More specifically, the Request object). If you want to use a pre-built solution, you'll need something like mechanize to POST your variables.