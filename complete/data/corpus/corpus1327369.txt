Question (ID-1327369): extract contents of regex I want a regular expression to extract the title from a HTML page. Currently I have this: 

 title = re.search('&lt;title&gt;.*&lt;/title&gt;', html, re.IGNORECASE).group()
if title:
 title = title.replace('&lt;title&gt;', '').replace('&lt;/title&gt;', '') 
 

 Is there a regular expression to extract just the contents of so I don't have to remove the tags? 

 thanks! 
 Answers (Total-7): #0 Use ( ) and group(1) (re.search will return None if it doesn't find the result, so don't use group() directly ): 

 title_search = re.search('&lt;title&gt;(.*)&lt;/title&gt;', html, re.IGNORECASE)

if title_search:
 title = title_search.group(1)
 
 #1 Try using capturing groups: 

 title = re.search('&lt;title&gt;(.*)&lt;/title&gt;', html, re.IGNORECASE).group(1)
 
 #2 Please, do NOT use regex to parse markup languages. Use lxml or beautifulsoup. 
 #3 Try: 

 title = re.search('&lt;title&gt;(.*)&lt;/title&gt;', html, re.IGNORECASE).group(1)
 
 #4 re.search('&lt;title&gt;(.*)&lt;/title&gt;', s, re.IGNORECASE).group(1) 
 #5 Using regular expressions to parse the HTML is generally not a good idea. You can use any HTML parser like Beautiful Soup for that. Check out http://www.crummy.com/software/BeautifulSoup/documentation.html 

 Also remember that some people, when confronted with a problem, think "I know, I'll use regular expressions." Now they have two problems. 
 #6 Don't use regular expressions for HTML parsing in Python. Use an HTML parser! (Unless you're going to write a full parser, which would be a of extra work when various HTML, SGML and XML parsers are already in the standard libraries. 

 If your handling "real world" tag soup HTML (which is frequently non-conforming to any SGML/XML validator) then use the BeautifulSoup package (which isn't in the standard libraries (yet) but is wide recommended for this purpose.