Question (ID-480214): How do you remove duplicates from a list in Python whilst preserving order? Is there a built-in that removes duplicates from list in Python, whilst preserving order? I know that I can use a set to remove duplicates, but that destroys the original order. I also know that I can roll my own like this: 

 def uniq(input):
 output = []
 for x in input:
 if x not in output:
  output.append(x)
 return output
 

 (Thanks to unwind for that code sample .) 

 But I'd like to avail myself of a built-in or a more Pythonic idiom if possible. 

 Related question: In Python, what is the fastest algorithm for removing duplicates from a list so that all elements are unique while preserving order ? 
 Answers (Total-8): #0 Here you have some alternatives: http://www.peterbe.com/plog/uniqifiers-benchmark 

 Fastest one: 

 def f7(seq):
 seen = set()
 seen_add = seen.add
 return [ x for x in seq if x not in seen and not seen_add(x)]
 

 

 EDIT: 

 If you plan on using this function a lot, perhaps you would be better off with an ordered set: http://code.activestate.com/recipes/528878/ 

 O (1) insertion, deletion and member-check. 
 #1 from itertools import groupby
[ key for key,_ in groupby(sortedList)]
 

 The list doesn't even have to be sorted , the sufficient condition is that equal values are grouped together. 

 Edit: I assumed that "preserving order" implies that the list is actually ordered. If this is not the case, then the solution from MizardX is the right one. 

 Community edit: This is however the most elegant way to "compress duplicate consecutive elements into a single element". 
 #2 If order doesn't matter - just convert list to set 

 ls = [1, 2, 3, 3]
print set(ls) # set([1, 2, 3])
 

 More about set type - http://docs.python.org/release/2.4.4/lib/types-set.html 
 #3 for i in range(len(theArray)-1,-1,-1): #get the indexes in reverse
 if theArray.count(theArray[i]) &gt; 1:
 theArray.pop(i)
 
 #4 If you need one liner then maybe this would help: 

 reduce(lambda x, y: x + y if y[0] not in x else x, map(lambda x: [x],lst))
 

 ... should work but correct me if i'm wrong 
 #5 For no hashable types (e.g. list of lists), based on MizardX's: 

 def f7_noHash(seq)
 seen = set()
 return [ x for x in seq if str( x ) not in seen and not seen.add( str( x ) )]
 
 #6 MizardX's answer gives a good collection of multiple approaches. 

 This is what I came up with while thinking aloud: 

 mylist = [ x for i,x in enumerate(mylist) if x not in mylist[i+1:]] 
 #7 Short and sweet: 

 
 [j for i,j in enumerate(l) if not (i &lt; len(l)-1 and j is l[i+1]) and not (i > 0 and j is l[i-1])]