Question (ID-2378962): Returning the lowest index for the first non whitespace character in a string in Python What's the shortest way to do this in Python? 

 string = " xyz"
 

 must return index = 3 
 Answers (Total-6): #0 &gt;&gt;&gt; s = " xyz"
&gt;&gt;&gt; len(s) - len(s.lstrip())
3
 
 #1 &gt;&gt;&gt; next(i for i, j in enumerate(' xyz') if j.strip())
3
 

 or 

 &gt;&gt;&gt; next(i for i, j in enumerate(' xyz') if j not in string.whitespace)
3
 

 in versions of Python &lt; 2.5 you'll have to do: 

 (...).next()
 
 #2 Looks like the "regexes can do anything" brigade have taken the day off, so I'll fill in: 

 &gt;&gt;&gt; tests = [u'foo', u' foo', u'\xA0foo']
&gt;&gt;&gt; import re
&gt;&gt;&gt; for test in tests:
...  print len(re.match(r"\s*", test, re.UNICODE).group(0))
...
0
1
1
&gt;&gt;&gt;
 

 FWIW: time taken is O(the_answer), not O(len(input_string)) 
 #3 &gt;&gt;&gt; string = " xyz"
&gt;&gt;&gt; next(idx for idx, chr in enumerate(string) if not chr.isspace())
3
 
 #4 &gt;&gt;&gt; string = " xyz"
&gt;&gt;&gt; map(str.isspace,string).index(False)
3
 
 #5 import re
def prefix_length(s):
 m = re.match('(\s+)', s)
 if m:
  return len(m.group(0))
 return 0