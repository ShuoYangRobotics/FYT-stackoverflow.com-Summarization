Question (ID-5710142): How to use Python slice to extract a list of positions in a string I have two strings: 

 a='1234512345'

b='abcdefghik'
 

 I would like to search string "a" for occurrences of '1' and then print the positions of "b" that correspond to that index, i.e. 

 'af'
 

 I can use 

 import re

starts=[match.start() for match in re.finditer(re.escape('1'), a)]
 

 to find that '1' occurs in positions [0,5]. How would I use this info to extract 'af' from string "b" 
 Answers (Total-7): #0 You could do something like this: 

 ''.join(b[x] for x in starts)
 

 But I would recommend this instead: 

 a='1234512345'
b='abcdefghik'

''.join(y for (x, y) in zip(a, b) if x == '1')
 
 #1 &gt;&gt;&gt; a='1234512345'
&gt;&gt;&gt; b='abcdefghik'
&gt;&gt;&gt; [ j for i,j in zip(a,b) if i=="1" ]
['a', 'f']
 
 #2 In [11]: a='1234512345' 
In [12]: b='abcdefghik'

In [16]: ''.join(b[i] for i,num in enumerate(a) if num=='1')
Out[16]: 'af'
 

 or, if you really want to use regex: 

 In [21]: ''.join(b[match.start()] for match in re.finditer(re.escape('1'), a))
Out[21]: 'af'
 
 #3 import re
a='1234512345'

b='abcdefghik'

starts= [ b[i] for i in [ match.start() for match in re.finditer(re.escape('1'), a)]]
print ''.join(starts)
 
 #4 "".join(b[i] for i in range(min(len(a), len(b))) if a[i] == "1")
 
 #5 like this? 

 a='1234512345'

b='abcdefghik'

for char in a:
 n = -1
 for subc in a:
  n=n+1
  if subc == char:
   print b[n],
 print
 

 produces: 

 a f
b g
c h
d i
e k
a f
b g
c h
d i
e k
 
 #6 If you have to repeat this for a few values of a , it will be more efficient ((O(n)) to build a dictionary than to loop through a and b repeatedly (O(n*n)) 

 &gt;&gt;&gt; a='1234512345'
&gt;&gt;&gt; b='abcdefghik'
&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; D=defaultdict(str)
&gt;&gt;&gt; for i,j in zip(a,b):
... D[i]+=j
... 
&gt;&gt;&gt; D['1']
'af'
&gt;&gt;&gt; D['2']
'bg'