Question (ID-1879971): What is the current choice for doing RPC in Python? Actually, I've done some work with Pyro and RPyC, but there is more RPC implementation than these two. Can we make a list of them? 

 Native Python-based protocols: 

 
 PyRo (Python Remote Objects) 
 RPyC (Remote Python Call) 
 Circuits 
 

 JSON-RPC based frameworks: 

 
 python-symmetric-jsonrpc 
 rpcbd 
 Ladon 
 jsonrpc2-zeromq-python 
 

 SOAP: 

 
 ZSI 
 SOAPpy 
 Ladon 
 Rpclib 
 

 XML-RPC based frameworks: 

 
 XMLRPC, using the xmlrpclib and SimpleXMLRPCServer modules in the standard library. 
 

 Others: 

 
 Twisted Spread 
 ZMQRPC (ZeroMQ and BSON based) 
 VPy (Versile Python) 
 
 Answers (Total-6): #0 
 XMLRPC, using the xmlrpclib and SimpleXMLRPCServer modules in the standard library. 
 
 #1 There are some attempts at making SOAP work with python, but I haven't tested it much so I can't say if it is good or not. 

 SOAPy is one example. 
 #2 Since I've asked this question, I've started using python-symmetric-jsonrpc . It is quite good, can be used between python and non-python software and follow the JSON-RPC standard. But it lack some examples. 

 Edit : Another interesting jsonrpc framework is rpcbd 
 #3 maybe ZSI which implements SOAP. I used the stub generator and It worked properly. The only problem I encountered is about doing SOAP throught HTTPS. 
 #4 You could try Ladon. It serves up multiple web server protocols at once so you can offer more flexibility at the client side. 

 http://pypi.python.org/pypi/ladon 
 #5 We are developing Versile Python (VPy), an implementation for python 2.6+ and 3.x of a new ORB/RPC framework. Functional AGPL dev releases for review and testing are available . VPy has native python capabilities similar to PyRo and RPyC via a general native objects layer ( code example ). The product is designed for platform-independent remote object interaction for implementations of Versile Platform . 

 Full disclosure: I work for the company developing VPy.