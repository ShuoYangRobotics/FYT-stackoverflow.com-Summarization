Question (ID-6486659): simple python question I have an extreemly simple question. so i have been making an mp3 player with tkinter and the module mp3play. Here is my probleme: 

 Say i had the song to play: C:\Music\song.mp3 

 and to play that song i have to run this script 

 import mp3play
music_file=r'C:\Music\song.mp3'
clip = mp3play.load(music_file)
clip.play()
 

 easy enough, my probleme though is getting the "r" there. 

 i have tried: 

 import mp3play
import re
music_file="'C:\Music\song.mp3'"

music_file='r'+music_file
music_file=re.sub('"','',music_file)

print music_file
clip = mp3play.load(music_file)

clip.play()
 

 Which gets the out put: r'C:\Music\song.mp3'
but it is a string so it wont read the file. 

 Please help this is very frustrating. 
 Answers (Total-6): #0 The 'r' in the front denotes a particular category of string called raw string. You can't get that by adding two strings or re substituting a string. It is just a string type, but with the escape characters take care. 

 &gt;&gt;&gt; s = r'something'
&gt;&gt;&gt; s
'something'
&gt;&gt;&gt; 
 

 When you are writing the script, use the 'r', if you are getting the input via raw_input, python will take care of escaping the characters. So, the question is why are you trying to do that? 
 #1 try: 

 music_file='C:/Music/song.mp3'
 
 #2 In Python, the r prefix introduces a raw string . Outside of raw strings, backslash ( \ ) characters are considered as escape characters and have to be escaped themselves (by doubling them). 

 Try a simple string instead: 

 music_file = 'C:\\Music\\song.mp3'
 
 #3 The r you are talking about has to be placed before a string definition, and tells python that the following string is "raw", meaning it will ignore backslash escapes (so it doesn't error on invalid backslashes in filenames, for example). 

 Why don't you just do it like in the first example? I don't see what you are trying to accomplish in the second example. 
 #4 you can try music_file = r'%s' % path_to_file 
 #5 As a few of the other answers have pointed out (I'm just posting this as an answer because it seemed kind of silly to make it a comment), what you've given in your first code block is exactly what the contents of your script should be . You don't need to do anything special to get the r there. In fact the 'r' is not part of the string, it's part of the code that makes the string.