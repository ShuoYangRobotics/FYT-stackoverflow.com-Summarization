Question (ID-1514553): how to declare an array in python? I'm really new to python and I'm wondering how to declare an array in this language? I can't find any reference to arrays in the docs. 
 Answers (Total-8): #0 variable = []
 

 Now variable refers to an empty list (array). 

 Of course this is an assignment, not a declaration. There's no way to say in python "this variable should never refer to anything other than an array", since python is dynamically typed. 
 #1 You don't declare anything in Python. You just use it. I recommend you start out with something like http://diveintopython.org . 
 #2 You don't actually declare things, but this is how you create an array in Python: 

 from array import array
intarray = array('i')
 

 For more info see the array module: http://docs.python.org/library/array.html 

 Now possible you don't want an array, but a list, but others have answered that already. :) 
 #3 I would normally just do a = [1,2,3] which is actually a list but for arrays look at this formal definition 
 #4 my_array = [1, 'rebecca', 'allard', 15] 

 as a sample. 
 #5 Following on from Lennart, there's also numpy which implements homogeneous multi-dimensional arrays. 
 #6 I think you (meant)want an list with the first 30 cells already filled.
So 

  f = []

 for i in range(30):
  f.append(0)
 

 An example to where this could be used is in Fibonacci sequence.
See problem 2 in Project Euler 
 #7 for calculations, use numpy arrays like this: 

 import numpy as np

a = np.ones((3,2))  # a 2D array with 3 rows, 2 columns, filled with ones
b = np.array([1,2,3])  # a 1D array initialised using a list [1,2,3]
c = np.linspace(2,3,100) # an array with 100 points beteen (and including) 2 and 3

print(a*1.5) # all elements of a times 1.5
print(a.T+b) # b added to the transpose of a
 

 these numpy arrays can be saved and loaded from disk (even compressed) and complex calculations with large amounts of elements is C-like fast. Much used in scientific environments. See here for more...