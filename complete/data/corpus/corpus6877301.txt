Question (ID-6877301): Suggest a standalone python web framework? I have a python program that I would like to present as a simple web application. The program currently uses sqlite for storage. I also need to distribute the whole thing to colleagues so having something standalone and easy to start would be ideal ( no install if possible). This web app is meant to be used locally , not by multiple users over a network. 

 Is there a suitable python framework that might fit my needs? I looked at Django so far but it seems a bit heavy handed for what I need. 

 Thanks for any suggestions. 
 Answers (Total-6): #0 I have never tried it myself, but you could try Bottle : 

 
 Bottle is a fast, simple and lightweight WSGI micro web-framework for
 Python. It is distributed as a single file module and has no
 dependencies other than the Python Standard Library. 
 
 #1 try http://docs.python.org/library/simplehttpserver.html 
 #2 As web frameworks are not part of the standard lib, you will have to install something in every case. I would propse to look at http://flask.pocoo.org/ . It has a build in WSGI server. 
 #3 Lots of choices for Python web frameworks! Another is web2py which is designed to work out of the box and allows, but doesn't require, through-the-web development. It is mature and has a strong community and is well-documented . 
 #4 Tornado as a framework may be a lot more than what you're looking for. However it will meet the requirement of being a completely python based web server. http://tornadoweb.org 

 I generally just download the source, drop it in /tornado/ of my project and do includes there from the app. 
 #5 I don't think that any web framework is specifically oriented for the use case you're talking about; They all assume they are running on a server and there's a browser on a remote machine that is accessing them. 

 A better approach is to think about the HTTP server you'll be using. It's probably preferable to use a server that's as easy to pack and ship as the rest of the python code you'll be using. Now most frameworks provide a 'development' server that's easy to invoke from the command line, but most of them are intended to be "easy for the developer" which often means they are restricted to a single thread. This is bad for deployment because single threaded servers will always feel a bit sluggish. 

 CherryPy stands out in contrast, by providing a full featured, embedded server that's easy to configure for many use cases, and is available by default with the rest of the framework. There are probably others, but I haven't used 'em.