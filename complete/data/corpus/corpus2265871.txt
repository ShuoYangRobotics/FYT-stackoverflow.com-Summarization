Question (ID-2265871): showing list item in python I want to manipulate feed which contains frequently updated (with time) contents using feed parser. Goal is to show all the contents of the updated feed. 

 import feedparser
d = feedparser.parse("some URL")

print "Information of user" 
i = range(10)

for i in d:
 print d.entries[i].summary 

print " " 
 

 As parsing data is list, and list don't accept string as indices, it shows error 

 like: 

 File "F:\JavaWorkspace\Test\src\rss_parse.py", line 18, in &lt;module&gt;
print d.entries[i].summary 
TypeError: list indices must be integers
 

 Then how can I get all contents? can anyone please show me some light on this issue? Thanks in advance! 
 Answers (Total-6): #0 i is not an integer. I guess i is already an entry of the feed but better rename it: 

 Try: 

 for entry in d.entries:
 print entry.summary
 

 If you want the first 10 entries you have to do: 

 try:
 for i in range(10):
 print d.entries[i].summary
except IndexError:
 pass
 
 #1 for i in range(10):
 print d.entries[i].summary
 
 #2 You first assign a list of integers to i ( i = range(10) ) and then just lose the reference to this list. Are you sure you didn't mean: 

 r = range(10)

for i in r:
 

 or simply: 

 for i in range(10):
 
 #3 for all entries make: 

 import feedparser
d = feedparser.parse("some URL")

print "Information of user" 

for i in range(len(d['entries'])):
 print d.entries[i].summary 

print " "
 
 #4 import feedparser
from StringIO import StringIO
d = feedparser.parse("some URL")
buff = StringIO()
print &gt;&gt;buff, "Information of user" 

for i,e in enumerate(d.entries):
 print &gt;&gt;buff, i, e.summary 

print &gt;&gt;buff," "
print buff
 

 If you need the index, I suggest also to use a String Buffer to do I/O operations on big string. 
 #5 Say you want to print the 10 first elements of the list if there is 10 or more, or what it contains otherwise. Felix allready proposed a working solution with exception management. You could also use itertools like below. 

 import feedparser
d = feedparser.parse('http://feedparser.org/docs/examples/atom10.xml')

from itertools import islice

for elt in islice(d.entries, 1, 10):
 print elt.summary
 

 What is nice with islice is that if you want to access to elements from say 3 to 10 (a slice) it also works as easily. Just have to replace 1 with 3. It also works with step if you want say only even elements, etc.