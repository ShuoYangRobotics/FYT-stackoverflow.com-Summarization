Question (ID-1088336): ftplib checking if a file is a folder? How can i check if a file on a remote ftp is a folder or not using ftplib? 

 Best way i have right now is to do a nlst, and iterate through calling size on each of the files, if the file errors out then it is a folder? 

 Is there a better way? I cannot parse the output of list, since there is about a dozen different ftp servers(many extremely old.) 

 What should i do? 
 Answers (Total-6): #0 FTP is quite a rudimentary protocol and there's no built-in protocol query allowing you to get the type (file, dir) of each node, so a heuristic like the one you found is the only solution. 

 If getting the size of each node doesn't work, perhaps you should consider calling FTP.nlst() on each of those nodes: those that error out will be files rather than dirs. 
 #1  FTP.dir returns a directory listing, that you can parse with a callback function to find out whether it's a directory. For example, like this: 

 def parse(line):
 if line[0] == 'd':
  print(line.rpartition(' ')[2]) # gives you the name of a directory

ftp.dir(parse)
 
 #2 def is_file(filename):
 return ftp.size(filename) is not None
 

 This works because ftp.size returns None if it is a directory. 
 #3 def is_file(filename):
 current = ftp.pwd()
 try:
  ftp.cwd(filename)
 except:
  ftp.cwd(current)
  return True
 ftp.cwd(current)
 return False
 

 Here is another solution. Half way writing it out I realized it has a problem. If you don't have permission to change to a folder, it'll read it as a file instead. It'll work if you have access to any folder. 

 I still posted it because maybe it'll give some ideas. 
 #4 I'm running into this concern now too. I suppose no more progress has been made? Also I'm wondering if an sftp solution is available yet. 
 #5 You can use MLST command: 

 import ftplib
f = ftplib.FTP()
f.connect("localhost")
f.login()
print f.sendcmd('MLST /')
 

 Against pyftpdlib server the code above prints: 

 250-Listing "/":
 modify=20111212124834;perm=el;size=12288;type=dir;unique=807g100001; /
250 End MLST.
 

 What you have to do is parse that string and look for "type=dir" or "type=cdir" (current dir, as in ".") or "type=pdir" (parent dir as in "..") via a regular expression.
If you get a match, it means that the provided path refers to a directory.