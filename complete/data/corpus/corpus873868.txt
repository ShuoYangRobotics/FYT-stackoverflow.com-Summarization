Question (ID-873868): Rapid Prototyping Twitter Applications? I'm looking forward to create a bunch of Twitter applications for a website, and was wondering what solution stack worked best when trying to rapidly prototype small twitter applications? 

 Google App Engine + Python/Django?
Google App Engine + Java?
Heroku + RoR?
Good Old LAMP? 

 Also, any recommendations on particular frameworks/libraries you use that makes the process faster? 

 [Note: I'm looking to use Twitter API for it, and create applications based on Twitter itself] 

 Thanks. 
 Answers (Total-6): #0 Getting RoR running on Heroku is ridiculously easy, and they have a 100% free offering, so that's a good way to get started. Interacting with Twitter from Rails is also pretty simple, especially with things like TwitterAuth . 
 #1 I've got experience developing in LAMP, Java, and Django so I'll weigh in. 

 First and foremost, it's really dependent on the individuals abilities. If you're a Java programmer you're going have to learn Python to try and use Django so you'll have a big initial time investment just to get up to speed. 

 Skill levels aside, I'd put money on either Django/Python or CakePHP/PHP. Django has a production ready admin panel which is easily configured, but CakePHP is a clean MVC implementation in PHP and PHP is pretty dang easy. 

 Not sure if you've considered hosting but that might be worth considering. You're going to find it's much easier to get cheap PHP hosting than you might for something like Django or Java. 
 #2 I use Java (via the Jetty web server) and JTwitter . It's easy to use, and easy to debug. 
 #3 For Java devs, Twitter4j is an excellent twitter library. Couple that with Google App engine and you can be up and running with a sample twitter app in a few hours! 
 #4 If you want to replicate Twitter, check out Laconica 
 #5 there is groovy and grails: "How to build Twitter in 40mins using Grails" http://europe.springone.com/europe-2009/presentation/How+to+bui