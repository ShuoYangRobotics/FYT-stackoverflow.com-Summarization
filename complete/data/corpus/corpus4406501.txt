Question (ID-4406501): Change the key value in python dictionary Is there a straightforward way to do this? 

 I want to change the key in a python dictionary. 
 Answers (Total-6): #0 Easily done in 2 steps: 

 dict[new_key] = dict[old_key]
del dict[old_key]
 

 Or in 1 step: 

 dict[new_key] = dict.pop(old_key)
 

 which will raise KeyError if dict[old_key] is undefined. Note that this will delete dict[old_key] . 

 &gt;&gt;&gt; dict = { 1: 'one', 2:'two', 3:'three' }
&gt;&gt;&gt; dict['ONE'] = dict.pop(1)
&gt;&gt;&gt; dict
{2: 'two', 3: 'three', 'ONE': 'one'}
&gt;&gt;&gt; dict['ONE'] = dict.pop(1)
Traceback (most recent call last):
 File "&lt;input&gt;", line 1, in &lt;module&gt;
KeyError: 1
 
 #1 if you want to change all the keys: 

 d = {'x':1, 'y':2, 'z':3}
d1 = {'x':'a', 'y':'b', 'z':'c'}

In [10]: dict((d1[key], value) for (key, value) in d.items())
Out[10]: {'a': 1, 'b': 2, 'c': 3}
 

 if you want to change single key:
 You can go with any of the above suggestion. 
 #2 No direct way to do this, but you can delete-then-assign 

 d = {1:2,3:4}

d[newKey] = d[1]
del d[1]
 

 or do mass key changes: 

 d = dict((changeKey(k), v) for k, v in d.items())
 
 #3 pop'n'fresh 

 &gt;&gt;&gt;a = {1:2, 3:4}
&gt;&gt;&gt;a[5] = a.pop(1)
&gt;&gt;&gt;a
{3: 4, 5: 2}
&gt;&gt;&gt; 
 
 #4 Since keys are what dictionaries use to lookup values, you can't really change them. The closest thing you can do is to save the value associated with the old key, delete it, then add a new entry with the replacement key and the saved value. Several of the other answers illustrate different ways this can be accomplished. 
 #5 You can associate the same value with many keys, or just remove a key and re-add a new key with the same value. 

 For example, if you have keys->values: 

 red-&gt;1
blue-&gt;2
green-&gt;4
 

 there's no reason you can't add purple-&gt;2 or remove red-&gt;1 and add orange-&gt;1