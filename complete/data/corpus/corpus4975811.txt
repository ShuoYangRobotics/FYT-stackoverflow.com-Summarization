Question (ID-4975811): try: statement fails I have some python code that fails: 

 import sys
print ("MathCheats Times-Ed by jtl999")
numbermodechoice = raw_input ("Are you using a number with a decimal? yes/no ")
if numbermodechoice == "yes":
 try:
 numberx1 = float(raw_input('Enter first number: '))
except ValueError:
 print ("Oops you typed it wrong")
try:
 numberx1 = float(raw_input('Enter first number: '))
except ValueError:
 print ("Oops you typed it wrong")
 numberx2 = (float)(raw_input('Enter second number: '))
elif numbermodechoice == "no":
 print ("Rember only numbers are allowed") 
 numberx1 = (int)(raw_input('Enter first number: '))
 numberx2 = (int)(raw_input('Enter second number: '))
else:
 print ("Oops you typed it wrong")
 exit()
print ("The answer was")
print numberx1*numberx2
ostype = sys.platform
if ostype == 'win32':
 raw_input ("Press enter to exit")
elif ostype == 'win64':
 raw_input ("Press enter to exit")
 

 (Full code here ) 

 I want to wrap the float operations with try statements so if a ValueError happens, it gets caught. Here is the output: 

 
 File "./Timesed.py", line 23
 try:
  ^
IndentationError: expected an indented block
 

 What is wrong with it and how can I fix this? 
 Answers (Total-6): #0 Python is whitespace sensitive, with regards to the leading whitespace. 

 your code probably should be indented like 

 import sys
from sys import exit
print ("MathCheats Times-Ed by jtl999")
numbermodechoice = raw_input ("Are you using a number with a decimal? yes/no ")
if numbermodechoice == "yes":
 try:
  numberx1 = float(raw_input('Enter first number: '))
  numberx2 = float(raw_input('Enter second number: '))
 except ValueError:
  print ("Oops you typed it wrong")
  exit()
elif numbermodechoice == "no":
 print ("Remember only numbers are allowed") 
 try:
  numberx1 = (int)(raw_input('Enter first number: '))
  numberx2 = (int)(raw_input('Enter second number: '))
 except ValueError:
  print ("Oops you typed it wrong")  
  exit()
else:
 print ("Oops you typed it wrong")
 exit()
print ("The answer was") 
print numberx1*numberx2
ostype = sys.platform
if ostype == 'win32':
 raw_input ("Press enter to exit")
elif ostype == 'win64':
 raw_input ("Press enter to exit")
 
 #1 In python, the indentation of your code is very important. The error you've shown us points here: 

 if numbermodechoice == "yes":
 try:
 numberx1 = float(raw_input('Enter first number: '))
except ValueError:
 print ("Oops you typed it wrong")
 

 All code that is part of a block must be indented. By starting a try block, the following line is part of that block and must be indented. To fix it, indent it! 

 if numbermodechoice == "yes":
 try:
  numberx1 = float(raw_input('Enter first number: '))
 except ValueError:
  print ("Oops you typed it wrong")
 
 #2 You had a wrong syntax. It should be except ValueError: and not except: ValueError . Correct it for you in the question too. 
 #3 You need to indent the second print statement. 

 Indentation is important in Python. It's how you delimit blocks in that language. 
 #4 The conversion to float is using an incorrect syntax. That syntax is valid for C/C++/Java, but not in Python. It should be: 

 numberx1 = float(raw_input('Enter first number: '))
 

 Which will be interpreted like float("2.3") , which is a constructor for the float type being called with a string parameter. And, yes, the syntax is exactly the same for the function call, so you might even think the constructor is a function that returns an object. 
 #5 import sys

class YesOrNo(object):
 NO_VALUES = set(['n', 'no', 'f', 'fa', 'fal', 'fals', 'false', '0'])
 YES_VALUES = set(['y', 'ye', 'yes', 't', 'tr', 'tru', 'true', '1'])

 def __init__(self, val):
  super(YesOrNo,self).__init__()
  self.val = str(val).strip().lower()

  if self.val in self.__class__.YES_VALUES:
   self.val = True
  elif val in self.__class__.NO_VALUES:
   self.val = False
  else:
   raise ValueError('unrecognized YesOrNo value "{0}"'.format(self.val))

 def __int__(self):
  return int(self.val)

def typeGetter(dataType):
 try:
  inp = raw_input
 except NameError:
  inp = input

 def getType(msg):
  while True:
   try:
    return dataType(inp(msg))
   except ValueError:
    pass
 return getType

getStr  = typeGetter(str)
getInt  = typeGetter(int)
getFloat = typeGetter(float)
getYesOrNo = typeGetter(YesOrNo)

def main():
 print("MathCheats Times-Ed by jtl999")

 isFloat = getYesOrNo("Are you using a number with a decimal? (yes/no) ")
 get = (getInt, getFloat)[int(isFloat)]

 firstNum = get('Enter first number: ')
 secondNum = get('Enter second number: ')

 print("The answer is {0}".format(firstNum*secondNum))

if __name__=="__main__":
 main()
 if sys.platform in ('win32','win64'):
  getStr('Press enter to exit')