Question (ID-2269827): Python, int to hex string I want to take an integer (that will be &lt;= 255), to a hex string representation 

 eg: I want to pass in 65 and get out '\ x41', or 255 and get '\xff' 

 I've tried doing this with the struct.pack('c', 65 ), but that chokes on anything above 9 since it wants to take in a single character string. 
 Answers (Total-6): #0 You are looking for the chr function. 

 You seem to be mixing decimal representations of integers and hex representations of integers, so it's not entirely clear what you need. Based on the description you gave, I think one of these snippets shows what you want. 

 &gt;&gt;&gt; chr(0x65) == '\x65'
True


&gt;&gt;&gt; hex(65)
'0x41'
&gt;&gt;&gt; chr(65) == '\x41'
True
 

 Note that this is quite different from a string containing an integer as hex . If that is what you want, use the hex builtin. 
 #1 This will convert an integer to a 2 digit hex string with the 0x prefix: 

 strHex = "0x%0.2X" % 255
 
 #2 What about hex() ? 

 hex(255) # 0xff
 

 If you really want to have \ in front you can do: 

 print '\\' + hex(255)[1:]
 
 #3 Try: 

 "0x%x" % 255 # =&gt; 0xff
 

 or 

 "0x%X" % 255 # =&gt; 0xFF
 

 Python Documentation says: "keep this under Your pillow: http://docs.python.org/library/index.html " 
 #4 If you want to pack a struct with a value &lt;255 (one byte unsigned, uint8_t) and end up with a string of one character, you're probably looking for the format B instead of c . C converts a character to a string (not too useful by itself) while B converts an integer. 

 struct.pack('B', 65)
 

 (And yes, 65 is \x41, not \x65.) 
 #5 I wanted a random integer converted into a six-digit hex string with a # at the beginning. To get this I used 

 "#6x" % random.randint(0xFFFFFF)