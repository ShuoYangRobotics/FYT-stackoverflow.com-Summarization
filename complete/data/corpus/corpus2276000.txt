Question (ID-2276000): Program web applications in python without a framework? I am just starting Python and I was wondering how I would go about programming web applications without the need of a framework. I am an experiance PHP developer but I have an urge to try out Python and I usually like to write from scratch without the restriction of a framework. 
 Answers (Total-7): #0 WSGI is the Python standard for web server interfaces. If you want to create your own framework or operate without a framework, you should look into that. Specifically I have found Ian Bicking's DIY Framework article helpful. 

 As an aside, I tend to think frameworks are useful and personally use Django, like the way Pylons works, and have used Bottle in the past for prototyping--you may want to look at Bottle if you want a stay-out-of-your-way microframework. 
 #1 One of the lightest-weight frameworks is mod_wsgi . Anything less is going to be a huge amount of work parsing HTTP requests to find headers and URI's and methods and parsing the GET or POST query/data association, handling file uploads, cookies, etc. 

 As it is, mod_wsgi will only handle the basics of request parsing and framing up results. 

 Sessions, cookies, using a template generator for your response pages will be a surprising amount of work. 

 Once you've started down that road, you may find that a little framework support goes a long way. 
 #2 You will have to look into something like CGI or FastCGI , which provides an API to communicate to the webserver. 

 Google App Engine enables you to write simple apps, and even provides a local webserver where you can try things out. 
 #3 You should try web.py, it provides a bare minimum of features that does not get in your way. 

 http://webpy.org/ 
 #4 For a PHP programmer, I think mod_python is a good way to get started without any framework. It can be used directly as Apache 2 module. You can have code tags (like &lt;? ?&gt; in PHP) and even conditional HTML output (HTML inside if statement): 

 &lt;%
if x == y:
 # begin
%&gt;

 ... some html ...

&lt;%
# end
%&gt;
 

 (simplified example taken from onlamp.com 's Python Server Pages tutorial ) 
 #5 The answer is "don't". Using a framework makes your code more maintainable, scalable, readable, testable, and modular. 
 #6 People here love frameworks. One shortcoming I have noted is that Python lacks a handy-dandy module for Sessions as a library built-in, despite it being available in PHP and as CGI::Session in Perl. 

 You will end up doing: 

 import cgi # if you want to work with forms and such
import cgitb; cgitb.enable() # to barf up errors to the web
print 'Content-type: text/html\n\n' # to start off any HTML.
 

 You will have to write session stuff on your own.