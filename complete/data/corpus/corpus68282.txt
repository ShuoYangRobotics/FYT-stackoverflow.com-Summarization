Question (ID-68282): Why do you need explicitly have the "self" argument into a Python method? When defining a method on a class in Python, it looks something like this: 

 class MyClass(object):
 def __init__(self, x, y):
  self.x = x
  self.y = y
 

 But in some other languages, such as C#, you have a reference to the object that the method is bound to with the "this" keyword without declaring it as an argument in the method prototype. 

 Was this an intentional language design decision in Python or are there some implementation details that require the passing of "self" as an argument? 
 Answers (Total-6): #0 I like to quote Peters' Zen of Python. "Explicit is better than implicit." 

 In Java and C++, ' this. ' can be deduced, except when you have variable names that make it impossible to deduce. So you sometimes need it and sometimes don't. 

 Python elects to make things like this explicit rather than based on a rule. 

 Additionally, since nothing is implied or assumed, parts of the implementation are exposed. self.__class__ , self.__dict__ and other "internal" structures are available in an obvious way. 
 #1 It's to minimize the difference between methods and functions. It allows you to easily generate methods in metaclasses, or add methods at runtime to pre-existing classes. 

 e.g. 

 &gt;&gt;&gt; class C(object):
...  def foo(self):
...   print "Hi!"
...
&gt;&gt;&gt;
&gt;&gt;&gt; def bar(self):
...  print "Bork bork bork!"
...
&gt;&gt;&gt;
&gt;&gt;&gt; c = C()
&gt;&gt;&gt; C.bar = bar
&gt;&gt;&gt; c.bar()
Bork bork bork!
&gt;&gt;&gt; c.foo()
Hi!
&gt;&gt;&gt;
 

 It also (as far as I know) makes the implementation of the python runtime easier. 
 #2 I suggest that one should read Guido van Rossum's blog on this topic - Why explicit self has to stay . 
 #3 Python doesn't force you on using "self". You can give it whatever name you want. You just have to remember that the first argument in a method definition header is a reference to the object. 
 #4 Some discussion about self can be found in this mailing list thread . 
 #5 There is also another very simple answer: according to the zen of python , "explicit is better than implicit".