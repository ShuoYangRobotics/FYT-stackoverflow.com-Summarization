Question (ID-7206499): Match letter in any language How can I match a letter from any language using a regex in python 3? 

 re.match([a-zA-Z]) will match the english language characters but I want all languages to be supported simultaneously. 

 I don't wish to match the ' in can't or underscores or any other type of formatting. I do wish my regex to match: c , a , n , t , Å , é , and 中 . 
 Answers (Total-6): #0 For Unicode regex work in Python, I very strongly recommend the following: 

 
 Use Matthew Barnett’s regex library instead of standard re , which is not really suitable for Unicode regular expressions. 
 Use only Python 3, never Python 2. You want all your strings to be Unicode strings. 
 Use only string literals with logical/abstract Unicode codepoints, not encoded byte strings. 
 Set your encoding on your streams and forget about it. If you find yourself ever manually calling .encode and such, you’re almost certainly doing something wrong. 
 Use only a wide build where code points and code units are the same, never ever ever a narrow one — which you might do well to consider deprecated for Unicode robustness. 
 Normalize all incoming strings to NFD on the way in and then NFC on the way out. Otherwise you can’t get reliable behavior. 
 

 Once you do this, you can safely write patterns that include \w or \p{script=Latin} or \p{alpha} and \p{lower} etc and know that these will all do what the Unicode Standard says they should . I explain all of this business of Python Unicode regex business in much more detail in this answer . The short story is to always use regex not re . 

 For general Unicode advice, I also have several talks from last OSCON about Unicode regular expressions, most of which apart from the 3rd talk alone is not about Python, but much of which is adaptable. 

 Finally, there’s always this answer to put the fear of God (or at least, of Unicode) in your heart. 
 #1 What's wrong with using the \w special sequence? 

 # -*- coding: utf-8 -*-
import re
test = u"can't, Å, é, and 中ABC"
print re.findall('\w+', test, re.UNICODE)
 
 #2 Build a match class of all the characters you want to match. This might become very , very large. No, there is no RegEx shorthand for "All Kanji" ;) 

 Maybe it is easier to match for what you do not want, but even then, this class would become extremely large. 
 #3 What if you did your regular expression by excluding symbols? 
 #4 You can match on 

 \p{L}
 

 which matches any Unicode code point that represents a letter of a script. That is, assuming you actually have a Unicode-capable regex engine, which I really hope Python would have. 
 #5 
import re

text = "can't, Å, é, and 中ABC"
print(re.findall('\w+', text))
 

 This works in Python 3. But it also matches underscores. However this seems to do the job as I wish: 

 
import regex

text = "can't, Å, é, and 中ABC _ sh_t"
print(regex.findall('\p{alpha}+', text))