Question (ID-6317287): List index out of range I have written a program that makes sure each cookie has more than 5 chips before moving on.
However, the line if cookie[i] &gt; 5: seems to be problematic, as it produces a "list index out of range" error. I thought foo = [] created a list with no ending, so I don't get why any number would be out of range in this list. What am I doing wrong? 

 cookie = []

...

for i in range(0, 11):
 if cookie[i] &gt; 5:
   break
 
 Answers (Total-6): #0 Try: 

 len(cookie)
 

 You'll see if you haven't put anything in it that it'll be size 0. With cookie = [] you can continuously add elements to the list but it's initialized empty. 
 #1 cookie = [] creates empty list with no data, so no indexes here. You need to fill cookie with some data first (e.g. using cookie.append(some_data) ). 
 #2 How about: 

 cookies = []

...

for cookie in cookies:
 if cookie &gt; 5:
   break
 
 #3 You can't really have a list with no ending that in your case presumably has only zeros in it. 

 You can however create a list with 11 zeros: 

 cookies = [0] * 11
 

 Or create something that returns 0 if you access it at an index if you haven't put anything else in there: 

 import collections
cookies = collections.defaultdict(int)
 

 Note that this is not a list but a map. 
 #4 foo = [] creates an empty list, not a list with no ending. Any index access will fail on an empty list. To check the length of a list, use len(mylist) . The length of an empty list is 0, and indices are zero-based. So: 

 cookie = []
len(cookie) == 0
cookie[0] ## will raise IndexError

cookie.append('something')
len(cookie) == 1
cookie[0] ## will return 'something'
 

 See the list docs 
 #5 foo=[] does not create a list with no ending. Instead, it creates an empty list. 

 You could do 

 for i in range(0, len(foo)):
 if(cookie[i]&gt;5):
  break
 

 Or you could do 

 for c in cookie:
 if c&gt;5:
  break