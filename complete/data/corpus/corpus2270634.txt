Question (ID-2270634): Create a Reg Exp to search for __word__? In a program I'm making in python and I want all words formatted like __word__ to stand out. How could I search for words like these using a regex? 
 Answers (Total-6): #0 Perhaps something like 

 \b__(\S+)__\b

&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall(r"\b__(\S+)__\b","Here __is__ a __test__ sentence")
['is', 'test'] 
&gt;&gt;&gt; re.findall(r"\b__(\S+)__\b","__Here__ is a test __sentence__")
['Here', 'sentence']
&gt;&gt;&gt; re.findall(r"\b__(\S+)__\b","__Here's__ a test __sentence__")
["Here's", 'sentence']
 

 or you can put tags around the word like this 

 &gt;&gt;&gt; print re.sub(r"\b(__)(\S+)(__)\b",r"&lt;b&gt;\2&lt;\\b&gt;","__Here__ is a test __sentence__")
&lt;b&gt;Here&lt;\b&gt; is a test &lt;b&gt;sentence&lt;\b&gt;
 

 If you need more fine grained control over the legal word characters it's best to be explicit 

 \b__([a-zA-Z0-9_':])__\b ### count "'" and ":" as part of words

&gt;&gt;&gt; re.findall(r"\b__([a-zA-Z0-9_']+)__\b","__Here's__ a test __sentence:__")
["Here's"]
&gt;&gt;&gt; re.findall(r"\b__([a-zA-Z0-9_':]+)__\b","__Here's__ a test __sentence:__")
["Here's", 'sentence:']
 
 #1 Take a squizz here: http://docs.python.org/library/re.html 

 That should show you syntax and examples from which you can build a check for word(s) pre- and post-pended with 2 underscores. 
 #2 The simplest regex for this would be 

 __.+__
 

 
If you want access to the word itself from your code, you should use 

 __(.+)__
 
 #3 This will give you a list with all such words 

 &gt;&gt;&gt; import re
&gt;&gt;&gt; m = re.findall("(__\w+__)", "What __word__ you search __for__")
&gt;&gt;&gt; print m
['__word__', '__for__']
 
 #4 \b(__\w+__)\b
 

 \b word boundary 
 \w+ one or more word characters - [a-zA-Z0-9_] 
 #5 simple string functions. no regex 

 &gt;&gt;&gt; mystring="blah __word__ blah __word2__"
&gt;&gt;&gt; for item in mystring.split():
...  if item.startswith("__") and item.endswith("__"):
...  print item
...
__word__
__word2__