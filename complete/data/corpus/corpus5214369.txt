Question (ID-5214369): Python vs Matlab I'm considering making the switch from Matlab to Python. The application is quantitative trading and cost is not really an issue. There are a few things I love about Matlab and am wondering how Python stacks up (could not find any answers in the reviews I've read). 

 1) Is there an IDE for Python that is as good as Matlab's (variable editor, debugger, profiler)? I've read good things about Spyder, but does it have a profiler? 

 2) When you change a function on the path in Matlab, it is automatically reloaded. Do you have to manually re-import libraries when you change them, or can this been done automatically? This is a minor thing, but actually greatly improves my productivity. 
 Answers (Total-7): #0 IDE: No. Python IDEs are nowhere near as good or mature as Matlab's, though I've heard good things about Wing IDE. Generally, I find IDEs to be total overkill for Python development, and find that I'm more productive with a well-setup text editor (vim in my case) and a separate visual debugger (WinPDB). 

 Changing functions: Modules must be reloaded after changes using the reload() built-in function. 

 import foo
#now you've changed foo.py and want to reload it
foo = reload(foo)
 

 I've switched over myself from Matlab to Python, because I find that Python deals much better with complexity, i.e., I find it easier to write, debug and maintain complex code in Python. One of the reasons for this is that Python is a general purpose language rather than a specialist matrix-manipulation language. Because of this, entities like strings, non-numerical arrays and (crucially) associative arrays (or maps or dictionaries) are first-class constructs in Python, as are classes. 

 With regards to capabilities, with numpy, scipy and matplotlib, you pretty much have the whole set of functionality that Matlab provides out of the box, and quite a lot of stuff that you would have to buy separate toolboxes for. 
 #1 You might also want to check out some of the answers in the following thread, although they don't address your 2 major concerns: 

 Should i switch to Python? 

 I'm also a total convert from Matlab: 

 
 I have yet to use a full featured Python IDE, but have gotten on pretty well in IPython in combination with Matplotlib, Numpy, Scipy, etc. I actually use the Enthough Python Distribution that comes preloaded with most of the scientific/quantitative packages I need. I've also heard good things about Python(x,y) and Sage 
 Maybe other IDE's handle this but in IPython I use autoreload which works fairly well. 
 

 As others have mentioned, since the numerical/quantitative libraries came to Python instead of a numerical library hacking a language on top, you have an incredible amount of flexibility that you don't have with Matlab. Also the Python community, especially in the numerical/quantitative areas, is really quite fantastic. 
 #2 We use the Wing IDE for Python development. It is quite well featured, has integrated debugging support, and can be connected to the profiler of your choice. 

 Regarding (2), I know exactly what you mean since I miss that very same feature from Lisp, and so far as I know you need to actively reimport the libraries after changing them. This isn't a real hangup, though, since you can easily write (once) a small function that does that for every module you care about, and then put that function on a key macro so all you have to do is eg hit CTRL-T after changing code. 
 #3 I've been getting on very well with the Spyder IDE in the Python(x,y) distribution. I'm a long term user of Matlab and have known of the existence of Python for 10 years or so but it's only since I installed Python(x,y) that I've started using Python regularly. 
 #4 almost everything is covered by others .. i hope you don't need any toolboxes like optimizarion toolbox , neural network etc.. [ I didn't find these for python may be there are some .. i seriously doubt they might be better than Matlab ones..] 

 if u don't need symbolic manipulation capability and are using windows python(x,y) is the way to go[they don't have much activity on their linux port (older versions are available)]
(or need some minor symbolic manipulations use sympy , i think it comes with EPD and python(x,y) supersedes/integrates EPD) 

 if you need symbolic capabilities sage is the way to go, IMHO sage stands up good with Matlab as well as Mathematica .. 

 i'm also trying to make a switch ...(need for my engg projs) 

 i hope it helps .. 
 #5 Concerning the IDE question, have look at What IDE to use for Python? , where the top answer is PyDev which uses Eclipse. 

 I also think Sage might be worth looking at 
 #6 Also look at the Python/Jython IDE from the jHepWork project 

 It has a code assist which is especially designed for Python/Jython and Java. This IDE contains complete syntax highlighting for Python, bracket matching, indentation matching. Finally, the output graphics is a way better than in Matlab