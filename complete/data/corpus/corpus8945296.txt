Question (ID-8945296): Python Add Elements of a List (or Set, or whatever Data Type is appropriate) Is there an easy way to add the members of two equally sized list s (or tuple or whatever data type would work best)? 

 I have, for example a and b with 2 elements: 

 a = (0, 10)
b = (0, -10)
 

 I want to add them and get as result: 

 result = (0, 0)
 

 NOT (0, 10, 0, -10) 
 Answers (Total-6): #0 You can do this in one line in Python: 

 map(sum, zip(A, B))
 

 Example: 

 &gt;&gt;&gt; B = [1, 2, 3, 4]
&gt;&gt;&gt; C = [1, 2, 4, 8]
&gt;&gt;&gt; map(sum, zip(B, C))
[2, 4, 7, 12]
 
 #1 Three options: 

 &gt;&gt;&gt; [a+b for (a,b) in zip(A,B)]
&gt;&gt;&gt; map(int.__add__, A, B)
&gt;&gt;&gt; map(sum, zip(A,B))
 
 #2 yes, just do this 

 map(sum,zip(A,B)
 

 or, (actually clearly faster) 

 u=map(lambda a,b:a+b,A,B)
 

 Timing examples: 

 A=range(3000)
B=range(3000)
for i in range(15000):
 u=map(lambda a,b:a+b,A,B) # takes about 7.2 seconds
 # u=map(sum,zip(A,B))  # takes about 11 seconds
 # u=map(int.__add__,A,B) # (Edward Loper) actually also consistently ~0.5 sec slower than lambda
 
 #3 if you want to operate with list of numbers use numpy 

 &gt;&gt;&gt; a = [1,2]
&gt;&gt;&gt; b = [1,2]
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.add(a,b)
array([2, 4])
&gt;&gt;&gt; 
 
 #4 You can use numpy to add the lists: 

 add(array([-1.2, 1.2]), array([1,3]))
 

 and the result it: 

 array([-0.2, 4.2])
 
 #5 List ANSWER = ()
for index in range(0, len(A))
 ANSWER.append(A[index]+B[index])