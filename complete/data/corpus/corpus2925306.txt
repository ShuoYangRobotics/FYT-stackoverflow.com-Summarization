Question (ID-2925306): Python matching some characters into a string I'm trying to extract/match data from a string using regular expression but I don't seem to get it. 

 I wan't to extract from the following string the i386 (The text between the last - and .iso): 

 /xubuntu/daily/current/lucid-alternate-i386.iso
 

 This should also work in case of: 

 /xubuntu/daily/current/lucid-alternate-amd64.iso
 

 And the result should be either i386 or amd64 given the case. 

 Thanks a lot for your help. 
 Answers (Total-7): #0 You could also use split in this case (instead of regex): 

 &gt;&gt;&gt; str = "/xubuntu/daily/current/lucid-alternate-i386.iso"
&gt;&gt;&gt; str.split(".iso")[0].split("-")[-1]
'i386'
 

 split gives you a list of elements on which your string got 'split'. Then using Python's slicing syntax you can get to the appropriate parts. 
 #1 r"/([^-]*)\.iso/"
 

 The bit you want will be in the first capture group. 
 #2 First off, let's make our life simpler and only get the file name. 

 &gt;&gt;&gt; os.path.split("/xubuntu/daily/current/lucid-alternate-i386.iso")
('/xubuntu/daily/current', 'lucid-alternate-i386.iso')
 

 Now it's just a matter of catching all the letters between the last dash and the '.iso'. 
 #3 If you will be matching several of these lines using re.compile() and saving the resulting regular expression object for reuse is more efficient . 

 s1 = "/xubuntu/daily/current/lucid-alternate-i386.iso"
s2 = "/xubuntu/daily/current/lucid-alternate-amd64.iso"

pattern = re.compile(r'^.+-(.+)\..+$')

m = pattern.match(s1)
m.group(1)
'i386'

m = pattern.match(s2)
m.group(1)
'amd64'
 
 #4 The expression should be without the leading trailing slashes. 

 import re

line = '/xubuntu/daily/current/lucid-alternate-i386.iso'
rex = re.compile(r"([^-]*)\.iso")
m = rex.search(line)
print m.group(1)
 

 Yields 'i386' 
 #5 reobj = re.compile(r"(\w+)\.iso$")
match = reobj.search(subject)
if match:
 result = match.group(1)
else:
 result = ""
 

 Subject contains the filename and path. 
 #6 &gt;&gt;&gt; import os
&gt;&gt;&gt; path = "/xubuntu/daily/current/lucid-alternate-i386.iso"
&gt;&gt;&gt; file, ext = os.path.splitext(os.path.split(path)[1])
&gt;&gt;&gt; processor = file[file.rfind("-") + 1:]
&gt;&gt;&gt; processor
'i386'