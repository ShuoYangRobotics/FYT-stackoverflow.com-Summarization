Question (ID-4324790): Removing control characters from a string in python I currently have the following code 

 def removeControlCharacters(line):
 i = 0
 for c in line:
  if (c &lt; chr(32)):
   line = line[:i - 1] + line[i+1:]
   i += 1
 return line
 

 This is just does not work if there are more than one character to be deleted. 
 Answers (Total-6): #0 You could use str.translate with the appropriate map, for example like this: 

 &gt;&gt;&gt; mpa = dict.fromkeys(range(32))
&gt;&gt;&gt; 'abc\02de'.translate(mpa)
'abcde'
 
 #1 Your implementation is wrong because the value of i is incorrect. However that's not the only problem: it also repeatedly uses slow string operations, meaning that it runs in O(n 2 ) instead of O(n). Try this instead: 

 return ''.join(c for c in line if ord(c) &gt;= 32)
 
 #2 You modify the line during iterating over it. Something like ''.join([x for x in line if ord(x) &gt;= 32]) 
 #3 It probably won't work because you're changing the underlying string as you process it. This probably isn't the modern Pythonic way to do it but I still prefer readable simple solutions unless there's and over-riding reason to do otherwise: 

 def removeControlCharacters(line):
 newln = ""
 for c in line:
  if c &gt;= chr(32):
   newln = newln + c
 return newln
 
 #4 filter(string.printable[:-5].__contains__,line)
 
 #5 And for Python 2, with the builtin translate : 

 import string
all_bytes = string.maketrans('', '')

line.translate(all_bytes, all_bytes[:32]) # All bytes &lt; 32 are deleted (second argument)