Question (ID-4298415): Omit last element in comma-separated list I'm writing a tagging system. The user enters a number of tags: 

 abc, def, ghi,
 

 But if they use a trailing comma, the code thinks there are 4 tags, not three. 

 In my code, I write: 

 if "tags" in request.POST:
 tags = request.POST["tags"]
 tag_list = [Tag.objects.get_or_create(name = tag.lstrip())[0] for tag in tags.split(",")]
 

 A tag ' ' gets created in this instance. How can I alter the code to ignore any entry that is I suppose len(str) = 0? 
 Answers (Total-7): #0 &gt;&gt;&gt; x = "first, second, third,"
&gt;&gt;&gt; y = [ele for ele in x.split(',') if ele]
&gt;&gt;&gt; y
['first', ' second', ' third']
 

 Using the fact that non empty strings return True . 
 #1 for tag in tags.split(",") if tag.strip()
 
 #2 Use filter(), like so: 

 def f(x): return x != ''

filter( f, tag_list )
 
 #3 Do you really want to use lstrip() rather than strip() for processing the tags? What if the user enters abc , def ; do you really want to allow a tag "abc " with a trailing space? 

 If you really want to strip the tags on both sides (which I think you do), then it's a simple matter of doing that and then omitting the empty ones: 

 try: # EAFP
 tags = (tag.strip() for tag in request.POST['tags'].split(','))
 tag_list = [Tag.objects.get_or_create(name = tag)[0] for tag in tags if tag]
 # 'if tag' is the operative "filtering" bit
except KeyError: pass
 
 #4 tag_list = [tag.lstrip() for tag in tags.split(",") if len(tag.lstrip())&gt;0]
 

 will generate the tag_list without the empty character. 

 Rest should be simple. 
 #5 You could do all your tags processing in once place, so you don't have to
call tag.lstrip() inside get_or_create(name = ...) : 

 if "tags" in request.POST:
 tags = request.POST["tags"]
 tags = (tag.lstrip() for tag in tags.split(',') if tag.strip())
 tag_list = [Tag.objects.get_or_create(name = tag)[0] for tag in tags]
 
 #6 If your tags are actually set individually in the same variable instead of as a string list you have the option of just writing: 

 filter(len, map(str.strip, request.POST.getlist("keys")))
 

 Without having to parse a string list manually.