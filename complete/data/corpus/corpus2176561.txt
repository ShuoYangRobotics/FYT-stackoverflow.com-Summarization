Question (ID-2176561): Which is the best python library to make REST request like PUT, GET, DELETE, POST and how? I am bit confuse over set of libraries of pythons to connect with REST enabled web services.
I have tried httplib, urllib and urllib2. I want to know how can methods like PUT, GET, POST, DELETE can be achieved using this library. 

 Regards,
Parthiv 
 Answers (Total-6): #0 This should hit the spot - http://developer.yahoo.com/python/python-rest.html You can see how to make GET and POST requests using httplib or urllib2 on that site. It doesn't cover PUT and DELETE though. Another disadvantage is that it is specific to Yahoo. I think it can be adapted for what you need though. 

 I think that these will help as well-
 http://www.ezran.org/blog/2008/09/rest-and-python/ 
and
 http://confluence.atlassian.com/display/FECRUDEV/Writing+a+REST+Client+in+Python 
 #1 Here is a an excellent tutorial, from Mark Pilgrim's Dive into Python 3, on which Http library to use, why and how. 
 #2 We started with urllib2 . It doesn't do everything you need. 

 However, if you subclass Request , you can add the necessary PUT and DELETE methods to the request. 

 You can then use your subclass of Request with urlopen . 
 #3 I had the same question and found httplib2 via Dive Into Python . It supports PUT and DELETE and generally seems cleaner than urllib, urllib2, and httplib. I'm using it with good results so far. 
 #4 This is a fairly simple REST client. 
 #5 you probably want to hear about http://httplib2.googlecode.com/hg/doc/html/index.html which looks like a good comprehensive library to ease dealing with HTTP. 

 what you probably do not want to hear is that i believe the REST paradigm to be utter bullshit. frankly no one could so far convince me this is a worthwhile idea. in short, there's many things you want to do in a web application, and those four verbs GET, PUT, POST, DELETE just don’t cut it. 

 i remember a lively discussion over at http://jjinux.blogspot.com/2009/02/rest-restful-shopping-carts.html about the goods and bads of REST. it was also about a guy that had so thoroughly digested the doogfood that is REST he got convinced that session IDs do not belong into a cookie, they have to go into the URL. how stupid can a single bad idea make you? 

 looking for that article, i stumbled over the main page of the blog, and right on top there sits a two-weeks old article, entitled: ‘Rails: The REST Religion’. here are some quotes for you: 

 
 It's a simple fact of life that Web browsers don't currently support DELETE and PUT. [...] I'm going to have to deal with browsers that don't support DELETE and PUT for many years to come. Hence, Rails' [way to implement REST] is a HACK in order to try to force the Web to be something it isn't, all the while claiming that RESTful routing is the way the Web is meant to work. 
 
 RESTful routing actually causes me far more pain than any other feature of Rails. 
 
 I wish I could abandon the idea of Resource Oriented Architectures which insist that you may use any noun you want, as long as you only use the verbs GET, POST, PUT, DELETE, HEAD, and OPTIONS. I wish I could use any beautiful verb I wanted to and shove it in the URL all willy-nilly. 
 

 REST is a real bad idea, and i hope people will stop from buying into it.