Question (ID-1724473): How could I print out the nth letter of the alphabet in Python? ASCII math doesn't seem to work in Python: 

 
 
  'a' + 5
 DOESN'T WORK 
 
 

 How could I quickly print out the nth letter of the alphabet without having an array of letters? 

 My naive solution is this: 

 
letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
print letters[5]
 
 Answers (Total-6): #0 chr and ord convert characters from and to integers, respectively. So: 

 chr(ord('a') + 5)
 

 is the letter 'f' . 
 #1 ASCII math aside, you don't have to type your letters table by hand.
The string constants in the string module provide what you were looking for. 

 &gt;&gt;&gt; import string
&gt;&gt;&gt; string.ascii_uppercase[5]
'F'
&gt;&gt;&gt;
 
 #2 chr(ord('a')+5) 
 #3 You need to use the ord function, like print(ord('a')-5) 

 Edit: gah, I was too slow :) 
 #4 import string
print string.letters[n + is_upper*26]
 

 For example: 

 &gt;&gt;&gt; n = 5
&gt;&gt;&gt; is_upper = False
&gt;&gt;&gt; string.letters[n+is_upper*26]
'f'
&gt;&gt;&gt; is_upper = True
&gt;&gt;&gt; string.letters[n+is_upper*26]
'F'
 
 #5 if u want to go really out of the way (probably not very good) you could create a new class CharMath: 

 class CharMath:
 def __init__(self,char):
  if len(char) &gt; 1: raise IndexError("Not a single character provided")
  else: self.char = char
 def __add__(self,num):
  if type(num) == int or type(num) == float: return chr(ord(self.char) + num)
  raise TypeError("Number not provided")
 

 The above can be used: 

 &gt;&gt;&gt; CharMath("a") + 5
'f'