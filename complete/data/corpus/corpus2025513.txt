Question (ID-2025513): Replacing text in Python I've been looking at the re documentation and at other questions but I keep running into trouble with regex. 

 I need to take what ever is in the [tag] off of the string. 

 string = "Article Name [Tag Name]"
#and I want to go to
string = "Article Name"
 

 I'd really appreciate it if anyone could help. 
 Answers (Total-6): #0 re.sub("\s*\[.*?\]", "", string)
 
 #1 If you are sure [Tag Name] is always come after Article Name, you could do this without regex. 

 &gt;&gt;&gt; string="Article Name [Tag Name]"
&gt;&gt;&gt; string[:string.find(" [")]
'Article Name'
 

 or with .partition 

 &gt;&gt;&gt; string.partition(" [")[0]
'Article Name'
 
 #2 This does not use regex so if that is a requirement this is not an answer but you could do this: 

 string = string.split('[')[0].strip()
 
 #3 re.sub(r"(.*) \[.*\]", r"\1", string)
 

 This will only remove the tag if it's at the end of the string. 
 #4 Even better without regex: 

 txt = "Article Name [Tag Name]"
if txt.rfind('[') and txt.rfind(']') &gt; txt.rfind('['): txt = txt[:txt.rfind('[')]
if txt[-1] == ' ': txt = txt[:-1]
 
 #5 here's one for multiple instances of [] tags 

 &gt;&gt;&gt; string = "Article Name [Tag Name] blah blah [tag name2] blah blah [tag name3]"
&gt;&gt;&gt; for i in string.split("]"):
... print i[ : i.find("[") ]
...
Article Name
 blah blah
 blah blah