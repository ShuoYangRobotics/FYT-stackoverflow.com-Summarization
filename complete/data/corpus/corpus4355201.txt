Question (ID-4355201): Creating acronyms in Python In Python, how do I make an acronym of a given string? 

 Like, input string: 

 'First Second Third'
 

 Output: 

 'FST'
 

 I am trying something like: 

 &gt;&gt;&gt; for e in x:
  print e[0]
 

 But it is not working... Any suggestions on how this can be done? I am sure there is a proper way of doing this but I can't seem to figure it out. Do I have to use re ? 
 Answers (Total-7): #0 If you want to use capitals only 

 &gt;&gt;&gt;line = ' What AboutMe '
&gt;&gt;&gt;filter(str.isupper, line)
'WAM'
 

 What about words that may not be Leading Caps. 

 &gt;&gt;&gt;line = ' What is Up '
&gt;&gt;&gt;''.join(w[0].upper() for w in line.split())
'WIU'
 

 What about only the Caps words. 

 &gt;&gt;&gt;line = ' GNU is Not Unix '
&gt;&gt;&gt;''.join(w[0] for w in line.split() if w[0].isupper())
'GNU'
 
 #1 Try 

 print "".join(e[0] for e in x.split())
 

 Your loop actually loops over all characters in the string x . If you would like to loop over the words, you can use x.split() . 
 #2 Without re : 

 &gt;&gt;&gt; names = 'Vincent Vega Jules Winnfield'
&gt;&gt;&gt; ''.join(x[0] for x in names.split())
'VVJW'
 
 #3 Now for something a little bit different... 

 words = "There ain't no such thing as a free lunch."
acronym = ''.join(word[0] for word in words.upper().split())
print acronym
# TANSTAAFL
 

 ( TANSTAAFL is a fairly well-know one, BTW). 
 #4 s = 'First Second Third'
x = s.split(' ')
for e in x:
 print e[0]
 

 should do the trick. 
 #5 Also you could use 

 re.split('\W') 

 to split the line/text on non-word characters. This might be a little bit more robust. 
 #6 If you want to do things the way that is grammatically correct (regardless of locale), use title() , then filter() : 

 acronym = filter(str.isupper, my_string.title())
 

 title() is pretty awesome; it makes a string titlecased and is correct according to locale.