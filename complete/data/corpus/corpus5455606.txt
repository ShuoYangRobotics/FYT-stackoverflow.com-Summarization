Question (ID-5455606): how to Reverse python dict this is my code : 

 a = {0:'000000',1:'11111',3:'333333',4:'444444'}

for i in a:
 print i
 

 it show : 

 0
1
3
4
 

 but i want show : 

 4
3
1
0
 

 so what can i do , 

 thanks 
 Answers (Total-6): #0 The order keys are iterated in is arbitrary. It was only a coincidence that they were in sorted order. 

 &gt;&gt;&gt; a = {0:'000000',1:'11111',3:'333333',4:'444444'}
&gt;&gt;&gt; a.keys()
[0, 1, 3, 4]
&gt;&gt;&gt; sorted(a.keys())
[0, 1, 3, 4]
&gt;&gt;&gt; reversed(sorted(a.keys()))
&lt;listreverseiterator object at 0x02B0DB70&gt;
&gt;&gt;&gt; list(reversed(sorted(a.keys())))
[4, 3, 1, 0]
 
 #1 Dictionaries are unordered so you cannot reverse them. The order of the current output is arbitrary. 

 That said, you can order the keys of course: 

 for i in sorted(a.keys(), reverse=True):
 print a[i];
 

 but this gives you the reverse order of the sorted keys, not necessarily the reverse order of the keys how they have been added. I.e. it won't give you 1 0 3 if your dictionary was: 

 a = {3:'3', 0:'0', 1:'1'}
 
 #2 Try: 

 for i in sorted(a.keys(), reverse=True):
 print i
 
 #3 Python dictionaries don't have any 'order' associated with them. It's merely a 'coincidence' that the dict is printing the same order. There are no guarantees that items in a dictionary with come out in any order. 

 If you want to deal with ordering you'll need to convert the dictionary to a list. 

 a = list(a) # keys in list
a = a.keys() # keys in list
a = a.values() # values in list
a = a.items() # tuples of (key,value) in list
 

 Now you can sort the list as normal, e.g., a.sort() and reverse it as well, e.g., a.reverse() 
 #4 Python dict is not ordered in 2.x. But there's an ordered dict implementation in 3.1 . 
 #5 for i in reversed(sorted(a.keys())):
 print i