Question (ID-6981495): How can I concatenate a string and a number in Python? I was trying to concatenate a string and a number in Python. It gave me an error when I tried this: 

 "abc" + 9
 

 The error is: 

 Traceback (most recent call last):
 File "&lt;pyshell#5&gt;", line 1, in &lt;module&gt;
 "abc" + 9
TypeError: cannot concatenate 'str' and 'int' objects
 

 Why I am not able to do this? 

 How can I concatenate a string and a number in Python? 

 Please tell me about the use of "Pass" statement in detail..... 
 Answers (Total-6): #0 Python is strongly typed . There are no implicit type conversions. 

 You have to do one of these: 

 "asd%d" % 9
"asd" + str(9)
 
 #1 If it worked the way you expected it to (resulting in "abc9" ), what would "9" + 9 deliver? 18 or "99" ? 

 To remove this ambiguity, you are required to make explicit what you want to convert in this case: 

 "abc" + str(9)
 
 #2 Either something like this: 

 "abc" + str(9)
 

 or 

 "abs{0}".format(9)
 

 or 

 "abs%d" % (9,)
 
 #3 Since Python is a strongly typed language, concatenating a string and an integer as you may do in Perl makes no sense, because there's no defined way to "add" strings and numbers to each other. 

 
 Explicit is better than implicit. 
 

 ...says "The Zen of Python" , so you have to concatenate two string objects. You can do this by creating a string from the integer using the built-in str() function: 

 &gt;&gt;&gt; "abc" + str(9)
'abc9'
 

 Alternatively use Python's string formatting operations : 

 &gt;&gt;&gt; 'abc%d' % 9
'abc9'
 

 Perhaps better still, use str.format() : 

 &gt;&gt;&gt; 'abc{0}'.format(9)
'abc9'
 

 The Zen also says: 

 
 There should be one-- and preferably only one --obvious way to do it. 
 

 Which is why I've given three options. It goes on to say... 

 
 Although that way may not be obvious at first unless you're Dutch. 
 
 #4 You have to convert the int into a string: 

 "abc" + str(9)
 
 #5 do it like this: 

 "abc%s" % 9
#or
"abc" + str(9)