Question (ID-6266727): Python: Cut of the last word of a sentence? I need to cut out the last word of a block of text. The reason is i'm grabbing some text from a database and i don't know if the last word will be cut off or not, so to be safe i'm getting rid of the last word and adding three dots at the end. The first approach i thought of was to split it to a list (by spaces) and remove the last item, then concatenate the list to a string again. Another way would be to use a regular expression to replace the last word. 

 What's the best way? Please give code examples! 

 This is what i've got now; i'm doing the first approach, but i don't know how to concatentate the list... 

  content = content[position-1:position+249] # Content
 words = string.split(content, ' ')
 words = words[len[words] -1] # Cut of the last word
 

 Any suggestions? 
 Answers (Total-6): #0 Actually you don't need to split all words. You can split you text by last space symbol into two parts using rsplit . 

 Some example: 

 &gt;&gt;&gt; text = 'Python: Cut of the last word of a sentence?'
&gt;&gt;&gt; text.rsplit(' ', 1)[0]
'Python: Cut of the last word of a'
 
 #1 If you want to keep your current method, use ' '.join(words) to concatenate the list. 

 You also might want to replace words = words[len[words -1] with words = words[:-1] to make use of list slicing. 
 #2 If you like compactness: 

 ' '.join(content.split(' ')[:-1]) + ' ...'
 
 #3 ' '.join(words) will put the list back together. 
 #4 You should definitely split and then remove the last word because a regex will have both more complications and unnecessary overhead. You can use the more Pythonic code (assuming content is a string): 

 ' '.join(content.split(' ')[:-1])
 

 This splits content into words, takes all but the last word, and rejoins the words with spaces. 
 #5 OR 

 import re

print ' '.join(re.findall(r'\b\w+\b', text)[:-1])