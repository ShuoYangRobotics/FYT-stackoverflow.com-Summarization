Question (ID-8236380): Why is semicolon allowed in this python snippet? Python does not warrant the use of semicolons to end statements.
So why is this (below) allowed? 

 import pdb; pdb.set_trace()
 
 Answers (Total-9): #0 Python does not require semi-colons to terminate statements. Semi colons can be used to delimit statements if you wish to put multiple statements on the same line. 

 Now, why is this allowed? It's a simple design decision. I don't think Python needs this semi-colon thing, but somebody thought it would be nice to have and added it to the language. 
 #1 http://docs.python.org/reference/compound_stmts.html 

 
 Compound statements consist of one or more ‘clauses.’ A clause
 consists of a header and a ‘suite.’ The clause headers of a particular
 compound statement are all at the same indentation level. Each clause
 header begins with a uniquely identifying keyword and ends with a
 colon. A suite is a group of statements controlled by a clause. A
 suite can be one or more semicolon-separated simple statements on the
 same line as the header, following the header’s colon, or it can be
 one or more indented statements on subsequent lines . Only the latter
 form of suite can contain nested compound statements; the following is
 illegal, mostly because it wouldn’t be clear to which if clause a
 following else clause would belong: 

 if test1: if test2: print x
 
 
 Also note that the semicolon binds tighter than the colon in this
 context, so that in the following example, either all or none of the
 print statements are executed: 

 if x &lt; y &lt; z: print x; print y; print z 
 
 

 Summarizing: 

 compound_stmt ::= if_stmt
     | while_stmt
     | for_stmt
     | try_stmt
     | with_stmt
     | funcdef
     | classdef
     | decorated
suite   ::= stmt_list NEWLINE | NEWLINE INDENT statement+ DEDENT
statement  ::= stmt_list NEWLINE | compound_stmt
stmt_list  ::= simple_stmt (";" simple_stmt)* [";"]
 
 #2 A quote from " When Pythons Attack " 

 
 Don't terminate all of your statements with a semicolon. It's technically legal to do this in Python, but is totally useless unless you're placing more than one statement on a single line (e.g., x=1; y=2; z=3). 
 
 #3 As everyone else has noted, you can use semicolons to separate statements. You don't have to, and it's not the usual style. 

 As for why this is useful, some people like to put two or more really trivial short statements on a single line (personally I think this turns several trivial easily skimmed lines into one complex-looking line and makes it harder to see that it's trivial). 

 But it's almost a requirement when you're invoking Python one liners from the shell using python -c '&lt;some python code&gt;' . Here you can't use indentation to separate statements, so if your one-liner is really a two-liner, you'll need to use a semicolon. And if you want to use other arguments in your one-liner, you'll have to import sys to get at sys.argv , which requires a separate import statement. e.g. 

 python -c "import sys; print ' '.join(sorted(sys.argv[1:]))" 5 2 3 1 4
1 2 3 4 5
 
 #4 Multiple statements on one line may include semicolons as separators. For example: http://docs.python.org/reference/compound_stmts.html In your case, it makes for an easy insertion of a point to break into the debugger. 

 Also, as mentioned by Mark Lutz in the Learning Python Book , it is technically legal (although unnecessary and annoying) to terminate all your statements with semicolons. 
 #5 Python uses the ; as a separator, not a terminator. You can also use them at the end of a line, which makes them look like a statement terminator, but this is legal only because blank statements are legal in Python -- a line that contains a semicolon at the end is two statements, the second one blank. 
 #6 semicolons are part of valid syntax: http://docs.python.org/reference/compound_stmts.html 
 #7 Python does let you use a semi-colon to denote the end of a statement if you are including more than one statement on a line. 
 #8 Semicolons can be used to one line two or more commands. They don't have to be used, but they aren't restricted. 

 
 The semicolon ( ; ) allows multiple statements on the single line given that neither statement starts a new code block. 
 

 http://www.tutorialspoint.com/python/python_basic_syntax.htm