Question (ID-4502429): recursive factorial function how can I combine these two functions in to one recursive function to have this result: 

 factorial(6)
1! = 1
2! = 2
3! = 6
4! = 24
5! = 120
6! = 720
 

 these are the codes 

 def factorial( n ):
 if n &lt;1: # base case
  return 1
 else:
  return n * factorial( n - 1 ) # recursive call
def fact(n):
  for i in range(1, n+1 ):
    print "%2d! = %d" % ( i, factorial( i ) )

fact(6)
1! = 1
2! = 2
3! = 6
4! = 24
5! = 120
6! = 720
 

 as you see execution of these two gives a correct answer, I just want to make it to one recursive function. 
 Answers (Total-7): #0 def factorial(n):
 result = 1 if n &lt;= 1 else n * factorial(n - 1)
 print '%d! = %d' % (n, result)
 return result
 
 #1 I've no experience with Python, but something like this? 

 def factorial( n ):
 if n &lt;1: # base case
  return 1
 else:
  f = n * factorial( n - 1 ) # recursive call
  print "%2d! = %d" % ( n, f )
  return f
 
 #2 try this: 

 def factorial( n ):
 if n &lt;1: # base case
  print "%2d! = %d" % (n, n)
  return 1
 else:
  temp = factorial( n - 1 )
  print "%2d! = %d" % (n, n*temp)
  return n * temp # recursive call
 

 One thing I noticed is that you are returning '1' for n&lt;1, that means your function will return 1 even for negative numbers. You may want to fix that. 
 #3 def factorial( n ):
 if n &lt;1: # base case
  return 1
 else:
  returnNumber = n * factorial( n - 1 ) # recursive call
  print(str(n) + '! = ' + str(returnNumber))
  return returnNumber
 
 #4 Print the results immediately before returning them. 
 #5 Is this homework by any chance? 

 def traced_factorial(n):
 def factorial(n):
 if n &lt;= 1:
  return 1
 return n * factorial(n - 1)
 for i in range(1, n + 1):
 print '%2d! = %d' %(i, factorial(i))
 

 Give PEP227 a read for more details. The short of it is that Python lets you define functions within functions. 
 #6 One more 

 def fact(x):
 if x == 0:
  return 0
 elif x == 1:
  return 1
 else:
  return x * fact(x-1)

for x in range(0,10):
 print '%d! = %d' %(x, fact(x))