Question (ID-7022338): Python thinks I'm passing more arguments than I am? Trying to set up some basic socket code in Python (well, Jython, but I don't think that's relevant here). 

 import socket
class Foo(object):
 def __init__(self):
  #some other init code here

  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect("localhost", 2057)
  s.send("Testing 1,2,3...")
  data = s.recv()
  s.close()
  print data
 

 It tells me: 

 
  s.connect("localhost", 2057)
 File "&lt;string&gt;", line 1, in connect
TypeError: connect() takes exactly 2 arguments (3 given)
 
 

 I get the feeling something really simple is staring me in the face, but I can't tell what I'm doing wrong. 
 Answers (Total-6): #0 You have to pass a Tuple to connect() method. 

 s.connect( ('localhost', 2057) )
 

 The first (implicit) argument expected is self , the second is the Tuple. 
 #1 You are passing three arguments! s is being passed as the implicit first argument, and the other two arguments you have specified are the second and third arguments. 

 Now, the reason that it's upset is because socket.connect() only takes one argument (two, of course, if you count the implicit instance argument): see the docs . 
 #2 s.connect(("localhost", 2057))
 

 The third (or first) argument you are implicitely passing is self ( s ). 

 Sockets take a tuple consisting of (HOST, PORT) . 
 #3 The socket connect function is used to connect the socket to a remote address. For IP sockets, the address is a pair (host, port) 

 So you should use: 

 s.connect( ("localhost", 2057) )
 
 #4 use: 

 s.connect(("localhost", 2057))
 
 #5 The socket.connect only accept 1 argument, that is address, 2 if self counted.
And the format of address is stated on the fourth paragraph, http://docs.python.org/library/socket.html