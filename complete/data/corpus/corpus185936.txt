Question (ID-185936): Delete Folder Contents in Python How can I delete the contents of a local folder in Python. 
The current project is for Windows but I would like to see *nix also. 
 Answers (Total-6): #0 Try the shutil module 

 import shutil
shutil.rmtree('/path/to/folder')
 

 
 Description: shutil.rmtree(path,
 ignore_errors=False, onerror=None) 
 
 Docstring: Recursively delete a
 directory tree. 
 
 If ignore_errors is set, errors are
 ignored; otherwise, if onerror is set,
 it is called to handle the error with
 arguments (func, path, exc_info) where
 func is os.listdir , os.remove , or
 os.rmdir ; path is the argument to that
 function that caused it to fail; and
 exc_info is a tuple returned by
 sys.exc_info() . If ignore_errors is
 false and onerror is None , an
 exception is raised. 
 
 #1 Updated to only delete files and to used the os.path.join() method suggested in the comments. If you want to remove all contents of the folder just remove the if statement. 

 import os 
folder = '/path/to/folder'
for the_file in os.listdir(folder):
 file_path = os.path.join(folder, the_file)
 try:
  if os.path.isfile(file_path):
   os.unlink(file_path)
 except Exception, e:
  print e
 
 #2 Expanding on mhawke's answer this is what I've implemented. It removes all the content of a folder but not the folder itself. Tested on Linux with files, folders and symbolic links, should work on Windows as well. 

 import os
import shutil

for root, dirs, files in os.walk('/path/to/folder'):
 for f in files:
 	os.unlink(os.path.join(root, f))
 for d in dirs:
 	shutil.rmtree(os.path.join(root, d))
 
 #3 You might be better off using os.walk() for this. 

 os.listdir() doesn't distinguish files from directories and you will quickly get into trouble trying to unlink these. There is a good example of using os.walk() to recursively remove a directory here , and hints on how to adapt it to your circumstances. 
 #4 You can simply do this : 

 import os
import glob

files = glob.glob('/YOUR/PATH/*')
for f in files:
 os.remove(f)
 

 You can of corse use an other filter in you path, for exemple : /YOU/PATH/*.txt for removing all text files in a directory. 
 #5 The accepted answer will not work if you want to delete the entire folder contents (including sub-folders), as the folder could be non-empty, which will cause os.unlink to error. 

 Using rmtree and recreating the folder could work, but I have run into errors when deleting and immediately recreating folders on network drives. 

 The proposed solution using walk does not work as it uses rmtree to remove folders and then may attempt to use os.unlink on the files that were previously in those folders. This causes an error. 

 The posted glob solution will also attempt to delete non-empty folders, causing errors. 

 I suggest you use: 

 folder_path = '/path/to/folder'
for file_object in os.listdir(folder_path):
 file_object_path = os.path.join(folder_path, file_object)
 if os.path.isfile(file_object_path):
  os.unlink(file_object_path)
 else:
  shutil.rmtree(file_object_path)