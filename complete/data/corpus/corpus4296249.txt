Question (ID-4296249): How do I convert a hex triplet to an RGB tuple and back? I'd like to convert a hex triplet to an RGB tuple and then convert a tuple to a hex triplet. 
 Answers (Total-6): #0 &gt;&gt;&gt; import struct
&gt;&gt;&gt; rgbstr='aabbcc'
&gt;&gt;&gt; struct.unpack('BBB',rgbstr.decode('hex'))
(170, 187, 204)
 

 and 

 &gt;&gt;&gt; rgb = (50,100,150)
&gt;&gt;&gt; struct.pack('BBB',*rgb).encode('hex')
'326496'
 
 #1 Trying to be pythonic : 

 &gt;&gt;&gt; rgbstr='aabbcc'
&gt;&gt;&gt; tuple(ord(c) for c in rgbstr.decode('hex'))
(170, 187, 204)
&gt;&gt;&gt; tuple(map(ord, rgbstr.decode('hex'))
(170, 187, 204)
 

 and 

 &gt;&gt;&gt; rgb=(12,50,100)
&gt;&gt;&gt; "".join(map(chr, rgb)).encode('hex')
'0c3264'
 
 #2 A very simplistic approach to convert rgb to hex 

 &gt;&gt;&gt; rgb = (255, 255, 255)
&gt;&gt;&gt; r, g , b = rgb
&gt;&gt;&gt; hex(r)
'0xff'
&gt;&gt;&gt; hex(r) + hex(g)[2:] + hex(b)[2:]
'0xffffff'
&gt;&gt;&gt;
 

 A simplistic approach to convert Hex to rgb 

 &gt;&gt;&gt; h = '0xffffff'
&gt;&gt;&gt; h1, h2, h3 = h[0:4], '0x' + h[4:6], '0x' + h[6:8]
&gt;&gt;&gt; h1, h2, h3
('0xff', '0xff', '0xff')
&gt;&gt;&gt; r, g , b = int(h1, 16), int(h2, 16), int(h3, 16)
&gt;&gt;&gt; r, g, b
(255, 255, 255)
 

 Use a module which provides some these facility: webcolors 

 &gt;&gt;&gt; hex_to_rgb('#000080')
(0, 0, 128)
&gt;&gt;&gt; rgb_to_hex((255, 255, 255))
'#ffffff'
 

 Function doc: 

 
 hex_to_rgb(hex_value)
 Convert a hexadecimal color value to a 3-tuple of integers suitable for use in an rgb() triplet specifying that color. 
 
 rgb_to_hex(rgb_triplet) : 
 Convert a 3-tuple of integers, suitable for use in an rgb() color triplet, to a normalized hexadecimal value for that color. 
 
 #3 import re

def hex_to_int_color(v):
 return tuple(int(i,16) for i in re.match(
 r'^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$', v,
 flags=re.IGNORECASE).groups())

def int_to_hex_color(v):
 return '#%02x%02x%02x' % v
 
 #4 HEX = '0123456789abcdef'

def rgb(triplet):
 triplet = triplet.lower()
 return (HEX.index(triplet[0])*16 + HEX.index(triplet[1]),
   HEX.index(triplet[2])*16 + HEX.index(triplet[3]),
   HEX.index(triplet[4])*16 + HEX.index(triplet[5]))

def triplet(rgb):
 return hex(rgb[0])[2:] + hex(rgb[1])[2:] + hex(rgb[2])[2:]

print rgb('aabbcc')
# (170, 187, 204)
print triplet((170, 187, 204))
# aabbcc
 
 #5 def hex_to_int_color(v):
 if (v[0] == '#')
  v = v[1:]
 assert(len(v) == 6)
 return int(v[:2], 16), int(v[2:4], 16), int(v[4:6], 16)

def int_to_hex_color(v):
 assert(len(v) == 3)
 return '#%02x%02x%02x' % v