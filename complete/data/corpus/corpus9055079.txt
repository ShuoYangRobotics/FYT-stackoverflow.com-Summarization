Question (ID-9055079): Python: How to append a value in a dict to a list if the value is found in another list Example: 

 list1 =['a','b','c','d']
new_list = []
dict = {'a':24, 'b':53 ,'c':26, 'd':9}
 

 How would I take list1 and append the associated values of dict into new_list, so as to produce this: 

 new_list = [24,53,26,9]
 
 Answers (Total-6): #0 Don't use 'dict' as a variable name, it will shadow the builtin dict() function. 

 list1 =['a','b','c','d']
d = {'a':24, 'b':53 ,'c':26, 'd':9}
new_list = [d[k] for k in list1]
assert new_list == [24, 53, 26, 9]
 
 #1 Assuming all the elements in list1 are keys in dict, this is the simplest solution I can think of : 

 list1 =['a','b','c','d']
new_list = []
dict = {'a':24, 'b':53 ,'c':26, 'd':9}

for it in list1:
 new_list.append(dict[it])
 
 #2 list1 =['a','b','c','d']
d = {'a':24, 'b':53 ,'c':26, 'd':9}
new_list = map(lambda x: d[x], list1)
 

 or if you really need to append instead of replacing: 

 new_list.extend(map(lambda x: d[x], list1))
 
 #3 What about this? 

 for key in list1:
 new_list.append(dict[key])

print list1
 

 Example output: 

 [24, 53, 26, 9]
 
 #4 Try this: 

 lst = ['a','b','c','d']
dct = {'a':24, 'b':53 ,'c':26, 'd':9}
new_list = [dct[k] for k in lst]
 
 #5 This works: 

 list1 =['a','b','c','d']
d = {'a':24, 'b':53 ,'c':26, 'd':9}
new_list=[x[1] for x in dict.items()]
output=[24, 26, 53, 9]