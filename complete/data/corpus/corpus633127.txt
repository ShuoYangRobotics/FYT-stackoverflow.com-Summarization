Question (ID-633127): python: viewing all defined variables I'm currently working on a computation in python shell. What I want to have is Matlab style listout where you can see all the variables that have been defined up to a point (so I know which names I've used, their values and such). 

 Is there a way and how would one go in python about that ? 
 Answers (Total-7): #0 Couple of things you could use: 

 
 dir () will give you the list of in scope variables: 
 globals () will give you a dictionary of global variables 
 locals () will give you a dictionary of local variables 
 
 #1 print locals() 

 edit continued from comment. 

 To make it look a little prettier when printing: 

 import sys, pprint
sys.displayhook = pprint.pprint
locals()
 

 That should give you a more vertical printout. 
 #2 To get the names: 

 for name in vars().keys():
 print(name)
 

 To get the values: 

 for value in vars().values():
 print(value)
 

 vars() also takes an optional argument to find out which vars are defined within an object itself. 
 #3 keep in mind dir() will return all current imports, AND variables. 

 if you just want your variables, I would suggest a naming scheme that is easy to extract from dir, such as varScore, varNames, etc. 

 that way, you can simply do this: 

 for vars in dir():
 if vars.startswith("var"):
 print vars
 

 Edit 

 if you want to list all variables, but exclude imported modules and variables such as: 

 __builtins__
 

 you can use something like so: 

 import os
import re

x = 11
imports = "os","re"

for vars in dir():
 if vars.startswith("__") == 0 and vars not in imports:
 	print vars
 

 as you can see, it will show the variable "imports" though, because it is a variable (well, a tuple). A quick workaround is to add the word "imports" into the imports tuple itself! 
 #4 If this is an option for you, you might want to look at IPython : 

 To get a list of all currently defined variables, type who : 

 In [1]: foo = 'bar'

In [2]: who
foo
 

 You can type whos for more detail: 

 In [3]: whos
Variable Type Data/Info
----------------------------
foo  str  bar
 

 There are a wealth of other functions available - basically it is the Python interpreter on steroids. One convenient one is store command, which lets you save variables between sessions (kind of like a super easy pickle ) 

 If you have a few minutes, check out Jeff Rush's excellent IPython demonstration screencasts: 

 I am in no way associated with the team behind IPython, just a satisfied user. 
 #5 Already been asked, I posted this a while back, it's at: 

 Enumerate or list all variables in a program of [your favorite language here] 
 #6 globals(), locals(), vars(), and dir() may all help you in what you want.