Question (ID-6007881): What does the [0]*x syntax do in Python? A flash question, I'm looking at the following code 

 from __future__ import division
import math
import time

def dft(x, inverse = False, verbose = False) :
 t = time.clock()
 N = len(x)
 inv = -1 if not inverse else 1
 X =[0] * N
 for k in xrange(N) :
  for n in xrange(N) :
   X[k] += x[n] * math.e**(inv * 2j * math.pi * k * n / N)
  if inverse :
   X[k] /= N
 t = time.clock() - t
 if verbose :
  print "Computed","an inverse" if inverse else "a","DFT of size",N,
  print "in",t,"sec."
 return X
 

 and I'm wondering (I do not know python): 

 
 what does the X =[0] * N line do? 
 why the double asterisk ** ? 
 
 Answers (Total-6): #0 The [0] * x creates a list with x elements. So, 

 &gt;&gt;&gt; [ 0 ] * 5
[0, 0, 0, 0, 0]
&gt;&gt;&gt; 
 

 Be warned that they all point to the same object. This is cool for immutables like integers but a pain for things like lists. 

 &gt;&gt;&gt; t = [[]] * 5
&gt;&gt;&gt; t
[[], [], [], [], []]
&gt;&gt;&gt; t[0].append(5)
&gt;&gt;&gt; t
[[5], [5], [5], [5], [5]]
&gt;&gt;&gt; 
 

 The ** operator is used for exponentation. 

 &gt;&gt;&gt; 5 ** 2 
25
 
 #1 X = [0] * N creates an array of zeros of N length. For example: 

 &gt;&gt;&gt; [0] * 10
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 

 ** is the power operator . 

 &gt;&gt;&gt; 2 ** 2
4
 
 #2 The x = [0] * n is demonstrated here: 

 &gt;&gt;&gt; [0]*10
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 

 It 'multiplies' the list elements 

 &gt;&gt;&gt; [1, 2, 3] * 3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
 

 The ** is the power operator 

 &gt;&gt;&gt; 3**2
9
 

 Although be careful, it can also be **kwargs (in a different context), see more about that here Proper way to use **kwargs in Python 
 #3 
 what does the X =[0] * N line do? 
 

 [0] is a sequence containing a single element – 0 . Multiplying a sequence times n means concatenating it n times to itself. That is, the result is a sequence containing n zeros. 

 
 why the double asterisk ** ? 
 

 It’s the power operator: b ** e = b e . 
 #4 1) It initialises a list containing N 0's. 

 2) ** is the exponentiation operator 
 #5 [0] * N creates a list of size N which contains only 0's 

 the ** is a notation for raising the left side to the power of right side 

 Disclaimer: 
 [a] * N where a is a reference to an object will copy the reference, it won't make copies of a inside the list generated