Question (ID-8197323): list.index() function for Python that doesn't throw exception when nothing found Python's list.index(x) throws an exception if the item doesn't exist. Is there a better way to do this that doesn't require handling exceptions? 
 Answers (Total-7): #0 If you don't care where the matching element is, then use: 

 found = x in somelist
 

 If you do care, then use a LBYL style with a conditional expression : 

 i = somelist.index(x) if x in somelist else None
 
 #1 Write a function that does what you need: 

 def find_in_iterable(x, iterable):
 for i, item in enumerate(iterable):
  if item == x:
   return i
 return None
 

 If you only need to know whether the item exists, but not the index, you can use in : 

 x in yourlist
 
 #2 If you don't care where it is in the sequence, only its presence, then use the in operator. Otherwise, write a function that refactors out the exception handling. 

 def inlist(needle, haystack):
 try:
 return haystack.index(needle)
 except ...:
 return -1
 
 #3 implement your own index for list? 

 class mylist(list):
 def index_withoutexception(self,i):
 try:
  return self.index(i)
 except:
  return -1
 

 So, you can use list, and with your index2, return what you want in case of error. 

 You can use it like this: 

 l = mylist([1,2,3,4,5]) # This is the only difference with a real list
 l.append(4) # l is a list.
 l.index_withoutexception(19) # return -1 or what you want
 
 #4 Yes, there is. You can eg. do something similar to this: 

 test = lambda l, e: l.index(e) if e in l else None
 

 which works like that: 

 &gt;&gt;&gt; a = ['a', 'b', 'c', 'g', 'c']
&gt;&gt;&gt; test(a, 'b')
1
&gt;&gt;&gt; test(a, 'c')
2
&gt;&gt;&gt; test(a, 't')
None
 

 So, basically, test() will return index of the element (second parameter) within given list (first parameter), unless it has not been found (in this case it will return None , but it can be anything you find suitable). 
 #5 There is no built-in way to do what you want to do. 

 Here is a good post that may help you: Why list doesn&#39;t have safe &quot;get&quot; method like dictionary? 
 #6 hope this helps 

 lst= ','.join('qwerty').split(',') # create list
i='a' #srch string
lst.index(i) if i in lst else None