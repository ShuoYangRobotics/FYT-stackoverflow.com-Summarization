Question (ID-4483127): python ... working with numbers I wanted to know if there is another command to make it shorter: 

 noes = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']
 

 this is the command I use so its has to do with years. 
 Answers (Total-6): #0 noes = map(str, range(1, 16)) assuming you really want strings. If not, then noes = range(1, 16) will suffice. 
 #1 If you're after a list of strings, you can use: 

 &gt;&gt;&gt; x = [str(n) for n in range(1,16)] # or xrange if you wish
&gt;&gt;&gt; x
['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']
 

 A list of numbers can be made with either of the following: 

 x = [n for n in range(1,16)]
x = range(1,16)
 
 #2 noes = range(1, 16) . 

 You can use map(str, range(1, 16) or [str(i) for i in range(1, 16] to get strings. 

 range . 

 xrange is similar to range , but doesn't make a list, but can be used in for loops, for example. 

 [str(i) for i in xrange(1, 16)] 
 #3 That's not numbers. You have quoted them, so they are strings. Numbers would be 

 noes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] 
 

 And shorter would be 

 noes = range(1,16)
 

 I'd recommend you to read a Python tutorial. 
 #4 Use 

 noes = range(1, 15);
 

 Or, if you really need strings: 

 noes = [];
for i in range(1, 15):
 noes.append(str(i))
 
 #5 I presume you then use this like 

 if AgeString in noes:
 print "U R 2 yng!"
 

 It would probably be cleaner to do logical comparison, ie 

 if int(AgeStr) &lt; 16:
 print "Too young"