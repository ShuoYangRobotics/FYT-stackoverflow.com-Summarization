Question (ID-3368969): Find string between two substrings How do I find a string between two substrings ( '123STRINGabc' -&gt; 'STRING' )? 

 My current method is like this: 

 &gt;&gt;&gt; start = 'asdf=5;'
&gt;&gt;&gt; end = '123jasd'
&gt;&gt;&gt; s = 'asdf=5;iwantthis123jasd'
&gt;&gt;&gt; print((s.split(start))[1].split(end)[0])
iwantthis
 

 However, this seems very inefficient and un-pythonic. What is a better way to do something like this? 

 Forgot to mention:
The string might not start and end with start and end . They may have more characters before and after. 
 Answers (Total-7): #0 s[len(start):-len(end)]
 
 #1 import re

s = 'asdf=5;iwantthis123jasd'
result = re.search('asdf=5;(.*)123jasd', s)
print result.group(1)
 
 #2 My method will be to do something like, 

 find index of start string in s =&gt; i
find index of end string in s =&gt; j

substring = substring(i+len(start) to j-1)
 
 #3 Here is one way to do it 

 _,_,rest = s.partition(start)
result,_,_ = rest.partition(end)
print result
 

 Another way using regexp 

 import re
print re.findall(re.escape(start)+"(.*)"+re.escape(end),s)[0]
 

 or 

 print re.search(re.escape(start)+"(.*)"+re.escape(end),s).group(1)
 
 #4 s = "123123STRINGabcabc"

def find_between( s, first, last ):
 try:
  start = s.index( first ) + len( first )
  end = s.index( last, start )
  return s[start:end]
 except ValueError:
  return ""

def find_between_r( s, first, last ):
 try:
  start = s.rindex( first ) + len( first )
  end = s.rindex( last, start )
  return s[start:end]
 except ValueError:
  return ""


print find_between( s, "123", "abc" )
print find_between_r( s, "123", "abc" )
 

 gives: 

 123STRING
STRINGabc
 

 I thought it should be noted - depending on what behavior you need, you can mix index and rindex calls or go with one of the above versions (it's equivalent of regex (.*) and (.*?) groups). 
 #5 This I posted before as code snippet in Daniweb : 

 # picking up piece of string between separators
# function using partition, like partition, but drops the separators
def between(left,right,s):
 before,_,a = s.partition(left)
 a,_,after = a.partition(right)
 return before,a,after

s = "bla bla blaa &lt;a&gt;data&lt;/a&gt; lsdjfasdj√∂f (important notice) 'Daniweb forum' tcha tcha tchaa"
print between('&lt;a&gt;','&lt;/a&gt;',s)
print between('(',')',s)
print between("'","'",s)

""" Output:
('bla bla blaa ', 'data', " lsdjfasdj\xc3\xb6f (important notice) 'Daniweb forum' tcha tcha tchaa")
('bla bla blaa &lt;a&gt;data&lt;/a&gt; lsdjfasdj\xc3\xb6f ', 'important notice', " 'Daniweb forum' tcha tcha tchaa")
('bla bla blaa &lt;a&gt;data&lt;/a&gt; lsdjfasdj\xc3\xb6f (important notice) ', 'Daniweb forum', ' tcha tcha tchaa')
"""
 
 #6 String formatting adds some flexibility to what NG suggested. start and end can now be amended as desired. 

 import re

s = 'asdf=5;iwantthis123jasd'
start = 'asdf=5;'
end = '123jasd'

result = re.search('%s(.*)%s' % (start, end), s).group(1)
print(result)