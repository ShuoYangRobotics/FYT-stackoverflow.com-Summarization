Question (ID-493386): How to print in Python without newline or space? The question is in the title. 

 I'd like to do in Python what I do in this example in C: 

 #include &lt;stdio.h&gt;

int main() {
 int i;
 for (i=0; i&lt;10; i++) printf(".");
 return 0;
}
 

 Output: 

 ..........
 

 In Python: 

 &gt;&gt;&gt; for i in xrange(0,10): print '.'
.
.
.
.
.
.
.
.
.
.
&gt;&gt;&gt; for i in xrange(0,10): print '.',
. . . . . . . . . .
 

 In Python print will add a '\n' or a space, how can I avoid that? Now, it's just an example. Don't tell me I can first make a string then print it. I'd like to know how to "append" strings to the stdout (I don't know if it's worded correctly). 
 Answers (Total-8): #0 Since people may come here looking for it based on the title, Python also supports printf-style substitution: 

 &gt;&gt;&gt; strings = [ "one", "two", "three" ]
&gt;&gt;&gt;
&gt;&gt;&gt; for i in xrange(3):
...  print "Item %d: %s" % (i, strings[i])
...
Item 0: one
Item 1: two
Item 2: three
 

 And, you can handily multiply string values: 

 &gt;&gt;&gt; print "." * 10
..........
 

 Note: The title of this question used to be something like "How to printf in python?" 
 #1 import sys
sys.stdout.write('.')
 

 or 

 print('.'), # this will still print a space, but not a newline
 
 #2 The new (as of Python 3.0) print function has an optional end parameter that let's you modify the ending character. There's also sep for separator. 
 #3 Use python print function for python2.6+ (will also brake any existing keyworded print statements in the same file.) 

 # for python2 to use the print() function, removing the print keyword
from __future__ import print_function
for x in xrange(10):
 print('.', end='')
 

 To not ruin all your python2 print keywords, create a separate printf.py file 

 # printf.py

from __future__ import print_function

def printf(str, *args):
 print(str % args, end='')
 

 Then, use it in your file 

 from printf import printf
for x in xrange(10):
 printf('.')
print 'done'
#..........done
 

 More examples showing printf style 

 printf('hello %s', 'world')
printf('%i %f', 10, 3.14)
#hello world10 3.140000
 
 #4 This is not the answer to the question in the title, but it's the answer on how to print on the same line: 

 import sys
for i in xrange(0,10):
 sys.stdout.write(".")
 sys.stdout.flush()
 
 #5 You can do it with end argument of print. In python3 range() returns iterator and xrange() doesn't exist. 

 for i in range(10): print('.', end='')
 
 #6 If you want to access C++ function, you can do it using built-in DLL function like this: 

 
from ctypes import * 

 msvcrt = cdll.msvcrt
msvcrt.printf("Hello world!\n")
 
 #7 Print without a space or newline on Windows: 

 print "text" + "\r",