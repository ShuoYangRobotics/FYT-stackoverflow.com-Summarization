Question (ID-7531945): Python range function Say I want to loop from 0 to 100 but with a step of 1/2. If you try 

 for i in range(0, 100, 0.5):
 whatever
 

 it calls an error saying the step must not be 0. Is there any built in way to do something like this? 

 I'm using Python 2.something by the way. 

 Thanks 
 Answers (Total-6): #0 In [1]: for i in range(0, 100 / 0.5):
 ...:  print 0.5 * i
 ...:  
 ...:  
0.0
0.5
1.0
1.5
...
98.0
98.5
99.0
99.5
 

 If you can use numpy , then numpy.arange(0, 100, 0.5) would also do the trick. 
 #1 You have to use integer steps for range () and xrange() . That's why your 0.5 step gets internally converted to 0 and you get that error. Try for i in [j / 2.0 for j in xrange(100 * 2)]: 
 #2 You'll have to either create the loop manually, or define your own custom range function. The built-in requires an integer step value. 
 #3 for x in map(lambda i: i * 0.5, range(0,200)):
 #Do something with x
 
 #4 If you have numpy , here are two ways to do it: 

 numpy.arange(0, 100, 0.5)

numpy.linspace(0, 100, 200, endpoint=False)
 
 #5 For large ranges it is better to use an generator expression than building a list explicitly: 

 for k in ( i*0.5 for i in range(200) ):
  print k
 

 This consumes not much extra memory, is fast und easy to read.
See http://docs.python.org/tutorial/classes.html#generator-expressions