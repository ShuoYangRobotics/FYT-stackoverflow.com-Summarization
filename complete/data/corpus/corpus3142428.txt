Question (ID-3142428): "/1/2/3/".split("/") It's too hot &amp; I'm probably being retarded. 

 &gt;&gt;&gt; "/1/2/3/".split("/")
['', '1', '2', '3','']
 

 Whats with the empty elements at the start and end? 

 Edit: Thanks all, im putting this down to heat induced brain failure. The docs aren't quite the clearest though, from http://docs.python.org/library/stdtypes.html 

 "Return a list of the words in the string, using sep as the delimiter string"
 

 Is there a word before the first, or after the last "/"? 
 Answers (Total-7): #0 Compare with: 

 "1/2/3".split("/")
 

 Empty elements are still elements. 

 You could use strip('/') to trim the delimiter from the beginning/end of your string. 
 #1 As JLWarlow says, you have an extra '/' in the string. Here's another example: 

 &gt;&gt;&gt; "//2//3".split('/')
['', '', '2', '', '3']
 
 #2 Slashes are separators , so there are empty elements before the first and after the last. 
 #3 you're splitting on / . You have 4 / , so, the list returned will have 5 elements. 
 #4 That is exactly what I would expect, but we are all different :) 

 What would you expect from: : "1,,2,3".split(",") ? 
 #5 You can use strip() to get rid of the leading and trailing fields... Then call split() as before. 
 #6 [x for x in "//1///2/3///".split("/") if x != ""]