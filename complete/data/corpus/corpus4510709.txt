Question (ID-4510709): Python: find index of first digit in string? I suspect this is a regular expression problem - and a very basic one, so apologies. 

 In Python, if I have a string like 

 xdtwkeltjwlkejt7wthwk89lk
 

 how can I get the index of the first digit in the string? 

 Thanks! 
 Answers (Total-8): #0 Use re.search() : 

 &gt;&gt;&gt; import re
&gt;&gt;&gt; s1 = "thishasadigit4here"
&gt;&gt;&gt; m = re.search("\d", s1)
&gt;&gt;&gt; if m:
...  print "Digit found at position %d" % m.start()
... else:
...  print "No digit in that string"
... 
Digit found at position 13
&gt;&gt;&gt; 
 
 #1 import re
mob = re.search('\d', 'xdtwkeltjwlkejt7wthwk89lk')
if mob:
 print mob.start()
 
 #2 Seems like a good job for a parser: 

 &gt;&gt;&gt; from simpleparse.parser import Parser
&gt;&gt;&gt; s = 'xdtwkeltjwlkejt7wthwk89lk'
&gt;&gt;&gt; grammar = """
... integer := [0-9]+
... &lt;alpha&gt; := -integer+
... all  := (integer/alpha)+
... """
&gt;&gt;&gt; parser = Parser(grammar, 'all')
&gt;&gt;&gt; parser.parse(s)
(1, [('integer', 15, 16, None), ('integer', 21, 23, None)], 25)
&gt;&gt;&gt; [ int(s[x[1]:x[2]]) for x in parser.parse(s)[1] ]
[7, 89]
 
 #3 As the other solutions say, to find the index of the first digit in the string we can use regular expressions: 

 &gt;&gt;&gt; s = 'xdtwkeltjwlkejt7wthwk89lk'
&gt;&gt;&gt; match = re.search(r'\d', s)
&gt;&gt;&gt; print match.start() if match else 'No digits found'
15
&gt;&gt;&gt; s[15] # To show correctness
'7'
 

 While simple, a regular expression match is going to be overkill for super-long strings. A more efficient way is to iterate through the string like this: 

 &gt;&gt;&gt; for i, c in enumerate(s):
...  if c.isdigit():
...   print i
...   break
... 
15
 

 In case we wanted to extend the question to finding the first integer (not digit) and what it was: 

 &gt;&gt;&gt; s = 'xdtwkeltjwlkejt711wthwk89lk'
&gt;&gt;&gt; for i, c in enumerate(s):
...  if c.isdigit():
...   start = i
...   while i &lt; len(s) and s[i].isdigit():
...    i += 1
...   print 'Integer %d found at position %d' % (int(s[start:i]), start)
...   break
... 
Integer 711 found at position 15
 
 #4 I'm sure there are multiple solutions, but using regular expressions you can do this: 

 &gt;&gt;&gt; import re
&gt;&gt;&gt; match = re.search("\d", "xdtwkeltjwlkejt7wthwk89lk")
&gt;&gt;&gt; match.start(0)
15
 
 #5 As everybody has answered using regex, here is another way without regex and which may suffice in many cases 

 s='xdtwkeltjwlkejt7wthwk89lk'

for i, c in enumerate(s):
 if c.isdigit():
  print i
  break
 

 output: 

 15
 
 #6 Here is another regex-less way, more in a functional style. This one finds the position of the first occurrence of each digit that exists in the string, then chooses the lowest. A regex is probably going to be more efficient, especially for longer strings (this makes at least 10 full passes through the string and up to 20). 

 haystack = "xdtwkeltjwlkejt7wthwk89lk"
digits = "012345689"
found = [haystack.index(dig) for dig in digits if dig in haystack]
firstdig = min(found) if found else None
 
 #7 you can use regular expression 

 import re
y = "xdtwkeltjwlkejt7wthwk89lk"

s = re.search("\d",y).start()