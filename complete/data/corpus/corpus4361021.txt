Question (ID-4361021): Python ".write" How can I "convert" this: 

 input=[(0.25 , 'x1'),(0.20 , 'x2'), ............................]
 

 so that I can write in test.txt only this:
x1=0.25, x2=0.20, x3= .................. 

 
 f = open('test.txt', 'w') 
 
 f.write(input) 
 
 f.close() 
 

 I know for print, this work ok: 

 print ' '.join("%s=%s" % (y, x) for x,y in input)
 

 but I can't "import" into f.write(...) 

 

 Edit : Thanks to all, all worked, I didn't remember that I can use: 

 f.write(' '.join("%s=%s" % (y, x) for x,y in input))
 
 Answers (Total-6): #0 Anything wrong with 

 f.write(' '.join("%s=%s" % (y, x) for x,y in input))
 

 ? 

 Or 

 print &gt;&gt;f, ' '.join("%s=%s" % (y, x) for x,y in input)
 

 There's a minor difference in that the former won't have a trailing newline character. Easily fixed though. 
 #1 Try this: 

 s = ', '.join("%s=%s" % (y, x) for x,y in input)
f.write(s)
 
 #2 If you would like to use print , the correct method depends on which version of Python you are using. For Python 2: 

 print &gt;&gt;f, ' '.join("%s=%s" % (y, x) for x,y in input)
 

 For Python 3: 

 print(' '.join("%s=%s" % (y, x) for x,y in input), file=f)
 
 #3 You have ' '.join("%s=%s" % (y, x) for x,y in input) and you are printing that; pass that to f.write , it's a perfectly valid expression: 

 f = open('text.txt', 'w')
f.write(' '.join("%s=%s" % (y, x) for x,y in input))
f.close()
 
 #4 
 Don't name anything input since that is a built-in function 
 You can simply replace your print statement with f.write(' '.join("%s=%s" % (y, x) for x, y in myList) and it should work just fine 
 
 #5 f = open('test.txt', 'w')
f.write(' '.join("%s=%s" % (y, x) for x,y in input))
f.close()