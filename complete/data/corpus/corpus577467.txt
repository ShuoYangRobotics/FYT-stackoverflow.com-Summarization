Question (ID-577467): Pause in Python I am running commandline python scripts from the Windows taskbar by having a shortcut pointing to the python interpreter with the actual script as parameter. 

 After the script has been processed, the interpreter terminates and the output window is closed which makes it impossible to read script output. 

 What is the most straightforward way to keep the interpreter window open until any key is pressed? 

 In batch files, one can end the script with pause. The closest thing to this I found in python is raw_input() which is suboptimal because it requires pressing the return key (instead of any key). 

 Any ideas? 
 Answers (Total-8): #0 One way is to leave a raw_input() at the end so the script waits for you to press Enter before it terminates. 
 #1 There's no need to wait for input before closing, just change your command like so: 

 cmd /K python &lt;script&gt;
 

 The /K switch will execute the command that follows, but leave the command interpreter window open, in contrast to /C , which executes and then closes. 
 #2 In Windows, you can use the msvcrt module. 

 
 msvcrt.kbhit() 
  Return true if a keypress is waiting to be read. 
 
 msvcrt.getch() 
  Read a keypress and return the resulting character. Nothing is echoed
 to the console. This call will block
 if a keypress is not already
 available, but will not wait for Enter
 to be pressed. 
 

 If you want it to also work on Unix-like systems you can try this solution using the termios and fcntl modules. 
 #3 
 One way is to leave a raw_input() at the end so the script waits for you to press enter before it terminates. 
 

 The advantage of using raw_input() instead of msvcrt.* stuff is that the former is a part of standard Python (i.e. absolutely cross-platform). This also means that the script window will be alive after double-clicking on the script file icon, without the need to do 

 cmd /K python &lt;script&gt;
 
 #4 Try os.system("pause") I used it and it worked for me :) 
 #5 An external WConio module can help here: http://newcenturycomputers.net/projects/wconio.html 

 import WConio
WConio.getch()
 
 #6 import pdb
pdb.debug()
 

 This is used to debug the script. Should be useful to break also. 
 #7 Getting python to read a single character from the terminal in an unbuffered manner is a little bit tricky, but here's a recipe that'll do it: 

 Recipe 134892: getch()-like unbuffered character reading from stdin on both Windows and Unix (Python)