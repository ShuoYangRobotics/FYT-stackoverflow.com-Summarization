Question (ID-1185959): Read content of RAR file into memory in Python I'm looking for a way to read specific files from a rar archive into memory. Specifically they are a collection of numbered image files (I'm writing a comic reader). While I can simply unrar these files and load them as needed (deleting them when done), I'd prefer to avoid that if possible. 

 That all said, I'd prefer a solution that's cross platform (Windows/Linux) if possible, but Linux is a must. Just as importantly, if you're going to point out a library to handle this for me, please understand that it must be free (as in beer) or OSS. 
 Answers (Total-7): #0 See the rarfile module: 

 
 http://grue.l-t.ee/~marko/src/rarfile/README.html 
 http://pypi.python.org/pypi/rarfile/ 
 https://github.com/markokr/rarfile 
 
 #1 The real answer is that there isn't a library, and you can't make one. You can use rarfile, or you can use 7zip unRAR (which is less free than 7zip, but still free as in beer), but both approaches require an external executable. The license for RAR basically requires this, as while you can get source code for unRAR, you cannot modify it in any way, and turning it into a library would constitute illegal modification. 

 Also, solid RAR archives (the best compressed) can't be randomly accessed, so you have to unarchive the entire thing anyhow. WinRAR presents a UI that seems to avoid this, but really it's just unpacking and repacking the archive in the background. 
 #2 It seems like the limitation that rarsoft imposes on derivative works is that you may not use the unrar source code to create a variation of the RAR COMPRESSION algorithm. From the context, it would appear that it's specifically allowing folks to use his code (modified or not) to decompress files, but you cannot use them if you intend to write your own compression code. Here is a direct quote from the license.txt file I just downloaded: 

 
 The UnRAR sources may be used in any software to handle RAR
 archives without limitations free of charge, but cannot be used
 to re-create the RAR compression algorithm, which is proprietary.
 Distribution of modified UnRAR sources in separate form or as a
 part of other software is permitted, provided that it is clearly
 stated in the documentation and source comments that the code may
 not be used to develop a RAR (WinRAR) compatible archiver. 
 

 Seeing as everyone seemed to just want something that would allow them to write a comic viewer capable of handling reading images from CBR (rar) files, I don't see why people think there's anything keeping them from using the provided source code. 
 #3 RAR is a proprietary format; I don't think there are any public specs, so third-party tool and library support is poor to non-existant. 

 You're much better off using ZIP; it's completely free, has an accurate public spec, the compression library is available everywhere (zlib is one of the most widely-deployed libraries in the world), and it's very easy to code for. 

 http://docs.python.org/library/zipfile.html 
 #4 The pyUnRAR2 library can extract files from RAR archives to memory (and disk if you want). It's available under the MIT license and simply wraps UnRAR.dll on Windows and unrar on Unix. Click "QuickTutorial" for usage examples. 

 On Windows, it is able to extract to memory (and not disk) with the (included) UnRAR.dll by setting a callback using RARSetCallback() and then calling RARProcessFile() with the RAR_TEST option instead of the RAR_EXTRACT option to avoid extracting any files to disk. The callback then watches for UCM_PROCESSDATA events to read the data. From the documentation for UCM_PROCESSDATA events: "Process unpacked data. It may be used to read a file while it is being extracted or tested without actual extracting file to disk." 

 On Unix, unrar can simply print the file to stdout, so the library just reads from a pipe connected to unrar's stdout. The unrar binary you need is the one that has the "p" for "Print file to stdout" command. Use "apt-get install unrar" to install it on Ubuntu. 
 #5 Look at the Python "struct" module. You can then interpret the RAR file format directly in your Python program, allowing you to retrieve the content inside the RAR without depending on external software to do it for you. 

 EDIT: This is of course vanilla Python - there are alternatives which use third-party modules (as already posted). 

 EDIT 2: According to Wikipedia's article my answer would require you to have permission from the author. 
 #6 The free 7zip library is also able to handle RAR files.