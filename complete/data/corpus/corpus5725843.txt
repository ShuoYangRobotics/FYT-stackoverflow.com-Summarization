Question (ID-5725843): Condense list into string : ['z','y','x'...] -> 'zyx...' ? Python (2.7.1) If I have 
list='abcdedcba' 

 and i want:
a=z, b=y, c=x, d=w, e=v
so it would translate to: 

 translate='zyxwvwxya' 

 How would I do this?
If I construct a dictionary 

 &gt;&gt;&gt; d=dict(zip(('a','b','c','d','e'),('z','y','x','w','v')))
 

 and type 

 &gt;&gt;&gt; example= d[x] for x in list
&gt;&gt;&gt; print translate
['z', 'y', 'x', 'w', 'v', 'w', 'x', 'y', 'z']
 

 How do I get it back into the form 

 translate='zyxwvwxyz' 

 ? 
 Answers (Total-6): #0 For monoalphabetic substitution, use maketrans and translate from the string module. They operate like the unix tr command. Joining with an empty separator is the correct answer for that last step, but not necessary for this exact task. 
 #1 the_list = ['z', 'y', 'x', 'w', 'v', 'w', 'x', 'y', 'z']
print "".join(the_list)
 
 #2 ''.join(translate) 

 I'm not sure this is what you want? 
 #3 an example of using maketrans and translate: 

 &gt;&gt;&gt; import string
&gt;&gt;&gt; table = string.maketrans('abcdef', 'zyxwvu')
&gt;&gt;&gt; 'abdedddfdffdabe'.translate(table)
'zywvwwwuwuuwzyv'
 

 Assuming you want to substitute all letters in the ASCII alphabet: 

 import string
reversed_ascii_letters = string.ascii_letters[::-1]
# reorder lowercase and uppercase
reversed_ascii_letters = reversed_ascii_letters[26:] + reversed_ascii_letters[:26]
table = string.maketrans(string.ascii_letters, reversed_ascii_letters)
data = 'The Quick Brown Fox Jumped Over the Lazy Dog'
print data.translate(table)
 
 #4 &gt;&gt;&gt; import string
&gt;&gt;&gt; table = string.maketrans(string.lowercase, string.lowercase[::-1])
&gt;&gt;&gt; 'abcdedcba'.translate(table)
'zyxwvwxyz'
 
 #5 &gt;&gt;&gt; import string
&gt;&gt;&gt; letters = string.lowercase
&gt;&gt;&gt; letters
'abcdefghijklmnopqrstuvwxyz'
&gt;&gt;&gt; def revert_string(s):
 s_rev = ''
 for c in s:
  s_rev += letters[len(letters) - 1 - letters.find(c)]
 return s_rev

&gt;&gt;&gt; s = 'zearoizuetlkzjetkl'
&gt;&gt;&gt; revert_string(s)
'avzilrafvgopaqvgpo'