Question (ID-816086): Scientific Plotting in Python I have a large data set of tuples containing (time of event, latitude, longitude) that I need to visualize. I was hoping to generate a 'movie'-like xy-plot, but was wondering if anyone has a better idea or if there is an easy way to do this in Python? 

 Thanks in advance for the help,
--Leo 
 Answers (Total-8): #0 get matplotlib 
 #1 The easiest option is matplotlib. Two particular solutions that might work for you are: 

 1) You can generate a series of plots, each a snapshot at a given time. These can either be displayed as a dynamic plot in matplotlib, where the axes stay the same and the data moves around; or you can save the series of plots to separate files and later combine them to make a movie (using a separate application). There a number of examples in the official examples for doing these things. 

 2) A simple scatter plot, where the colors of the circles changes with time might work well for your data. This is super easy. See this , for example, which produces this figure
 
 #2 I'd try rpy. All the power of R, from within python.
 http://rpy.sourceforge.net/ 

 rpy is awesome. 

 Check out the CRAN library for animations,
 http://cran.r-project.org/web/packages/animation/index.html 

 Of course, you have to learn a bit about R to do this, but if you're planning to do this kind of thing routinely in future it will be well worth your while to learn. 
 #3 If you are interested in scientific plotting using Python then have a look at Mlab: http://code.enthought.com/projects/mayavi/docs/development/html/mayavi/mlab.html 

 It allows you to plot 2d / 3d and animate your data and the quality of the charts is really high. 
 #4 Enthought's Chaco is designed for interactive/updating plots. the api and such takes a little while to get use to, but once you're there it's a fantastic framework to work with. 
 #5 I have had reasonable success with Python applications generating SVG with animation features embedded, but this was with a smaller set of elements than what you probably have. For example, if your data is about a seismic event, show a circle that shows up when the event happened and grows in size matching the magnitude of the event. A moving indicator over a timeline is really simple to add. 

 Kaleidoscope (Opera, others maybe, Safari not) shows lots of pieces moving around and I found inspirational. Lots of other good SVG tutorial content on the site too. 
 #6 You might want to look at PyQwt . It's a plotting library which works with Qt/PyQt. 

 Several of the PyQwt examples (in the qt4examples directory) show how to create "moving" / dynamically changing plots -- look at CPUplot.py , MapDemo.py , DataDemo.py . 
 #7 Jython (i.e. Python in Java) is a perfect OO approach for scientific computing.
You can look at the jHepWork project http://jwork.org/jhepwork/ 
Perhaps you will need to look at the tutorial and examples here: 

 http://jwork.org/jhepwork/examples/ 

 Note that the syntax is in Python, but you can call the Java classes and numerical libraries