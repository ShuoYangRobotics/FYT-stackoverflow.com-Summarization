Question (ID-6685057): Modular addition in python I want to add a number y to x, but have x wrap around to remain between zero and 48. Note y could be negative but will never have a magnitude greater than 48. Is there a better way of doing this than: 

 x = x + y
if x &gt;= 48:
 x = x - 48
elif x &lt; 0:
 x = x + 48
 

 ? 
 Answers (Total-6): #0 x = (x + y) % 48
 

 The modulo operator is your friend. 

 &gt;&gt;&gt; 48 % 48
0: 0
&gt;&gt;&gt; 49 % 48
1: 1
&gt;&gt;&gt; -1 % 48
2: 47
&gt;&gt;&gt; -12 % 48
3: 36
&gt;&gt;&gt; 0 % 48
4: 0
&gt;&gt;&gt; 12 % 48
5: 12
 
 #1 you can use the modulo operator: 

 x = (x+y) % 48
 
 #2 If you're doing modular arithmetic, you simply need to use the modulo operator. 

 x = (x + y) % 48
 
 #3 You can just use 

 x = (x+y) % 48
 

 which will give you positive x for any numbers. 
 #4 Wouldn't just (x+ y)% 48 be suitable for you. See more on modulo here . 
 #5 (x + y) % 48 

 Replace 48 with whatever you please.