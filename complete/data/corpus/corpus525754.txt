Question (ID-525754): What Next: C++, Python or Ruby So I am a long time .Net developer looking to branch into something new to further my professional development. I have reduced the next language to learn as one of c++, Python or Ruby and want to hear everyone's thoughts on what I should pick, and why? 

 What trials and tribulations have others found when moving from c# onto one of these 3? 
 Answers (Total-13): #0 C++. 

 Because it is hard. And annoying. 

 Because of pointers. Because of the 'delete' keyword. 

 C# is already high-level enough. Python and Ruby are like stratospherical. 

 With C++ you can move around bits and bytes and such. Have you ever flipped bits? You haven't lived until you've flipped bits. 

 You can learn more about what is really going on in software and operating systems. 

 C++ is my vote. 
 #1 I don't think any of those languages will teach you anything new with the possible exception of C++. I say this because despite syntactic differences and the odd operator, both are general purpose, multi-paradigm, OO-weighted, garbage collected languages. 

 C++ at least doesn't have garbage collection (normally). 

 So I'd suggest something a bit more exotic like F#, Erlang or Haskell. If not those then probably C++ or, better yet, C. 
 #2 I agree with Rob Wells. It depends on what kind of programming you're going to be doing. 
If you're doing big desktop applications, then go with C++. 
If you're doing web applications, Ruby would be a good choice (Ruby on Rails, perhaps?). Python would also be good if you're looking at Django. 
If you're interested in writing little scripts to make your life easier (a text manipulation language, if you will), I'd say go with Python. 
 #3 It really depends on what you want to do with the language. 

 Something large? I'd head towards C++. 

 Something small and quick and fun? I'd head towards Python. 

 Want to play around with OO concepts? Ruby is your destination of choice. 

 Have fun! 

 HTH 

 cheers, 

 Rob 
 #4 IronPython can make the move to Python easier for you - you can use your previous experience. 

 IronPython is a new implementation of the Python programming language running on .NET. It is well integrated with the rest of the .NET Framework and makes all .NET libraries easily available to Python programmers. 
 #5 Just try writing something in all three. Nothing fancy, some simple stuff. After a week you will know which one you like better. 

 But if you don't want fun but do want knowledge, C++ is the best bet. Just because is so different and really useful. 

 Ruby is also good one but you'd have to go hardcore to learn new concepts. Try reading Rails sources :) 

 Python could do a lot and supported by huge community and I would recommend it more for beginners just because of that. Although it's too strict for my taste, even C++ tends to be more "free love" style. 
 #6 I really though this was gonna be full of answers like go for Ruby and Im suprised its not. 
Ruby and particularly with the well know Ruby on Rails framework, is really nice as a new language to learn, if you dont use TDD and MVC, this is a good way to learn it too, its quick and dynamic ( think c# 4). 

 I think I m not alone in this, check the alt.net podcast, they had a talk or two about ruby and one of the guys there actually jsut released a book called Ruby for .net developers 

 Hope it helps 
 #7 I'd just like to offer an alternative view to the "if you know C# then C++ will be easy" view. I think you'll be smashing your face into congnitive dissonance all over the place if you take that route: there are enough similarities between the two languages (because they have common ancestors) to feel like you know what's going on, then WHAM, something that looks like it should just work turns out to be totally different. 

 It's the reason I can't work in VB.Net - I still work from time to time in VBA (which is VB6 near-as-dammit) and switching between the two causes headaches. 
 #8 I'd second the suggestion to learn something a bit more 'exotic' and modern - F# could be a good choice for you, since you already know .NET, so you'll be able to use the same libraries, while learning a new language. 

 The reason for learning F# is that it's not just a new language, but largely a different paradigm, and so it can teach you much more - a different way to think about problems that's however also useful if you'll continue to do C# programming for living. It also shows many ideas that influenced other languages (C# 3, Python) in a much purest form (though in a form that's still very practically useful). 

 T. 
 #9 If you're already fluent in C#, it shouldn't be hard for you to learn C++. It will definitely be a good investment for your career, but beware: it might make you want to stab yourself in the face after C#. 

 Python and Ruby, on the other hand, are different beasts. Learning one will definitely open up a new world for you, and I suggest you learn Python first. I'm saying this for no other reason than it being my favorite language. Otherwise, Ruby is just as good. 
 #10 I think the answer on this depends on what types of sample problems you want to try and solve while learning this new language, but in general I think you have them in the right order: 

 
 C++ (or even C !) - pointers and heap management 
 Python - IronPython on .NET perhaps 
 Ruby 
 
 #11 Part of the dot NET WinForms is written in C using the WinAPI, and dot NET just "p invokes" the C DLL's. 

 So, start learn C/C++ with MFC . This can help to make tricks in dot NET. 
 #12 Why don't you try Lua ?
It's easy to learn and is not Object Oriented, as it's based on Tables.