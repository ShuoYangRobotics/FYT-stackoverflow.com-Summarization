Question (ID-4026080): single list to dictionary I have this list: 

 single = ['key1', 'value1', 'key2', 'value2', 'key3', 'value3']
 

 What's the best way to create a dictionary from this? 

 Thanks. 
 Answers (Total-6): #0 &gt;&gt;&gt; single = ['key1', 'value1', 'key2', 'value2', 'key3', 'value3']
&gt;&gt;&gt; dict(zip(single[::2], single[1::2]))
{'key3': 'value3', 'key2': 'value2', 'key1': 'value1'}
 
 #1 Similar to SilentGhost's solution, without building temporary lists: 

 &gt;&gt;&gt; from itertools import izip
&gt;&gt;&gt; single = ['key1', 'value1', 'key2', 'value2', 'key3', 'value3']
&gt;&gt;&gt; si = iter(single)
&gt;&gt;&gt; dict(izip(si, si))
{'key3': 'value3', 'key2': 'value2', 'key1': 'value1'}
 
 #2 This is the simplest I guess. You will see more wizardry in solution here using list comprehension etc 

 dictObj = {}
for x in range(0, len(single), 2):
 dictObj[single[x]] = single[x+1]
 

 Output: 

 &gt;&gt;&gt; single = ['key1', 'value1', 'key2', 'value2', 'key3', 'value3']
&gt;&gt;&gt; dictObj = {}
&gt;&gt;&gt; for x in range(0, len(single), 2):
...  dictObj[single[x]] = single[x+1]
... 
&gt;&gt;&gt; 
&gt;&gt;&gt; dictObj
{'key3': 'value3', 'key2': 'value2', 'key1': 'value1'}
&gt;&gt;&gt; 
 
 #3 L = ['key1', 'value1', 'key2', 'value2', 'key3', 'value3']
d = dict(L[n:n+2] for n in xrange(0, len(L), 2))
 
 #4 &gt;&gt;&gt; single = ['key', 'value', 'key2', 'value2', 'key3', 'value3']
&gt;&gt;&gt; dict(zip(*[iter(single)]*2))
{'key3': 'value3', 'key2': 'value2', 'key': 'value'}
 

 Probably not the most readable version though ;) 
 #5 You haven't specified any criteria for "best". If you want understandability, simplicity, easily modified to check for duplicates and odd number of inputs, works with any iterable (in case you can't find out the length in advance), NO EXTRA MEMORY USED, ... try this: 

 def load_dict(iterable):
 d = {}
 pair = False
 for item in iterable:
  if pair:
   # insert duplicate check here
   d[key] = item
  else:
   key = item
  pair = not pair
 if pair:
  grumble_about_odd_length(key)
 return d