Question (ID-23397): What's the best way to duplicate fork() in windows? How do I implement some logic that will allow me to duplicate the functionality on windows that I have on linux with fork() using python? 

 I'm specifically trying to execute a method on the SAPI Com component, while continuing the other logic in the main thread without blocking or waiting. 
 Answers (Total-7): #0 fork() has in fact been duplicated in Windows, but it's pretty hairy. 

 
 The fork call in Cygwin is particularly interesting because it does not map well on top of the Win32 API. This makes it very difficult to implement correctly. 
 

 See the The Cygwin Architecture , section 5.6. "Process Creation" for a description of this hack. 
 #1 Have a look at the process management functions in the os module . There are function for starting new processes in many different ways, both synchronously and asynchronously. 

 I should note also that Windows doesn't provide functionality that is exactly like fork() on other systems. To do multiprocessing on Windows, you will need to use the threading module. 
 #2 Use the python multiprocessing module which will work everywhere. 

 Here is a IBM developerWords article that shows how to convert from os.fork() to the multiprocessing module. 
 #3 In addition to the process management code in the os module that Greg pointed out, you should also take a look at the threading module: http://docs.python.org/lib/module-threading.html 

 from threading import Thread

def separate_computations(x, y):
 print sum(x for i in range(y)) # really expensive multiplication

Thread(target=separate_compuations, args=[57, 83]).start()
print "I'm continuing while that other function runs in another thread!"
 
 #4 You might also like using the processing module ( http://pypi.python.org/pypi/processing ). It has lot's of functionality for writing parallel systems with the same API as the threading module... 
 #5 The Threading example from Eli will run the thread, but not do any of the work after that line. 

 I'm going to look into the processing module and the subprocess module. I think the com method I'm running needs to be in another process, not just in another thread. 
 #6 Possibly a version of spawn() for python? http://en.wikipedia.org/wiki/Spawn_(operating_system)