Question (ID-1210458): How can I generate a unique ID in Python? I need to generate a unique ID based on a random value. 
 Answers (Total-7): #0 Perhaps uuid.uuid4()? See: uuid . 
 #1 You might want Python's UUID functions: 

 21.15. uuid â€” UUID objects according to RFC 4122 
 #2 Here ya go: 

 import os
id = os.urandom(32)
 
 #3 unique and random are mutually exclusive. perhaps you want this? 

 import random
def uniqueid():
 seed = random.getrandbits(32)
 while True:
  yield seed
  seed += 1
 

 Usage: 

 unique_sequence = uniqueid()
id1 = unique_sequence()
id2 = unique_sequence()
id3 = unique_sequence()
ids = [unique_sequence() for dummy in range(1000)]
 

 no two returned id is the same (Unique) and this is based on a randomized seed value 
 #4 def guid( *args ):
 """
 Generates a universally unique ID.
 Any arguments only create more randomness.
 """
 t = long( time.time() * 1000 )
 r = long( random.random()*100000000000000000L )
 try:
  a = socket.gethostbyname( socket.gethostname() )
 except:
  # if we can't get a network address, just imagine one
  a = random.random()*100000000000000000L
 data = str(t)+' '+str(r)+' '+str(a)+' '+str(args)
 data = hashlib.md5(data).hexdigest()

 return data
 
 #5 Maybe the uuid module? 
 #6 import time
def new_id():
 time.sleep(0.000001)
 return time.time()
 

 On my system, time.time() seems to offer 6 significant figures after the decimal point. With a brief sleep it should be guaranteed unique with at least a moderate amount of randomness down in the last two or three digits. 

 You could hash it as well if you're worried.