Question (ID-88942): Why should Python PEP-8 specify a maximum line length of 79 characters? Why in this millenium should Python PEP-8 specify a maximum line length of 79 characters? 

 Pretty much every code editor under the sun can handle longer lines. What to do with wrapping should be the choice of the content consumer, not the responsibility of the content creator. 

 Are there any (legitimately) good reasons for adhering to 79 characters in this age? 
 Answers (Total-11): #0 Keeping your code human readable not just machine readable. A lot of devices still can only show 80 characters at a time. Also it makes it easier for people with larger screens to multi-task by being able to set up multiple windows to be side by side. 

 Readability is also one of the reasons for enforced line indentation. 
 #1 I believe those who study typography would tell you that 66 characters per a line is supposed to be the most readable width for length. Even so, if you need to debug a machine remotely over an ssh session, most terminals default to 80 characters, 79 just fits, trying to work with anything wider becomes a real pain in such a case. You would also be suprised by the number of developers using vim + screen as a day to day environment. 
 #2 I am a programmer who has to deal with a lot of code on a daily basis. Open source and what has been developed in house. 

 As a programmer, I find it useful to have many source files open at once, and often organise my desktop on my (widescreen) monitor so that two source files are side by side. I might be programming in both, or just reading one and programming in the other. 

 I find it dissatisfying and frustrating when one of those source files is >120 characters in width, because it means I can't comfortably fit a line of code on a line of screen. It upsets formatting to line wrap. 

 I say '120' because that's the level to which I would get annoyed at code being wider than. After that many characters, you should be splitting across lines for readability, let alone coding standards. 

 I write code with 80 columns in mind. This is just so that when I do leak over that boundary, it's not such a bad thing. 
 #3 Much of the value of PEP-8 is to stop people arguing about inconsequential formatting rules, and get on with writing good, consistently formatted code. Sure, no one really thinks that 79 is optimal, but there's no obvious gain in changing it to 99 or 119 or whatever your preferred line length is. I think the choices are these: follow the rule and find a worthwhile cause to battle for, or provide some data that demonstrates how readability and productivity vary with line length. The latter would be extremely interesting, and would have a good chance of changing people's minds I think. 
 #4 Printing a monospaced font at default sizes is (on A4 paper) 80 columns by 66 lines. 
 #5 because if you push it beyond the 80th column it means that either you are writing a very long and complex line of code that does too much (and so you should refactor), or that you indented too much (and so you should refactor). 
 #6 79 characters (well, actually 72 characters) is where most text-based email readers linewrap. So code cut-and-pasted into an email is a lot more readable. 
 #7 I agree with Justin. To elaborate, overly long lines of code are harder to read by humans and some people might have console widths that only accommodate 80 characters per line. 

 The style recommendation is there to ensure that the code you write can be read by as many people as possible on as many platforms as possible and as comfortably as possible. 
 #8 Here's why I like the 80-character with: at work I use Vim and work on two files at a time on a monitor running at, I think, 1680x1040 (I can never remember). If the lines are any longer, I have trouble reading the files, even when using word wrap. Needless to say, I hate dealing with other people's code as they love long lines. 
 #9 Since whitespace has semantic meaning in Python, some methods of word wrapping could produce incorrect or ambiguous results, so there needs to be some limit to avoid those situations. An 80 character line length has been standard since we were using teletypes, so 79 characters seems like a pretty safe choice. 
 #10 Discipline. 

 Do you want be a good programmer (or tennis player or musician)? Well, you need discipline. 

 Standards promotes discipline and standards allow share your code. 

 Size can be 120 instead 80 and then another programmer can question why 120? I want 150. And so and so ad eternum .