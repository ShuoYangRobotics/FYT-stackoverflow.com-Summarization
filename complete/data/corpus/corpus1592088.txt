Question (ID-1592088): A simple framework for Google App Engine (like Sinatra)? Is there a simple 'wrapper' framework for appengine? Something like Sinatra or Juno ? So that one can write code like the following: 

 from juno import *

@route('/')
def index(web):
 return 'Juno says hi'

run()
 

 UPDATE : I want to use the Python API (not Java) in GAE. 
 Answers (Total-6): #0 There are several frameworks either specifically for App Engine, or well suited to it: 

 
 web.py - Not specifically for App Engine, but well suited. 
 Google App Engine Oil 
 web2py - Also not specifically for App Engine 
 pyxer 
 kay 
 tipfy 
 
 #1 No such framework has been released at this time, to the best of my knowledge (most people appear to be quite happy with Django I guess;-). You could try using Juno with this patch -- it doesn't seem to be quite ready for prime time, but then again, it IS a pretty tiny patch, maybe little more is needed to allow Juno to work entirely on GAE! 
 #2 I use web.py . It's really simple and doesn't get in your way. 

 This is how it looks: 

 import web

urls = (
 '/(.*)', 'hello'
)
app = web.application(urls, globals())

class hello:  
 def GET(self, name):
  if not name: 
   name = 'world'
  return 'Hello, ' + name + '!'

if __name__ == "__main__":
 app.run()
 
 #3 Another framework that I've been meaning to try out is Bloog . It is actually a blog engine for GAE but also provides a framework for developing other GAE apps. 
 #4 Bottle is one-single-file framework, so it's very easy to deploy it on GAE. 

 Bottle is similar with Sinatra, see the "hello world" example below: 

 Sinatra: 

 require 'sinatra'
get '/hi' do
 "Hello World!"
end
 

 Bottle: 

 from bottle import *
@get('/hi')
 def hi():
  return "Hello World!"
 

 Though I have to admit that Ruby is better for DSL. 
 #5 You should check out gaelyk . It's a lightweight framework on top of appengine that uses groovy.