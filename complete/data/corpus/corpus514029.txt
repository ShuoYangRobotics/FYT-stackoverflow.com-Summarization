Question (ID-514029): How to split a string by using [] in Python So from this string: 

 "name[id]" 

 I need this: 

 "id" 

 I used str.split ('[]'), but it didn't work. Does it only take a single delimiter? 
 Answers (Total-8): #0 Use a regular expression: 

 import re 
s = "name[id]"
re.find(r"\[(.*?)\]", s).group(1) # = 'id'
 

 str.split() takes a string on which to split input. For instance: 

 "i,split,on commas".split(',') # = ['i', 'split', 'on commas']
 

 The re module also allows you to split by regular expression, which can be very useful, and I think is what you meant to do. 

 import re
s = "name[id]"

# split by either a '[' or a ']'
re.split('\[|\]', s) # = ['name', 'id', '']
 
 #1 Either 

 "name[id]".split('[')[:-1] == "id"
 

 or 

 "name[id]".split('[')[1].split(']')[0] == "id"
 

 or 

 re.search(r'\[(.*?)\]',"name[id]").group(1) == "id"
 

 or 

 re.split(r'[\[\]]',"name[id]")[1] == "id"
 
 #2 Yes, the delimiter is the whole string argument passed to split. So your example would only split a string like 'name[]id[]'. 

 Try eg. something like: 

 'name[id]'.split('[', 1)[-1].split(']', 1)[0]

'name[id]'.split('[', 1)[-1].rstrip(']')
 
 #3 I'm not a fan of regex, but in cases like it often provides the best solution. 

 Triptych already recommended this, but I'd like to point out that the ?P&lt;> group assignment can be used to assign a match to a dictionary key: 

 &gt;&gt;&gt; m = re.match(r'.*\[(?P&lt;id&gt;\w+)\]', 'name[id]')
&gt;&gt;&gt; result_dict = m.groupdict()
&gt;&gt;&gt; result_dict
{'id': 'id'}
&gt;&gt;&gt;
 
 #4 You don't actually need regular expressions for this. The .index() function and string slicing will work fine. 

 Say we have: 

 &gt;&gt;&gt; s = 'name[id]'
 

 Then: 

 &gt;&gt;&gt; s[s.index('[')+1:s.index(']')]
'id'
 

 To me, this is easy to read: "start one character after the [ and finish before the ]". 
 #5 def between_brackets(text):
 return text.partition('[')[2].partition(']')[0]
 

 This will also work even if your string does not contain a [â€¦] construct, and it assumes an implied ] at the end in the case you have only a [ somewhere in the string. 
 #6 I'm new to python and this is an old question, but maybe this? 

 str.split('[')[1].strip(']') 
 #7 str.split uses the entire parameter to split a string. Try: 

 str.split("[")[1].split("]")[0]