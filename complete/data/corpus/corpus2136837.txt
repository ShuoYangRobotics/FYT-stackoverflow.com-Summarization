Question (ID-2136837): Process to convert simple Python script into Windows executable I wrote a script that will help a Windows user in her daily life. I want to simply send her the .exe and not ask her to install python, dlls or have to deal with any additional files. 

 I've read plenty of the stackoverflow entries regarding compiling Python scripts into executable files. I am a bit confused as there are many options but some seem dated (no updates since 2008) and none were simple enough for me not to be asking this right now after a few hours spent on this. 

 I'm hoping there's a better, up-to-date way to do this. 

 I looked into: 

 
 pylunch 
 py2exe 
 cx_Freeze 
 py2app (only for Mac) 
 pyinstaller 
 bbfreeze 
 

 but either I couldn't get them to work or couldn't understand how to get the result I need. The closest I got was with py2exe but it still gave me the MSVCR71.dll 

 I would appreciate a step-by-step answer as I was also unable to follow some of the tweaking answers here that require some prior understanding of how to use py2exe or some of the other tools. 

 I'm using Python 2.5 as one of the modules is only available for that version. 
 Answers (Total-6): #0 PyInstaller will create a single-file executable if you use the --onefile option (though what it actually does is extracts then runs itself). 

 There's a simple PyInstaller tutorial here . If you have any questions about using it, please post them... 
 #1 Using py2exe, include this in your setup.py: 

 from distutils.core import setup
import py2exe, sys, os

sys.argv.append('py2exe')

setup(
 options = {'py2exe': {'bundle_files': 1}},
 windows = [{'script': "YourScript.py"}],
 zipfile = None,
)
 

 then you can run it through command prompt / Idle, both works for me. Hope it helps 
 #2 I would join @Nicholas in recommending PyInstaller (with the --onefile flag), but be warned : do not use the "latest release", PyInstaller 1.3 -- it's years old. Use the "pre-release" 1.4, download it here -- or even better the code from the svn repo -- install SVN and run svn co http://svn.pyinstaller.org/trunk pyinstaller . 

 As @Nicholas implies, dynamic libraries cannot be run from the same file as the rest of the executable -- but fortunately they can be packed together with all the rest in a "self-unpacking" executable that will unpack itself into some temporary directory as needed; PyInstaller does a good job at this (and at many other things -- py2exe is more popular, but pyinstaller in my opinion is preferable in all other respects). 
 #3 you may want to see if your app can run under IronPython. If so, you can compile it to an exe 
 http://www.codeplex.com/IronPython 
 #4 The other way you can do is use any of those program and pack it to self extracting exe by using WinRAR or archiving softwares, set the main exe file to load after extract.
They will extract it to TEMP folder and will run the main exe for you. 
 #5 If you use IronPython (I'm developing a commercial software in it be aware that it requires .NET Framework 2.0 )