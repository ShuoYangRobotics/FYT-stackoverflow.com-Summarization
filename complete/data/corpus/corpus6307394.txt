Question (ID-6307394): removing dictonary entries with no values- Python If I have a dictionary, and I want to remove the entries in which the value is an empty list [] how would I go about doing that? 

 I tried: 

 for x in dict2.keys():
 if dict2[x] == []:
  dict2.keys().remove(x)
 

 but that didn't work. 
 Answers (Total-6): #0 .keys() provides access to the list of keys in the dictionary, but changes to it are not (necessarily) reflected in the dictionary. You need to use del dictionary[key] or dictionary.pop(key) to remove it. 

 Because of the behaviour in some version of Python, you need to create a of copy of the list of your keys for things to work right. So your code would work if written as: 

 for x in list(dict2.keys()):
 if dict2[x] == []:
  del dict2[x]
 
 #1 for x in dict2.keys():
 if dict2[x] == []:
  del dict2[x]
 
 #2 Newer versions of python support dict comprehensions: 

 dic = {i:j for i,j in dic.items() if j != []}
 

 These are much more readable than filter or for loops 
 #3 Clean one, but it will create copy of that dict: 

 dict(filter(lambda x: x[1] != [], d.iteritems()))
 
 #4 for key in [ k for (k,v) in dict2.items() if not v ]:
 del dict2[key]
 
 #5 With generator object instead of list: 

 a = {'1': [], 'f':[1,2,3]}
dict((data for data in a.iteritems() if data[1]))