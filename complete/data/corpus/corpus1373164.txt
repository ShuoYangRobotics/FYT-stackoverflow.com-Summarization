Question (ID-1373164): How do I do Variable Variables in Python? How do I accomplish this in Python? Here is an elaborative manual entry, for instance : http://us3.php.net/manual/en/language.variables.variable.php 

 I hear this is a bad idea in general though, and it is a security hole in PHP. I'm curious if anyone knows how as well? 
 Answers (Total-6): #0 Use dictionaries to accomplish this. Dictionaries are stores of keys and values. 

 &gt;&gt;&gt; dict = { 
 'x': 1, 
 'y': 2, 
 'z': 3
}
&gt;&gt;&gt; dict
{'y': 2, 'x': 1, 'z': 3}
&gt;&gt;&gt; dict['y']
2
 

 You can use variable key names to achieve the effect of variable variables without the security risk. 

 &gt;&gt;&gt; x = 'spam'
&gt;&gt;&gt; z = { x: 'eggs' }
&gt;&gt;&gt; z['spam']
'eggs'
 

 Make sense? 
 #1 Whenever you want to use variable variables, it's probably better to use a dictionary. So instead of writing 

 $foo = "bar"
$$foo = "baz"
 

 you write 

 mydict = {}
foo = "bar"
mydict[foo] = "baz"
 

 This way you won't accidentally overwrite previously existing variables (which is the security aspect) and you can have different "namespaces". 
 #2 can be easily accomplished with built-in getattr . 

 getattr(obj, 'foobar')
 
 #3 It's not a good idea. If you are accessing a global variable you can use globals() 

 &gt;&gt;&gt; a = 10
&gt;&gt;&gt; globals()['a']
10
 

 If you want to access a variable in the local scope you can use locals() 

 A better solution is to use getattr or store your variables in a dictionary and then access them by name. 
 #4 You could also use exec and eval: 

 newvar = 'x'
newvalue = 12
exec('%s=%d') % (newvar, newvalue)
#this will print 12
print x
#this will print 12 as well
print eval(newvar)
 
 #5 This is more proof of concept than usable and/or good practice (don't use list comprehensions for this), but works: 

 values = {
 'a': 1,
 'b': 2,
 'c': 3,
 'd': 4
}

whitelist = ['a', 'd']

[locals().update({k: v}) for k, v in (values).items() if k in whitelist]

print a # 1
print b # undefined
print c # undefined
print d # 4