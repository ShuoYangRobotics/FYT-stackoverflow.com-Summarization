Question (ID-8243188): Inserting a string into a list without getting split into characters I'm new to Python and can't find a way to insert a string into a list without it getting split into individual characters: 

 &gt;&gt;&gt; list=['hello','world']
&gt;&gt;&gt; list
['hello', 'world']
&gt;&gt;&gt; list[:0]='foo'
&gt;&gt;&gt; list
['f', 'o', 'o', 'hello', 'world']
 

 What should I do to have: 

 ['foo', 'hello', 'world']
 

 Searched the docs and the Web, but it has not been my day. 
 Answers (Total-6): #0 To add to the end of the list: 

 list.append('foo')
 

 To insert at the beginning: 

 list.insert(0, 'foo')
 
 #1 Don't use list as a variable name. It's a built in that you are masking. 

 To insert, use the insert function of lists. 

 l = ['hello','world']
l.insert(0, 'foo')
print l
['foo', 'hello', 'world']
 
 #2 &gt;&gt;&gt; li = ['aaa', 'bbb']
&gt;&gt;&gt; li.insert(0, 'wow!')
&gt;&gt;&gt; li
['wow!', 'aaa', 'bbb']
 
 #3 You have to add another list: 

 list[:0]=['foo']
 
 #4 Sticking to the method you are using to insert it, use 

 list[:0] = ['foo']
 

 http://docs.python.org/release/2.6.6/library/stdtypes.html#mutable-sequence-types 
 #5 Another option is using the overloaded + operator : 

 &gt;&gt;&gt; l = ['hello','world']
&gt;&gt;&gt; l = ['foo'] + l
&gt;&gt;&gt; l
['foo', 'hello', 'world']