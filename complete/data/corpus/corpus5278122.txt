Question (ID-5278122): Checking if all elements in a list are unique What is the best way (best as in the conventional way) of checking whether all elements in a list are unique? 

 My current approach using a Counter is: 

 &gt;&gt;&gt; x = [1, 1, 1, 2, 3, 4, 5, 6, 2]
&gt;&gt;&gt; counter = Counter(x)
&gt;&gt;&gt; for values in counter.itervalues():
  if values &gt; 1: 
   # do something
 

 Can I do better? 
 Answers (Total-6): #0 Not the most efficient, but straight forward and concise: 

 if len(x) &gt; len(set(x)):
 pass # do something
 

 Probably won't make much of a difference for short lists. 
 #1 An early-exit solution could be 

 def unique_values(g):
 s = set()
 for x in g:
  if x in s: return False
  s.add(x)
 return True
 

 however for small cases or if early-exiting is not the common case then I would expect len(x) != len(set(x)) being the fastest method. 
 #2 How about adding all the entries to a set and checking its length? 

 len(set(x)) == len(x)
 
 #3 Alternative to a set , you can use a dict . 

 len({}.fromkeys(x)) == len(x)
 
 #4 Here is a two-liner that will also do early exit: 

 &gt;&gt;&gt; def allUnique(x):
...  seen = set()
...  return not any(i in seen or seen.add(i) for i in x)
...
&gt;&gt;&gt; allUnique("ABCDEF")
True
&gt;&gt;&gt; allUnique("ABACDEF")
False
 

 If the elements of x aren't hashable, then you'll have to resort to using a list for seen : 

 &gt;&gt;&gt; def allUnique(x):
...  seen = list()
...  print not any(i in seen or seen.append(i) for i in x)
...
&gt;&gt;&gt; allUnique([list("ABC"), list("DEF")])
True
&gt;&gt;&gt; allUnique([list("ABC"), list("DEF"), list("ABC")])
False
 
 #5 You can use Yan's syntax (len(x) > len(set(x))), but instead of set(x), define a function: 

 def f5(seq, idfun=None): 
 # order preserving
 if idfun is None:
  def idfun(x): return x
 seen = {}
 result = []
 for item in seq:
  marker = idfun(item)
  # in old Python versions:
  # if seen.has_key(marker)
  # but in new ones:
  if marker in seen: continue
  seen[marker] = 1
  result.append(item)
 return result
 

 and do len(x) > len(f5(x)). This will be fast and is also order preserving. 

 Code there is taken from: http://www.peterbe.com/plog/uniqifiers-benchmark