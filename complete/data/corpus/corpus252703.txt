Question (ID-252703): Python - append vs. extend What is the difference between the list methods append and extend ? 
 Answers (Total-6): #0 append adds an element to a list, extend concatenates lists together. 

 &gt;&gt;&gt; li = ['a', 'b', 'mpilgrim', 'z', 'example']
&gt;&gt;&gt; li
['a', 'b', 'mpilgrim', 'z', 'example']
&gt;&gt;&gt; li.append("new")    
&gt;&gt;&gt; li
['a', 'b', 'mpilgrim', 'z', 'example', 'new']
&gt;&gt;&gt; li.insert(2, "new")   
&gt;&gt;&gt; li
['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new']
&gt;&gt;&gt; li.extend(["two", "elements"]) 
&gt;&gt;&gt; li
['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new', 'two', 'elements']
 

 From Dive into Python . 
 #1 append: 

 x = [1, 2, 3]
x.append([4, 5])
print (x)
 

 gives you [1, 2, 3, [4, 5]] 

 extend: 

 x = [1, 2, 3]
x.extend([4, 5])
print (x)
[1, 2, 3, 4, 5]
 
 #2 And in this context it can also be good to remember that strings are also iterable. 

 &gt;&gt;&gt; a = [1, 2]
&gt;&gt;&gt; a
[1, 2]
&gt;&gt;&gt; a.extend('hey')
&gt;&gt;&gt; a
[1, 2, 'h', 'e', 'y']
 
 #3 Good answers, but don't forget, any iterable will do for extend (not just list): 

 l.extend(xrange(5))
 
 #4 append appends a single element. extend appends a list of elements. 

 Note that if you pass a list to append, it still adds one element: 

 &gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; a.append([4, 5, 6])
&gt;&gt;&gt; a
[1, 2, 3, [4, 5, 6]]
 
 #5 Like Ali A said, any iterable will do for the extend,
here is an example for dictionary argument, 

 &gt;&gt;&gt; li=[1,2,3]
&gt;&gt;&gt; li.extend({4:5,6:7})
&gt;&gt;&gt; li
[1, 2, 3, 4, 6]
&gt;&gt;&gt;
 

 as you see it ,only keys are added to the list.