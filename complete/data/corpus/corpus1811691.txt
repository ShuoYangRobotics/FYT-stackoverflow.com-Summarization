Question (ID-1811691): running an outside program (executable) in python? I just started working on python and I have been trying to run an outside executable form python.
I have an executable for a program written in Fortran. Lets say the name for the executable is flow.exe. And my executable is lacated in C:\Documents and Settings\flow_model
I tried both os.system and popen commands but so far couldnt make it work.
The following code seems like opens the command window but wouldnt execute the model. 

 # Import system modules
import sys, string, os, arcgisscripting
os.system("C:/Documents and Settings/flow_model/flow.exe")
 

 Any suggestions out there? Any help would be greatly appreciated. 
 Answers (Total-8): #0 Is that trying to execute C:\Documents with arguments of "and", "Settings/flow_model/flow.exe" ? 

 Also, you might consider subprocess.call() 
 #1 Try 

 import subprocess
subprocess.call(["C:/Documents and Settings/flow_model/flow.exe"])
 
 #2 Those whitespaces can really be a bother:-(. Try os.chdir('C:/Documents\ and\ Settings/') followed by relative paths for os.system , subprocess methods, or whatever... 

 If best-effort attempts to bypass the whitespaces-in-path hurdle keep failing, then my next best suggestion is to avoid having blanks in your crucial paths. Couldn't you make a blanks-less directory, copy the crucial .exe file there, and try that ? Are those havoc-wrecking space absolutely essential to your well-being...? 
 #3 your usage is correct, i bet that your external program, flow.exe, needs to be executed in its directory because it accesses some external files stored there. 

 so you might try: 

 import sys, string, os, arcgisscripting
os.chdir( 'c:\\documents and settings\\flow_model' )
os.system( '"C:\\Documents and Settings\\flow_model\\flow.exe"' )
 

 (beware of the double quotes inside the single quotes...) 
 #4 That's the correct usage, but perhaps the spaces in the path name are messing things up for some reason. 

 You may want to run the program under cmd.exe as well so you can see any output from flow.exe that might be indicating an error. 
 #5 I like more subprocess.Popen instead of call . It gives you more control. See here for details. 
 #6 I'd try inserting an 'r' in front of your path if I were you, to indicate that its a raw string - and then you won't have to use forward slashes, for example: 

 os.system(r"C:\Documents and Settings\flow_model\flow.exe")
 
 #7 If it were me, I'd put the exe in the root diretcory (C:) and see if it works like that. If so, it's probably the (already mentioned) spaces in the directory name. If not, it may be some environment variables. 

 Also, try to check you stderr (using an earlier answer by int3): 

 import subprocess
process = subprocess.Popen(["C:/Documents and Settings/flow_model/flow.exe"], \
       stderr=subprocess.PIPE)
if process.stderr:
 print process.stderr.readlines()
 

 The code might not be entirely correct as I usually don't use Popen or windows, but should give the idea. It might well be that the error message is on the error stream.