Question (ID-8719643): google python exercises I'm watching the instructional videos on you youtube and started doing some of the exercises at http://code.google.com/edu/languages/google-python-class but I'm puzzled by the below problem in the string1.py file.
What I can't seem to understand is, what is the "s" in both_ends(s): doing? 

 # B. both_ends
# Given a string s, return a string made of the first 2
# and the last 2 chars of the original string,
# so 'spring' yields 'spng'. However, if the string length
# is less than 2, return instead the empty string.

def both_ends(s):
 # +++your code here+++
 # LAB(begin solution)
 if len(s) &lt; 2:
 return ''
 first2 = s[0:2]
 last2 = s[-2:]
 return first2 + last2
 

 At the bottom of strings1.py there are some functions: 

 def main()

 print 'both_ends'
 test(both_ends('spring'), 'spng')

if __name__ == '__main__':
 main()
 

 So how does the program know to substitute "spring" for (s) or is that not what it's doing? I can post the entire file if need be. It's only 140 lines. 
 Answers (Total-6): #0 'spring' is the literal string passed as a parameter into function both_ends(), and 's' is the formal parameter to the function. Replacing a formal parameter with an actual parameter is performed when the function is called.
The 'test()' function is just there to confirm that the function behaves as expected. 
 #1 When you call a function, the values you give the function are assigned to the corresponding arguments in the function header. In code: 

 def my_func(a): #function header; first argument is called a. 
    #a is not a string, but a variable.
 print a  #do something with the argument

my_func(20)  #calling my_func with a value of 20. 20 is assigned to a in the
    #body of the function.
 
 #2 s is a variable that we presume to hold a string. We pass 'spring' in through as a parameter. 
 #3 s in def both_ends(s) is the parameter for the input string. The length of this string is checked with the call to len(s) &lt; 2 , and various characters in the string are accessed by position with s[0:2] and s[-2:] 
 #4 See http://docs.python.org/tutorial/controlflow.html#defining-functions for specifics. Also the tutorial at http://docs.python.org/tutorial/index.html is pretty good - I mostly learnt from it. 
 #5 s is the parameter to the function, but you plug in real strings like hello or world into the function instead of just the letter s . Think of it like a math function: you have f(x) = x + 5 . When you plug in a number, say 2 , you get f(2) = 2 + 5 . That's exactly what happens with the both_ends function. To make it simpler, here's some code: 

 def f(x):
 return x + 5

f(2)
 

 The way you plug into the function in the code here is the same way you plug a string into your original function.