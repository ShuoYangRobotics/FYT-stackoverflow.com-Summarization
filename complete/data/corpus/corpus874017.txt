Question (ID-874017): Python: load words from file into a set I have a simple text file with several thousands of words, each in its own line, e.g. 

 aardvark
hello
piper
 

 I use the following code to load the words into a set (I need the list of words to test membership, so set is the data structure I chose): 

 my_set = set(open('filename.txt'))
 

 The above code produces a set with the following entries (each word is followed by a space and new-line character: 

 ("aardvark \n", "hello \n", "piper \n")
 

 What's the simplest way to load the file into a set but get rid of the space and \n? 

 Thanks 
 Answers (Total-6): #0 The strip() method of strings removes whitespace from both ends. 

 set(line.strip() for line in open('filename.txt'))
 
 #1 my_set = set(map(str.strip, open('filename.txt')))
 
 #2 if your words doesn't contain space i.e. one word per line
or may be you can have multiple words per line just use 

 words= set(open('filename.txt').read().split())
 
 #3 To remove only the right hand spaces. 

 set(map(str.rstrip, open('filename.txt')))
 
 #4 with open("filename.txt") as f:
 mySet = map(str.rstrip, f)
 

 If you want to use this in Python 2.5, you need 

 from __future__ import with_statement
 
 #5 with open("filename.txt") as f:
 s = set([line.rstrip('\n') for line in f])