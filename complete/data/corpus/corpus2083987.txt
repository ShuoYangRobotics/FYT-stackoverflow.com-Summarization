Question (ID-2083987): How to retry after exception in python? I have a loop starting with for i in range(0, 100), and inside the loop, normally it would run correctly, but sometimes due to network conditions it would fail. Currently i have it set so that when failed, it would continue in except clause (continue on to the next number for i). I was wondering whether it is possible for me to reassign the same number to i and run through that the failed iteration of loop again. 

 Thanks a lot! 

 Jason 
 Answers (Total-7): #0 Do a while True inside your for loop, put your try code inside, and break from that while loop only when your code succeeds. 

 for i in range(0,100):
 while True:
  try:
   // do stuff
  except:
   continue
  break
 
 #1 The clearest way would be to explicitly set i . For example: 

 i = 0
while i &lt; 100:
 try:
  # do stuff
  i += 1
 except MyException:
  continue
 
 #2 This question may be helpful: is there a pythonic way to try something up to a maximum number of times? 
 #3 The more "functional" approach without using those ugly while loops: 

 def tryAgain(retries=0):
 if retries &gt; 10: return
 try:
  # Do stuff
 except:
  retries+=1
  tryAgain(retries)

tryAgain()
 
 #4 increment your loop variable only when the try clause succeeds 
 #5 There is something similar in the Python Decorator Library . 

 Please bear in mind that it does not test for exceptions, but the return value. It retries until the decorated function returns True. 

 A slightly modified version should do the trick. 
 #6 I prefer to limit the number of retries, so that if there's a problem with that specific item you will eventually continue onto the next one, thus: 

 for i in range(100):
 for attempt in range(10):
 try:
  # do thing
 except:
  # perhaps reconnect, etc.
 else:
  break
 else:
 # we failed all the attempts - deal with the consequences.