Question (ID-3159155): How to remove all integer values from a list in python I am just a beginner in python and I want to know is it possible to remove all the integer values from a list? For example the document goes like 

 ['1','introduction','to','molecular','8','the','learning','module','5']
 

 After the removal I want the document to look like: 

 ['introduction','to','molecular','the','learning','module']
 
 Answers (Total-6): #0 To remove all integers, do this: 

 no_integers = [x for x in mylist if not isinstance(x, int)]
 

 However, your example list does not actually contain integers. It contains only strings, some of which are composed only of digits. To filter those out, do the following: 

 no_integers = [x for x in mylist if not (x.isdigit() 
           or x[0] == '-' and x[1:].isdigit())]
 

 Alternately: 

 is_integer = lambda s: s.isdigit() or (x[0] == '-' and x[1:].isdigit())
no_integers = filter(is_integer, mylist)
 
 #1 You can do this, too: 

 def int_filter( someList ):
 for v in someList:
  try:
   int(v)
   continue # Skip these
  except ValueError:
   yield v # Keep these

list( int_filter( items ))
 

 Why? Because int is better than trying to write rules or regular expressions to recognize string values that encode an integer. 
 #2 None of the items in your list are integers. They are strings which contain only digits. So you can use the isdigit string method to filter out these items. 

 items = ['1','introduction','to','molecular','8','the','learning','module','5']

new_items = [item for item in items if not item.isdigit()]

print new_items
 

 Link to documentation: http://docs.python.org/library/stdtypes.html#str.isdigit 
 #3 I personally like filter. I think it can help keep code readable and conceptually simple if used in a judicious way: 

 x = ['1','introduction','to','molecular','8','the','learning','module','5'] 
x = filter(lambda i: not str.isdigit(i), x)
 

 or 

 from itertools import ifilterfalse
x = ifilterfalse(str.isdigit, x)
 

 Note the second returns an iterator. 
 #4 You can also use lambdas (and, obviously, recursion), to achieve that (Python 3 needed): 

 isNumber = lambda s: False if ( not( s[0].isdigit() ) and s[0]!='+' and s[0]!='-' ) else isNumberBody( s[ 1:] )

 isNumberBody = lambda s: True if len( s ) == 0 else ( False if ( not( s[0].isdigit() ) and s[0]!='.' ) else isNumberBody( s[ 1:] ) )

 removeNumbers = lambda s: [] if len( s ) == 0 else ( ( [s[0]] + removeNumbers(s[1:]) ) if ( not( isInteger( s[0] ) ) ) else [] + removeNumbers( s[ 1:] ) )

 l = removeNumbers(["hello", "-1", "2", "world", "+23.45"])
 print( l )
 

 Result (displayed from 'l') will be: ['hello', 'world'] 
 #5 Please do not use this way to remove items from a list: (edited after comment by THC4k) 

 &gt;&gt;&gt; li = ['1','introduction','to','molecular','8','the','learning','module','5']
&gt;&gt;&gt; for item in li:
  if item.isdigit():
   li.remove(item)

&gt;&gt;&gt; print li
['introduction', 'to', 'molecular', 'the', 'learning', 'module']
 

 This will not work since changing a list while iterating over it will confuse the for-loop.
Also, item.isdigit() will not work if the item is a string containing a negative integer, as noted by razpeitia.