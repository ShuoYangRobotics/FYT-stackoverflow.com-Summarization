Question (ID-2084832): How can I create 1000 files that I can use to test a script? I would like to create 1000+ text files with some text to test a script, how to create this much if text files at a go using shell script or Perl. Please could anyone help me. 
 Answers (Total-8): #0 #!/bin/bash
seq 1 1000 | split -l 1 -a 3 -d - file
 

 Above will create 1000 files with each file having a number from 1 to 1000. The files will be named file000 ... file999 
 #1 for i in {0001..1000}
do
 echo "some text" &gt; "file_${i}.txt"
done
 

 or if you want to use Python &lt;2.6 

 for x in range(1000):
 open("file%03d.txt" % x,"w").write("some text")
 
 #2 In Perl: 

 use strict;
use warnings;

for my $i (1..1000) {
 open(my $out,"&gt;",sprintf("file%04d",$i));
 print $out "some text\n";
 close $out;
}
 

 Why the first 2 lines? Because they are good practice so I use them even in 1-shot programs like these. 

 Regards,
Offer 
 #3 #!/bin/bash

for suf in $(seq -w 1000)
do
  cat &lt;&lt; EOF &gt; myfile.$suf
  this is my text file
  there are many like it
  but this one is mine.
EOF
done
 
 #4 For variety: 

 #!/usr/bin/perl

use strict; use warnings;
use File::Slurp;

write_file $_, "$_\n" for map sprintf('file%04d.txt', $_), 1 .. 1000;
 
 #5 I don't know in shell or perl but in python would be: 

 #!/usr/bin/python

for i in xrange(1000):
 with open('file%0.3d' %i,'w') as fd:
  fd.write('some text')
 

 I think is pretty straightforward what it does. 
 #6 You can use only Bash with no externals and still be able to pad the numbers so the filenames sort properly (if needed): 

 read -r -d '' text &lt;&lt; 'EOF'
Some text for
my files
EOF

for i in {1..1000}
do
 printf -v filename "file%04d" "$i"
 echo "$text" &gt; "$filename"
done
 

 Bash 4 can do it like this: 

 for filename in file{0001..1000}; do echo $text &gt; $filename; done
 

 Both versions produce filenames like "file0001" and "file1000". 
 #7 Here is a short command-line Perl program. 

 perl -E'say $_ $_ for grep {open $_, "&gt;f$_"} 1..1000'