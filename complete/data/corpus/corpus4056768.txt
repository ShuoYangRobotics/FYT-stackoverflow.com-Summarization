Question (ID-4056768): How to declare array of zeros in python (or an array of a certain size) I am trying to build a histogram of counts... so I create buckets.
I know I could just go through and append a bunch of zeros i.e something along these lines: 

 buckets = [];
for i in xrange(0,100):
 buckets.append(0);
 

 is there a more elegant way to do it? I feel like there should be a way to just declare an array of a certain size. 

 I know numpy has numpy.zeros but I want the more general solution 
 Answers (Total-7): #0 buckets = [0] * 100
 
 #1 As this is the first result on Google and here for some searches, I'd like to include same declaration, but for multidimensional array: 

 buckets = [ [0] * 100 ] * 100
 

 it's a 100x100 array filled with zero's 
 #2 buckets = [0]*100 
 #3 The simplest solution would be 

 "\x00" * size # for a buffer of binary zeros
[0] * size # for a list of integer zeros
 

 In general you should use more pythonic code like list comprehension (in your example: [0 for unused in xrange(100)] ) or using string.join for buffers. 
 #4 use numpy 

 import numpy
zarray = numpy.zeros(100)
 

 And then use the Histogram library function 
 #5 Just for completeness: To declare a multidimensional list of zeros in python you have to use a list comprehension like this: 

 buckets = [[0 for col in range(5)] for row in range(10)]
 

 to avoid reference sharing between the rows. 

 This looks more clumsy than chester1000's code, but is essential if the values are supposed to be changed later. See the Python FAQ for more details. 
 #6 Depending on what you're actually going to do with the data after it's collected, collections.defaultdict(int) might be useful.