Question (ID-3173320): Text Progress Bar in the Console Is there a good way to do the following? 

 I wrote a simple console app to upload and download files from an FTP server using the ftplib. 

 Each time some data chunks are downloaded, I want to update a text progress bar, even if it's just a number. 

 But I don't want to erase all the text that's been printed to the console. (Doing a "clear" and then printing the updated percentage.) 

 Thanks for any suggestions. New to python so even less of a clue on what to do. :P 
 Answers (Total-8): #0 Writing '\r' will move the cursor back to the beginning of the line. 

 This displays a percentage counter: 

 &gt;&gt;&gt; for i in range(100):
... time.sleep(1)
... sys.stdout.write("\r%d%%" %i) # or print &gt;&gt; sys.stdout, "\r%d%%" %i,
... sys.stdout.flush()
... 
 
 #1 Write a \r to the console. That is a "carriage return" which causes all text after it to be echoed at the beginning of the line. Something like: 

 def update_progress(progress):
 print '\r[{0}] {1}%'.format('#'*(progress/10), progress)
 

 which will give you something like: [ ########## ] 100% 
 #2 Here's a nice example of a progressbar written in Python: http://nadiana.com/animated-terminal-progress-bar-in-python 

 But if you want to write it yourself. You could use the curses module to make things easier :) 

 [edit]
Perhaps easier is not the word for curses. But if you want to create a full-blown cui than curses takes care of a lot of stuff for you. 
 #3 http://code.activestate.com/recipes/168639-progress-bar-class/ (2002)
 http://code.activestate.com/recipes/299207-console-text-progress-indicator-class/ (2004)
 http://pypi.python.org/pypi/progressbar (2006) 

 And a lot of tutorials waiting to be googled. 
 #4 Run this at the Python command line ( not in any IDE or development environment): 

 &gt;&gt;&gt; import threading
&gt;&gt;&gt; for i in range(50+1):
... threading._sleep(0.5)
... print "\r%3d" % i, ('='*i)+('-'*(50-i)),
 

 Works fine on my Windows system. 
 #5 import sys
def progresssbar():
   for i in range(100):
   time.sleep(1)
   sys.stdout.write("%i\r" % i)

progressbar()
 

 If the code is not in the function then stdout prints the data and 
the length of the data.Don't know why stdout doesn't in a function. 
 #6 I am using this one from reddit I like it because it can print progress for every item in one line, and it shouldn't erase printouts from program. 
 #7 Check this library: clint 

 it has a lot of features including a progress bar: 

 from time import sleep 
from random import random 
from clint.textui import progress 
if __name__ == '__main__':
 for i in progress.bar(range(100)):
  sleep(random() * 0.2)

 for i in progress.dots(range(100)):
  sleep(random() * 0.2)
 

 this link provides a quick overview of its features