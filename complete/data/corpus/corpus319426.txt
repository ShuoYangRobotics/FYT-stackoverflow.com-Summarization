Question (ID-319426): How do I do a case insensitive string comparison in Python? What's the best way to do case insensitive string comparison in Python? 

 I would like to encapsulate comparison of a regular strings to a repository string using in a very simple and pythonic way. I also would like to have ability to look up values in a dict hashed by strings using regular python strings. Much obliged for advice. 
 Answers (Total-7): #0 string1 = 'Hello'
string2 = 'hello'

if string1.lower() == string2.lower():
 print "The strings are the same (case insensitive)"
else:
 print "The strings are not the same (case insensitive)"
 
 #1 How about converting to lowercase first? you can use string.lower() . 
 #2 def insenStringCompare(s1, s2):
 """ Method that takes two strings and returns True or False, based
  on if they are equal, regardless of case."""
 try:
  return s1.lower() == s2.lower()
 except AttributeError:
  print "Please only pass strings into this method."
  print "You passed a %s and %s" % (s1.__class__, s2.__class__)
 
 #3 The usual approach is to uppercase the strings or lower case them for the lookups and comparisons. For example: 

 &gt;&gt;&gt; "hello".upper() == "HELLO".upper()
True
&gt;&gt;&gt;
 
 #4 import re
re.match('what to find', 'text to search through', re.IGNORECASE) is None
 
 #5 lower(string1) == lower(string2)
lower(string1) &lt; lower(string2)
lower(string1) &gt; lower(string2)
 
 #6 You could subclass the builtin "str" if you need to compare a lot and dont want to clutter your code all over with .lower() 

 class ci_str(str):
 def __eq__(self, other):
  return self.lower() == other.lower()

a = ci_str("Hello World")
b = ci_str("hello world")
c = ci_str("foo bar")
print a == b
print b == c

&gt;&gt;&gt; 
True
False