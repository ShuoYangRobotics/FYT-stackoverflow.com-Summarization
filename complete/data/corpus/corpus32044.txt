Question (ID-32044): How can I render a tree structure (recursive) using a django template? I have a tree structure in memory that I would like to render in HTML using a Django template. 

 class Node():
 name = "node name"
 children = []
 

 There will be some object root that is a Node , and children is a list of Node s. root will be passed in the content of the template. 

 I have found this one discussion of how this might be achieved, but the poster suggests this might not be good in a production environment. 

 Does anybody know of a better way? 
 Answers (Total-6): #0 this might be way more than you need, but there is a django module called 'mptt' - this stores a hierarchical tree structure in an sql database, and includes templates for display in the view code. you might be able to find something useful there. 

 here's the link : django-mptt 
 #1 I think the canonical answer is: "Don't". 

 What you should probably do instead is unravel the thing in your view code, so it's just a matter of iterating over (in|de)dents in the template. I think I'd do it by appending indents and dedents to a list while recursing through the tree and then sending that "travelogue" list to the template. (the template would then insert &lt;li&gt; and &lt;/li&gt; from that list, creating the recursive structure with "understanding" it.) 

 I'm also pretty sure recursively including template files is really a wrong way to do it... 
 #2 I had the same problem and I wrote a template tag. I know there are other tags like this out there but I needed to learn to make custom tags anyway :) I think it turned out pretty well. 

 Read the docstring for usage instructions. 

 http://jordanovski.com/a-recursive-django-template-tag 
 #3 Django has a built in template helper for this exact scenario: 

 http://www.djangoproject.com/documentation/templates/#unordered-list 
 #4 I had a similar issue, however I had first implemented the solution using JavaScript, and just afterwards considered how I would have done the same thing in django templates. 

 I used the serializer utility to turn a list off models into json, and used the json data as a basis for my hierarchy. 
 #5 here is a simple snippet that does the job 

 http://jeanphi.fr/posts/2010/10/29/reordering-datas-extracted-using-postgres-recursive/