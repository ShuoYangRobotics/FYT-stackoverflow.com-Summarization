Question (ID-1798465): Python Remove last 3 characters of a string I'm trying to remove the last 3 characters from a string in python, I don't know what these characters are so I can't use rstrip , I also need to remove any white space and convert to upper-case 

 an example would be: 

 foo = "Bs12 3ab"
foo.replace(" ", "").rstrip(foo[-3:]).upper()
 

 This works and gives me BS12 which is what I want, however if the last 4th &amp; 3rd characters are the same I loose both eg if foo = "BS11 1AA" I just get 'BS' 

 examples of foo could be: 

 BS1 1AB
bs11ab
BS111ab
 

 The string could be 6 or 7 characters and I need to drop the last 3 (assuming no white space) 

 Any tips? 
 Answers (Total-9): #0 Removing any and all whitespace: 

 foo = ''.join(foo.split())
 

 Removing last three characters: 

 foo = foo[:-3]
 

 Converting to capital letters: 

 foo = foo.upper()
 

 All of that code in one line: 

 foo = ''.join(foo.split())[:-3].upper()
 
 #1 It doesn't work as you expect because strip is character based. You need to do this instead: 

 foo = foo.replace(' ', '')[:-3].upper()
 
 #2 &gt;&gt;&gt; foo = "Bs12 3ab"
&gt;&gt;&gt; foo[:-3]
'Bs12 '
&gt;&gt;&gt; foo[:-3].strip()
'Bs12'
&gt;&gt;&gt; foo[:-3].strip().replace(" ","")
'Bs12'
&gt;&gt;&gt; foo[:-3].strip().replace(" ","").upper()
'BS12'
 
 #3 What's wrong with this? 

 foo.replace(" ", "")[:-3].upper()
 
 #4 &gt;&gt;&gt; foo = 'BS1 1AB'
&gt;&gt;&gt; foo.replace(" ", "").rstrip()[:-3].upper()
'BS1'
 
 #5 You might have misunderstood rstrip slightly, it strips not a string but any character in the string you specify. 

 Like this: 

 &gt;&gt;&gt; text = "xxxxcbaabc"
&gt;&gt;&gt; text.rstrip("abc")
'xxxx'
 

 So instead, just use 

 text = text[:-3]
 

 (after replacing whitespace with nothing) 
 #6 Aren't you performing the operations in the wrong order? You requirement seems to be foo[:-3].replace(" ", "").upper() 
 #7 I try to avoid regular expressions, but this appears to work: 

 string = re.sub("\s","",(string.lower()))[:-3] 
 #8 It some what depends on your definition of whitespace. I would generally call whitespace to be spaces, tabs, line breaks and carriage returns. If this is your definition you want to use a regex with \s to replace all whitespace charactors: 

 import re

def myCleaner(foo):
 print 'dirty: ', foo
 foo = re.sub(r'\s', '', foo)
 foo = foo[:-3]
 foo = foo.upper()
 print 'clean:', foo
 print

myCleaner("BS1 1AB")
myCleaner("bs11ab")
myCleaner("BS111ab")