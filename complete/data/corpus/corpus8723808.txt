Question (ID-8723808): How to convert string to seo-url? I would like to convert a accented string to a seo-url ... 

 For instance:
"Le bébé (de 4 ans) a également un étrange "rire"" to :
"le-bebe-de-4-ans-a-egalement-un-etrange-rire" 

 Any solution, please ? 

 Thanks ! 
 Answers (Total-6): #0 This is what I use: 

 def _doStringSEOptiomization(objectName,pageName,lang,objectId):
"""
Prende in input il nome di un'offerta e svolge dei passi:
1- Trasforma tutte le variazioni delle vocali
 in vocali normali
2- Attraverso una serie di REGEX, elimina i caratteri non desiderati e torna 
 una stringa da inserire in un link adatto ai motori di ricerca e alle indicizzazioni
"""

try:
 import re #importo il modulo per le REGEX
 Speaker.log_debug(GREEN("core.ws_site.do_sites_offers_data_redux._doStringSEOptiomization() input: objectName=%s, pageName=%s, lang=%s, objectId=%s" % (objectName,pageName,lang,objectId)))

 #mappa dei caratteri html-entity e unicode
 vocalMap = { 'a' : ['&amp;agrave;','&amp;aacute;','&amp;acirc;','&amp;atilde;','&amp;auml;','&amp;aring;','&amp;aelig;','&amp;#224;','&amp;#225;','&amp;#226;','&amp;#227;','&amp;#228;','&amp;#229;','&amp;#257;','&amp;#230;'],
     'e' : ['&amp;egrave;','&amp;eacute;','&amp;ecirc;','&amp;euml;','&amp;#232;','&amp;#233;','&amp;#234;','&amp;#235;','&amp;#275;'],
     'i' : ['&amp;igrave;','&amp;iacute;','&amp;icirc;','&amp;iuml;','&amp;#236;','&amp;#237;','&amp;#238;','&amp;#239;','&amp;#299;'],
     'o' : ['&amp;ograve;','&amp;oacute;','&amp;ocirc;','&amp;oelig;','&amp;otilde;','&amp;ouml;','&amp;#242;','&amp;#243;','&amp;#244;','&amp;#339;','&amp;#245;','&amp;#246;','&amp;#333;'],
     'u' : ['&amp;ugrave;','&amp;uacute;','&amp;ucirc;','&amp;uuml;','&amp;#249;','&amp;#250;','&amp;#251;','&amp;#252;','&amp;#363;']
    }

 objectName = objectName.lower() #trasformo la stringa di partenza in caratteri minuscoli

 for vocale, lista in vocalMap.iteritems(): #per ogni elemento della mappa avrà una chiave ed una lista
  for elemento in lista: #itero su tutti gli elementi della lista
   objectName = objectName.replace(elemento,vocale) #sostituisco nel nome dell'offerta, la vocale all' HTML-entity

 objectName = objectName.replace("/","-")

 objectName = re.sub("[^a-z0-9_\s-]","",objectName)  #######################################
 objectName = re.sub("[\s-]+"," ",objectName)   #strippo tutti i caratteri non voluti:# 
 objectName = re.sub("[\s_]","-",objectName)   #######################################

 objectName = pageName+"--"+objectName
 objectName += "-"+lang+"-"+str(objectId) #aggiungo la lingua e l'id dell'offerta

except Exception,s:
 Speaker.log_error("_doStringSEOptiomization(): Error=%s"%RED(s))

return objectName 
 

 You have to adapt it for your situation. 
 #1 This might (or might not) be enough: 

 import re
import unidecode

def normalized_id(title):
 title = unidecode.unidecode(title).lower()
 return re.sub('\W+', '-', title.replace("'", '')).strip('-')
 
 #2 If you have Django around, you can use its defaultfilter slugify (or adapt it for your needs). 
 #3 [~]$ python
Python 2.7.1 (r271:86882M, Nov 30 2010, 10:35:34) 
[GCC 4.2.1 (Apple Inc. build 5664)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import unicodedata
&gt;&gt;&gt; import re
&gt;&gt;&gt; def seo_string(x):
...  r = unicodedata.normalize('NFKD',x).encode('ascii','ignore')
...  r = unicode(re.sub('[^\w\s-]','',x).strip().lower())
...  return re.sub('[-\s]+','-',r)
... 
&gt;&gt;&gt; seo_string(u'Le bébé (de 4 ans) a également un étrange "rire"')
u'le-bb-de-4-ans-a-galement-un-trange-rire'
 

 With thanks to the great slugify of django's built-in filters, however it won't do replacement of é with e like the solution posted by @doncallisto 
 #4 Here are the several ways to do so: Generating Slugs By Armin Ronacher. 
 #5 &gt;&gt;&gt; a = u'Le bébé (de 4 ans) a également un étrange "rire"'
&gt;&gt;&gt; r = unicodedata.normalize('NFKD',a).encode('cp1256','ignore')
&gt;&gt;&gt; r = unicode(re.sub('[^\w\s-]','',r).strip().lower())
&gt;&gt;&gt; r = re.sub('[-\s]+','-',r)
&gt;&gt;&gt; print r
le-bebe-de-4-ans-a-egalement-un-etrange-rire
 

 I use cp1256 (latin 1) to handle accented characters... 

 Perfect ! Thanks a lot !