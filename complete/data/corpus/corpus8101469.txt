Question (ID-8101469): Replacing parts of the string Actually my question is quite simple:
I have a string like: 101222_1_1_ab ;
I hope to change it into: 101222_1_ab_1 

 What bash commands should I use? and what to do in python?
THanks 
 Answers (Total-7): #0 The easiest mechanism I can think of is to use awk(1) : 

 $ echo 101222_1_1_ab | awk -F_ '{print $1 "_" $2 "_" $4 "_" $3;}'
101222_1_ab_1
 

 The -F_ asks awk(1) to split fields apart on underscores. 

 Update Glenn Jackman recommends the following, far more legible, version: 

 awk -F_ -v OFS=_ '{print $1, $2, $4, $3}'
 
 #1 echo 101222_1_1_ab | sed -r -e 's/(.*_.*_)(.*)_(.*)/\1\3_\2/'
 
 #2 This might work for you: 

 # echo "101222_1_1_ab" | sed -re 's/(_[^_]+)(_.*)$/\2\1/'
101222_1_ab_1
 
 #3 FWIW, I would use awk for this. 

 $ echo 101222_1_1_ab | awk 'BEGIN {FS = OFS = "_"} {print $1, $2, $4, $3}' 
101222_1_ab_1
 

 But since you ask: 

 
 and what to do in python? 
 

 &gt;&gt;&gt; s = '101222_1_1_ab'
&gt;&gt;&gt; s.split('_')
['101222', '1', '1', 'ab']
&gt;&gt;&gt; l = s.split('_')
&gt;&gt;&gt; l[0], l[1], l[3], l[2]
('101222', '1', 'ab', '1')
&gt;&gt;&gt; '_'.join((l[0], l[1], l[3], l[2]))
'101222_1_ab_1'
 
 #4 If you want to use sed, this splits at the underscores and rearranges: 

 echo 101222_1_1_ab | sed 's/\(.*_.*\)_\(.*\)_\(.*\)/\1_\3_\2/'
 

 Edit As @dmitry.malikov points out, the -r option can make it much more readable: 

 echo 101222_1_1_ab | sed -r 's/(.*_.*)_(.*)_(.*)/\1_\3_\2/'
 
 #5 Just with bash: 

 word=101222_1_1_ab
new=$(
 IFS=_
 parts=($word)
 tmp=${parts[2]}; parts[2]=${parts[3]}; parts[3]=$tmp
 printf "%s" "${parts[*]}"
)
echo $new # =&gt; 101222_1_ab_1
 
 #6 Bash: 

 #!/bin/bash
word='101222_1_1_ab' IFS='_' parts=( $word )
echo "${parts[0]}_${parts[1]}_${parts[3]}_${parts[2]}"
 

 (wanted to put this in reply to glenn jackman)