Question (ID-432211): Short Python Code to say "Pick the lower value"? What I mean is,
I'm looking for really short code that returns the lower value.
for example: 

 a=[1,2,3,4,5,6,7,8,9,10]
b=[1,2,3,4,5,6,7,8]
len(a) = 10
len(b) = 8
if (fill-this-in):
  print(lesser-value)
 

 And I forgot to add that if b is lower than a, I want b returned - not len(b) - the variable b. 
 Answers (Total-7): #0 You're not hugely clear about what you want, so some alternatives. Given the following two lists: 

 a = [1,2,3,4,5,6,7,8,9,10]
b = [1,2,3,4,5,6,7,8]
 

 To print the shortest list, you can just do.. 

 &gt;&gt;&gt; print(min(a, b))
[1, 2, 3, 4, 5, 6, 7, 8]
 

 To get the shortest length as an number, you can either min the len() of each list, or do len(min()) (both are identical, choose which ever you find most readable).. 

 &gt;&gt;&gt; print(min( len(a), len(b) ))
# or..
&gt;&gt;&gt; print(len( min(a, b) ))
8
 

 To print the lowest value in either list, you can supply the list as a single argument to min() 

 &gt;&gt;&gt; a.extend(b) # Appends b to a
&gt;&gt;&gt; print a
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8]
&gt;&gt;&gt; print(min(a))
1
 

 Finally, another possibility, the list that has the lowest values in total: 

 &gt;&gt;&gt; max( sum(a), sum(b) )
55
 

 To print the actual list with the highest sum() , you could either use the ternary operator, like.. 

 &gt;&gt;&gt; print a if sum(a) &gt; sum(b) else b
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 

 ..although I never really liked (or use) it, instead using the slight longer, regular if/else statements.. 

 &gt;&gt;&gt; if sum(a) &gt; sum(b):
...  print a
... else:
...  print b
... 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 
 #1 
print(min(a, b))
 
 #2 min() should accomplish what you need 

 print(min(a,b))
 
 #3 If the length of the list is what makes it lower (not its values), then you actually want: 

 min(a, b, key=len)
 

 which is only incidentally equivalent to 

 min(a, b)
 

 in the given example. 
 #4 Is the following what you want? 

 if len(a) &lt; len(b):
 print a
else:
 print b
 

 Alternatively, if you want to use the ternary operator like @Andrew G. Johnson : 

 print a if len(a) &lt; len(b) else b
 

 PS. Remember that Python does not use braces for its blocks, and that its ternary operator is different from C-like languages. 
 #5 heads up, min(a, b, key=len) only works in python 2.5 and up I think. 

 (it's not working on my macbook with python 2.4, but my linux server with 2.5 is fine) 
 #6 I don't know Python but for something like this I'd use a ternary operator. 

 print(length(a) &lt; length(b) ? length(a) : length(b))
 

 One thing to note about this that if they are equal it will print length(b)