Question (ID-4995733): How to create a spinning command line cursor using python? Is there a way to print a spinning cursor in a terminal using Python? 
 Answers (Total-8): #0 A solution: 

 import sys
import time

print "processing...\\",
syms = ['\\', '|', '/', '-']
bs = '\b'

for _ in range(10):
 for sym in syms:
  sys.stdout.write("\b%s" % sym)
  sys.stdout.flush()
  time.sleep(.5)
 

 The key is to use the backspace character '\b' and flush stdout. 
 #1 Something like this, assuming your terminal handles \b 

 import sys
import time

def spinning_cursor():
 cursor='/-\|'
 i = 0
 while 1:
  yield cursor[i]
  i = (i + 1) % len(cursor)


for c in spinning_cursor():
 sys.stdout.write(c)
 sys.stdout.flush()
 time.sleep(0.1)
 sys.stdout.write('\b')
 
 #2 Sure, it's possible. It's just a question of printing the backspace character ( \b ) in between the four characters that would make the "cursor" look like it's spinning ( - , \ , | , / ). 
 #3 For more advanced console manipulations, on unix you can use the curses python module , and on windows, you can use WConio which provides equivalent functionality of the curses library. 
 #4 #!/usr/bin/env python

import sys

chars = '|/-\\'

for i in xrange(1,1000):
 for c in chars:
  sys.stdout.write(c)
  sys.stdout.write('\b')
 

 CAVEATS: 
In my experience this doesn't work in all terminals. A more robust way to do this under Unix/Linux, be it more complicated is to use the curses module, which doesn't work under Windows.
You probably want to slow it down some how with actual processing that is going on in the background. 
 #5 curses module. i'd have a look at the addstr() and addch() functions. Never used it though. 
 #6 Grab the awesome progressbar module - http://code.google.com/p/python-progressbar/ 
use RotatingMarker . 
 #7 import sys
while True:
 sys.sysout.write("\\\b-\b|\b/\b")
 

 will print a spinning cursor.