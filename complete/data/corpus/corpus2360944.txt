Question (ID-2360944): How do I correctly install dulwich to get hg-git working on Windows? I'm trying to use the hg-git Mercurial extension on Windows (Windows 7 64-bit, to be specific). I have Mercurial and Git installed. I have Python 2.5 (32-bit) installed. 

 I followed the instructions on http://hg-git.github.com/ to install the extension. The initial easy_install failed because it was unable to compile dulwich without Visual Studio 2003. 

 I installed dulwich manually by: 

 
 git clone git://git.samba.org/jelmer/dulwich.git 
 cd dulwich 
 c:\Python25\python setup.py --pure install 
 

 Now when I run easy_install hg-git, it succeeds (since the dulwich dependency is satisfied). 

 In my C:\Users\username\Mercurial.ini, I have: 

 [extensions]
hgext.bookmarks =
hggit =
 

 When I type 'hg' at a command prompt, I see:
" * failed to import extension hggit: No module named hggit" 

 Looking under my c:\Python25 folder, the only reference to hggit I see is Lib\site-packages\hg_git-0.2.1-py2.5.egg . Is this supposed to be extracted somewhere, or should it work as-is? 

 Since that failed, I attempted the "more involved" instructions from the hg-git page that suggested cloning git://github.com/schacon/hg-git.git and referencing the path in my Mercurial configuration. I cloned the repo, and changed my extensions file to look like: 

 [extensions]
hgext.bookmarks =
hggit = c:\code\hg-git\hggit
 

 Now when I run hg, I see: * failed to import extension hggit from c:\code\hg-git\hggit: No module named dulwich.errors. 

 Ok, so that tells me that it is finding hggit now, because I can see in hg-git\hggit\git_handler.py that it calls 

 from dulwich.errors import HangupException
 

 That makes me think dulwich is not installed correctly, or not in the path. 

 Update: 

 From Python command line: 

 import dulwich
 

 yields Import Error: No module named dulwich 

 However, under C:\Python25\Lib\site-packages, I do have a dulwich-0.5.0-py2.5.egg folder which appears to be populated. This was created by the steps mentioned above. Is there an additional step I need to take to make it part of the Python "path"? 

 From Python command line (as suggested in one of the answers): 

 import pkg_resources
pkg_resources.require('dulwich')
 

 yields [dulwich 0.5.0 (c:\python25\lib\site-packages\dulwich-0.5.0-py2.5.egg)] 

 So what does that tell me? Importing dulwich fails, but apparently pkg_resources can find it. What can I do with that information? 
 Answers (Total-6): #0 
 That makes me think dulwich is not
 installed correctly, or not in the
 path. 
 

 You're absolutely right. Mercurial binary distributions for Windows are 'frozen' - they use the Python code and interpreter bundled with them and therefore independent of packages installed in system PYTHONPATH. When you specify path to hggit extension in Mercurial.ini, hg tries to import it using direct path, but dulwich library is not imported explicitly by hg and doesn't bundled with its library, so the import fails. 

 It is possible to add both Dulwich and HgGit into library.zip that is installed along with hg.exe, but for me the best way is to install everything from source including Mercurial and execute commands using .bat files installed into \Python\Scripts. In this case you will need to: 

 
 Install Mercurial from source. This builds "pure" version, because Windows users usually don't have Visual Studio or alternative compiler for compiling C speedups. 
 Install Dulwich - I'd use latest trunk snapshot for both Git and Dulwich. 

 python setup.py --pure install 
 Install latest HgGit snapshot 

 python setup.py install 
 Edit Mercurial.ini to enable hggit = 
 Launch Mercurial using your \Python\Scripts\hg.bat 
 
 #1 If you can install TortoiseHg, it includes dulwich and other requirements. 
 #2 Try following configuration (change to your path), which works for me: 

 [extensions]
; hg-git extention
hgext.bookmarks =
hggit = C:\Python26\Lib\site-packages\hg_git-0.2.1-py2.6.egg\hggit
 

 In my case when I have empty value for hggit = , I get the same error as you do in this case. But I can import dulwich without problem in python shell, so you should check your easy-install.pth (as pointed out by David) if it contains dulwich-0.5.0-py2.5.egg .
I did install pure version of dulwich as well. 
 #3 I found a simpler solution at http://candidcode.com/2010/01/12/a-guide-to-converting-from-mercurial-hg-to-git-on-a-windows-client/ 

 And then I found a yet simpler solution myself: 

 To use the hg-git Mercurial extension on Windows: 

 
 install the official Mercurial binaries 
 put dulwich folder
from dulwich sources and hggit folder from hg-git sources to the
root of library.zip in Mercurial installation folder 
 add the following to %USERPROFILE%\Mercurial.ini: 
 

 

 [extensions]
hgext.bookmarks=
hggit=
 

 To have SSH support you need plink.exe from PuTTY family. After that you should add the following to Mercurial.ini: 

 [ui]
username = John Doe &lt;foo@example.com&gt;
ssh=d:/home/lib/dll/plink.exe -i "d:/home2/ssh-private-key.ppk"
 

 When connecting to a SSH server for the first time, you should start putty.exe and try to connect using it. It will add the server key fingerprint to the registry. Otherwise plink will ask you to accept the fingerprint but it doesn't accept any input. 

 You can use puttygen.exe to generate private keys. Either use keys without a passphrase or use Pageant.exe ssh authentication agent. 
 #4 Until you get import dulwich to work, hggit won't work. Check that the dulwich egg file is in your easy-install.pth file under site-packages . 

 For further debugging you can try ask pkg_resources about it: 

 import pkg_resources
pkg_resources.require("dulwich")
 
 #5 I ran into this problem too with dulwich.errors. Instead of installing everything from scratch. I just copied dulwich from my default site-packages to the mercurial site-packages. worked with no problems.