Question (ID-872054): Python vs. C# Twitter API libraries I have experience with both .NET(5yrs) and Python(1yr) and I want to create a simple web project with Twitter as the backbone. I have experience with AppEngine, and have always wanted to try Azure. I'm going to make extensive use of sending and parsing tweets from lots of users at a time, and since I've set a short deadline for this I'd like to take the shortest path possible. So does anyone have any experience with both of these, or have any advice? 

 A quick look at the twitter API libraries( http://apiwiki.twitter.com/Libraries ) gave me this for python: 

 
 python-twitter by DeWitt Clinton. This library provides a pure Python interface for the Twitter API. 
 python-twyt by Andrew Price. BSD licensed Twitter API interface library and command line client. 
 twitty-twister by Dustin Sallings. A Twisted interface to Twitter. 
 

 and this for C#: 

 
 Yedda Twitter Library by Yedda. Every Twitter API method has an equivalent .NET method in this wrapper library. 
 TwitterooCore API by Eric Willis/RareEdge Design Group. Binary .NET library that can be used in any .NET project. 
 Twitterizer originally by DigitallyBorn, but now open source. Written for .NET 2.0. 
 tweet# by Daniel Crenna. "100% coverage of the REST and Search APIs". 
 
 Answers (Total-7): #0 The best advice is to use whatever language you are most comfortable with. 

 Myself and a colleague have recently re-written our Twitter web-app's entire back-end with a C# service, and the decision for us came down to which library best suited the purpose. A number of the libraries have varying 'features', some are more complete than others: we decided which to select based purely on trying them out, and seeing which were the best-optimised, and made our job easiest. 

 I would make a recommendation for a C# library, but the playing field changes so very quickly, and we've changed implementations a couple of times, as Twitter has deprecated various aspects of their API, and some have updated more quickly than others. 
 #1 I would put my vote in for this twitter library; http://code.google.com/p/python-twitter/ 

 I've used it in 10+ projects that I can think of and its been very good. I've actually been using the dev version in a number of projects too and found it stable and has many more features. 
 #2 LINQ to Twitter is available too, covers the entire Twitter API, and works with VB, C#, and Delphi Prism. 

 Joe 
 #3 You can use both .NET and Python ... IronPython. IronPython will work with Yedda. [1] 
 #4 I am using this python library for one of my project. 

 It's really easy to use and yet very powerful. 
 #5 python-twyt by Andrew Price. BSD licensed Twitter API interface library and command line client. 

 is my python library of choice. it's fairly straightforward. 
 #6 I have a bit of experience with the Twitter API (I'm Digitallyborn, author of Twitterizer). 

 I would say go with what is easiest to you. There are a lot of great libraries out there for every language.