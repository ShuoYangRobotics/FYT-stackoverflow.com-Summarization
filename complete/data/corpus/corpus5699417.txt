Question (ID-5699417): Python string split decimals from end of string I use nlst on a ftp server which returns directories in the form of lists. The format of the returned list is as follows: 

 [xyz123,abcde345,pqrst678]. 

 I have to separate each element of the list into two parts such that part1 = xyz and part2 = 123 i.e split the string at the beginning of the integer part. Any help on this will be appreciated! 
 Answers (Total-7): #0 &gt;&gt;&gt; re.findall(r'\d+|[a-z]+', 'xyz123')
['xyz', '123']
 
 #1 For example, using the re module: 

 &gt;&gt;&gt; import re
&gt;&gt;&gt; a = ['xyz123','ABCDE345','pqRst678']
&gt;&gt;&gt; regex = '(\D+)(\d+)'
&gt;&gt;&gt; for item in a:
... m = re.match(regex, item)
... (a, b) = m.groups()
... print a, b

xyz 123
ABCDE 345
pqRst 678
 
 #2 If you don't want to use regex, then you can do something like this. Note that I have not tested this so there could be a bug or typo somewhere. 

 list = ["xyz123", "abcde345", "pqrst678"]
newlist = []
for item in list:
 for char in range(0, len(item)):
  if item[char].isnumeric():
   newlist.append([item[:char], item[char:]])
   break
 
 #3 Use the regular expression module re : 

 import re
def splitEntry(entry):
 firstDecMatch = re.match(r"\d+$", entry)
 alpha, numeric = "",""
 if firstDecMatch:
  pos = firstDecMatch.start(0)
  alpha, numeric = entry[:pos], entry[pos:]
 else # no decimals found at end of string
  alpha = entry
 return (alpha, numeric)
 

 Note that the regular expression is `\d+$', which should match all decimals at the end of the string. If the string has decimals in the first part, it will not count those, e.g: xy3zzz134 -> "xy3zzz","134". I opted for that because you say you are expecting filenames, and filenames can include numbers. Of course it's still a problem if the filename ends with numbers. 
 #4 Another non- re answer: 

 &gt;&gt;&gt; [''.join(x[1]) for x in itertools.groupby('xyz123', lambda x: x.isalpha())]
['xyz', '123']
 
 #5 &gt;&gt;&gt; import re
&gt;&gt;&gt; [re.findall(r'(.*?)(\d+$)',x)[0] for x in ['xyz123','ABCDE345','pqRst678']]
[('xyz', '123'), ('ABCDE', '345'), ('pqRst', '678')]
 
 #6 I don't think its that difficult without re 

 &gt;&gt;&gt; s="xyz123"
&gt;&gt;&gt; for n,i in enumerate(s):
... if i.isdigit(): x=n ; break
...
&gt;&gt;&gt; [ s[:x], s[x:] ]
['xyz', '123']

&gt;&gt;&gt; s="abcde345"
&gt;&gt;&gt; for n,i in enumerate(s):
... if i.isdigit(): x=n ; break
...
&gt;&gt;&gt; [ s[:x], s[x:] ]
['abcde', '345']