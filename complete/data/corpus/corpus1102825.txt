Question (ID-1102825): Moving files under python I'm confused with file moving under python.
Under windows commandline, if i have directory c:\a and a directory c:\b, i can do 

 move c:\a c:\b
 

 which moves a to b result is directory structure c:\b\a 

 If I try this with os.rename or shutil.move: 

 os.rename("c:/a", "c:/b")
 

 I get 

 WindowsError: [Error 17] Cannot create a file when that file already exists
 

 If I move a single file under c:\a, it works. 

 In python how do i move a directory to another existing directory? 
 Answers (Total-6): #0 os.rename("c:/a", "c:/b/a") is equivalent to "move c:\a c:\b" under windows commandline 
 #1 You can try using the Shutil module. 
 #2 When i need many file system operations I prefer using 'path' module: 
 http://pypi.python.org/pypi/path.py/2.2 

 It's quite a good and lightweight wrapper around built-in 'os.path' module. 

 Also code: 

 last_part = os.path.split(src)[1]
 

 is a bit strange, cause there is special function for this: 

 last_part = os.path.basename(src)
 
 #3 os.rename("c:/a/", "c:/b"/) --> Changes the name of folder a in folder b 

 os.rename("c:/a/", "c:/b/a") --> Put folder b into folder a 
 #4 You will need to state the full path it's being moved to: 

 src = 'C:\a'
dst_dir = 'C:\b'
last_part = os.path.split(src)[1]
os.rename(src, os.path.join(dst_dir, last_part))
 

 Actually, it looks like shutil.move will do what you want by looking at its documentation: 

 
 If the destination is a directory or a symlink to a directory, the
 source
 is moved inside the directory. 
 

 (And its source .) 
 #5 Using Twisted's FilePath : 

 from twisted.python.filepath import FilePath
FilePath("c:/a").moveTo(FilePath("c:/b/a"))
 

 or, more generally: 

 from twisted.python.filepath import FilePath
def moveToExistingDir(fileOrDir, existingDir):
 fileOrDir.moveTo(existingDir.child(fileOrDir.basename()))
moveToExistingDir(FilePath("c:/a"), FilePath("c:/b"))