Question (ID-182053): Setup Python enviroment on windows How do I setup a Python enviroment on windows computer so I can start writing and running Python scripts, is there an install bundle? Also which database should i use? 

 Thanks 

 

 Sorry I should of mentioned that I am using this for web based applications. Does it require apache? or does it use another http server? What is the standard setup for Python running web apps? 
 Answers (Total-6): #0 Download the Python 2.6 Windows installer from python.org ( direct link ). If you're just learning, use the included SQLite library so you don't have to fiddle with database servers. 

 

 Most web development frameworks (Django, Turbogears, etc) come with a built-in webserver command that runs on the local computer without Apache. 
 #1 Bundle : go with Activestate's Python, which bundles many useful win32-related libraries. It has no version 2.6 yet, but most code you'll find online refers to 2.5 and lower anyway. 

 Database : any of the popular open-source DBs are simple to configure. But as John already suggested, for simple beginning stuff just use SQLite which already comes bundled with Python. 

 Web server : depends on the scale. You can configure Apache, yes, but for trying simple things the following is a quite complete web server in Python that will also serve CGI scripts writte in Python: 

 import CGIHTTPServer
import BaseHTTPServer

class Handler(CGIHTTPServer.CGIHTTPRequestHandler):
 cgi_directories = ["/cgi"]

PORT = 9999

httpd = BaseHTTPServer.HTTPServer(("", PORT), Handler)
print "serving at port", PORT
httpd.serve_forever()
 
 #2 I strongly recommend ActiveState Python for python on windows development. It comes with Win32Com and various other goodies, has a mature and clean installer, a chm version of the docs and works really well. I use this all of the time. 

 As for a database, Activestate comes with odbc support, which plays very nicely with SQL server. I've also had it working with Sybase and DB2/400 (although the connection strings for the latter tend to be rather convoluted). For Oracle, I recommend CX_Oracle as the best interface library. Native drivers for most proprietary and open-source databases (such as MySQL and PostGreSQL ) also exist. Recent versions of Python (from 2.5 onwards IIRC) come with SQLite bundled as standard. 
 #3 Don't forget to install pywin32 after installing the official (command line) installer. This will define additional start menu items and the highly useful PythonWin IDE . 

 An installer for both is available at Activestate (no 2.6 yet). The Activestate distribution contains additional documentation. 
 #4 Might I suggest taking a look at Karrigell ? It's really a nice Python web framework if you don't require everything Django and Turbogears offers. It might be easier for you to work with web frameworks until you get comfortable with them. 

 For development, I recommend downloading the latest SPE IDE. It should provide you nearly all the tools you will need, plus it includes wxGlade for GUI development. 
 #5 Django tutorial How to install Django provides a good example how a web-development Python environment may look.