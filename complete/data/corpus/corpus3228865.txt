Question (ID-3228865): Python: How do I format a number with a variable number of digits? Say I wanted to display the number 123 with a variable number of padded zeroes on the front. 

 For example, if I wanted to display it in 5 digits I would have digits = 5 giving me:
 '00123' . 

 If I wanted to display it in 6 digits I would have digits = 6 giving: '000123' . 

 How would I do this in Python? 
 Answers (Total-6): #0 If you are using it in a formatted string with the format() method which is preferred over the older style ''% formatting 

 &gt;&gt;&gt; 'One hundred and twenty three with three leading zeros {0:06}.'.format(123)
'One hundred and twenty three with three leading zeros 000123.'
 

 See 
 http://docs.python.org/library/stdtypes.html#str.format 
 http://docs.python.org/library/string.html#formatstrings 

 Here is an example with variable width 

 &gt;&gt;&gt; '{num:0{width}}'.format(num=123, width=6)
'000123'
 

 You can even specify the fill char as a variable 

 &gt;&gt;&gt; '{num:{fill}{width}}'.format(num=123, fill='0', width=6)
'000123'
 
 #1 There is a string method called zfill: 

 &gt;&gt;&gt; '12344'.zfill(10)
0000012344
 

 It will pad the left side of the string with zeros to make the string length N (10 in this case). 
 #2 '%0*d' % (5, 123)
 
 #3 print "%03d" % (43)
 

 Prints 

 
 043 
 
 #4 Use string formatting 

 print '%(#)03d' % {'#': 2}
002
print '%(#)06d' % {'#': 123}
000123
 

 More info here: link text 
 #5 count=5
num='123'
'0'*(count-len(num))+num