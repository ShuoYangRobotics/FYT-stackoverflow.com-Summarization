Question (ID-3886402): python: how to get numbers after decimal point? how do i get the numbers after a decimal point? 

 for example if i have 5.55 

 how do i get .55 ? 
 Answers (Total-7): #0 5.55 % 1
 

 Keep in mind this won't help you with floating point rounding problems. I.e., you may get: 

 0.550000000001
 

 Or otherwise a little off the 0.55 you are expecting. 
 #1 What about: 

 a = 1.3927278749291
b = a - int(a)

b
&gt;&gt; 0.39272787492910011
 

 Or, using numpy: 

 import numpy
a = 1.3927278749291
b = a - numpy.fix(a)
 
 #2 Using the decimal module from the standard library, you can retain the original precision and avoid floating point rounding issues: 

 &gt;&gt;&gt; from decimal import Decimal
&gt;&gt;&gt; Decimal('4.20') % 1
Decimal('0.20')
 

 As kindall notes in the comments, you'll have to convert native float s to strings first. 
 #3 import math
orig = 5.55
whole = math.floor(orig) # whole = 5.0
frac = orig - whole   # frac = 0.55
 
 #4 Try Modulo: 

 5.55%1 = 0.54999999999999982
 
 #5 Use floor and subtract the result from the original number: 

 &gt;&gt; import math #gives you floor.
&gt;&gt; t = 5.55 #Give a variable 5.55
&gt;&gt; x = math.floor(t) #floor returns t rounded down to 5..
&gt;&gt; z = t - x #z = 5.55 - 5 = 0.55
 
 #6 &gt;&gt;&gt; n=5.55
&gt;&gt;&gt; if "." in str(n):
...  print "."+str(n).split(".")[-1]
...
.55