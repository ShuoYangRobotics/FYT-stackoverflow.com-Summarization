Question (ID-6419711): How to find the select the whole line for looking for only substring from the line in Python Example, I have the following lines in file: 

 
 
 Tom is a guy 
 Sara is a woman 
 Alex is a guy too 
 
 

 I would like to search for "Sara" but would like to return the whole like 

  def findLine(self, str):
 ...
 

 When I call findLine("Sara") , it returns "2. Sara is a woman" 

 How do I accomplish this with Python and Regular Expression (or other non-regular expression method) 
 Answers (Total-6): #0 I renamed str to content see senderle's comment 

 def findLine(self, content, search_str):
 for line in content.splitlines()
  if search_str in line:
   return line
 #or something else because the search_str was not found
 return None
 

 or if you want a list of all the lines containing sarah 

 def findLine(self, str, search_str):
 return [x for x in str.splitlines() if search_str in x]
 

 search_str being the string you would like to find. 
 #1 def findline(filename, search_string):
 with open(filename, 'r') as infile:
  for line in infile:
   if search_string in line:
    return line
  else:
   return None
 
 #2 You don't need RegEx to do this. You could use file.readline() and check if the line contains "Sara". Return the line if it does. Use a for-each loop to check each line in a file. 

 EDIT: 

 def findlines(filename, searchterm):
 lines = []
 line = filename.readline()

 while line:
  if searchterm in line:
   lines.append(line)

  line = filename.readline()

 return lines
 
 #3 def find(name)
 for line in open('file.txt'):
  if name in line:
   return line
 
 #4 Well, you don't need regular expressions: 

 def findline(search_string, file_name, offset=0):
 with open(file_name, 'r') as infile:
  infile.seek(offset)
  for line in infile
   if search_string in line:
    return line
 

 (The above is actually just a combination of others' with the addition of file_name as a function param, and offset, meaning you can now traverse the file and get multiple incidences of your sought string). 
 #5 In [6]: lines="""1. Tom is a guy
2. Sara is a woman
3. Alex is a guy too"""

In [10]: lines=lines.splitlines()

In [11]: def findLine(word):
 ....:  return filter(lambda x: word in x,lines)
 ....: 

In [12]: findLine("Alex")
Out[12]: ['3. Alex is a guy too']