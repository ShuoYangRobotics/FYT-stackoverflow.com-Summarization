Question (ID-792721): AttributeError: 'str' object has no attribute 'format' I am using Python 2.5.2 

 &gt;&gt;&gt; for x in range(1,11):
print '{0:2d} {1:3d} {2:4d}'.format(x, x*x, x*x*x)


Traceback (most recent call last):
 File "&lt;pyshell#9&gt;", line 2, in &lt;module&gt;
 print '{0:2d} {1:3d} {2:4d}'.format(x, x*x, x*x*x)
AttributeError: 'str' object has no attribute 'format'
 

 I am not getting the problem. 

 When i did dir('hello') there was no format attribute. 

 How can I solve this? 
 Answers (Total-6): #0  format method was introduced in python 3.0 and backported only to 2.6 
 #1 For Python versions below 2.6, use the % operator to interpolate values into a format string. 

 You should also be aware that this operator can interpolate by name from a mapping, instead of just positional arguments: 

 &gt;&gt;&gt; "%(foo)s %(bar)d" % {'bar': 42, 'foo': "spam", 'baz': None}
'spam 42'
 

 In combination with the fact that the built-in vars() function returns attributes of a namespace as a mapping, this can be very handy: 

 &gt;&gt;&gt; bar = 42
&gt;&gt;&gt; foo = "spam"
&gt;&gt;&gt; baz = None
&gt;&gt;&gt; "%(foo)s %(bar)d" % vars()
'spam 42'
 
 #2 I believe that is a Python 3.0 feature, although it is in version 2.6. But if you have a version of Python below that, that type of string formatting will not work. 

 If you are trying to print formatted strings in general, use Python's printf-style syntax through the % operator. For example: 

 print '%.2f' % some_var
 
 #3 Which Python version do you use? 

 Edit 
For Python 2.5, use "x = %s" % (x) (for printing strings) 

 If you want to print other types, see here . 
 #4 Although the existing answers describe the causes and point in the direction of a fix, none of them actually provide a solution that accomplishes what the question asks. 

 You have two options to solve the problem. The first is to upgrade to Python 2.6 or greater, which supports the format string construct . 

 The second option is to use the older string formatting with the % operator . The equivalent code of what you've presented would be as follows. 

 for x in range(1,11):
 print '%2d %3d %4d' % (x, x*x, x*x*x)
 

 This code snipped produces exactly the same output in Python 2.5 as your example code produces in Python 2.6 and greater. 
 #5 I get no error while executing this. double check.