Question (ID-6376886): What is the best way to create a string array in python? I'm relatively new to Python and it's libraries and I was wondering how I might create a string array with a preset size. It's easy in java but I was wondering how I might do this in python. 

 So far all I can think of is 

 strs = ['']*size
 

 And some how when I try to call string methods on it, the debugger gives me an error X operation does not exist in object tuple. 

 And if it was in java this is what I would want to do. 

 String[] ar = new String[size];
Arrays.fill(ar,"");
 

 Please help. 

 Error code 

  strs[sum-1] = strs[sum-1].strip('\(\)')
AttributeError: 'tuple' object has no attribute 'strip'
 

 Question : How might I do what I can normally do in Java in Python while still keeping the code clean. 
 Answers (Total-6): #0 The simple answer is, "You don't." At the point where you need something to be of fixed length, you're either stuck on old habits or writing for a very specific problem with its own unique set of constraints. 
 #1 In Python, the tendency is usually that one would use a non-fixed size list (that is to say items can be appended/removed to it dynamically). If you followed this, there would be no need to allocate a fixed-size collection ahead of time and fill it in with empty values. Rather, as you get or create strings, you simply add them to the list. When it comes time to remove values, you simply remove the appropriate value from the string. I would imagine you can probably use this technique for this. For example (in Python 2.x syntax): 

 &gt;&gt;&gt; temp_list = []
&gt;&gt;&gt; print temp_list
[]
&gt;&gt;&gt; 
&gt;&gt;&gt; temp_list.append("one")
&gt;&gt;&gt; temp_list.append("two")
&gt;&gt;&gt; print temp_list
['one', 'two']
&gt;&gt;&gt; 
&gt;&gt;&gt; temp_list.append("three")
&gt;&gt;&gt; print temp_list
['one', 'two', 'three']
&gt;&gt;&gt; 
 

 Of course, some situations might call for something more specific. In your case, a good idea may be to use a deque. Check out the post here: Python, forcing a list to a fixed size . With this, you can create a deque which has a fixed size. If a new value is appended to the end, the first element (head of the deque) is removed and the new item is appended onto the deque. This may work for what you need, but I don't believe this is considered the "norm" for Python. 
 #2 But what is a reason to use fixed size? There is no actual need in python to use fixed size arrays(lists) so you always have ability to increase it's size using append, extend or decrease using pop, or at least you can use slicing. 

 x = ['' for x in xrange(10)]
 
 #3 In python, you wouldn't normally do what you are trying to do. But, the below code will do it: 

 strs = ["" for x in range(size)]
 
 #4 Are you trying to do something like this? 

 &gt;&gt;&gt; strs = [s.strip('\(\)') for s in ['some\\', '(list)', 'of', 'strings']]
&gt;&gt;&gt; strs 
['some', 'list', 'of', 'strings']
 
 #5 The error message says it all: strs[sum-1] is a tuple, not a string. If you show more of your code someone will probably be able to help you. Without that we can only guess.