Question (ID-3367315): Basic python arithmetic - division I have two variables : count, which is a number of my filtered objects, and constant value per_page. I want to divide count by per_page and get integer value but I no matter what I try - I'm getting 0 or 0.0 : 

 &gt;&gt;&gt; count = friends.count()
&gt;&gt;&gt; print count
1
&gt;&gt;&gt; per_page = 2
&gt;&gt;&gt; print per_page
2
&gt;&gt;&gt; pages = math.ceil(count/per_pages)
&gt;&gt;&gt; print pages
0.0
&gt;&gt;&gt; pages = float(count/per_pages)
&gt;&gt;&gt; print pages
0.0
 

 What am I doing wrong, and why math.ceil gives float number instead of int ? 
 Answers (Total-7): #0 Python does integer division when both operands are integers, meaning that 1 / 2 is basically "how many times does 2 go into 1", which is of course 0 times. To do what you want, convert one operand to a float: 1 / float(2) == 0.5 , as you're expecting. And, of course, math.ceil(1 / float(2)) will yield 1 , as you expect. 

 (I think this division behavior changes in Python 3.) 
 #1 Integer division is the default of the / operator in Python &lt; 3.0. This has behaviour that seems a little weird. It returns the dividend without a remainder. 

 &gt;&gt;&gt; 10 / 3
3
 

 If you're running Python 2.6+, try: 

 from __future__ import division

&gt;&gt;&gt; 10 / 3
3.3333333333333335
 

 If you're running a lower version of Python than this, you will need to convert at least one of the numerator or denominator to a float: 

 &gt;&gt;&gt; 10 / float(3)
3.3333333333333335
 

 Also, math.ceil always returns a float... 

 &gt;&gt;&gt; import math 
&gt;&gt;&gt; help(math.ceil)

ceil(...)
 ceil(x)

 Return the ceiling of x as a float.
 This is the smallest integral value &gt;= x.
 
 #2 They're integers, so count/per_pages is zero before the functions ever get to do anything beyond that. I'm not a Python programmer really but I know that (count * 1.0) / pages will do what you want. There's probably a right way to do that however. 

 edit &mdash; yes see @mipadi's answer and float(x) 
 #3 From Python documentation (math module) : 

 
 math.ceil(x) 
 
 Return the ceiling of x as a float, the smallest integer value greater than or equal to x. 
 
 #4 its because how you have it set up is performing the operation and then converting it to a float try 

 count = friends.count()
print count

per_page = float(2)
print per_page

pages = math.ceil(count/per_pages)

print pages
pages = count/per_pages
 

 By converting either count or per_page to a float all of its future operations should be able to do divisions and end up with non whole numbers 
 #5 &gt;&gt;&gt; 10 / float(3)
3.3333333333333335
&gt;&gt;&gt; #Or 
&gt;&gt;&gt; 10 / 3.0
3.3333333333333335
&gt;&gt;&gt; #Python make any decimal number to float
&gt;&gt;&gt; a = 3
&gt;&gt;&gt; type(a)
&lt;type 'int'&gt;
&gt;&gt;&gt; b = 3.0
&gt;&gt;&gt; type(b)
&lt;type 'float'&gt;
&gt;&gt;&gt; 
 

 The best solution maybe is to use from __future__ import division 
 #6 You can try out different possibilities 
 at ideone (Python 3 is also available)