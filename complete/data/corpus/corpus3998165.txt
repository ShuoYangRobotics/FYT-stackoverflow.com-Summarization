Question (ID-3998165): HTML code processing I want to process some HTML code and remove the tags as in the example: 

 "&lt;p&gt;&lt;b&gt;This&lt;/b&gt; is a very interesting paragraph.&lt;/p&gt;" results in "This is a very interesting paragraph." 

 I'm using Python as technology; do you know any framework I may use to remove the HTML tags? 

 Thanks! 
 Answers (Total-6): #0 This question may help you: http://stackoverflow.com/questions/753052/strip-html-from-strings-in-python 

 No matter what solution you choose, I'd recommend avoiding regular expressions. They can be slow when processing large strings, they might not work due to invalid HTML, and stripping HTML with regex isn't always secure or reliable. 
 #1 BeautifulSoup 
 #2 import libxml2

text = "&lt;p&gt;&lt;b&gt;This&lt;/b&gt; is a very interesting paragraph.&lt;/p&gt;"
root = libxml2.parseDoc(text)
print root.content

# 'This is a very interesting paragraph.'
 
 #3 Depending on your needs, you could just use the regular expression /&lt;(.|\n)*?&gt;/ and replace all matches with empty strings. This works perfectly for manual cases, but if you're building this as an application feature then you'll need a more robust and secure option. 
 #4 See also this question: http://stackoverflow.com/questions/3973325/remove-all-html-in-python/3975961 
 #5 you can use lxml .