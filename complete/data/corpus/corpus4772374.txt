Question (ID-4772374): Find the position of a specific number that appear first in the list [python] So I want to find a number that appears more than once in the list. I want the position of the first one. 

 Example: Say I want 3 

  s = [1,2,3,4,5,3,9,8] =&gt; s[2] appears first
 
 Answers (Total-7): #0 def first_dup( seq ):
 # keep track of the positions
 seen = {}
 for pos,item in enumerate(seq):
  if item in seen:
   # saw it before, so its a duplicate
   return seen[item]
  else:
   # first time we see it, store the pos
   seen[item] = pos
 
 #1 A little bit ambiguous question. 

 If you just want to find index of first occurrence of specific element, you should use list.index() method: 

 index = s.index(3)
 

 But if you 

 
 want to find a number that appears
 more than once in the list 
 

 in general (without element value given), seems you can 

 
 either do simple O(N^2) search in array (check all elements of the list for each element, till duplication is found) 
 or do sort, find duplicated element in sorted list and then find index of duplicated element in the original array with list.index() method - this will take O(N*log(N)) because of sort. 
 
 #2 Unless I'm misunderstanding your question, this should do the trick: 

 s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 3]
for i in range(len(s)):
 if s.count(s[i]) &gt; 1:
  return i
 

 This should give you the index of the first occurrence of the first element that appears multiple times in the list 

 If this is not what you're after, please leave a comment and I'll edit the code. 
 #3 The function below returns the index of the first appearance of a duplicate 

 def find_first_duplicate(num_list):
  track_list =[]
  index = 0
  for e in num_list:
   if(e not in track_list):
    track_list += [e]
   else: ## found!
    return index
   index += 1
 
 #4 This is another way of doing it.. 

 If present, it will return the first index..
If there are no duplicates available, it will raise IndexError. 

 [s.index(_) for _ in s if s.count(_) &gt; 1][0]
 
 #5 Yet another way of doing it: 

 from operator import countOf

def multindex(seq):
 """ find index of first value occurring more than once
  in a sequence, else raise ValueError if there aren't any
 """
 for i,v in enumerate(seq):
  if countOf(seq, v) &gt; 1:
   return i
 else:
  raise ValueError

print 's[{}] is first value in the list occurring more than once'.format(multindex(s))
# s[2] is first value in the list occurring more than once
 
 #6 s.index(3)
 

 will return 2 , as you desire. 

 index will raise ValueError if the specified item is not in the list.