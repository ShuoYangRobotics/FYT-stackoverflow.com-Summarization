Question (ID-5983339): why am I getting a 'closed file' message when I run my python script? simple bit of code, just prints out a list of urls I put into a text file (it was printing them with the \n char at the end of each one though - how do I get rid of the \n?): 

 import mechanize, fileinput

with open('F:\Python\url_list2.txt') as urls:
 content = urls.readlines()
print content
 

 anyway, it worked printed out the list, great. Run it again and I get this message in the python shell: 

 &lt;closed file 'F:\Python\url_list2.txt', mode 'r' at 0x0000000002E4E390&gt;
 

 What is going on? Using windows 7 x64 if that makes any difference? 
 Answers (Total-6): #0 with only keeps the file open within the indentation block. Try: 

 import mechanize, fileinput

with open('F:\Python\url_list2.txt') as urls:
 content = urls.readlines()
 print urls # file still open.
print content
 

 Basically with is syntactic sugar for a common try except finally pattern: 

 try:
 urls = open('F:\Python\url_list2.txt')
 # rest of indented block
finally:
 urls.close()
# stuff outside of indented block
 

 So your code translates into: 

 import mechanize, fileinput
try:
 urls = open('F:\Python\url_list2.txt')
 # rest of indented block
 content = urls.readlines()
finally:
 urls.close()
# stuff outside of indented block.
print urls
 

 So you see why you urls is reported as a closed file ... you just closed it by exiting the with indentation block. You probably want to print content to see the content you loaded into the variable from the closed urls file. 
 #1 Try print content (urls is gone after with closes.) 
 #2 Maybe you want to be printing content instead of urls ? 

 To remove the newlines, use rstrip . 
 #3 When you use with , this is what is actually happening: 

 with open(filepath) as f:
 # do stuff
print "YAY"
# do more stuff
 

 The above is equivalent to saying: 

 f = open(filepath)
try:
 # do stuff
except:
 f.close()
finally:
 f.close()
 print "YAY"
 # do more stuff
 

 Does this explain why you are getting that error? 
 #4 Presumably a file object you've already called close() on? Can we see your code? 
 #5 The with statement automatically closes the handle after all the statements inside it execute. If you need access to the handle afterwards: 

 import mechanize, fileinput

urls = open('F:\Python\url_list2.txt')
content = urls.readlines()
print content
 

 If you want to get rid of the \n at the end of every line, use .strip() : 

 import mechanize, fileinput

urls = open('F:\Python\url_list2.txt')
content = [x.strip() for x in urls.readlines()]
print content