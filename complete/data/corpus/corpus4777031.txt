Question (ID-4777031): Shortcut for if __name__ == '__main__': Is there a shorter form of this? 

 if __name__ == '__main__':
 

 It is pretty tedious to write, and also doesn't look very nice in my opinion :) 
 Answers (Total-6): #0 Basically every python programmer does that. So simply live with it. ;) 

 Besides that you could omit it completely if your script is always meant to be run as an application and not imported as a module - but you are encouraged to use it anyway, even if it's not really necessary. 
 #1 PEP299 proposed a solution to this wart, namely having a special function name __main__ . It was rejected, partly because: 

 
 Guido pronounced that he doesn't like
 the idea anyway as it's "not worth the
 change (in docs, user habits, etc.)
 and there's nothing particularly
 broken." 
 

 http://www.python.org/dev/peps/pep-0299/ 

 So the ugliness will stay, at least as long as Guido's the BDFL. 
 #2 No, sorry, there is not. It doesn't look great, but it's what we've got. 
 #3 It's definitely a wart in the language, as is anything that becomes boilerplate and gets copied and pasted from file to file. There's no shorthand for it. 

 As warts and boilerplate go, though, at least it's minor. 
 #4 You mean shorter like if'__main__'==__name__: ? 
 #5 After asking this question, I decided to make a solution to it: 

 from automain import * # will only import the automain decorator

@automain
def mymain():
 print 'this is our main function'
 

 The blog post explains it, and the code is on github and can be easy_installed: 

 easy_install automain