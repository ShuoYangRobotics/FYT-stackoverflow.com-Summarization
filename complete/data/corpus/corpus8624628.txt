Question (ID-8624628): Regex Expression generating extra output I have a string like this-: 

 st = "url=these,url=are,url=test,url=questions"
 

 Now from this string i need to generate value of all the url . Now the regexp am using is something like this-: 

 import re
re.findall(r'([^\(url=\)]+)',st)
 

 Now my desired output is ['these,', 'are,', 'test,', 'questions'] but my regexp is giving 
 ['these,', 'a', 'e,', 'test,', 'q', 'estions'] this as output. 

 So, what should be my modified regexp and why my regexp is not giving me the desired output. 
 Answers (Total-6): #0 You probably want something like the next: 

 &gt;&gt;&gt; re.findall(r'url=(\w+)',st)
['these', 'are', 'test', 'questions']
 
 #1 You've used square brackets [] which select characters. You've got [^\(url=\)] which matches any character except (, u, r, l, = and ). 

 Instead, you want url=([^,]+) which matches 'url=' then proceeds to match until it finds a non-comma character. 
 #2 It's because your regex is splitting based on the letters 'url'. 

 This works for me: 

 re.findall(r'url=([^,]+)',st)
 
 #3 This is not a regex answer, but maybe you want to take it into account: 

 In [14]: st = "url=these,url=are,url=test,url=questions"
In [15]: [item.strip(',') for item in st.split('url=') if item]
Out[15]: ['these', 'are', 'test', 'questions']
 
 #4 re.findall(r'url=([^,]+)', st)
 
 #5 Your regex is weird... How about this pattern 

 In [19]: pat = r'url\=([^,]*)'

In [20]: re.findall(pat,st)
Out[20]: ['these', 'are', 'test', 'questions']