Question (ID-4460921): Extract the first paragraph from a Wikipedia article (Python) How can I extract the first paragraph from a Wikipedia article, using Python? 

 For example, for Albert Einstein , that would be: 

 
 Albert Einstein (pronounced /ˈælbərt
 ˈaɪnstaɪn/; German: [ˈalbɐt ˈaɪnʃtaɪn]
 ( listen); 14 March 1879 – 18 April
 1955) was a theoretical physicist,
 philosopher and author who is widely
 regarded as one of the most
 influential and iconic scientists and
 intellectuals of all time. A
 German-Swiss Nobel laureate, Einstein
 is often regarded as the father of
 modern physics.[2] He received the
 1921 Nobel Prize in Physics "for his
 services to theoretical physics, and
 especially for his discovery of the
 law of the photoelectric effect".[3] 
 

 Thanks! 
 Answers (Total-6): #0 Some time ago I made two classes for get Wikipedia articles in plain text. I know that they aren't the best solution, but you can adapt it to your needs: 

  wikipedia.py 
  wiki2plain.py 

 You can use it like this: 

 lang = 'simple'
wiki = Wikipedia(lang)

try:
 raw = wiki.article('Uruguay')
except:
 raw = None

if raw:
 wiki2plain = Wiki2Plain(raw)
 content = wiki2plain.text
 
 #1 What I did is this: 

 import urllib
import urllib2
from BeautifulSoup import BeautifulSoup

article= "Albert Einstein"
article = urllib.quote(article)

opener = urllib2.build_opener()
opener.addheaders = [('User-agent', 'Mozilla/5.0')] #wikipedia needs this

resource = opener.open("http://en.wikipedia.org/wiki/" + article)
data = resource.read()
resource.close()
soup = BeautifulSoup(data)
print soup.find('div',id="bodyContent").p
 
 #2 If you want library suggestions, BeautifulSoup , urllib2 come to mind.
Answered on SO before: Web scraping with Python . 

 I have tried urllib2 to get a page from Wikipedia. But, it was 403 (forbidden). MediaWiki provides API for Wikipedia, supporting various output formats. I haven't used python-wikitools, but may be worth a try. http://code.google.com/p/python-wikitools/ 
 #3 First, I promise I am not being snarky. 

 Here's a previous question that might be of use:
 Fetch a Wikipedia article with Python 

 In this someone suggests using the wikipedia high level API, which leads to this question: 

 Is there a Wikipedia API? 
 #4 As others have said, one approach is to use the wikimedia API and urllib or urllib2. The code fragments below are part of what I used to extract what is called the "lead" section, which has the article abstract and the infobox. This will check if the returned text is a redirect instead of actual content, and also let you skip the infobox if present (in my case I used different code to pull out and format the infobox. 

 contentBaseURL='http://en.wikipedia.org/w/index.php?title='

def getContent(title):
 URL=contentBaseURL+title+'&amp;action=raw&amp;section=0'
 f=urllib.urlopen(URL)
 rawContent=f.read()
 return rawContent

infoboxPresent = 0
# Check if a redirect was returned. If so, go to the redirection target
 if rawContent.find('#REDIRECT') == 0:
  rawContent = getFullContent(title)
  # extract the redirection title
  # Extract and format the Infobox
  redirectStart=rawContent.find('#REDIRECT[[')+11 
  count = 0
  redirectEnd = 0
  for i, char in enumerate(rawContent[redirectStart:-1]):
   if char == "[": count += 1
   if char == "]}":
    count -= 1
    if count == 0:
     redirectEnd = i+redirectStart+1
     break
  redirectTitle = rawContent[redirectStart:redirectEnd]
  print 'redirectTitle is: ',redirectTitle
  rawContent = getContent(redirectTitle)

 # Skip the Infobox
 infoboxStart=rawContent.find("{{Infobox") #Actually starts at the double {'s before "Infobox"
 count = 0
 infoboxEnd = 0
 for i, char in enumerate(rawContent[infoboxStart:-1]):
  if char == "{": count += 1
  if char == "}":
   count -= 1
   if count == 0:
    infoboxEnd = i+infoboxStart+1
    break

 if infoboxEnd &lt;&gt; 0:
  rawContent = rawContent[infoboxEnd:]
 

 You'll be getting back the raw text including wiki markup, so you'll need to do some clean up. If you just want the first paragraph, not the whole first section, look for the first new line character.  
 #5 Try a combination of urllib to fetch the site and BeautifulSoup or lxml to parse the data.