Question (ID-1140958): What's a quick one-liner to remove empty lines from a python string? I have some code in a python string that contains extraneous empty lines. I would like to remove all empty lines from the string. What's the most pythonic way to do this? 

 Note: I'm not looking for a general code re-formatter, just a quick one or two-liner. 

 Thanks! 
 Answers (Total-6): #0 How about: 

 text = os.linesep.join([s for s in text.splitlines() if s])
 

 where text is the string with the possible extraneous lines? 
 #1 "\n".join([s for s in code.split("\n") if s])
 

 Edit2: 

 text = "".join([s for s in code.splitlines(True) if s.strip("\r\n")])
 

 I think that's my final version. It should work well even with code mixing line endings. I don't think that line with spaces should be considered empty, but if so then simple s.strip() will do instead. 
 #2 This one will remove lines of spaces too. 

 re.replace(u'(?imu)^\s*\n', u'', code) 
 #3 filter(None, code.splitlines())
filter(str.strip, code.splitlines())
 

 are equivalent to 

 [s for s in code.splitlines() if s]
[s for s in code.splitlines() if s.strip()]
 

 and might be useful for readability 
 #4 Suprised there's no love for the standard string replace method.
But maybe it doesn't qualify as a one-liner, since it's just a plain old method call. 

 &gt;&gt;&gt; manylines = 'hello\nworld\n!'
&gt;&gt;&gt; print manylines
hello
world
!

&gt;&gt;&gt; no_linefeeds = manylines.replace('\n', '')
&gt;&gt;&gt; print no_linefeeds
helloworld!
 
 #5 And now for something completely different: 

 Python 1.5.2 (#0, Apr 13 1999, 10:51:12) [MSC 32 bit (Intel)] on win32
Copyright 1991-1995 Stichting Mathematisch Centrum, Amsterdam
&gt;&gt;&gt; import string, re
&gt;&gt;&gt; tidy = lambda s: string.join(filter(string.strip, re.split(r'[\r\n]+', s)), '\n')
&gt;&gt;&gt; tidy('\r\n \n\ra\n\n b \r\rc\n\n')
'a\012 b \012c'
 

 Episode 2: 

 This one doesn't work on 1.5 :-( 

 BUT not only does it handle universal newlines and blank lines, it also removes trailing whitespace (good idea when tidying up code lines IMHO) AND does a repair job if the last meaningful line is not terminated. 

 import re
tidy = lambda c: re.sub(
 r'(^\s*[\r\n]+|^\s*\Z)|(\s*\Z|\s*[\r\n]+)',
 lambda m: '\n' if m.lastindex == 2 else '',
 c)