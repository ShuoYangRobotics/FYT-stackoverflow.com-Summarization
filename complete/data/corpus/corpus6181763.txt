Question (ID-6181763): Converting a String to a List of Words? I'm trying to convert a string to a list of words using python. I want to take something like the following: 

 string = 'This is a string, with words!'
 

 Then convert to something like this : 

 list = ['This', 'is', 'a', 'string', 'with', 'words']
 

 Notice the omission of punctuation and spaces. What would be the fastest way of going about this? 
 Answers (Total-6): #0 Try this: 

 import re

mystr = 'This is a string, with words!'
wordList = re.sub("[^\w]", " ", mystr).split()
 
 #1 To do this properly is quite complex. For your research, it is known as word tokenization. You should look at NLTK if you want to see what others have done, rather than starting from scratch: 

 &gt;&gt;&gt; import nltk
&gt;&gt;&gt; paragraph = u"Hi, this is my first sentence. And this is my second."
&gt;&gt;&gt; sentences = nltk.sent_tokenize(paragraph)
&gt;&gt;&gt; for sentence in sentences:
...  nltk.word_tokenize(sentence)
[u'Hi', u',', u'this', u'is', u'my', u'first', u'sentence', u'.']
[u'And', u'this', u'is', u'my', u'second', u'.']
 
 #2 Well, you could use 

 import re
list = re.sub(r'[.!,;?]', ' ', string).split()
 

 Note that both string and list are names of builtin types, so you probably don't want to use those as your variable names. 
 #3 A regular expression for words would give you the most control. You would want to carefully consider how to deal with words with dashes or apostrophes, like "I'm". 
 #4 Using string.punctuation for completeness: 

 import re
import string
x = re.sub('['+string.punctuation+']', '', s).split()
 

 This handles newlines as well. 
 #5 The most simple way: 

 &gt;&gt;&gt; import re
&gt;&gt;&gt; string = 'This is a string, with words!'
&gt;&gt;&gt; re.findall(r'\w+', string)
['This', 'is', 'a', 'string', 'with', 'words']