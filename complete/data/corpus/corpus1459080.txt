Question (ID-1459080): How can I protect myself from a zip bomb? I just read about zip bombs , i.e. zip files that contain very large amount of highly compressible data (00000000000000000...). 

 When opened they fill the server's disk. 

 How can I detect a zip file is a zip bomb before unzipping it? 

 UPDATE Can you tell me how is this done in Python or Java? 
 Answers (Total-8): #0 Try this in Python: 

 import zipfile
z = zipfile.ZipFile('c:/a_zip_file')
print 'total files size=', sum(e.file_size for e in z.infolist())
z.close()
 
 #1 Zip is, erm, an "interesting" format. A robust solution is to stream the data out, and stop when you have had enough. In Java, use ZipInputStream rather than ZipFile . The latter also requires you to store the data in a temporary file, which is also not the greatest of ideas. 
 #2 Check a zip header first :) 
 #3 Reading over the description on Wikipedia - 

 Deny any compressed files that contain compressed files. 
  Use ZipFile.entries() to retrieve a list of files, then ZipEntry.getName() to find the file extension. 
Deny any compressed files that contain files over a set size, or the size can not be determined at startup. 
  While iterating over the files use ZipEntry.getSize() to retrieve the file size. 
 #4 If the ZIP decompressor you use can provide the data on original and compressed size you can use that data. Otherwise start unzipping and monitor the output size - if it grows too much cut it loose. 
 #5 Don't allow the upload process to write enough data to fill up the disk, ie solve the problem, not just one possible cause of the problem. 
 #6 Make sure you are not using your system drive for temp storage. I am not sure if a virusscanner will check it if it encounters it. 

 Also you can look at the information inside the zip file and retrieve a list of the content. How to do this depends on the utility used to extract the file, so you need to provide more information here 
 #7 Download files only from trusted sources.