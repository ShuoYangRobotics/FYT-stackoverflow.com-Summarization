Question (ID-5228448): How do I match a word in a text file using python? I want to search and match a particular word in a text file. 

 with open('wordlist.txt', 'r') as searchfile:
  for line in searchfile:
   if word in line:
     print line
 

 This code returns even the words that contain substrings of the target word. For example if the word is "there" then the search returns "there", "therefore", "thereby", etc. 

 I want the code to return only the lines which contain "there". Period. 
 Answers (Total-6): #0 split the line into tokens: if word in line.split(): 
 #1 import re

file = open('wordlist.txt', 'r')

for line in file.readlines():
 if re.search('^there$', line, re.I):
  print line
 

 The re.search function scans the string line and returns true if it finds the regular expression defined in the first parameter, ignoring case with re.I . The ^ character means 'beginning of the line' while the $ character means 'end of the line'. Therefore, the search function will only return true if it matches there preceded by the beginning of the line, and followed by the end of the line, aka isolated on its own. 
 #2 You ought to use a regular expression. The regular expression howto from the Python docs might be a good place to start. 
 #3 Look up the re module (regular expressions). re.search with the regex ' there ' is what you want. 
 #4 You can always use regex, something along the lines of: 

 import re

with open('wordlist.txt', 'r') as searchfile:
  for line in searchfile:
   if re.search( r'\sthere\s', line, re.M|re.I):
     print line
 

 
 \sthere\s - any space followed by 'there' followed by any space 
 re.I - means case insensitive 
 re.M - doesn't really matter in this case (since lines only have 1 \n) 
 
 #5 Without re module: 

 specialWord = "Maciej"
with open('wordlist.txt', 'r') as searchfile:
 for line in searchfile:
  lineL = line.split()
  for word in lineL:
   if word == specialWord:
    print line,