Question (ID-2821329): change values in a list - python I have this code: 

 a=[['a','b','c'],['a','f','c'],['a','c','d']] 
for x in a: 
 for y in x: 
  if 'a' in x: 
   x.replace('a','*')` 
 

 but the result is:  

 a=[['a','b','c'],['a','f','c'],['a','c','d']]
 

 and bot a=[['b','c'],['f','c'],['c','d']] 

 What should I do so the changes will last? 
 Answers (Total-6): #0 This isn't about the list. Python strings are immutable: 

 &gt; a = 'x'
&gt; a.replace('x', 'bye')
&gt; a
'x'
 

 You're replacing 'a' with '*' and then throwing away the result. 

 Try something like: 

 for i,value in enumerate(mylist):
 mylist[i] = value.replace('x', 'y')
 
 #1 If you want to remove all occurrences of 'a' from all nested sublists, you could do: 

 &gt;&gt;&gt; [[i for i in x if i != 'a'] for x in a]
[['b', 'c'], ['f', 'c'], ['c', 'd']]
 

 if you want to replace them with asterisk: 

 &gt;&gt;&gt; [[i if i != 'a' else '*' for i in x] for x in a]
[['*', 'b', 'c'], ['*', 'f', 'c'], ['*', 'c', 'd']]
 
 #2 search for the function replace : 

 str.replace(old, new[, count]): 

 Return a copy of the string with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced. 
 #3 This would work: 

 a=[['a','b','c'],['a','f','c'],['a','c','d']]
for x in a: 
 for y in x: 
  if y == 'a':
   x.remove(y)
 

 Or even simpler: 

 y = 'a'
a=[['a','b','c'],['a','f','c'],['a','c','d']]
for x in a: 
 x.remove(y)
 

 Which gives you a=[['b','c'],['f','c'],['c','d']] . 

 Note: See the documentation on remove() for lists here . 
 #4 You really want to replace the element in the nested list, like so: 

 a=[['a','b','c'],['a','f','c'],['a','c','d']] 
for row in a:
 for ix, char in enumerate(row):
  if char == 'a':
   row[ix] = '*'
 

 With the result: 

 a = [['*', 'b', 'c'], ['*', 'f', 'c'], ['*', 'c', 'd']]
 
 #5 a=[['a','b','c'],['a','f','c'],['a','c','d']]
b=[[subelt.replace('a','*') for subelt in elt] for elt in a]
print(b)

# [['*', 'b', 'c'], ['*', 'f', 'c'], ['*', 'c', 'd']]