[{"text": ["Python Vector Class"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm coming from a C# background where this stuff is super easy\u2014trying to translate into Python for Maya."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["There's gotta' be a better way to do this.", "Basically, I'm looking to create a Vector class that will simply have x, y and z coordinates, but it would be ideal if this class returned a tuple with all 3 coordinates and if you could edit the values of this tuple through x, y and z properties, somehow."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This is what I have so far, but there must be a better way to do this than using an exec statement, right?", "I hate using exec statements."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "must", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n class Vector(object):\n    '''Creates a Maya vector/triple, having x, y and z coordinates as float values'''\n\n    def __init__(self, x=0, y=0, z=0):\n        self.x, self.y, self.z = x, y, z\n\n    def attrsetter(attr):\n        def set_float(self, value):\n            setattr(self, attr, float(value))\n        return set_float\n\n    for xyz in 'xyz':\n        exec(\"%s = property(fget=attrgetter('_%s'), fset=attrsetter('_%s'))\" % (xyz, xyz, xyz))\n</code>\n</pre>\n", "senID": 4}]