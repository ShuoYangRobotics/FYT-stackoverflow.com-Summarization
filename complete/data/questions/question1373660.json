[{"text": ["File open: Is this bad Python style?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["To read contents of a file:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n data = open(filename, \"r\").read()\n</code>\n</pre>\n", "senID": 2}, {"text": ["The open file immediately stops being referenced anywhere, so the file object will eventually close... and it shouldn't affect other programs using it, since the file is only open for reading, not writing."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDIT: This has actually bitten me in a project I wrote - it prompted me to ask this question.", "File objects are cleaned up only when you run out of memory, not when you run out of file handles.", "So if you do this too often, you could end up running out of file descriptors and causing your IO attempts at opening files to throw exceptions."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/2023608/check-what-files-are-open-in-python/2023791#2023791"}]}]