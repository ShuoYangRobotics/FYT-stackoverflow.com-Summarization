[{"text": ["Does python have 'private' variables in classes?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm coming from the Java world and reading Bruce Eckels' Python 3 patterns idioms. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["While reading about classes...it goes on to say that in Python there is no need to declare class variables.", "You just use them in the constructor...and boom..they are there. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["So for example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class Simple:\n        def __init__(self1, str):\n                print(\"inside the simple constructor\")\n                self1.s = str\n        def show(self1):\n                print(self1.s)\n        def showMsg (self, msg):\n                print (msg + ':', self.show())\n</code>\n</pre>\n", "senID": 4}, {"text": ["My question is, if above is the case then any object of class Simple can just change the value of variable s outside of the class.", "For example: "], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "Simple", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "s", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n if __name__ == \"__main__\":\n        x = Simple(\"constructor argument\")\n        x.s = \"test15\" #this changes the value\n        x.show()\n        x.showMsg(\"A message\")\n</code>\n</pre>\n", "senID": 6}, {"text": ["In Java, we have been taught about public/private/protected variables.", "Those keywords make sense because at times you want variables in a class to which no one outside the class has access to. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Why is that not required in Python?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]