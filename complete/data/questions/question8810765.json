[{"text": ["main method in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have the following code, which has the following two problems:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n Traceback (most recent call last):\n  File \"C:\\Users\\v\\workspace\\first\\src\\tests.py\", line 1, in &lt;module&gt; \n  class Animal:\n  File \"C:\\Users\\v\\workspace\\first\\src\\tests.py\", line 39, in Animal\n\n  File \"C:\\Users\\v\\workspace\\first\\src\\tests.py\", line 31, in main\n    dog = Animal()\nNameError: global name 'Animal' is not defined\n</code>\n</pre>\n", "senID": 2}, {"text": ["This code is from a tutorial, and in the tutorial it works fine.", "I have the Python 2.7 and use the PyDev plugin for Eclipse."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class Animal:\n    __hungry = \"yes\"\n    __name = \"no name\"\n    __owner = \"no owner\"\n\n    def __init__(self):\n        pass\n\n    def set_owner(self,newOwner):\n        self.__owner= newOwner\n        return\n\n    def get_owner(self):\n        return self.__owner\n\n    def set_name(self,newName):\n        self.__name= newName\n        return\n\n    def get_name(self):\n        return self.__name\n\n    def noise(self):\n        print('errr')\n        return\n\n    def __hiddenmethod(self):\n        print(\"hard to find\")\n\n\n    def main():\n        dog = Animal()    \n        dog.set_owner('Sue')\n        print dog.get_owner()\n        dog.noise()\n\n\n    if  __name__ =='__main__':main()\n</code>\n</pre>\n", "senID": 4}]