[{"text": ["How can I implement matlabs ``ismember()`` command in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["here is my problem: I would like to create a boolean matrix B that contains True everywhere that matrix A has a value contained in vector v. One inconvenient solution would be:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "True", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import numpy as np\n&gt;&gt;&gt; A = np.array([[0,1,2], [1,2,3], [2,3,4]])\narray([[0, 1, 2],\n       [1, 2, 3],\n       [2, 3, 4]])\n&gt;&gt;&gt; v = [1,2]\n&gt;&gt;&gt; B = (A==v[0]) + (A==v[1]) # matlab: ``B = ismember(A,v)``\narray([[False,  True,  True],\n       [ True,  True, False],\n       [ True, False, False]], dtype=bool)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Is there maybe a solution that would be more convenient if A and v would have more values?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Cheers!"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]