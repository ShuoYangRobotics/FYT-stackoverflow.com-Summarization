[{"text": ["What is a clean, pythonic way to have multiple constructors in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I can't find a definitive answer for this.", "AFAIK, you can't have multiple __init__ functions in a Python class.", "So what is a good way to solve this problem? "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "__init__", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Suppose I have an class called Cheese with the number_of_holes property.", "How can I have two ways of creating cheese-objects..."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Cheese", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "number_of_holes", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": "one that takes a number of holes like this: ", "tag": "none", "senID": 3}, {"text": "and one that takes no arguments and just randomizes the ", "tag": "none", "senID": 4}]}, {"text": ["I can think of only one way to do this, but that seems kinda clunky:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n class Cheese():\n    def __init__(self, num_holes = 0):\n        if (num_holes == 0):\n            # randomize number_of_holes\n        else:\n            number_of_holes = num_holes\n</code>\n</pre>\n", "senID": 6}, {"text": ["What do you say?", "Is there a better way?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]