[{"text": ["Efficient way to use python's lambda, map"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to store a big list of integers in Bigtable(db).", "For efficiency I am storing them as diff between 2 consecutive items."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["for eg:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\noriginal_list = [1005, 1004, 1003, 1004, 1006]\n</pre>\n", "senID": 3}, {"text": ["Storing the above list(which actually contains more than 1000k items) as"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\nstart = 1005\ndiff = [-1, -1, 1, 2]\n</pre>\n", "senID": 5}, {"text": ["The closest I could manage is,"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\nltp = [start]\nmap(lambda x: ltp.append(ltp[-1] + x), tick)\n</pre>\n", "senID": 7}, {"text": ["I am looking for an efficient way to convert it back into original list."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]