[{"text": ["Python Regular Expression Matching: ## ##"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Im searching a file line by line for the occurrence of ##random_string##.", "It works except for the case of multiple #..."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n pattern='##(.*?)##'\nprog=re.compile(pattern)\n\nstring='lala ###hey## there'\nresult=prog.search(string)\n\nprint re.sub(result.group(1), 'FOUND', string)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Desired Output:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n \"lala #FOUND there\"\n</code>\n</pre>\n", "senID": 4}, {"text": ["Instead I get the following because its grabbing the whole ###hey##:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n \"lala FOUND there\"\n</code>\n</pre>\n", "senID": 6}, {"text": ["So how would i ignore any number of # at the beg or end, and only capture \"##string##\"."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]