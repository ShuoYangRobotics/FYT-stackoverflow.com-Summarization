[{"text": ["How do I pass lots of variables to and from a function in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I do scientific programming, and often want to show users prompts and variable pairs, let them edit the variables, and then do the calulations with the new variables.", "I do this so often, that I wrote a wxPython class to move this code out of the main program.", "You set up a list for each variable with the type of the variable (string, float, int), the prompt, and the variable's current value.", "You then place all of these lists in one big list, and my utility creates a neatly formated wxPython panel with prompts and the current values which can be edited."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["When I started, I only had a few variables, so I would write out each variable."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n s='this is a string'; i=1; f=3.14\nmy_list=[ ['s','your string here',s], ['i','your int here',i], ['f','your float here'],]\ninput_panel = Input(my_list)\n\n # the rest of the window is created, the input_panel is added to the window, the user is\n # allowed to make  choices, and control returns when the user hits the calculate button\n\ns,i,f = input_panel.results()     # the .results() function returns the values in a list\n</code>\n</pre>\n", "senID": 3}, {"text": ["Now I want to use this routine for a lot of variables (10-30), and this approach is breaking down.", "I can create the input list to the function over multiple lines using the list.append() statements.", "When the code returns from the function, though, I get this huge list that needs to be unpacked into the right variables.", "This is difficult to manage, and it looks like it will be easy to get the input list and output list out of sync.", "And worse than that, it looks kludgy."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["What is the best way to pass lots of variables to a function in Python with extra information so that they can be edited, and then get the variables back so that I can use them in the rest of the program?  "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["If I could pass the variables by reference into the function, then users could change them or not, and I would use the values once the program returned from the function.", "I would only need to build the input list over multiple lines, and there wouldn't be any possiblity of the input list getting out of sync with the output list.", "But Python doesn't allow this."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Should I break the big lists into smaller lists that then get combined into big lists for passing into and out of the functions?", "Or does this just add more places to make errors?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]