[{"text": ["An elegant and fast way to consecutively iterate over two or more containers in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have three collection.deques and what I need to do is to iterate over each of them and perform the same action:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for obj in deque1:  \n    some_action(obj)  \n\nfor obj in deque2:  \n    some_action(obj)\n\nfor obj in deque3:  \n    some_action(obj)\n</code>\n</pre>\n", "senID": 2}, {"text": ["I'm looking for some function XXX which would ideally allow me to write:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for obj in XXX(deque1, deque2, deque3):  \n    some_action(obj)\n</code>\n</pre>\n", "senID": 4}, {"text": ["The important thing here is that XXX have to be efficient enough - without making copy or silently using range(), etc.", "I was expecting to find it in built-in functions, but I found nothing similar to it so far."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Is there such thing already in Python or I have to write a function for that by myself?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]