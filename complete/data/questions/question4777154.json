[{"text": ["python: automatically printing representation of each component in an expression"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I find myself writing assertions like these:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if f(x, y) != z:\n  print(repr(x))\n  print(repr(y))\n  print(repr(z))\n  raise MyException('Expected: f(x, y) == z')\n</code>\n</pre>\n", "senID": 2}, {"text": ["I was wondering if there's a way to write a function that would accept a valid Python expression and an exception class as an input, evaluate the expression, and if it finds it to be false, print out the representation of each of the lowest-level terms in the expression and raise the given exception?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n # validate is the mystery function\nvalidate('f(x, y) == z', MyException)\n</code>\n</pre>\n", "senID": 4}]