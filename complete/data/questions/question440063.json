[{"text": ["make a parent function return - super return?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["there is a check I need to perform after each subsequent step in a function, so I wanted to define that step as a function within a function."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; def gs(a,b):\n...   def ry():\n...     if a==b:\n...       return a\n...\n...   ry()\n...\n...   a += 1\n...   ry()\n...\n...   b*=2\n...   ry()\n... \n&gt;&gt;&gt; gs(1,2) # should return 2\n&gt;&gt;&gt; gs(1,1) # should return 1\n&gt;&gt;&gt; gs(5,3) # should return 6\n&gt;&gt;&gt; gs(2,3) # should return 3\n</code>\n</pre>\n", "senID": 2}, {"text": ["so how do I get gs to return 'a' from within ry?", "I thought of using super but think that's only for classes."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Thanks"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["There's been a little confusion...", "I only want to return a if a==b.", "if a!=b, then I don't want gs to return anything yet."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["edit: I now think decorators might be the best solution."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://muharem.wordpress.com/2006/10/19/python-decorator-mini-study-part-2-of-3/", "text": "decorators", "childNum": 0, "tag": "a", "childList": []}]}]