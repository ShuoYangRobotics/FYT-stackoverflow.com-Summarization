[{"text": ["lambda versus list comprehension performance"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I recently posted a question using a lambda function and in a reply someone had mentioned lambda is going out of favor, to use list comprehensions instead.", "I am relatively new to Python.", "I ran a simple test:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import time\n\nS=[x for x in range(1000000)]\nT=[y**2 for y in range(300)]\n#\n#\ntime1 = time.time()\nN=[x for x in S for y in T if x==y]\ntime2 = time.time()\nprint 'time diff [x for x in S for y in T if x==y]=', time2-time1\n#print N\n#\n#\ntime1 = time.time()\nN=filter(lambda x:x in S,T)\ntime2 = time.time()\nprint 'time diff filter(lambda x:x in S,T)=', time2-time1\n#print N\n#\n#\n#http://snipt.net/voyeg3r/python-intersect-lists/\ntime1 = time.time()\nN = [val for val in S if val in T]\ntime2 = time.time()\nprint 'time diff [val for val in S if val in T]=', time2-time1\n#print N\n#\n#\ntime1 = time.time()\nN= list(set(S) &amp; set(T))\ntime2 = time.time()\nprint 'time diff list(set(S) &amp; set(T))=', time2-time1\n#print N  #the results will be unordered as compared to the other ways!!!\n#\n#\ntime1 = time.time()\nN=[]\nfor x in S:\n    for y in T:\n        if x==y:\n            N.append(x)\ntime2 = time.time()\nprint 'time diff using traditional for loop', time2-time1\n#print N\n</code>\n</pre>\n", "senID": 2}, {"text": ["They all print the same N so I commented that print stmt out (except the last way it's unordered), but the resulting time differences were interesting over repeated tests as seen in this one example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n time diff [x for x in S for y in T if x==y]= 54.875\ntime diff filter(lambda x:x in S,T)= 0.391000032425\ntime diff [val for val in S if val in T]= 12.6089999676\ntime diff list(set(S) &amp; set(T))= 0.125\ntime diff using traditional for loop 54.7970001698\n</code>\n</pre>\n", "senID": 4}, {"text": ["So while I find list comprehensions on the whole easier to read, there seems to be some performance issues at least in this example."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["So, two questions:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Paul"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]