[{"text": ["Matching 2 regular expressions in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is it possible to match 2 regular expressions in Python?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For instance, I have a use-case wherein I need to compare 2 expressions like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n re.match('google\\.com\\/maps', 'google\\.com\\/maps2', re.IGNORECASE)\n</code>\n</pre>\n", "senID": 3}, {"text": ["I would expect to be returned a RE object."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["But obviously, Python expects a string as the second parameter.", "Is there a way to achieve this, or is it a limitation of the way regex matching works?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Background: I have a list of regular expressions [r1, r2, r3, ...] that match a string and I need to find out which expression is the most specific match of the given string.", "The way I assumed I could make it work was by:\n(1) matching r1 with r2.", "(2) then match r2 with r1.", "If both match, we have a 'tie'.", "If only (1) worked, r1 is a 'better' match than r2 and vice-versa.", "I'd loop (1) and (2) over the entire list."], "childNum": 4, "tag": "p", "senID": 6, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}]}, {"text": ["I admit it's a bit to wrap one's head around (mostly because my description is probably incoherent), but I'd really appreciate it if somebody could give me some insight into how I can achieve this.", "Thanks!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]