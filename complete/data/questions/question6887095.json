[{"text": ["elegantly splitting a list (or dict) into two via some arbitrary function in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there any elegant way of splitting a list/dict into two lists/dicts in python, taking in some arbitrary splitter function? "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I could easily have two list comprehensions, or two selects, but it seems to me there should be some better way of doing it that avoids iterating over every element twice."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I could do it easily with a for loop and if statement, but that takes something like 7 lines of code for what should be a very simple operation."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Any ideas?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Edit:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Just for reference, my two solutions would be,"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n # given dict cows, mapping cow names to weight\n# fast solution\nfatcows = {}\nthincows = {}\nfor name, weight in cows:\n    if weight &lt; 100:\n        thincows[name] = weight\n    else:\n        fatcows[name] = weight\n\n# double-list-comprehension solution would be\nfatcows = {name: weight for name, weight in cows.items() if weight &gt; 100}\nthincows = {name: weight for name, weight in cows.items() if weight &lt; 100}\n</code>\n</pre>\n", "senID": 7}, {"text": ["I was thinking there must be something more elegant than this that i never thought of, something like:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n thincows, fatcows = ??? short expression involving cows ???\n</code>\n</pre>\n", "senID": 9}, {"text": ["I know it's possible to do by writing higher order functions stuff to do it for me, and i know how to do it manually.", "I was just wondering if there was some super-elegant language feature to do it for me. "], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["It's like you can write your own subroutines and whatnot to do a SELECT on a list, or you can just say "], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n thincows = select(cows, lambda c: c.weight &lt; 100)\n</code>\n</pre>\n", "senID": 12}, {"text": ["I was hoping there would be some similarly elegant way of splitting the list, with one pass"], "childNum": 1, "tag": "p", "senID": 13, "childList": [{"text": "splitting", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]