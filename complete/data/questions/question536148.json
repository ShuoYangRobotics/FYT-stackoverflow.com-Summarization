[{"text": ["C++ string parsing (python style)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I love how in python I can do something like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n points = []\nfor line in open(\"data.txt\"):\n    a,b,c = map(float, line.split(','))\n    points += [(a,b,c)]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Basically it's reading a list of lines where each one represents a point in 3D space, the point is represented as three numbers separated by commas"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["How can this be done in C++ without too much headache?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Performance is not very important, this parsing only happens one time, so simplicity is more important."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["P.S.", "I know it sounds like a newbie question, but believe me I've written a lexer in D (pretty much like C++) which involves reading some text char by char and recognizing tokens,\nit's just that, coming back to C++ after a long period of python, just makes me not wanna waste my time on such things."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}]