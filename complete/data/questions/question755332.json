[{"text": ["Can anyone help with this problem I am having with finditer in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a somewhat complex regular expression which I'm trying to match against a long string (65,535 characters).", "I'm looking for multiple occurrences of the re in the string, and so am using finditer.", "It works, but for some reason it hangs after identifying the first few occurrences.", "Does anyone know why this might be?", "Here's the code snippet:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n pattern = \"(([ef]|([gh]d*(ad*[gh]d)*b))d*b([ef]d*b|d*)*c)\"\n\nmatches = re.finditer(pattern, string)\nfor match in matches:\n    print \"(%d-%d): %s\" % (match.start(), match.end(), match.group())\n</code>\n</pre>\n", "senID": 2}, {"text": ["It prints out the first four occurrences, but then it hangs.", "When I kill it using Ctrl-C, it tells me it was killed in the iterator:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n Traceback (most recent call last):\n  File \"code.py\", line 133, in &lt;module&gt;\n    main(sys.argv[1:])\n  File \"code.py\", line 106, in main\n    for match in matches:\nKeyboardInterrupt\n</code>\n</pre>\n", "senID": 4}, {"text": ["If I try it with a simpler re, it works fine."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I'm running this on python 2.5.4 running on Cygwin on Windows XP."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I managed to get it to hang with a very much shorter string.", "With this 50 character string, it never returned after about 5 minutes:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n ddddddeddbedddbddddddddddddddddddddddddddddddddddd\n</code>\n</pre>\n", "senID": 8}, {"text": ["With this 39 character string it took about 15 seconds to return (and display no matches):"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n ddddddeddbedddbdddddddddddddddddddddddd\n</code>\n</pre>\n", "senID": 10}, {"text": ["And with this string it returns instantly:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n ddddddeddbedddbdddddddddddddd\n</code>\n</pre>\n", "senID": 12}, {"text": ["Ben"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}]