[{"text": ["Understanding the behavior of Python's set"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["The documentation for the built-in type set says:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "set", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n class set([iterable])\n</code>\n</pre>\n", "senID": 2}, {"text": ["That is all right but why does this work:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; l = range(10)\n&gt;&gt;&gt; s = set(l)\n&gt;&gt;&gt; s\nset([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code>\n</pre>\n", "senID": 4}, {"text": ["And this doesn't:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s.add([10])\n\n    Traceback (most recent call last):\n      File \"&lt;pyshell#7&gt;\", line 1, in &lt;module&gt;\n        s.add([10])\n    TypeError: unhashable type: 'list'\n</code>\n</pre>\n", "senID": 6}, {"text": ["Both are lists.", "Is some magic happening during the initialization? "], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "magic", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}]