[{"text": ["Single implementation to cover both single and multiple values in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Say you have a value like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["n = 5"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["and a method that returns the factorial of it, like so:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Factorial ( 5 )"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["How do you handle multiple values:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["nums = [1,2,3,4,5]"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Factorial ( nums )"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["so it returns the factorials of all these values as a list."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["What's the cleanest way to handle this, without writing 2 methods?", "Does python have a good way to handle these kind of situations?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]