[{"text": ["Python subprocess: callback when cmd exits"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm currently launching a programme using subprocess.Popen(cmd, shell=TRUE)"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "subprocess.Popen(cmd, shell=TRUE)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I'm fairly new to Python, but it 'feels' like there ought to be some api that lets me do something similar to:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n subprocess.Popen(cmd, shell=TRUE,  postexec_fn=function_to_call_on_exit)\n</code>\n</pre>\n", "senID": 3}, {"text": ["I am doing this so that function_to_call_on_exit can do something based on knowing that the cmd has exited (for example keeping count of the number of external processes currently running)"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "function_to_call_on_exit", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I assume that I could fairly trivially wrap subprocess in a class that combined threading with the Popen.wait() method, but as I've not done threading in Python yet and it seems like this might be common enough for an API to exist, I thought I'd try and find one first."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Popen.wait()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Thanks in advance :)"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]