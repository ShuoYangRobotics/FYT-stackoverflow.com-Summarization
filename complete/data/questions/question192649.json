[{"text": ["Can you monkey patch methods on core types in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Ruby can add methods to the Number class and other core types to get effects like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n1.should_equal(1)\n</pre>\n", "senID": 2}, {"text": ["But it seems like python cannot do this.", "Is this true?", "And if so, why?", "Does it have something to do with the fact that type can't be modified?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "type", "childNum": 0, "tag": "em", "pos": 3, "childList": []}]}, {"text": ["Update: Rather than talking about different definitions of monkey patching, I would like to just focus on the example above.", "I have already concluded that it cannot be done as a few of you have answered.", "But I would like a more detailed explanation of why it cannot be done, and maybe what feature, if available in python, would allow this."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Update: Rather than talking about different definitions of monkey patching, I would like to just focus on the example above. I have already concluded that it cannot be done as a few of you have answered. But I would like a more detailed explanation of why it cannot be done, and maybe what feature, if available in python, would allow this.", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["To answer some of you: The reason I might want to do this is simply aesthetics/readability. "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "might", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\nitem.price.should_equal(19.99)\n</pre>\n", "senID": 6}, {"text": ["reads more like English and clearly indicates which is the tested value and which is the expected value, as supposed to:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\nshould_equal(item.price, 19.99)\n</pre>\n", "senID": 8}, {"text": ["This concept is what Rspec and some other Ruby frameworks are based on."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "Rspec", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://rspec.info/"}]}]