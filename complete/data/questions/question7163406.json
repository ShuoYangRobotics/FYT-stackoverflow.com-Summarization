[{"text": ["Python: Delete all list indices meeting a certain condition"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["to get right down to it, I'm trying to iterate through a list of coordinate pairs in python and delete all cases where one of the coordinates is negative.", "For example: "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["in the array: "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n map = [[-1, 2], [5, -3], [2, 3], [1, -1], [7, 1]]\n</code>\n</pre>\n", "senID": 3}, {"text": ["I want to remove all the pairs in which either coordinate is &lt; 0, leaving:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n map = [[2, 3], [7, 1]]\n</code>\n</pre>\n", "senID": 5}, {"text": ["My problem is that python lists cannot have any gaps, so if I loop like this:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n i = 0\nfor pair in map:\n        for coord in pair:\n            if coord &lt; 0:\n                del map[i]\ni += 1\n</code>\n</pre>\n", "senID": 7}, {"text": ["All the indices shift when the element is deleted, messing up the iteration and causing all sorts of problems.", "I've tried storing the indices of the bad elements in another list and then looping through and deleting those elements, but I have the same problem: once one is gone, the whole list shifts and indices are no longer accurate."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Is there something I'm missing? "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Thanks. "], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]