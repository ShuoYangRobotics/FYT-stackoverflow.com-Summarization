[{"text": ["Python: Hack to call a method on an object that isn't of its class"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Assume you define a class, which has a method which does some complicated processing:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class A(object):\n    def my_method(self):\n        # Some complicated processing is done here\n        return self\n</code>\n</pre>\n", "senID": 2}, {"text": ["And now you want to use that method on some object from another class entirely.", "Like, you want to do A.my_method(7)."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "A.my_method(7)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["This is what you'd get: TypeError: unbound method my_method() must be called with A instance as first argument (got int instance instead)."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "TypeError: unbound method my_method() must be called with A instance as first argument (got int instance instead)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Now, is there any possibility to hack things so you could call that method on 7?", "I'd want to avoid moving the function or rewriting it.", "(Note that the method's logic does depend on self."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "could", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "7", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "self", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["One note: I know that some people will want to say, \"You're doing it wrong!", "You're abusing Python!", "You shouldn't do it!", "\" So yes, I know, this is a terrible terrible thing I want to do.", "I'm asking if someone knows how to do it, not how to preach to me that I shouldn't do it."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]