[{"text": ["A neat way of extending a class attribute in subclasses"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Let's say I have the following class"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class Parent(object):\n    Options = {\n        'option1': 'value1',\n        'option2': 'value2'\n    }\n</code>\n</pre>\n", "senID": 2}, {"text": ["And a subclass called Child"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class Child(Parent):\n   Options = Parent.Options.copy()\n   Options.update({\n        'option2': 'value2',\n        'option3': 'value3'\n   })\n</code>\n</pre>\n", "senID": 4}, {"text": ["I want to be able to override or add options in the child class.", "The solution I'm using works.", "But I'm sure there is a better way of doing it."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "hr", "senID": 6}, {"text": ["EDIT"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I don't want to add options as class attributes because I have other class attributes that aren't options and I prefer to keep all options in one place.", "This is just a simple example, the actual code is more complicated than that. "], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]