[{"text": ["Constants in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have the following variables declared in a lot of functions, as I need those values in each one of them.", "Is there anyway I can declare them at a global scope or something, such as I won't have to declare them in all my methods?", "I am using all this methods on instance methods of a class of mine."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n x = 0\ny = 1\nt = 2\n</code>\n</pre>\n", "senID": 2}, {"text": ["In c# I'd just declare them as global class variables, but the problem is that I don't want to have to use them always as self.x, self.y and self.z, as it gets my algorithm's code uglier than it already is.", "How would you do this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["A typical usage of this would be:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def _GetStateFromAction(self, state, action):\n    x = 0\n    y = 1\n    t = 2\n\n    if (action == 0):\n        return (state[x], state[y] - 1, state[t])\n\n    if (action == 1):\n        return (state[x] - 1, state[y], state[t])\n</code>\n</pre>\n", "senID": 5}]