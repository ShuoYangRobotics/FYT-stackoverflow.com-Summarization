[{"text": ["Efficient Context-Free Grammar parser, preferably Python-friendly"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am in need of parsing a small subset of English for one of my project, described as a context-free grammar with (1-level) feature structures (example) and I need to do it efficiently ."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "example", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/nltk/source/browse/trunk/nltk/examples/grammars/book_grammars/feat0.fcfg?r=8260"}]}, {"text": ["Right now I'm using NLTK's parser which produces the right output but is very slow.", "For my grammar of ~450 fairly ambiguous non-lexicon rules and half a million lexical entries, parsing simple sentences can take anywhere from 2 to 30 seconds, depending it seems on the number of resulting trees.", "Lexical entries have little to no effect on performance."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "NLTK", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.nltk.org/"}]}, {"text": ["Another problem is that loading the (25MB) grammar+lexicon at the beginning can take up to a minute."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["From what I can find in literature, the running time of the algorithm used to parse such a grammar (Earley or CKY) should be linear to the size of the grammar and cubic to the size of the input token list.", "My experience with NLTK indicates that ambiguity is what hurts the performance most, not the absolute size of the grammar."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["So now I'm looking for a CFG parser to replace NLTK.", "I've been considering PLY but I can't tell whether it supports feature structures in CFGs, which are required in my case, and the examples I've seen seem to be doing a lot of procedural parsing rather than just specifying a grammar.", "Can anybody show me an example of PLY both supporting feature structs and using a declarative grammar?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "PLY", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.dabeaz.com/ply/"}]}, {"text": ["I'm also fine with any other parser that can do what I need efficiently.", "A Python interface is preferable but not absolutely necessary."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]