[{"text": ["Python sqlite3 and concurrency"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a Python program that uses the \"threading\" module.", "Once every second, my program starts a new thread that fetches some data from the web, and stores this data to my hard drive.", "I would like to use sqlite3 to store these results, but I can't get it to work.", "The issue seems to be about the following line:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n conn = sqlite3.connect(\"mydatabase.db\")\n</code>\n</pre>\n", "senID": 2}, {"tag": "ul", "num": 2, "lis": [{"text": "If I put this line of code inside each thread, I get an OperationalError telling me that the database file is locked. I guess this means that another thread has mydatabase.db open through a sqlite3 connection and has locked it.", "tag": "none", "senID": 3}, {"text": "If I put this line of code in the main program and pass the connection object (conn) to each thread, I get a ProgrammingError, saying that SQLite objects created in a thread can only be used in that same thread.", "tag": "none", "senID": 4}]}, {"text": ["Previously I was storing all my results in CSV files, and did not have any of these file-locking issues.", "Hopefully this will be possible with sqlite.", "Any ideas?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]