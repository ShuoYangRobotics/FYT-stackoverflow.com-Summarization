[{"text": ["How do I get the body of a http response from a string containing the entire response, in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I got the entire HTTP response as a string but I want to extract just the body."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I would prefer not to use an external library or reimplement the header parsing. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n Content-Type: text/xml\nContent-Length: 129\n\n&lt;?xml version='1.0'?&gt;\n&lt;methodResponse&gt;\n&lt;params&gt;\n&lt;param&gt;\n&lt;value&gt;&lt;boolean&gt;0&lt;/boolean&gt;&lt;/value&gt;\n&lt;/param&gt;\n&lt;/params&gt;\n&lt;/methodResponse&gt;\n&lt;/code&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["Update: If it wasn't obvious, I do get the data from other source than an URL so any attempt to use something that requires and URL is useless."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Still I do read the data from a stream like object data = stream.read(), so a solution that can use a stream is also acceptable."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "data = stream.read()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["2nd update, yes this is a XMLRPC response but it's one that I'm getting using a different transport so I cannot use httplib to parse it, mainly because httplib is broken and not accepting strings or streams for parsing."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "2nd update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["3rd update, the double newline can be \\r\\n\\r\\n or \\n\\n based on the server."], "childNum": 3, "tag": "p", "senID": 7, "childList": [{"text": "3rd update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "\\r\\n\\r\\n", "childNum": 0, "tag": "code", "childList": []}, {"text": "\\n\\n", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["So to make it clear: the input is a HTTP response that is supposed to contain an XMLRPC response and the output has to be the response.", "It doesn't have to parse the XML, but it has to be able to properly extract the XML from the response."], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "HTTP response that is supposed to contain an XMLRPC response and the output has to be the response", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]