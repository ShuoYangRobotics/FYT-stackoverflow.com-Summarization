[{"text": ["A generic priority queue for Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to use a priority queue in my Python code.", "Looking around for something efficient, I came upon heapq.", "It looks good, but seems to be specified only for integers.", "I suppose it works with any objects that have comparison operators, but it doesn't specify what comparison operators it needs. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "heapq", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/heapq.html"}]}, {"text": ["Besides, heapq seems to be implemented in Python, so it's not fast."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "heapq", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Are you aware of any fast implementations for priority queues in Python ?", "Optimally, I'd like the queue to be generic (i.e.", "work well for any object with a specified comparison operator)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Thanks in advance"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Update:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Re comparison in heapq, I can either use a (priority, object) as Charlie Martin suggests, or just implement __cmp__ for my object. "], "childNum": 3, "tag": "p", "senID": 6, "childList": [{"text": "heapq", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "(priority, object)", "childNum": 0, "tag": "code", "childList": []}, {"text": "__cmp__", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["I'm still looking for something faster than heapq."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "heapq", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]