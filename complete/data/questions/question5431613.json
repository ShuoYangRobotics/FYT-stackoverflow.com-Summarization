[{"text": ["The Pythonic way of validating a long chain of conditions in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["So I have a long chain of conditions that should be validated to be true.", "Instead of chaining a long if condition, I tried to be \"innovative\" and did it this way, in which I reckon is more readable.", "But my question is, is this the optimal way of doing it?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Or is there a pythonic way of doing it?", "PS: Please respond with an alternative instead of answering \"No\", thanks!"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Heres the code chunk:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def site_exists(site):\n    \"\"\"\n    returns the sitebean if it exists,\n    else returns false\n    \"\"\"\n    vpadmin_service = _get_vpadmin_service(site)\n    all_sites = VpAdminServiceUtil.getSites(vpadmin_service)\n    for site_listing in all_sites:\n        if site.getId():\n            #condition check\n            try:\n                assert site.getId() == site_listing.getId()\n                assert site.getName() == site_listing.getName()\n                assert site.getCustomer().getId() == site_listing.getCustomer().getId()\n            except AssertionError:\n                continue\n            #pass conditions\n            return site_listing\n        #no id, so just check for name and customer\n        else:\n            #condition check\n            try:\n                assert site.getName() == site_listing.getName()\n                assert site.getCustomer().getId() == site_listing.getCustomer().getId()\n            except AssertionError:\n                continue\n            #pass conditions\n            site.setId(site_listing.getId())\n            return site_listing\n    return False\n</code>\n</pre>\n", "senID": 4}]