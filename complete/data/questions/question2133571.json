[{"text": ["Most Pythonic way to concatenate strings"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Given this harmless little list:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; lst = ['o','s','s','a','m','a']\n</code>\n</pre>\n", "senID": 2}, {"text": ["My goal is to pythonically concatenate the little devils using one of the following ways:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["A. plain ol' string function to get the job done, short, no imports"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; ''.join(lst)\n'ossama'\n</code>\n</pre>\n", "senID": 5}, {"text": ["B. lambda, lambda, lambda "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; reduce(lambda x, y: x + y, lst)\n'ossama'\n</code>\n</pre>\n", "senID": 7}, {"text": ["C. globalization (do nothing, import everything)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import functools, operator\n&gt;&gt;&gt; functools.reduce(operator.add, lst)\n'ossama'\n</code>\n</pre>\n", "senID": 9}, {"text": ["Please suggest other pythonic ways to achieve this magnanimous task."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["Please rank (pythonic level) and rate solutions giving concise explanations."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["In this case, is the most pythonic solution the best coding solution?"], "childNum": 0, "tag": "p", "senID": 12, "childList": []}]