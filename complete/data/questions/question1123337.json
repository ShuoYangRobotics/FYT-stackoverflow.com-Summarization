[{"text": ["Django: Converting an entire set of a Model's objects into a single dictionary"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["If you came here from Google looking for model to dict, skip my question, and just jump down to the first answer.", "My question will only confuse you."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "If you came here from Google looking for model to dict, skip my question, and just jump down to the first answer. My question will only confuse you.", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["Is there a good way in Django to  entire set of a Model's objects into a single dictionary?", "I mean, like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class DictModel(models.Model):\n    key = models.CharField(20)\n    value = models.CharField(200)\n\n\nDictModel.objects.all().to_dict()\n</code>\n</pre>\n", "senID": 3}, {"text": ["... with the result being a dictionary with the key/value pairs made up of records in the Model?", "Has anyone else seen this as being useful for them?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Thanks.", "Update\nI just wanted to add is that my ultimate goal is to be able to do a simple variable lookup inside a Template.", "Something like:"], "childNum": 4, "tag": "p", "senID": 5, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "Update", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n {{ DictModel.exampleKey }}\n</code>\n</pre>\n", "senID": 6}, {"text": ["With a result of DictModel.objects.get(key__exact=exampleKey).value"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Overall, though, you guys have really surprised me with how helpful allof your responses are, and how different the ways to approach it can be.", "Thanks a lot.", "Update October 2011:\nThis question is the top result if you Google \"django model_to_dict\", which is actually pretty awful given that it solves a different problem than what I was asking.", "What I wanted was to be able to map all of the instances in a queryset into a single dictionary with a specified model field as the key.", "model_to_dict, on the other hand converts a single model instance into a dictionary.", "Now, my needs at the time were pretty darn specific, and probably extremely rare (I can't even remember the project I needed it for, or why).", "So I would be pretty surprised that anyone looking for information about model_to_dict is going to find my question actually useful.", "Sorry.", "model_to_dict seems to be a much more common usage case than I had.", "Update Dec 2011:\nI changed the title to hopefully better reflect my original intent."], "childNum": 14, "tag": "p", "senID": 8, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "Update October 2011:", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 4, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 5, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 6, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 7, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 8, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 9, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "Update Dec 2011:", "childNum": 0, "tag": "strong", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}]