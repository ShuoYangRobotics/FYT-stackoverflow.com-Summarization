[{"text": ["Parse JavaScript to instrument code"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to split a JavaScript file into single instructions.", "For example"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n a = 2;\nfoo()\nfunction bar() {\n    b = 5;\n    print(\"spam\");\n}\n</code>\n</pre>\n", "senID": 2}, {"text": ["has to be separated into three instructions.", "(assignment, function call and function definition)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Basically I need to instrument the code, injecting code between these instructions to perform checks.", "Splitting by \";\" wouldn't obviously work because you can also end instructions with newlines and maybe I don't want to instrument code inside function and class definitions (I don't know yet).", "I took a course about grammars with flex/Bison but in this case the semantic action for this rule would be \"print all the descendants in the parse tree and put my code at the end\" which can't be done with basic Bison I think.", "How do I do this?", "I also need to split the code because I need to interface with Python with python-spidermonkey.", "Or... is there a library out there already which saves me from reinventing the wheel?", "It doesn't have to be in Python."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "flex", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Flex_lexical_analyser"}, {"text": "Bison", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/GNU_bison"}]}]