[{"text": ["python: convert \"5,4,2,4,1,0\" into [[5, 4], [2, 4], [1, 0]]"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a \"straightforward\" way to convert a str containing \nnumbers into a list of [x,y] ints?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # from: '5,4,2,4,1,0,3,0,5,1,3,3,14,32,3,5'\n# to: [[5, 4], [2, 4], [1, 0], [3, 0], [5, 1], [3, 3], [14, 32], [3, 5]]\n</code>\n</pre>\n", "senID": 2}, {"text": ["By the way, the following works, but wouldn't call it straightforward...\nAlso, it can be assumed that the input str has been validated to make sure that it only contains an even number of numbers interleaved by commas."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n num_str = '5,4,2,4,1,0,3,0,5,1,3,3,14,32,3,5'\nnumpairs_lst = []      # ends up as [[5, 4], [2, 4], [1, 0], ...]\n\ncurrent_num_str = ''   # the current num within the str; stop when a comma is found\nxy_pair = []           # this is one of the [x,y] pairs -&gt; [5, 4] \nfor ix,c in enumerate(num_str):\n    if c == ',':\n        xy_pair.append(int(current_num_str))\n        current_num_str = ''\n        if len(xy_pair) == 2:\n            numpairs_lst.append(xy_pair)\n            xy_pair = []\n    else:\n        current_num_str += c\n\n# and, take care of last number...\nxy_pair.append(int(current_num_str))\nnumpairs_lst.append(xy_pair)\n</code>\n</pre>\n", "senID": 4}]