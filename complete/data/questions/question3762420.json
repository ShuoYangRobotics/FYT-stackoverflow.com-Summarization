[{"text": ["Returning all characters before the first underscore"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Using re in Python, I would like to return all of the characters in a string that precede the first appearance of an underscore.", "In addition, I would like the string that is being returned to be in all uppercase and without any non-alpanumeric characters."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "re", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "without", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n AG.av08_binloop_v6 = AGAV08\nTL.av1_binloopv2   = TLAV1\n</code>\n</pre>\n", "senID": 3}, {"text": ["I am pretty sure I know how to return a string in all uppercase using string.upper() but I'm sure there are several ways to remove the .", "efficiently.", "Any help would be greatly appreciated.", "I am still learning regular expressions slowly but surely.", "Each tip gets added to my notes for future use."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "string.upper()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": ".", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["To further clarify, my above examples aren't the actual strings.", "The actual string would look like:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n AG.av08_binloop_v6\n</code>\n</pre>\n", "senID": 6}, {"text": ["With my desired output looking like:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n AGAV08\n</code>\n</pre>\n", "senID": 8}, {"text": ["And the next example would be the same.", "String:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n TL.av1_binloopv2\n</code>\n</pre>\n", "senID": 10}, {"text": ["Desired output:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n TLAV1\n</code>\n</pre>\n", "senID": 12}, {"text": ["Again, thanks all for the help!"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}]