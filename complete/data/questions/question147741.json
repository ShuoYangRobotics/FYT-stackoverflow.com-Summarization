[{"text": ["Character reading from file in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In a text file, there is a string \"I don't like this\"."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["However, when I read it into a string, it becomes \"I don\\xe2\\x80\\x98t like this\".", "I understand that \\u2018 is the unicode representation of \"'\".", "I use "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n f1 = open (file1, \"r\")\ntext = f1.read()\n</code>\n</pre>\n", "senID": 3}, {"text": ["command to do the reading."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Now, is it possible to read the string in such a way that when it is read into the string, it is \"I don't like this\", instead of \"I don\\xe2\\x80\\x98t like this like this\"?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Second edit: I have seen some people use mapping to solve this problem, but really, is there no built-in conversion that does this kind of ANSI to unicode ( and vice versa) conversion?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]