[{"text": ["What statically typed languages are similar to Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Python is the nicest language I currently know of, but static typing is a big advantage due to auto-completion (although there is limited support for dynamic languages, it is nothing compared to that supported in static).", "I'm curious if there are any languages which try to add the benefits of Python to a statically typed language.", "In particular I'm interesting in languages with features like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 5, "lis": [{"text": "Syntax support: such as that for dictionaries, array comprehensions", "tag": "none", "senID": 2}, {"text": "Functions: Keyword arguments, closures, tuple/multiple return values", "tag": "none", "senID": 3}, {"text": "Runtime modification/creation of classes", "tag": "none", "senID": 4}, {"text": "Avoidance of specifying classes everywhere (in Python this is due to duck typing, although type inference would work better in a statically typed language)", "tag": "none", "senID": 5}, {"text": "Metaprogramming support: This is achieved in Python through reflection, annotations and metaclasses", "tag": "none", "senID": 6}]}, {"text": ["Are there any statically typed languages with a significant number of these features?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]