[{"text": ["Python: prefer several small modules or one larger module?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm working on a Python web application in which I have some small modules that serve very specific functions: session.py, logger.py, database.py, etc.", "And by \"small\" I really do mean small; each of these files currently includes around 3-5 lines of code, or maybe up to 10 at most.", "I might have a few imports and a class definition or two in each.", "I'm wondering, is there any reason I should or shouldn't merge these into one module, something like misc.py?"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "session.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "logger.py", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "database.py", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "misc.py", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["My thoughts are that having separate modules helps with code clarity, and later on, if by some chance these modules grow to more than 10 lines, I won't feel so bad about having them separated.", "But on the other hand, it just seems like such a waste to have a bunch of files with only a few lines in each!", "And is there any significant difference in resource usage between the multi-file vs. single-file approach?", "(Of course I'm nowhere near the point where I should be worrying about resource usage, but I couldn't resist asking...)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I checked around to see whether this had been asked before and didn't see anything specific to Python, but if it's in fact a duplicate, I'd appreciate being pointed in the right direction."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]