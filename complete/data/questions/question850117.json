[{"text": ["What's the most efficient way to insert thousands of records into a table (MySQL, Python, Django)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a database table with a unique string field and a couple of integer fields.", "The string field is usually 10-100 characters long."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Once every minute or so I have the following scenario: I receive a list of 2-10 thousand tuples corresponding to the table's record structure, e.g. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [(\"hello\", 3, 4), (\"cat\", 5, 3), ...]\n</code>\n</pre>\n", "senID": 3}, {"text": ["I need to insert all these tuples to the table (assume I verified neither of these strings appear in the database).", "For clarification, I'm using InnoDB, and I have an auto-incremental primary key for this table, the string is not the PK. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["My code currently iterates through this list, for each tuple creates a Python module object with the appropriate values, and calls \".save()\", something like so:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n @transaction.commit_on_success\ndef save_data_elements(input_list):\n    for (s, i1, i2) in input_list:\n        entry = DataElement(string=s, number1=i1, number2=i2)\n        entry.save()\n</code>\n</pre>\n", "senID": 6}, {"text": ["This code is currently one of the performance bottlenecks in my system, so I'm looking for ways to optimize it. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["For example, I could generate SQL codes each containing an INSERT command for 100 tuples (\"hard-coded\" into the SQL) and execute it, but I don't know if it will improve anything."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Do you have any suggestion to optimize such a process?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Thanks"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]