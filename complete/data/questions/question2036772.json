[{"text": ["How to keep count in a recursive function?", "[python]"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wrote a recursive function to find the no.", "of instances of a substring in the parent string.", "The way I am keeping count is by declaring/initialising count as a global variable outside the function's scope.", "Problem is, it'll give me correct results only the first time the function is run, because after that count != 0 to begin with.", "And if i have it inside the function, than each time it is called recursively, it'll be set to 0."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n count=0\ndef countSubStringMatchRecursive(target,key):\n    index=find(target,key)\n    global count\n    targetstring=target\n    if index&gt;=0:\n        count=count+1\n        target=target[index+len(key):]\n        countSubStringMatchRecursive(target,key)\n    else :\n        pass\n    return \"No. of instances of\", key, 'in', targetstring, 'is', count\n</code>\n</pre>\n", "senID": 2}, {"text": ["Note: I am looking for the solution for a recursive function specifically, I have an iterative function that does work fine."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "recursive", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["EDIT: Thank You all, this was part of homework, so I was only using the string module"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]