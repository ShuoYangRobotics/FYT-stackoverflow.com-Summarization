[{"text": ["Testing variable types in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm creating an initialising function for the class 'Room', and found that the program wouldn't accept the tests I was doing on the input variables."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Why is this?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def __init__(self, code, name, type, size, description, objects, exits):\n    self.code = code\n    self.name = name\n    self.type = type\n    self.size = size\n    self.description = description\n    self.objects = objects\n    self.exits = exits\n            #Check for input errors:\n    if type(self.code) != type(str()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 110'\n    elif type(self.name) != type(str()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 111'\n    elif type(self.type) != type(str()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 112'\n    elif type(self.size) != type(int()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 113'\n    elif type(self.description) != type(str()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 114'\n    elif type(self.objects) != type(list()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 115'\n    elif type(self.exits) != type(tuple()):\n        print 'Error found in module rooms.py!'\n        print 'Error number: 116'\n</code>\n</pre>\n", "senID": 3}, {"text": ["When I run this I get this error:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n Traceback (most recent call last):\n  File \"/Users/Jasper/Development/Programming/MyProjects/Game Making Challenge/Europa   I/rooms.py\", line 148, in &lt;module&gt;\n    myRoom = Room(101, 'myRoom', 'Basic Room', 5, '&lt;insert description&gt;', myObjects, myExits)\n  File \"/Users/Jasper/Development/Programming/MyProjects/Game Making Challenge/Europa I/rooms.py\", line 29, in __init__\n    if type(self.code) != type(str()):\nTypeError: 'str' object is not callable\n</code>\n</pre>\n", "senID": 5}, {"text": ["---- Thanks for help, but: -----"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["does this apply for     isinstance(item, list) or     isinstance(item, tuple)?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]