[{"text": ["Make Python ignore .pyc files"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a way to make Python ignore any .pyc files that are present and always interpret all the code (including imported modules) directly?", "Google hasn't turned up any answers, so I suspect not, but it seemed worth asking just in case."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(Why do I want to do this?", "I have a large pipeline of Python scripts which are run repeatedly over a cluster of a couple hundred computers.", "The Python scripts themselves live on a shared NFS filesystem.", "Somehow, rarely, after having been run hundreds of times over several hours, they will suddenly start crashing with an error about not being able to import a module.", "Forcing the regeneration of the .pyc file fixes the problem.", "I want, of course, to fix the underlying causes, but in the meantime we also need the system to continue running, so it seems like ignoring the .pyc files if possible would be a reasonable workaround)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["P.S.", "I'm using Python 2.5, so I can't use -B."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]