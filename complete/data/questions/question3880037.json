[{"text": ["How to create a list or tuple of empty lists in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to incrementally fill a list or a tuple of lists.", "Something that looks like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n result = []\nfirstTime = True\nfor i in range(x):\n    for j in someListOfElements:\n        if firstTime:\n            result.append([f(j)])\n        else:\n            result[i].append(j)\n</code>\n</pre>\n", "senID": 2}, {"text": ["In order to make it less verbose an more elegant, I thought I will preallocate a list of empty lists"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n result = createListOfEmptyLists(x)\nfor i in range(x):\n    for j in someListOfElements:\n        result[i].append(j)\n</code>\n</pre>\n", "senID": 4}, {"text": ["The preallocation part isn't obvious to me.", "When I do result = [[]] * x, I receive a list of x references to the same list, so that the output of the following"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "result = [[]] * x", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "x", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n result[0].append(10)\nprint result\n</code>\n</pre>\n", "senID": 6}, {"text": ["is:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]\n</code>\n</pre>\n", "senID": 8}, {"text": ["I can use a loop (result = [[] for i in range(x)]), but I wonder whether a \"loopless\" solution exists."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "result = [[] for i in range(x)]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Is the only way to get what I'm looking for "], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]