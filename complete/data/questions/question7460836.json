[{"text": ["How to len(generator())"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Python generators are very useful.", "They have advantages over functions that return lists.", "However, you could len(list_returning_function()).", "Is there a way to len(generator_function())?"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "Python generators", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/classes.html#generators"}, {"text": "len(list_returning_function())", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "len(generator_function())", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}, {"text": ["UPDATE:\nOf course len(list(generator_function())) would work.....", "I'm trying to use a generator I've created inside a new generator I'm creating.", "As part of the calculation in the new generator it needs to know the length of the old one.", "However I would like to keep both of them together with the same properties as a generator, specifically - not maintain the entire list in memory as it may be very long."], "childNum": 5, "tag": "p", "senID": 2, "childList": [{"text": "UPDATE:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "len(list(generator_function()))", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "very", "childNum": 0, "tag": "strong", "pos": 3, "childList": []}]}, {"text": ["UPDATE 2:\nAssume the generotr knows it's target length even from the first step.", "Also, there's no reason to maintain the len() syntax.", "Example - if functions in Python are objects, couldn't I assign the length to a variable of this object that would be accessible to the new generator?"], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "UPDATE 2:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "knows", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "len()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]