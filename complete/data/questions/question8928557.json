[{"text": ["Python: splitting string by all space characters"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["To split strings by spaces in python, one usually uses split method of the string without parameters:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "split", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; 'a\\tb c\\nd'.split()\n['a', 'b', 'c', 'd']\n</code>\n</pre>\n", "senID": 2}, {"text": ["But yesterday I ran across a string that used ZERO WIDTH SPACE between words as well.", "Having turned my new knowledge in a short black magic performance (among JavaScript folks), I would like to ask how to better split by all whitespace characters, since the split is not enough:"], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "ZERO WIDTH SPACE", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Zero-width_space"}, {"text": "black magic", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/8927463/javascript-strange-comparison-behaviour"}, {"href": "http://en.wikipedia.org/wiki/Whitespace_character", "text": "whitespace characters", "childNum": 0, "tag": "a", "childList": []}, {"text": "split", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; u'a\\u200bc d'.split()\n[u'a\\u200bc', u'd']\n</code>\n</pre>\n", "senID": 4}, {"text": ["UPD1"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "UPD1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["it seems the solution suggested by sth gererally works but depends on some OS settings or Python compilation options.", "It would be nice to know the reason for sure (and if the setting can be switched on in Windows)."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "sth", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["UPD2\ncptphil found a great link that makes everything clear:"], "childNum": 3, "tag": "p", "senID": 7, "childList": [{"text": "UPD2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "cptphil", "childNum": 0, "tag": "code", "childList": []}, {"href": "http://bugs.python.org/issue13391", "text": "link", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["A quotation from unicode site:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "unicode site", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.unicode.org/review/resolved-pri.html#pri21"}]}, {"text": ["The change was then reflected in Python.", "The result of u'\\u200B'.isspace() in Python 2.5.4 and 2.6.5 is True, in Python 2.7.1 it is already False."], "childNum": 3, "tag": "p", "senID": 9, "childList": [{"text": "u'\\u200B'.isspace()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "True", "childNum": 0, "tag": "code", "childList": []}, {"text": "False", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["For other space characters regular split is enough:"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "split", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; u'a\\u200Ac'.split()\n[u'a', u'c']\n</code>\n</pre>\n", "senID": 11}, {"text": ["And if that is not enough for you, add characters one by one as Gabi Purcaru suggests below."], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "Gabi Purcaru", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]