[{"text": ["How can I speed up fetching pages with urllib2 in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a script that fetches several web pages and parses the info."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["(An example can be seen at http://bluedevilbooks.com/search/?DEPT=MATH&amp;CLASS=103&amp;SEC=01 )"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://bluedevilbooks.com/search/?DEPT=MATH&amp;CLASS=103&amp;SEC=01", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://bluedevilbooks.com/search/?DEPT=MATH&CLASS=103&SEC=01"}]}, {"text": ["I ran cProfile on it, and as I assumed, urlopen takes up a lot of time.", "Is there a way to fetch the pages faster?", "Or a way to fetch several pages at once?", "I'll do whatever is simplest, as I'm new to python and web developing."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Thanks in advance!", ":)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["UPDATE: I have a function called fetchURLs(), which I use to make an array of the URLs I need\nso something like urls = fetchURLS().The URLS are all XML files from Amazon and eBay APIs (which confuses me as to why it takes so long to load, maybe my webhost is slow?"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "fetchURLs()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "urls = fetchURLS()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["What I need to do is load each URL, read each page, and send that data to another part of the script which will parse and display the data."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Note that I can't do the latter part until ALL of the pages have been fetched, that's what my issue is."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Also, my host limits me to 25 processes at a time, I believe, so whatever is easiest on the server would be nice :)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Here it is for time:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n Sun Aug 15 20:51:22 2010    prof\n\n         211352 function calls (209292 primitive calls) in 22.254 CPU seconds\n\n   Ordered by: internal time\n   List reduced from 404 to 10 due to restriction &lt;10&gt;\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       10   18.056    1.806   18.056    1.806 {_socket.getaddrinfo}\n     4991    2.730    0.001    2.730    0.001 {method 'recv' of '_socket.socket' objects}\n       10    0.490    0.049    0.490    0.049 {method 'connect' of '_socket.socket' objects}\n     2415    0.079    0.000    0.079    0.000 {method 'translate' of 'unicode' objects}\n       12    0.061    0.005    0.745    0.062 /usr/local/lib/python2.6/HTMLParser.py:132(goahead)\n     3428    0.060    0.000    0.202    0.000 /usr/local/lib/python2.6/site-packages/BeautifulSoup.py:1306(endData)\n     1698    0.055    0.000    0.068    0.000 /usr/local/lib/python2.6/site-packages/BeautifulSoup.py:1351(_smartPop)\n     4125    0.053    0.000    0.056    0.000 /usr/local/lib/python2.6/site-packages/BeautifulSoup.py:118(setup)\n     1698    0.042    0.000    0.358    0.000 /usr/local/lib/python2.6/HTMLParser.py:224(parse_starttag)\n     1698    0.042    0.000    0.275    0.000 /usr/local/lib/python2.6/site-packages/BeautifulSoup.py:1397(unknown_starttag)\n</code>\n</pre>\n", "senID": 10}]