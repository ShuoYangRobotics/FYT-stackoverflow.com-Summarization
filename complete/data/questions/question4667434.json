[{"text": ["Processing a huge file (9.1GB) and processing it faster -- Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a 9GB text file of tweets in the following format: "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n T      'time and date'\nU      'name of user in the form of a URL'\nW      Actual tweet\n</code>\n</pre>\n", "senID": 2}, {"text": ["There are in total 6,000,000 users and more than 60,000,000 tweets.", "I read 3 lines at a time using itertools.izip() and then according to the name, write it into a file.", "But its taking way too long (26 hours and counting).", "How can this be made faster?  "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Posting code for completeness,"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n s='the existing folder which will have all the files'\nwith open('path to file') as f:\n for line1,line2,line3 in itertools.izip_longest(*[f]*3):\n            if(line1!='\\n' and line2!='\\n' and line3!='\\n'):\n     line1=line1.split('\\t')\n     line2=line2.split('\\t')\n     line3=line3.split('\\t')\n     if(not(re.search(r'No Post Title',line1[1]))):\n         url=urlparse(line3[1].strip('\\n')).path.strip('/')\n\n  if(url==''):\n   file=open(s+'junk','a')\n   file.write(line1[1])\n   file.close()\n  else:\n   file=open(s+url,'a')\n   file.write(line1[1])\n   file.close()\n</code>\n</pre>\n", "senID": 5}, {"text": ["My aim is to use topic modeling on the small texts (as in, running lda on all the tweets of one user, thus requiring a separate file for each user), but its taking way too much time. "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["UPDATE: I used the suggestions by user S.Lott and  used the following code : "], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "UPDATE", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import re\nfrom urlparse import urlparse\nimport os \ndef getUser(result):\n    result=result.split('\\n')\n    u,w=result[0],result[1]\n    path=urlparse(u).path.strip('/')\n    if(path==''):\n        f=open('path to junk','a')\n        f.write('its Junk !!')\n        f.close()\n    else:\n        result=\"{0}\\n{1}\\n{2}\\n\".format(u,w,path)\n        writeIntoFile(result)\ndef writeIntoFile(result):\n    tweet=result.split('\\n')\n    users = {}\n    directory='path to directory'\n    u, w, user = tweet[0],tweet[1],tweet[2]\n    if user not in users :\n        if(os.path.isfile(some_directory+user)):\n            if(len(users)&gt;64):\n                lru,aFile,u=min(users.values())\n                aFile.close()\n                users.pop(u)\n            users[user]=open(some_directory+user,'a')\n            users[user].write(w+'\\n')\n            #users[user].flush\n        elif (not(os.path.isfile(some_directory+user))):\n            if len(users)&gt;64:\n                lru,aFile,u=min(users.values())\n                aFile.close()\n                users.pop(u)\n\n            users[user]=open(some_directory+user,'w')\n            users[user].write(w+'\\n')\n    for u in users:\n        users[u].close()\nimport sys\ns=open(sys.argv[1],'r')\ntweet={}\nfor l in s:\n    r_type,content=l.split('\\t')\n    if r_type in tweet:\n    u,w=tweet.get('U',''),tweet.get('W','')\n            if(not(re.search(r'No Post Title',u))):\n                result=\"{0}{1}\".format(u,w)\n                getUser(result)\n                tweet={}\n        tweet[r_type]=content\n</code>\n</pre>\n", "senID": 8}, {"text": ["Obviously,  it is pretty much a mirror of what he suggested and kindly shared too.", "Initially the speed was very fast but then it has got slower .", "I have posted the updated code so that i can get some more suggestions on how it could have been made faster.", "If i was reading from sys.stdin, then there was an import error which could not be resolved by me.", "So,  to save time and get on with it, i simply used this , hoping that it works and does so correctly.", "Thanks."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]