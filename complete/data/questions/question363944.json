[{"text": ["Python idiom to return first item or None"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm sure there's a simpler way of doing this that's just not occurring to me."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm calling a bunch of methods that return a list.", "The list may be empty.", "If the list is non-empty, I want to return the first item; otherwise, I want to return None.", "This code works:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n list = get_list()\nif len(list) &gt; 0: return list[0]\nreturn None\n</code>\n</pre>\n", "senID": 3}, {"text": ["It seems to me that there should be a simple one-line idiom for doing this, but for the life of me I can't think of it.", "Is there?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Edit:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["The reason that I'm looking for a one-line expression here is not that I like incredibly terse code, but because I'm having to write a lot of code like this:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n x = get_first_list()\nif x:\n    # do something with x[0]\n    # inevitably forget the [0] part, and have a bug to fix\ny = get_second_list()\nif y:\n    # do something with y[0]\n    # inevitably forget the [0] part AGAIN, and have another bug to fix\n</code>\n</pre>\n", "senID": 7}, {"text": ["What I'd like to be doing can certainly be accomplished with a function (and probably will be):"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n def first_item(list_or_none):\n    if list_or_none: return list_or_none[0]\n\nx = first_item(get_first_list())\nif x:\n    # do something with x\ny = first_item(get_second_list())\nif y:\n    # do something with y\n</code>\n</pre>\n", "senID": 9}, {"text": ["I posted the question because I'm frequently surprised by what simple expressions in Python can do, and I thought that writing a function was a silly thing to do if there was a simple expression could do the trick.", "But seeing these answers, it seems like a function is the simple solution."], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "is", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]