[{"text": ["Efficient Python array with 100 million zeros?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What is an efficient way to initialize and access elements of a large array in Python?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I want to create an array in Python with 100 million entries, unsigned 4-byte integers, initialized to zero.", "I want fast array access, preferably with contiguous memory."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Strangely, NumPy arrays seem to be performing very slow.", "Are there alternatives I can try?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "NumPy", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/NumPy"}]}, {"text": ["There is the array.array module, but I don't see a method to efficiently allocate a block of 100 million entries."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "array.array", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/array.html"}]}, {"text": ["Responses to comments:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "I cannot use a sparse array. It will be too slow for this algorithm because the array becomes dense very quickly.", "tag": "none", "senID": 6}, {"text": "I know Python is interpreted, but surely there is a way to do fast array operations?", "tag": "none", "senID": 7}, {"text": "I did some profiling, and I get about 160K array accesses (looking up or updating an element by index) per second with NumPy. This seems very slow.", "tag": "none", "senID": 8}]}]