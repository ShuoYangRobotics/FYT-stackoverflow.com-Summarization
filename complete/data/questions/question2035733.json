[{"text": ["how to modularize django settings.py?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["When you install a new django application, you have to add/modify your settings.py module."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For a project I'm trying to make that module a python subpackage and create a module for each application:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n settings\\\n    __init__.py\n    base.py\n    admin.py\n    feincms.py\n    ...\n</code>\n</pre>\n", "senID": 3}, {"text": ["The problem I'm confronted with is how to merge settings.py attributes (INSTALLED_APPS for example is a tuple of values) that are getting values in the different submodules?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Thanks"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Ok, I asked the wrong question (got the right answer for it though).", "My question should have been, how to get attributes from all submodules and merge them?", "Django will import settings and expects everything to be there."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]