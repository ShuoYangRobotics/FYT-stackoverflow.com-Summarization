[{"text": ["Is it a sin to use infinite recursion for infinite loops in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This question is more about curiosity than utility.", "If I'm writing a function that's supposed to run for ever, for instance a daemon, how would Python handle it if I called the function again from the end of the function?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def daemonLoop():\n\n    # Declare locals\n\n    # Do stuff\n\n    daemonLoop()\n</code>\n</pre>\n", "senID": 2}, {"text": ["I'm fairly sure that doing this in C would result in a stack overflow, but given the level of abstraction from C to Python I'm guessing stuff is handled differently."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "C", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "C", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["Would I go to hell for this?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]