[{"text": ["Python @property versus method performance - which one to use?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have written some code that uses attributes of an object:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class Foo:\n    def __init__(self):\n        self.bar = \"baz\"\nmyFoo = Foo()\nprint (myFoo.bar)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I want to do some fancy calculation to return bar.", "I could use @property to make methods act as the attribute bar, or I could refactor my code to use myFoo.bar()."], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "bar", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "@property", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "bar", "childNum": 0, "tag": "code", "childList": []}, {"text": "myFoo.bar()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Should I go back and add parens to all my bar accesses or use @property?", "Assume my code base is small now but due to entropy it will increase."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "bar", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "@property", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]