[{"text": ["Large Sqlite database search"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["How is it possible to implement an efficient large Sqlite db search (more than 90000 entries)?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm using Python and SQLObject ORM:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import re\n    ...\n\n    def search1():\n        cr = re.compile(ur'foo')\n        for item in Item.select():\n            if cr.search(item.name) or cr.search(item.skim):\n                print item.name\n</code>\n</pre>\n", "senID": 3}, {"text": ["This function runs in more than 30 seconds.", "How should I make it run faster? "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["UPD: The test:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "UPD", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n for item in Item.select():\n        pass\n</code>\n</pre>\n", "senID": 6}, {"text": ["... takes almost the same time as my initial function (0:00:33.093141 to 0:00:33.322414).", "So the regexps eat no time."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["A Sqlite3 shell query:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n select '' from item where name like '%foo%';\n</code>\n</pre>\n", "senID": 9}, {"text": ["runs in about a second.", "So the main time consumption happens due to the inefficient ORM's data retrieval from db.", "I guess SQLObject grabs entire rows here, while Sqlite touches only necessary fields."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]