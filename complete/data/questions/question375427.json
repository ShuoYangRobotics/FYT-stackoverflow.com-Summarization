[{"text": ["Non-blocking read on a subprocess.PIPE in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm using the subprocess module to start a subprocess and connect to it's output stream (stdout).", "I want to be able to execute non-blocking reads on its stdout.", "Is there a way to make .readline non-bloking or to check if there is data on the stream before I invoke .readline?", "I'd like this to be portable or at least work under Windows and Linux."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "subprocess module", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/subprocess.html"}]}, {"text": ["here is how I do it for now (It's blocking on the .readline if no data is avaible):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n p = subprocess.Popen('myprogram.exe', stdout = subprocess.PIPE)\nstr = p.stdout.readline()\n</code>\n</pre>\n", "senID": 3}, {"text": ["Thanks for your help."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]