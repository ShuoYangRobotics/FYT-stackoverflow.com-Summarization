[{"text": ["Best practice for Python Assert"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a performance or code maintenance issue with using assert as part of the standard code instead of using it just for debugging purposes?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Is"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n assert x &gt;= 0, 'x is less then zero'\n</code>\n</pre>\n", "senID": 3}, {"text": ["and better or worse then "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n if x &lt; 0:\n    raise Exception, 'x is less then zero'\n</code>\n</pre>\n", "senID": 5}, {"text": ["Also, is there anyway to set a business rule like if x &lt; 0 raise error that is always checked with out the try, except, finally so, if at anytime throughout the code x is &lt; 0 an error is raised, like if you set assert x &lt; 0 at the start of a function, anywhere within the function where x becomes less then 0 an exception is raised?"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "if x &lt; 0 raise error", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "assert x &lt; 0", "childNum": 0, "tag": "code", "childList": []}]}]