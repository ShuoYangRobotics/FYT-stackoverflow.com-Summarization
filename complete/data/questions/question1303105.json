[{"text": ["Graph databases and RDF triplestores: storage of graph data in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to develop a graph database in python (I would enjoy if anybody can join me in the development.", "I already have a bit of code, but I would gladly discuss about it)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I did my research on the internet.", "in Java, neo4j is a candidate, but I was not able to find anything about actual disk storage.", "In python, there are many graph data models (see this pre-PEP proposal, but none of them satisfy my need to store and retrieve from disk."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "neo4j", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://neo4j.org/"}, {"text": "graph data models", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://wiki.python.org/moin/PythonGraphApi"}]}, {"text": ["I do know about triplestores, however.", "triplestores are basically RDF databases, so a graph data model could be mapped in RDF and stored, but I am generally uneasy (mainly due to lack of experience) about this solution.", "One example is Sesame.", "Fact is that, in any case, you have to convert from in-memory graph representation to RDF representation and viceversa in any case, unless the client code wants to hack on the RDF document directly, which is mostly unlikely.", "It would be like handling DB tuples directly, instead of creating an object. "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Sesame", "tag": "a", "pos": 2, "childList": [], "childNum": 0, "href": "http://www.openrdf.org/"}]}, {"text": ["What is the state-of-the-art for storage and retrieval (a la DBMS) of graph data in python, at the moment?", "Would it make sense to start developing an implementation, hopefully with the help of someone interested in it, and in collaboration with the proposers for the Graph API PEP ?", "Please note that this is going to be part of my job for the next months, so my contribution to this eventual project is pretty damn serious ;)"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "a la", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Edit: Found also directededge, but it appears to be a commercial product"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://blog.directededge.com/2009/02/27/on-building-a-stupidly-fast-graph-database/", "text": "directededge", "childNum": 0, "tag": "a", "childList": []}]}]