[{"text": ["Checking if two strings are permutations of each other in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm checking if two strings a and b are permutations of each other, and I'm wondering what the ideal way to do this is in Python.", "From the Zen of Python, \"There should be one -- and preferably only one -- obvious way to do it,\" but I see there are at least two ways:"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n sorted(a) == sorted(b)\n</code>\n</pre>\n", "senID": 2}, {"text": ["and"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n all(a.count(char) == b.count(char) for char in a)\n</code>\n</pre>\n", "senID": 4}, {"text": ["but the first one is slower when (for example) the first char of a is nowhere in b, and the second is slower when they are actually permutations."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "a", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "b", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Is there any better (either in the sense of more Pythonic, or in the sense of faster on average) way to do it?", "Or should I just choose from these two depending on which situation I expect to be most common?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]