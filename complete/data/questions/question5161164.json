[{"text": ["Python: in-memory object database which supports indexing?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm doing some data munging which would be quite a bit simpler if I could stick a bunch of dictionaries in an in-memory database, then run simply queries against it. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example, something like:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n people = db([\n    {\"name\": \"Joe\", \"age\": 16},\n    {\"name\": \"Jane\", \"favourite_color\": \"red\"},\n])\nover_16 = db.filter(age__gt=16)\nwith_favorite_colors = db.filter(favorite_color__exists=True)\n</code>\n</pre>\n", "senID": 3}, {"text": ["There are three confounding factors, though: "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "Some of the values will be Python objects, and serializing them is out of the question (too slow, breaks identity). Of course, I could work around this (eg, by storing all the items in a big list, then serializing their indexes in that list\u2026 But that could take a fair bit of fiddling).", "tag": "none", "senID": 5}, {"text": "There will be thousands of data, and I will be running lookup-heavy operations (like graph traversals) against them, so it ", "tag": "none", "senID": 6}, {"text": "As in the example, the data is ", "tag": "none", "senID": 7}]}, {"text": ["So, does such a thing exist?", "Or will I need to kludge something together?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]