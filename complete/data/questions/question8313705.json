[{"text": ["How can a function return a dynamic value that depends on the number of receivers in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I was trying to do a \"strange\" (but useful in my case) function that can return a dynamic list whose len depends on the amount of receiver."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["f() returns a dynamic list of None, so I can do the following:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n a = f()  =&gt; a = None\na, b = f()  =&gt; a=b= None\n(a, b) = f() =&gt; a=b= None\n(a, b, c, d, e, f) = f()  =&gt; a=b=c=d=e=f= None\n</code>\n</pre>\n", "senID": 4}, {"text": ["I think this might be done via generator comprehension or iterator, but I was blocked on how to get the amount of recevier.", "Maybe I was in the wrong direction.", "Would you advise me some tips?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Any helps will be appreciated."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Many Thank,"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Tiezhen"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]