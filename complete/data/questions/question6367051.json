[{"text": ["Is there an easy way to tell which line number a file pointer is on?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Python 2.5, I am reading a structured text data file (~30 MB in size) using a file pointer:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n fp = open('myfile.txt', 'r')\nline = fp.readline()\n# ... many other fp.readline() processing steps, which\n# are used in different contexts to read the structures\n</code>\n</pre>\n", "senID": 2}, {"text": ["But then, while parsing the file, I hit something interesting that I want to report the line number of, so I can investigate the file in a text editor.", "I can use fp.tell() to tell me where the byte offset is (e.g.", "16548974L), but there is no \"fp.tell_line_number()\" to help me translate this to a line number."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "fp.tell()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "16548974L", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["Is there either a Python built-in or extension to easily track and \"tell\" what line number a text file pointer is on?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Note: I'm not asking to use a line_number += 1 style counter, as I call fp.readline() in different contexts and that approach would require more debugging than it is worth to insert the counter in the right corners of the code."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "not asking", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/5944908/when-processing-a-file-how-do-i-obtain-the-current-line-number"}, {"text": "line_number += 1", "childNum": 0, "tag": "code", "childList": []}, {"text": "fp.readline()", "childNum": 0, "tag": "code", "childList": []}]}]