[{"text": ["How to create a month iterator"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I would like to create a python function that would allow me to iterate over the months from a start point to a stop point.", "For example it would look something like"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def months(start_month, start_year, end_month, end_year):\n</code>\n</pre>\n", "senID": 2}, {"text": ["Calling months(8, 2010, 3, 2011) would return:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "months(8, 2010, 3, 2011)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n ((8, 2010), (9, 2010), (10, 2010), (11, 2010), (12, 2010), (1, 2011), (2, 2011), (3, 2011))\n</code>\n</pre>\n", "senID": 4}, {"text": ["The function could just return a tuple of tuples, but I would love to see it as a generator (ie using yield)."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "yield", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I've checked the calendar python module and it doesn't appear to provide this functionality.", "I could write a nasty for loop to do it easily enough, but I'm interested to see how gracefully it could be done by a pro."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "calendar", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "for", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Thanks."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]