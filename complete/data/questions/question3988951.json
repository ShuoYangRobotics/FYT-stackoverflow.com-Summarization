[{"text": ["Using Python to download a document that's not explicitly referenced in a URL"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wrote a web crawler in Python 2.6 using the Bing API that searches for certain documents and then downloads them for classification later.", "I've been using string methods and urllib.urlretrieve() to download results whose URL ends in .pdf, .ps etc., but I run into trouble when the document is 'hidden' behind a URL like:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "urllib.urlretrieve()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["http://www.oecd.org/officialdocuments/displaydocument/?cote=STD/CSTAT/WPNA(2008)25&amp;docLanguage=En"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://www.oecd.org/officialdocuments/displaydocument/?cote=STD/CSTAT/WPNA(2008)25&amp;docLanguage=En", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.oecd.org/officialdocuments/displaydocument/?cote=STD/CSTAT/WPNA(2008)25&docLanguage=En"}]}, {"text": ["So, two questions.", "Is there a way in general to tell if a URL has a pdf/doc etc.", "file that it's linking to if it's not doing so explicitly (e.g.", "www.domain.com/file.pdf)?", "Is there a way to get Python to snag that file?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Edit:\nThanks for replies, several of which suggest downloading the file to see if it's of the correct type.", "Only problem is...", "I don't know how to do that (see question #2, above).", "urlretrieve(&lt;above url&gt;) gives only an html file with an href containing that same url."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "urlretrieve(&lt;above url&gt;)", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}]