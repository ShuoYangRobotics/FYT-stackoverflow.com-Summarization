[{"text": ["Python: does it make sense to refactor this check into its own method?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm still learning python.", "I just wrote this method to determine if a player has won a game of tic-tac-toe yet, given a board state like: '[['o','x','x'],['x','o','-'],['x','o','o']]'"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "'[['o','x','x'],['x','o','-'],['x','o','o']]'", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n def hasWon(board):\n  players = ['x', 'o']\n  for player in players:\n    for row in board:\n      if row.count(player) == 3:\n        return player\n    top, mid, low = board\n    for i in range(3):\n      if [ top[i],mid[i],low[i] ].count(player) == 3:\n        return player\n    if [top[0],mid[1],low[2]].count(player) == 3:\n        return player\n    if [top[2],mid[1],low[0]].count(player) == 3:\n        return player\n  return None\n</code>\n</pre>\n", "senID": 2}, {"text": ["It occurred to me that I check lists of 3 chars several times and could refactor the checking to its own method like so:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def check(list, player):\n  if list.count(player) == 3:\n    return player\n</code>\n</pre>\n", "senID": 4}, {"text": ["...but then realized that all that really does is change lines like:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n if [ top[i],mid[i],low[i] ].count(player) == 3:\n    return player\n</code>\n</pre>\n", "senID": 6}, {"text": ["to:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n if check( [top[i],mid[i],low[i]], player ):\n    return player\n</code>\n</pre>\n", "senID": 8}, {"text": ["...which frankly doesn't seem like much of an improvement.", "Do you see a better way to refactor this?", "Or in general a more Pythonic option?", "I'd love to hear it!"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]