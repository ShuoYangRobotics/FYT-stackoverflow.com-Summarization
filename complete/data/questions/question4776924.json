[{"text": ["How to safely get the file extension from a URL?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Consider the following URLs"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\nhttp://m3u.com/tunein.m3u\nhttp://asxsomeurl.com/listen.asx:8024\nhttp://www.plssomeotherurl.com/station.pls?id=111\nhttp://22.198.133.16:8024\n</pre>\n", "senID": 2}, {"text": ["Whats the proper way to determine the file extensions (.m3u/.asx/.pls)?", "Obviously the last one doesn't have a file extension."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDIT: I forgot to mention that m3u/asx/pls are playlists (textfiles) for audio streams and must be parsed differently.", "The goal determine the extension and then send the url to the proper parsing-function.", "E.g.", "url = argv[1]\next = GetExtension(url)\nif ext == \"pls\":\n  realurl = ParsePLS(url)\nelif ext == \"asx\":\n  realurl = ParseASX(url)\n(etc.", ")\nelse:\n  realurl = url\nPlay(realurl)\nGetExtension() should return the file extension (if any), preferrably without connecting to the URL. "], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "url = argv[1]\next = GetExtension(url)\nif ext == \"pls\":\n  realurl = ParsePLS(url)\nelif ext == \"asx\":\n  realurl = ParseASX(url)\n(etc.)\nelse:\n  realurl = url\nPlay(realurl)", "childNum": 1, "tag": "pre", "pos": -1, "childList": [{"text": "url = argv[1]\next = GetExtension(url)\nif ext == \"pls\":\n  realurl = ParsePLS(url)\nelif ext == \"asx\":\n  realurl = ParseASX(url)\n(etc.)\nelse:\n  realurl = url\nPlay(realurl)", "tag": "code"}]}, {"text": "url = argv[1]\next = GetExtension(url)\nif ext == \"pls\":\n  realurl = ParsePLS(url)\nelif ext == \"asx\":\n  realurl = ParseASX(url)\n(etc.)\nelse:\n  realurl = url\nPlay(realurl)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]