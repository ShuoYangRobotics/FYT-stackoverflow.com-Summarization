[{"text": ["Refactoring \"to hit\" values for a game"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm making a game and one of the methods calculates a character's base hit numbers based on skill values.", "The method currently calculates each value individually, since each skill can be used at short, medium, and long range."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I originally thought I could combine the skills into a tuple and iterate over it, dynamically creating each hit number.", "But I don't know if it's actually possible, since I currently have each hit number assigned to it's own variable."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I also thought about creating a method for each range, and passing the tuple as an argument.", "I could create a new tuple or list with the resulting values and then assign them to the individual variables, but I don't see how it would be any better than do it this way, except that it won't look so copy &amp; pasted."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Here's what I currently have:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def calcBaseHitNumbers(self, dict):\n        \"\"\"Calculate character's base hit numbers depending on skill level.\"\"\"\n\n        self.skill_dict = dict\n\n        self.rifle = self.skill_dict.get('CRM', 0)\n        self.pistol = self.skill_dict.get('PST', 0)\n        self.big_gun = self.skill_dict.get('LCG', 0)\n        self.heavy_weapon = self.skill_dict.get('HW', 0)\n        self.bow = self.skill_dict.get('LB', 0)\n        #self.skill_tuple = (self.rifle, self.pistol, self.big_gun, self.heavy_weapon,\n        #    self.bow)\n\n#---Short range\n##        for skill in self.skill_tuple:\n##            self.base_hit_short = skill * 0.6\n        self.charAttribs.bhCRM_short = self.rifle * 0.6\n        self.charAttribs.bhPST_short = self.pistol * 0.6\n        self.charAttribs.bhHW_short = self.heavy_weapon * 0.6\n        self.charAttribs.bhLCG_short = self.big_gun * 0.6\n        self.charAttribs.bhLB_short = self.bow * 0.6\n#---Med range\n        self.charAttribs.bhCRM_med = self.rifle * 0.3\n        self.charAttribs.bhPST_med = self.pistol * 0.3\n        self.charAttribs.bhHW_med = self.heavy_weapon * 0.3\n        self.charAttribs.bhLCG_med = self.big_gun * 0.3\n        self.charAttribs.bhLB_med = self.bow * 0.3\n#---Long range\n        self.charAttribs.bhCRM_long = self.rifle * 0.1\n        self.charAttribs.bhPST_long = self.pistol * 0.1\n        self.charAttribs.bhHW_long = self.heavy_weapon * 0.1\n        self.charAttribs.bhLCG_long = self.big_gun * 0.1\n        self.charAttribs.bhLB_long = self.bow * 0.1\n</code>\n</pre>\n", "senID": 5}, {"text": ["How would you refactor this so it's more dynamic?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"tag": "hr", "senID": 7}, {"text": ["Edit: I guess what I want to do is something like this:\nHave a tuple (like the one I commented out) and iterate over it 3 times, each time making a new value (for each skill) based on the modifier for each particular range.", "The resulting value is then automatically assigned to it's respective variable."], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["In my head, it makes sense.", "But when I actually try to code it, I get lost.", "The problem, I think, is that this is the first \"real\" program I've written; all I've done before are small scripts."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["This is only the 0.1 version of my program, so it's not critical to refactor it now.", "However, it seems very un-Pythonic to do this manually and I also want to \"future-proof\" this in case things change down the road."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]