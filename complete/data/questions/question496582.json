[{"text": ["What's a good way to keep track of class instance variables in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm a C++ programmer just starting to learn Python.", "I'd like to know how you keep track of instance variables in large Python classes.", "I'm used to having a .h file that gives me a neat list (complete with comments) of all the class' members.", "But since Python allows you to add new instance variables on the fly, how do you keep track of them all?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": ".h", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["I'm picturing a scenario where I mistakenly add a new instance variable when I already had one - but it was 1000 lines away from where I was working.", "Are there standard practices for avoiding this?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Edit: It appears I created some confusion with the term \"member variable.", "\"  I really mean instance variable, and I've edited my question accordingly."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]