[{"text": ["Why is there no \"compound method call statement\", i.e.", "\".=\"?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Lots of programming languages already have the compound statements +=, -=, /=, etc.", "A relatively new style of programming is to \"chain\" method calls onto each other, e.g.", "in Linq, JQuery and Django's ORM."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "+=", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "-=", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "/=", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["I sometimes, more often than I'd like, find the need to do this in Django:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n # Get all items whose description beginning with A\nitems = Items.objects.filter(desc__startswith='A')\nif something:\n    # Filter further to items whose description also ends with Z\n    items = items.filter(desc__endswith='Z')\n</code>\n</pre>\n", "senID": 3}, {"text": ["I think it would be easier and actually more readable if there was a compound method call statement such as .= which could work like this:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": ".=", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n items = Items.objects.filter(desc__startswith='A')\nif something:\n    items .= filter(desc__endswith='Z')\n</code>\n</pre>\n", "senID": 5}, {"tag": "ul", "num": 4, "lis": [{"text": "Are there any programming languages that support this or something like it?", "tag": "none", "senID": 6}, {"text": "If the answer is no, why not?", "tag": "none", "senID": 7}, {"text": "Is this style of programming really that new?", "tag": "none", "senID": 8}, {"text": "Are there any PEPs (Python Enhancement Proposals) that support this idea?", "tag": "none", "senID": 9}]}]