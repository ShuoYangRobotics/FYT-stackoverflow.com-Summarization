[{"text": ["Python: Alter elements of a list"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list of booleans where occasionally I reset them all to false.", "After first writing the reset as:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for b in bool_list:\n    b = False\n</code>\n</pre>\n", "senID": 2}, {"text": ["I found it doesn't work.", "I spent a moment scratching my head, then remembered that of course it won't work since I'm only changing a reference to the bool, not its value.", "So I rewrote as:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for i in xrange(len(bool_list)):\n    bool_list[i] = False\n</code>\n</pre>\n", "senID": 4}, {"text": ["and everything works fine.", "But I found myself asking, \"Is that really the most pythonic way to alter all elements of a list?", "\" Are there other ways that manage to be either more efficient or clearer?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]