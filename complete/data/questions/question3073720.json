[{"text": ["Calling Overriden Methods in Derived Class from Base Class"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I was reading the Python docs about classes and came across this paragraph which I'm not sure about:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "classes", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/tutorial/classes.html"}]}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class A:\n    def foo(self):\n        self.bar()\n\n    def bar(self):\n        print \"from A\"\n\nclass B(A):\n    def foo(self):\n        self.bar()\n\n    def bar(self):\n        print \"from B\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["Does this mean that an object of class A obj = A() can somehow end up printing \"from B\"?", "Am I reading this correctly?", "I apologize if this doesn't make sense.", "I'm a bit confused as to how python handles Inheritance and overriding.", "Thanks!"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "obj = A()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]