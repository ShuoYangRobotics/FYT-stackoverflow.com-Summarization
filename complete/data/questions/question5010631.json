[{"text": ["\"Counting\" with multiple regular expressions matches in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Let's say I have the following multi-line string:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # Section\n## Subsection\n## Subsection\n# Section\n## Subsection\n### Subsubsection\n### Subsubsection\n# Section\n## Subsection\n</code>\n</pre>\n", "senID": 2}, {"text": ["and I want it to become:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n # 1 Section\n## 1.1 Subsection\n## 1.2 Subsection\n# 2 Section\n## 2.1 Subsection\n### 2.1.1 Subsubsection\n### 2.1.2 Subsubsection\n# 3 Section\n## 3.1 Subsection\n</code>\n</pre>\n", "senID": 4}, {"text": ["In Python, using the re module, is it be possible to run a substitution on the string which would:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "re", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 3, "lis": [{"text": "Match the beginning of each line based on the number of ", "tag": "none", "senID": 6}, {"text": "Keep track of past matches of commonly-numbered groups of ", "tag": "none", "senID": 7}, {"text": "Insert this counter when appropriate into the line", "tag": "none", "senID": 8}]}, {"text": ["...assuming that any of these 'counters' are always non-zero?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["This problem is testing the limits of my regex knowledge.", "I already know I can just iterate  over the lines and increment/insert some variables, so that's not the solution I want.", "I'm simply curious if this kind of functionality exists solely within a regular expressions, as I know that some sort of counting already exists (e.g., number of substitutions to make)."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]