[{"text": ["The Pythonic way of organizing modules and packages"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I come from a background where I normally create one file per class.", "I organize common classes under directories as well.", "This practice is intuitive to me and it has been proven to be effective in C++, PHP, JavaSript, etc. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I am having trouble bringing this metaphor into Python: files are not just files anymore, but they are formal modules.", "It doesn't seem right to just have one class in a module --- most classes are useless by themselves.", "If I have a automobile.py and an Automobile class, it seems silly to always reference it as automobile.Automobile as well."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "automobile.py", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "Automobile", "childNum": 0, "tag": "code", "childList": []}, {"text": "automobile.Automobile", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["But, at the same time, it doesn't seem right to throw a ton of code into one file and call it a day.", "Obviously, a very complex application should have more than 5 files."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["What is the correct---or pythonic---way?", "(Or if there is no correct way, what is your preferred way and why?", ") How much code should I be throwing in a Python module?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]