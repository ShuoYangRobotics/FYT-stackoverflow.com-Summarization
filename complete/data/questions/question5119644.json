[{"text": ["Identifying points with the smallest Euclidean distance"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a collection of n dimensional points and I want to find which 2 are the closest.", "The best I could come up for 2 dimensions is:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from numpy import *\nmyArr = array( [[1, 2],\n                [3, 4],\n                [5, 6],\n                [7, 8]] )\n\nn = myArr.shape[0]\ncross = [[sum( ( myArr[i] - myArr[j] ) ** 2 ), i, j]\n         for i in xrange( n )\n         for j in xrange( n )\n         if i != j\n         ]\n\nprint min( cross )\n</code>\n</pre>\n", "senID": 2}, {"text": ["which gives"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n [8, 0, 1]\n</code>\n</pre>\n", "senID": 4}, {"text": ["But this is too slow for large arrays.", "What kind of optimisation can I apply to it?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["RELATED:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Euclidean distance between points in two different Numpy arrays, not within"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Euclidean distance between points in two different Numpy arrays, not within", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/q/1871536/188368"}]}]