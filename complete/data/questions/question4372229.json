[{"text": ["\"Flat is better than nested\" - for data as well as code?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This question got me thinking: should we apply the principle that \"flat is better than nested\" to data as well as to code?", "Even when there is a \"logical tree structure\" to the data?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "This", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/4372073/traversing-and-modifying-a-tree-like-list-of-dict-structure/4372174#4372174"}]}, {"text": ["In this case, I suppose it would mean representing children as a list of IDs, rather than an actual list of children, with all the nodes in a single list:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [ {'id': 4, 'children': ()},\n  {'id': 2, 'children': (1, 7)},\n  {'id': 1, 'children': (6, 5)},\n  {'id': 6, 'children': ()},\n  {'id': 5, 'children': ()},\n  {'id': 7, 'children': (3,)},\n  {'id': 3, 'children': ()} ]\n</code>\n</pre>\n", "senID": 3}, {"text": ["(I used tuples because I prefer not to give myself the flexibility to mutate an object until that flexibility proves itself to be useful and usable in a clear manner.", "In any case I would never use None here instead of an empty sequence, because it complicates the logic, and \"special cases aren't special enough\" - here, it isn't special at all."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "None", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Certainly this is shorter, but the tree structure is obscured.", "Does that contradict \"explicit is better than implicit\"?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Personally I find that \"flat is better than nested\" is of limited applicability, and nowhere near the most important aspect of the Zen.", "(Certainly I could not do a lot of the nice functional-programming things that I do if I didn't allow myself significant nesting.", ") I suspect that the problem with \"nested\" is that it requires context switching when you comprehend the information.", "I really think this is more of a problem when following imperative logic than for parsing data or functional-style code - where it's easier to just mentally name the nested block, and consider its workings separately from the outer context."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["What say you?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]