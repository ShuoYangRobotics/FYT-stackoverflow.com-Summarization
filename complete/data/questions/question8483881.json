[{"text": ["defaultdict and tuples"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wanted to do the following:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n d = defaultdict((int,float))\nfor z in range( lots_and_lots):\n  d['operation one'] += (1,5.67)\n  ...\n  ...\n  d['operation two'] += (1,4.56)\n</code>\n</pre>\n", "senID": 2}, {"text": ["And then output the number of times each operation was called and the total of float value."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for k,v in d.items():\n  print k, 'Called', v[0], 'times, total =', v[1]\n</code>\n</pre>\n", "senID": 4}, {"text": ["But I don't know how to achieve this as not only can't you use a tuple as a parameter to defaultdict you can't add a tuple to a tuple and total the values in the tuple you just get extra values in your tuple.", "i.e:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = (1,0)\n&gt;&gt;&gt; x+= (2,3)\n&gt;&gt;&gt; x\n(1, 0, 2, 3)\n</code>\n</pre>\n", "senID": 6}, {"text": ["and not"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = (1,0)\n&gt;&gt;&gt; x+= (2,3)\n&gt;&gt;&gt; x\n(3,3)\n</code>\n</pre>\n", "senID": 8}, {"text": ["How can I get what I want?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]