[{"text": ["How to delete list elements while cycling the list itself without duplicate it"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I lost a little bit of time in this Python for statement:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class MyListContainer:\n    def __init__(self):\n        self.list = []\n\n    def purge(self):\n        for object in self.list:\n            if (object.my_cond()):\n                self.list.remove(object)\n        return self.list\n\ncontainer = MyListContainer()\n\n# now suppose both obj.my_cond() return True\nobj1 = MyCustomObject(par)\nobj2 = MyCustomObject(other_par)\n\ncontainer.list = [obj1, obj2]\n\n# returning not an empty list but [obj2]\ncontainer.purge()\n</code>\n</pre>\n", "senID": 2}, {"text": ["It doesn't work as I expected because when the cycle in \"purge\" delete the first object in list the second one is shifted to the beginning of the list and the cycle is ended."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I solved duplicating self.list before the for cycle:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n ...\nlocal_list = self.list[:]\nfor object in local_list:\n...\n</code>\n</pre>\n", "senID": 5}, {"text": ["I suppose that the for statement stop working because I'm changing the length of the original list.", "Can someone clarify this point ? "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["And is there a more \"elegant\" way to solve this problem ?", "If I have more than few elements inside the list, duplicating it every time does not seem a good idea."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Maybe the filter() function is the right one but i whish to have some other approach if any. "], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["I'm a newbie."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["To summarize your useful answers:"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "Never edit a list you are looping", "tag": "none", "senID": 11}, {"text": "Duplicate the list or use list comprehensions", "tag": "none", "senID": 12}, {"text": "Duplicating a list could not waste your memory or in this case who's mind about it", "tag": "none", "senID": 13}]}]