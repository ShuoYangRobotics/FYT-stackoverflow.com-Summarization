[{"text": ["Python: simple async download of url content?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a web.py server that responds to various user requests.", "One of these requests involves downloading and analyzing a series of web pages. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Is there a simple way to setup an async / callback based url download mechanism in web.py?", "Low resource usage is particularly important as each user initiated request could result in download of multiple pages."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The flow would look like:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["User request -> web.py -> Download 10 pages in parallel or asynchronously -> Analyze contents, return results"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I recognize that Twisted would be a nice way to do this, but I'm already in web.py so I'm particularly interested in something that can fit within web.py ."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]