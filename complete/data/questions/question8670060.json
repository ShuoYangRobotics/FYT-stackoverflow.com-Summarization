[{"text": ["Python elements retrieved from container (list, dict, tuple etc) passed by reference or value?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a function that updates data in a cache (implemented as a dictionary)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def updateCache(name, new_data):\n    global cache\n    info = cache[name]  # is this being passed to me as a val or ref?\n    datarows = info['datarows']\n    datarows.append(new_data)\n\n    # These will not be necessary if I was dealing with references ...?\n    # or in other words, are the following statements redundant or required?\n    info['datarows'] = datarows\n    cache[name] = info\n</code>\n</pre>\n", "senID": 2}, {"text": ["As the comment in the snippet enquires, do I need to stick the new updated objects back into the cache, or am I dealing with references to the objects stored in the dict - in which case the last two statements are redundant?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]