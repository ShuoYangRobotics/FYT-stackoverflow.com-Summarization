[{"text": ["python string join performance"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["There are a lot of articles around the web concerning python performance, the first thing you read: concatenating strings should not be done using '+': avoid s1+s2+s3, instead use str.join"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I tried the following: concatenating two strings as part of a directory path: three approaches:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here is my code:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import os,time\n\ns1='/part/one/of/dir'\ns2='part/two/of/dir'\nN=10000\n\nt=time.clock()\nfor i in xrange(N):\n    s=s1+os.sep+s2\nprint time.clock()-t\n\nt=time.clock()\nfor i in xrange(N):\n    s=os.sep.join((s1,s2))\nprint time.clock()-t\n\nt=time.clock()\nfor i in xrange(N):\n    s=os.path.join(s1,s2)\nprint time.clock()-t\n</code>\n</pre>\n", "senID": 4}, {"text": ["Here the results (python 2.5 WinXP)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n 0.0182201927899\n0.0262544541275\n0.120238186697\n</code>\n</pre>\n", "senID": 6}, {"text": ["Shouldn't it be exactly the other way round ?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]