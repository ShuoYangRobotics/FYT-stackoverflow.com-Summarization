[{"text": ["Python's trigonmetric function return unexpected values"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import math\nprint \"python calculator\"\nprint \"calc or eval\"\nwhile 0 == 0:\n    check = raw_input() #(experimental evaluation or traditional calculator)\n    if check == \"eval\":\n        a = raw_input(\"operator\\n\") #operator\n        if a == \"+\":\n            b = input(\"arg1\\n\") #inarg1\n            c = input(\"arg2\\n\") #inarg2\n            z = b + c\n            print z\n        elif a == \"-\":\n            b = input(\"arg1\\n\") #inarg1\n            c = input(\"arg2\") #inarg2\n            z = b - c\n            print z\n        elif a == \"/\":\n            b = input(\"arg1\\n\") #inarg1\n            c = input(\"arg2\\n\") #inarg2\n            z = b / c\n            print z\n        elif a == \"*\":\n            b = input(\"arg1\\n\") #inarg1\n            c = input(\"arg2]n\") #inarg2\n            z = b * c\n            print z\n        elif a == \"^\":\n            b = input(\"arg1\\n\") #inarg1\n            c = input(\"arg2\\n\") #inarg2\n            z = b ** c\n        elif a == \"sin\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.sin(b))\n            print var\n        elif a == \"asin\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.asin(b))\n            print var\n        elif a == \"cos\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.cos(b))\n            print var\n        elif a == \"acos\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.acos(b))\n            print var\n        elif a == \"tan\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.tan(b))\n            print var\n        elif a == \"atan\":\n            b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.atan(b))\n            print var\n    elif check == \"calc\" :\n        x = input() #takes input as expression\n        print x #prints expression's result\n</code>\n</pre>\n", "senID": 1}, {"text": ["Isn't the sine of 90 degrees 1?", "With this it shows up as something around 51.2?", "Google's calculator does this too?", "BTW: this is my python calculator"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n b = input(\"arg1\\n\") #inarg1\n            var = math.degrees(math.sin(b))\n            print var\n</code>\n</pre>\n", "senID": 3}, {"text": ["This one and other trig functions are the problem.", "For the most part, this was just a simple python calculator, but I wanted to add some trig functions."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]