[{"text": ["Should I make my python code less fool-proof to improve readability?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I try to make my code fool-proof, but I've noticed that it takes a lot of time to type things out and it takes more time to read the code."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Instead of:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class TextServer(object):\n    def __init__(self, text_values):\n        self.text_values = text_values\n        # &lt;more code&gt;\n    # &lt;more methods&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["I tend to write this:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n class TextServer(object):\n    def __init__(self, text_values):\n        for text_value in text_values:\n            assert isinstance(text_value, basestring), u'All text_values should be str or unicode.'\n            assert 2 &lt;= len(text_value), u'All text_values should be at least two characters long.'\n        self.__text_values = frozenset(text_values) # &lt;They shouldn't change.&gt;\n        # &lt;more code&gt;\n    @property\n    def text_values(self):\n        # &lt;'text_values' shouldn't be replaced.&gt;\n        return self.__text_values\n    # &lt;more methods&gt;\n</code>\n</pre>\n", "senID": 5}, {"text": ["Is my python coding style too paranoid?", "Or is there a way to improve readability while keeping it fool-proof?"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "paranoid", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": "Note 1: I've added the comments between ", "tag": "none", "senID": 7}, {"text": "Note 2: The main fool I try to prevent to abuse my code is ", "tag": "none", "senID": 8}]}]