[{"text": ["Python/PySerial bit operator on string"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm using PySerial (Python 2.7) to read information from a device like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["buffer += ser.read(3)"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Now I have three bytes in buffer (i.e.", "0xAE0259) which is of type str.", "Since I'm new to Python, I'm looking for the \"pythonian\" way to cut off the left most (0xAE) of the three bytes and then interpret the remaining two as int.", "First I thought of a bit mask: buffer &amp;= 0xFFFF\nbut python won't let me use bit operators on str.", "Any attempt to convert buffer to int failed as well.", "Then I read about the 'bitstring module' which let's me slice ranges of bits out of a BitArray, but I guess that using it for this would be a little over the top?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]