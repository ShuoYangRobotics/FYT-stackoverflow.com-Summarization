[{"text": ["Evaluating a mathematical expression in a string"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n stringExp = \"2^4\"\nintVal = int(stringExp)      # Expected value: 16\n</code>\n</pre>\n", "senID": 1}, {"text": ["This returns the following error:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n Traceback (most recent call last):  \nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nValueError: invalid literal for int()\nwith base 10: '2^4'\n</code>\n</pre>\n", "senID": 3}, {"text": ["I know that eval can work around this, but isn't there a better and - more importantly - safer method to evaluate a mathematical expression that is being stored in a string?"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "eval", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]