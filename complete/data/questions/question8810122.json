[{"text": ["How to join links in Python to get a cycle?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list of links and want to know the joined path/cycle."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["My links look like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [[0, 3], [1, 0], [3, 1]]\n</code>\n</pre>\n", "senID": 3}, {"text": ["And I want the answer to be a cycle like that (or any other matching cycle):"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n [0,3,1]\n</code>\n</pre>\n", "senID": 5}, {"text": ["So you take the first element of the first sublist, then you take the second element and you look for the next sublist starting with this element, and you start all over again."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Is there an elegant way to accomplish this?", "I tried the reduce function but then the links have to be sorted in a way that the links match."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]