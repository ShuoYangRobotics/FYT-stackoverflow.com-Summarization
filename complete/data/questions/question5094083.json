[{"text": ["find the \"overlap\" between 2 python lists"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Given 2 lists:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n a = [3,4,5,5,5,6]\nb = [1,3,4,4,5,5,6,7]\n</code>\n</pre>\n", "senID": 2}, {"text": ["I want to find the \"overlap\":"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n c = [3,4,5,5,6]\n</code>\n</pre>\n", "senID": 4}, {"text": ["I'd also like it if i could extract the \"remainder\" the part of a and b that's not in c."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n a_remainder = [5,]\nb_remainder = [1,4,7,]\n</code>\n</pre>\n", "senID": 6}, {"text": ["Note:\na has three 5's in it and b has two.", "b has two 4's in it and a has one."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["The resultant list c should have two 5's (limited by list b) and one 4 (limited by list a)."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["This gives me what i want, but I can't help but think there's a much better way."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n import copy\n\na = [3,4,5,5,5,6]\nb = [1,3,4,4,5,5,6,7]\n\nc = []\nfor elem in copy.deepcopy(a):\n    if elem in b:\n        a.pop(a.index(elem))\n        c.append(b.pop(b.index(elem)))\n\n# now a and b both contain the \"remainders\" and c contains the \"overlap\"\n</code>\n</pre>\n", "senID": 10}, {"text": ["On another note, what is a more accurate name for what I'm asking for than \"overlap\" and \"remainder\"?"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["edit: In the original post, I  had mistakenly typed that the desired result was a_remainder == [4,] -- Andrew Jaffe correctly pointed out that a_remainder should be [5,]."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}]