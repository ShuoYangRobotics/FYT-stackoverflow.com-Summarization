[{"text": ["Python Dictionary or Alternative"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["For instance,"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if dict['sample']:\n    //append values to dict['sample']\nelse:\n    // assign new key to the python dictionary\n</code>\n</pre>\n", "senID": 2}, {"text": ["If dict['sample'] is empty, Python will throw errors.", "Does anyone know a better way to check on this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["All I want is something like that, I will have list of data, let's say a,a,b,c,g,g,g,g,g."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["So, I want python dictionary to append the values of two a,a to dict['a'], and g,g,g,g,g to dict['g'] and so the rest as dict['b'] etc.", "A for loop will be executed to loop through the data of a,a,b,c,g,g,g,g,g."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I hope I've made my question clear.", "Any idea?", "Preferably, if Python's dictionary has a way to check existing key."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["EDIT"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Credit goes to @Paul McGuire.", "I've figured out the exact solution I wanted based on @Paul McGuire's answer.", "As shown below:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n from collections import defaultdict\n\nclass Test:\n   def __init__(self, a,b):\n       self.a=a\n       self.b=b\n\ndata = []\ndata.append(Test(a=4,b=6))\ndata.append(Test(a=1,b=2))\ndata.append(Test(a=1,b=3))\ndata.append(Test(a=2,b=2))\ndata.append(Test(a=3,b=2))\ndata.append(Test(a=4,b=5))\ndata.append(Test(a=4,b=2))\ndata.append(Test(a=1,b=2))\ndata.append(Test(a=5,b=9))\ndata.append(Test(a=4,b=7))\n\ndd = defaultdict(list)\nfor c in data:\n    dd[c.a].append(c.b)\nprint dd\n</code>\n</pre>\n", "senID": 9}]