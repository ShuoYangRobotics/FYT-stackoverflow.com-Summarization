[{"text": ["Confusing [...] List in Python: What is it?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["So I was writing up a simple binary tree in Python and came across [...]"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I don't believe this to be related to the Ellipsis object, more it seems to have something to do with an infinity loop (due to Python's shallow copy?).", "The source of this infinity loop and why it doesn't get expanded while expanding when accessed is something I'm completely lost to, however\n"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a\n[[[[[], [], 8, 3], [[], [], 3, 2], 6, 3], [], 1, 4], [[], [], -4, 2], 0, 0]\n&gt;&gt;&gt; Keys(a)#With a+b\n[0, 1, 6, 8, 3, -4]\n&gt;&gt;&gt; Keys(a)#With [a,b]\n[8, [...], [...], 3, [...], [...], 6, [...], [...], 1, [...], [...], -4, [...], [...], 0, [...], [...]]\n&gt;&gt;&gt; Keys(a)[1]#??\n[8, [...], [...], 3, [...], [...], 6, [...], [...], 1, [...], [...], -4, [...], [...], 0, [...], [...], 8, [...], [...], 3, [...], [...], 6, [...], [...], 1, [...], [...], -4, [...], [...], 0, [...], [...]]\n</code>\n</pre>\n", "senID": 3}, {"senID": 4}, {"text": ["Version using a+b"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n def Keys(x,y=[]):\n    if len(x):y+=[x[2]]+Keys(x[0],y)+Keys(x[1],y)#Though it seems I was using y=y[:]+, this actually outputs an ugly mess\n    return y\n</code>\n</pre>\n", "senID": 6}, {"text": ["version using [a,b]"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n def Keys(x,y=[]):\n    if len(x):y+=[x[2],Keys(x[0],y),Keys(x[1],y)]\n    return y\n</code>\n</pre>\n", "senID": 8}, {"text": ["So what exactly is [...]?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]