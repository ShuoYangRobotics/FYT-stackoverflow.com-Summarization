[{"text": ["Regular expression for repeating sequence"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to match three-character sequences of letters (only letters 'a', 'b', 'c' are allowed) separated by comma (last group is not ended with comma)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Examples:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n abc,bca,cbb\nccc,abc,aab,baa\nbcb\n</code>\n</pre>\n", "senID": 3}, {"text": ["I have written following regular expression:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n re.match('([abc][abc][abc],)+', \"abc,defx,df\")\n</code>\n</pre>\n", "senID": 5}, {"text": ["However it doesn't work correctly, because for above example:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; print bool(re.match('([abc][abc][abc],)+', \"abc,defx,df\")) # defx in second group\nTrue\n&gt;&gt;&gt; print bool(re.match('([abc][abc][abc],)+', \"axc,defx,df\")) # 'x' in first group\nFalse\n</code>\n</pre>\n", "senID": 7}, {"text": ["It seems only to check first group of three letters but it ignores the rest.", "How to write this regular expression correctly?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]