[{"text": ["Importing a long list of constants to a Python file"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Python, is there an analogue of the C preprocessor statement such as?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "C", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["#define MY_CONSTANT 50"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "#define MY_CONSTANT 50", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Also, I have a large list of constants I'd like to import to several classes.", "Is there an analogue of declaring the constants as a long sequence of statements like the above in a .py file and importing it to another .py file?"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": ".py", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": ".py", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Edit."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["The file Constants.py reads:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Constants.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n# encoding: utf-8\n\"\"\"\nConstants.py\n\"\"\"\n\nMY_CONSTANT_ONE = 50\nMY_CONSTANT_TWO = 51\n</code>\n</pre>\n", "senID": 6}, {"text": ["And myExample.py reads:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "myExample.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n #!/usr/bin/env python\n# encoding: utf-8\n\"\"\"\nmyExample.py\n\"\"\"\n\nimport sys\nimport os\n\nimport Constants\n\nclass myExample:\n    def __init__(self):\n        self.someValueOne = Constants.MY_CONSTANT_ONE + 1\n        self.someValueTwo = Constants.MY_CONSTANT_TWO + 1\n\nif __name__ == '__main__':\n    x = MyClass()\n</code>\n</pre>\n", "senID": 8}, {"text": ["Edit."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["From the compiler,"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]