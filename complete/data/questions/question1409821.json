[{"text": ["Python code readability"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a programming experience with statically typed languages.", "Now writing code in Python I feel difficulties with its readability.", "Lets say I have a class Host:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Host", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n class Host(object):\n  def __init__(self, name, network_interface):\n    self.name = name\n    self.network_interface = network_interface\n</code>\n</pre>\n", "senID": 2}, {"text": ["I don't understand from this definition, what \"*network_interface*\" should be.", "Is it a string, like \"eth0\" or is it an instance of a class NetworkInterface?", "The only way I'm thinking about to solve this is a documenting the code with a \"docstring\".", "Something like this:"], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "string", "childNum": 0, "tag": "em", "pos": 1, "childList": []}, {"text": "eth0", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "NetworkInterface", "childNum": 0, "tag": "em", "pos": -1, "childList": []}, {"text": "docstring", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n class Host(object):\n  ''' Attributes:\n      @name: a string\n      @network_interface: an instance of class NetworkInterface'''\n</code>\n</pre>\n", "senID": 4}, {"text": ["Or may be there are name conventions for things like that?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]