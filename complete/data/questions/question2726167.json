[{"text": ["Parse a CSV file using python (to make a decision tree later)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["First off, full disclosure: This is going towards a uni assignment, so I don't want to receive code.", ":).", "I'm more looking for approaches; I'm very new to python, having read a book but not yet written any code."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "very", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"text": ["The entire task is to import the contents of a CSV file, create a decision tree from the contents of the CSV file (using the ID3 algorithm), and then parse a second CSV file to run against the tree.", "There's a big (understandable) preference to have it capable of dealing with different CSV files (I asked if we were allowed to hard code the column names, mostly to eliminate it as a possibility, and the answer was no)."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "ID3 algorithm", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/ID3_algorithm"}]}, {"text": ["The CSV files are in a fairly standard format; the header row is marked with a # then the column names are displayed, and every row after that is a simple series of values.", "Example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n # Column1, Column2, Column3, Column4\nValue01, Value02, Value03, Value04\nValue11, Value12, Value13, Value14\n</code>\n</pre>\n", "senID": 4}, {"text": ["At the moment, I'm trying to work out the first part: parsing the CSV.", "To make the decisions for the decision tree, a dictionary structure seems like it's going to be the most logical; so I was thinking of doing something along these lines:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n Read in each line, character by character\nIf the character is not a comma or a space\n    Append character to temporary string\nIf the character is a comma\n    Append the temporary string to a list\n    Empty string\nOnce a line has been read\n    Create a dictionary using the header row as the key (somehow!)\n    Append that dictionary to a list\n</code>\n</pre>\n", "senID": 6}, {"text": ["However, if I do things that way, I'm not sure how to make a mapping between the keys and the values.", "I'm also wondering whether there is some way to perform an action on every dictionary in a list, since I'll need to be doing things to the effect of \"Everyone return their values for columns Column1 and Column4, so I can count up who has what!", "\" - I assume that there is some mechanism, but I don't think I know how to do it."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Is a dictionary the best way to do it?", "Would I be better off doing things using some other data structure?", "If so, what?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]