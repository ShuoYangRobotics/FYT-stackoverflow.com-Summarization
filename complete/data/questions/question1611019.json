[{"text": ["Python: static variable decorator"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to create a decorator like below, but I can't seem to think of an implementation that works.", "I'm starting to think it's not possible, but thought I would ask you guys first."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I realize there's various other ways to create static variables in Python, but I find those ways ugly.", "I'd really like to use the below syntax, if possible."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n @static(x=0)\ndef f():\n    x += 1\n    print x\n\nf() #prints 1\nf() #prints 2\n</code>\n</pre>\n", "senID": 3}, {"text": ["I don't care if the implementation of static is long or hackity, as long as it works like above."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "static", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I created this version, but it only allows a &lt;function&gt;.&lt;varname&gt; syntax, which gets cumbersome pretty quickly with longer function and variable names."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "&lt;function&gt;.&lt;varname&gt;", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def static(**assignments):\n    def decorate(func):\n        for var, val in assignments.items():\n            setattr(func, var, val)\n        return func\n    return decorate\n</code>\n</pre>\n", "senID": 6}, {"text": ["Various things I thought of, but couldn't get to work were:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]