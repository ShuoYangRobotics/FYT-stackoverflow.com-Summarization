[{"text": ["How can I improve this number2words script"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n import sys\n\nwords = {\n    1 : 'one',\n    2 : 'two',\n    3 : 'three',\n    4 : 'four',\n    5 : 'five',\n    6 : 'six',\n    7 : 'seven',\n    8 : 'eight',\n    9 : 'nine',\n    10 : 'ten',\n    11 : 'eleven',\n    12 : 'twelve',\n    13 : 'thirteen',\n    14 : 'fourteen',\n    15 : 'fifteen',\n    16 : 'sixteen',\n    17 : 'seventeen',\n    18 : 'eighteen',\n    19 : 'nineteen'\n}\n\ntens = [\n    '',\n    'twenty',\n    'thirty',\n    'forty',\n    'fifty',\n    'sixty',\n    'seventy',\n    'eighty',\n    'ninety',\n]\n\nplaceholders = [\n    '',\n    'thousand',\n    'million',\n    'billion',\n    'trillion',\n    'quadrillion'\n]\n\n# segMag = segment magnitude (starting at 1)\ndef convertTrio(number):\n    return ' '.join([words[int(number[0])],  'hundred',  convertDuo(number[1:3])]) # convertDuo(number[1:3])\n\n\ndef convertDuo(number):\n    #if teens or less\n    if int(number[0]) == 1:\n        return words[int(number)]\n    #twenty-five\n    else:\n        return tens[int(number[0]) - 1] + '-' + words[int(number[1])]\n\n\nif __name__ == \"__main__\":\n\n    string = []\n    numeralSegments = []\n    numeral = sys.argv[1]\n\n    if int(numeral) &lt; 100:\n        print convertDuo(numeral)\n    else:\n\n        # split number into lists, grouped in threes\n        for i in range (0, len(numeral), 3):\n            numeralSegments.append(numeral[i:i+3])\n\n        numeralSegments.reverse()\n\n        # for every segment, convert to trio word and append thousand, million, etc depending on magnitude\n        for i in range (len(numeralSegments)):\n            string.append(convertTrio(numeralSegments[i]) + ' ' + placeholders[i])\n\n        # reverse the list of strings before concatenating to commas\n        string.reverse()        \n        print ', '.join(string)\n</code>\n</pre>\n", "senID": 1}, {"text": ["Warning: I'm a total python novice.", "I'm aware there are probably many times more efficient ways of doing things.", "I'd appreciate any pointers to them."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Warning", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Edit: The code currently only works for numbers whose digit counts are multiples of three.", "I'd appreciate a suggestion for an elegant way to fix that as well.", "Thanks."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]