[{"text": ["Python: How to make a cross-module variable?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["The __debug__ variable is handy in part because it affects every module.", "If I want to create another variable that works the same way, how would I do it?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "__debug__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["The variable (let's be original and call it 'foo') doesn't have to be truly global, in the sense that if I change foo in one module, it is updated in others.", "I'd be fine if I could set foo before importing other modules and then they would see the same value for it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]