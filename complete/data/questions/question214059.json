[{"text": ["How can I write a wrapper around ngrep that highlights matches?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I just learned about ngrep, a cool program that lets you easily sniff packets that match a particular string."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "ngrep", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://ngrep.sourceforge.net/"}]}, {"text": ["The only problem is that it can be hard to see the match in the big blob of output.", "I'd like to write a wrapper script to highlight these matches -- it could use ANSI escape sequences:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n echo -e 'This is \\e[31mRED\\e[0m.'\n</code>\n</pre>\n", "senID": 3}, {"text": ["I'm most familiar with Perl, but I'm perfectly happy with a solution in Python or any other language.", "The simplest approach would be something like:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n while (&lt;STDIN&gt;) {\n   s/$keyword/\\e[31m$keyword\\e[0m/g;\n   print;\n}\n</code>\n</pre>\n", "senID": 5}, {"text": ["However, this isn't a nice solution, because ngrep prints out hash marks without newlines whenever it receives a non-matching packet, and the code above will suppress the printing of these hashmarks until the script sees a newline."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Is there any way to do the highlighting without inhibiting the instant appearance of the hashmarks?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]