[{"text": ["Python, lambda, find minimum"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have foreach function which calls specified function on every element which it contains.", "I want to get minimum from thise elements but I have no idea how to write lambda or function or even a class that would manage that.", "Thanks for every help.", "I use my foreach function like this:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "hr", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n o.foreach( lambda i: i.call() )\n</code>\n</pre>\n", "senID": 2}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n o.foreach( I.call )\n</code>\n</pre>\n", "senID": 4}, {"text": ["I don't like to make a lists or other objects.", "I want to iterate trough it and find min."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I manage to write a class that do the think but there should be some better solution than that:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n class Min:                                           \n    def __init__(self,i):                        \n        self.i = i                              \n    def get_min(self):                               \n        return self.i                                \n    def set_val(self,o):                             \n        if o.val &lt; self.i: self.i = o.val\n\nm = Min( xmin )\nself.foreach( m.set_val )                            \nxmin = m.get_min()\n</code>\n</pre>\n", "senID": 7}, {"tag": "hr", "senID": 8}, {"text": ["Ok, so I suppose that my .foreach method is non-python idea.", "I should do my Class iterable because all your solutions are based on lists and then everything will become easier."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["In C# there would be no problem with lambda function like that, so I though that python is also that powerful."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]