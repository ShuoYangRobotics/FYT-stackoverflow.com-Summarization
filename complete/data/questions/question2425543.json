[{"text": ["Python: list assignment out of range"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This module is part of a simple todo app I made with Python... "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def deleteitem():\n             showlist()\n             get_item = int(raw_input( \"\\n Enter number of item to delete: \\n\"))\n             f = open('todo.txt')\n             lines = f.readlines()\n             f.close()\n             lines[get_item] = \"\"\n             f = open('todo.txt','w')\n             f.writelines(lines)\n             f.close()\n             showlist()\n</code>\n</pre>\n", "senID": 2}, {"text": ["The number of lines in f obviously changes as items are added to the list...", "Problem here is that for example if a user enters '10' when there are only 9 lines in the file ( or anything else not in range) , it exits as expected with :"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n IndexError: list assignment index out of range\n</code>\n</pre>\n", "senID": 4}, {"text": ["What can I add to the module so as to have it prompt user to enter an item within the range?", "I am assuming maybe a Try block ... Or is there a way to catch an exception..", "I am guessing there is an easy way to do this..."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]