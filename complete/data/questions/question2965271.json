[{"text": ["Forced naming of parameters in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In python you may have a function definition:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def info(object, spacing=10, collapse=1)\n</code>\n</pre>\n", "senID": 2}, {"text": ["which could be called in any of the following ways:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n info(odbchelper)                    \ninfo(odbchelper, 12)                \ninfo(odbchelper, collapse=0)        \ninfo(spacing=15, object=odbchelper)\n</code>\n</pre>\n", "senID": 4}, {"text": ["thanks to python's allowing of any-order arguments, so long as they're named. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["The problem we're having is as some of our larger functions grow, people might be adding parameters between spacing and collapse, meaning that the wrong values may be going to parameters that aren't named.", "In addition sometimes it's not always clear as to what needs to go in.", "We're after a way to force people to name certain parameters - not just a coding standard, but ideally a flag or pydev plugin?"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "spacing", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "collapse", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["so that in the above 4 examples, only the last would pass the check as all the parameters are named."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Odds are we'll only turn it on for certain functions, but any suggestions as to how to implement this - or if it's even possible would be appreciated."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]