[{"text": ["Add class to Django label_tag() output"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need some way to add a class attribute to the output of the label_tag() method for a forms field. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I see that there is the ability to pass in an attrs dictionary and I have tested it in the shell and I can do something like:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for field in form:\n    print field.label_tag(attrs{'class':'Foo'})\n</code>\n</pre>\n", "senID": 3}, {"text": ["I will see the class='Foo' in my output, but I don't see a way to add an attrs argument from the template - in fact, templates are designed specifically against that, no?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Is there a way in my form definition to define the class to be displayed in the label?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["In the form, I can do the following to give the inputs a class"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n self.fields['some_field'].widget.attrs['class'] = 'Foo'\n</code>\n</pre>\n", "senID": 7}, {"text": ["I just need to have it output the class for the  as well."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]