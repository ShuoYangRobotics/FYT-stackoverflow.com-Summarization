[{"text": ["Python import coding style"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've discovered a new pattern.", "Is this pattern well known or what is the opinion about it?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Basically, I have a hard time scrubbing up and down source files to figure out what module imports are available and so forth, so now, instead of"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import foo\nfrom bar.baz import quux\n\ndef myFunction():\n    foo.this.that(quux)\n</code>\n</pre>\n", "senID": 3}, {"text": ["I move all my imports into the function where they're actually used., like this:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def myFunction():\n    import foo\n    from bar.baz import quux\n\n    foo.this.that(quux)\n</code>\n</pre>\n", "senID": 5}, {"text": ["This does a few things.", "First, I rarely accidentally pollute my modules with the contents of other modules.", "I could set the __all__ variable for the module, but then I'd have to update it as the module evolves, and that doesn't help the namespace pollution for code that actually lives in the module."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "__all__", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["Second, I rarely end up with a litany of imports at the top of my modules, half or more of which I no longer need because I've refactored it.", "Finally, I find this pattern MUCH easier to read, since every referenced name is right there in the function body."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]