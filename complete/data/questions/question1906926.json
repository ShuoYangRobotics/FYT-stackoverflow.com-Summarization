[{"text": ["python unbound method again"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This gets me into difficult time (sorry, i am still very new to python)\nThank you for any kind of help."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The error"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This Student.MostFrequent() is called all the way in the end (last line) and the def is last def in the class"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDITED - Naming convention"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["My long code"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n import csv\nclass Student:\n    sports = []\n    ftopics = []\n    stopics = []\n    choice_list = []\n    choice_dict = {}\n    def __init__(self, row):\n       self.lname, self.fname, self.ID, self.gender, self.sport, self.movie, self.movieyr, self.country, self.ftopic, self.stopic = row\n       self.sports.append(self.sport)\n       self.ftopics.append(self.ftopic)\n       self.stopics.append(self.stopic)\n    def print_information(self):\n       return (self.lname, self.fname, self.ID, self.gender)\n    def print_first(self):\n       return (self.lname, self.fname, self.sport)\n    def print_second(self):\n        return (self.lname, self.fname, self.movie, self.movieyr)\n    def print_third(self):\n        return (self.lname, self.fname, self.country)\n    def print_fourth(self):\n        return (self.lname, self.fname, self.ftopic, self.stopic)\n    def most_frequent(self):\n        for choice in self.choice_list:\n                self.choice_dict[choice] = self.choice_dict.get(choice, 0) + 1\n        self.mostFrequent = sorted([(v, k) for k, v in self.choice_dict.items()], reverse=True)\n        print self.mostFrequent\n\nreader = csv.reader(open('new_mondy_csc_data_revise.csv'), delimiter=',', quotechar='\"')\nheader = tuple(reader.next())\nprint \"%-17s|%-10s|%-6s|%s\" %header[:4]\nprint \"-\" * 45\nstudents = list(map(Student, reader)) # read all remaining lines\nfor student in students:\n    print \"%-17s|%-10s|%-6s|%3s\" % student.print_information()\n\nprint \"%-17s|%-10s|%s\" %(header[0],header[1],header[4])\nprint \"-\" * 45\nfor student in students:\n    print \"%-17s|%-10s|%s\" %student.print_first()\n\nprint \"%-17s|%-10s|%-16s|%s\" %(header[0],header[1],header[5],header[6])\nprint \"-\" * 45\nfor student in students:\n    print \"%-17s|%-10s|%-16s|%s\" % student.print_second()\n\nprint \"%-17s|%-10s|%s\" %(header[0],header[1],header[7])\nprint \"-\" * 45\nfor student in students:\n    print \"%-17s|%-10s|%s\" %student.print_third()\n\nprint \"%-17s|%-10s|%-15s|%s\" %(header[0],header[1],header[8],header[9])\nprint \"-\" * 45\nfor student in students:\n    print \"%-17s|%-10s|%-16s|%s\" % student.print_fourth()\n\nk = len(students)    \n# Printing all sports that are specified by students\nfor s in set(Student.sports): # class attribute\n    print s, Student.sports.count(s), round(((float(Student.sports.count(s)) / k) *100),1)\n\n# Printing sports that are not picked \nallsports = ['Basketball','Football','Other','Baseball','Handball','Soccer','Volleyball','I do not like sport']\nallsports.sort()\nfor s in set(allsports) - set(Student.sports):\n    print s, 0, '0%'\nStudent.choice_list = Student.sports\nX = Student()\nX.most_frequent()\n\n#class Search(Student):\n#    def __init__(self):\n#        Student.__init__\n</code>\n</pre>\n", "senID": 6}]