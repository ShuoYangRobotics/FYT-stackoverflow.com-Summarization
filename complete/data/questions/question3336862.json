[{"text": ["Python Permutation code"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Started to learn programming 2 months ago, in one of my little projects i encountered the need to generate permutations of list of objects.", "I knew that i'll find how to do this if i'll just searched for it, but i wanted to make one of my own, so i worked up and made my own permutation generator code:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def perm(lst, c = [], x = 0):\n    i = -1\n    g = len(lst) - 1\n    if x == g:\n        while i &lt; g:\n            i += 1\n            if lst[i] in c:\n                continue\n            c.append(lst[i])\n            print(c)\n            del c[-1]\n            i = g\n    else:\n        while i &lt; g:\n            if x == 0:\n                del c[:]\n            elif g == x:\n                del c[-1]\n            elif len(c) &gt; x:\n                del c[-1]\n                continue\n            i += 1\n            if lst[i] in c:\n                continue\n            c.append(lst[i])\n            x + 1\n            perm(lst, c, x + 1)\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is what it gives if i run it:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n perm(range(2))\n[0, 1]\n[1, 0]\n\nperm([1, 4, 5])\n[1, 4, 5]\n[1, 5, 4]\n[4, 1, 5]\n[4, 5, 1]\n[5, 1, 4]\n[5, 4, 1]\n</code>\n</pre>\n", "senID": 4}, {"text": ["It works as i expected, but when i use bigger lists it take some time for it to generate all the permutations of the list.", "So all i want is hints on how to improve my code, only hints.", "Or if you can tell me what should i learn to be able to make a better generator?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Thanks in advance for all the helpers."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]