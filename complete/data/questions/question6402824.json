[{"text": ["filter map vs list comprehension"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is filter/map equivalent to list comprehension?", "Suppose I have the following function"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def fib_gen():\n    a,b = 0,1\n    yield 0\n    yield 1\n    while True:\n        a,b = b,a+b\n        yield b\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I can use list comprehension to list fib numbers:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n a = fib_gen()\nprint [a.next() for i in range(int(sys.argv[1]))]\n</code>\n</pre>\n", "senID": 4}, {"text": ["Suppose I want to list only even fib numbers.", "I would do the following with filter/map:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n a = fib_gen()\nprint filter(even, map(lambda x: a.next(), range(int(sys.argv[1]))))\n</code>\n</pre>\n", "senID": 6}, {"text": ["How can I get the same result with list comprehension?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]