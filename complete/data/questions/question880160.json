[{"text": ["How do you know when looking at the list of attributes and methods listed in a dir which are attributes and which are methods?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am working through trying to learn to program in Python and am focused on getting a better handle on how to use Standard and other modules.", "The dir function seems really powerful in the interpreter but I wonder if I am missing something because of my lack of OOP background.", "Using S.Lotts book I decided to use his Die class to learn more about syntax and use of classes and instances.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here is the original code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class Die(object):\n''' simulate a six-sided die '''\ndef roll(self):\n\tself.value=random.randrange(1,7)\n\treturn self.value\ndef getValue(self):\n\treturn self.value\n</code>\n</pre>\n", "senID": 3}, {"text": ["I was looking at that and after creating some instances I wondered if the word value was a  keyword somehow and what the use of the word object in the class statement did and so I decided to find out by changing the class definition to the following:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n class Die():\n''' simulate a six-sided die '''\ndef roll(self):\n\tself.ban=random.randrange(1,7)\n\treturn self.ban\ndef getValue(self):\n\treturn self.ban\n</code>\n</pre>\n", "senID": 5}, {"text": ["That change showed me that I got the same behavior from my instances but the following methods/attributes were missing from the instances when I did dir:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n '__class__', '__delattr__', '__dict__', '__doc__', '__getattribute__',\n '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__',\n_repr__', '__setattr__', '__str__', '__weakref__'\n</code>\n</pre>\n", "senID": 7}, {"text": ["I also figured out that when I did a dir on an instance I had an additional keyword-ban which I finally figured out was an attribute of my instance.", "This helped me understand that I could use d1.ban to access the value of my instance.", "The only reason I could figure out that this was an attribute was I typed d1.happy and got an AttributeError  I figured out that d1.GetValue was a method attached to Die because that is what the interpreter told me.  "], "childNum": 5, "tag": "p", "senID": 8, "childList": [{"text": "ban", "childNum": 0, "tag": "b", "pos": 0, "childList": []}, {"text": "d1.ban", "childNum": 0, "tag": "b", "pos": 1, "childList": []}, {"text": "d1.happy", "childNum": 0, "tag": "b", "pos": 2, "childList": []}, {"text": "AttributeError", "childNum": 0, "tag": "b", "childList": []}, {"text": "d1.GetValue", "childNum": 0, "tag": "b", "childList": []}]}, {"text": ["So when I am trying to use some complicated but helpful module like BeautifulSoup how can I know which of the things that are listed are attributes of my instance or methods of my instance after typing dir(instance).", "I would need to know this because this poking around has taught me that with attributes I am calling the result of a method and with methods I am invoking a function on my instance."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "dir(instance)", "childNum": 0, "tag": "b", "pos": 0, "childList": []}]}, {"text": ["This question is probably too wordy but it sure did help me better understand the difference between attributes and methods.", "Specifically, when I look at the result of calling dir on an instance of my Die class I see this"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n ['__doc__', '__module__', 'ban', 'getValue', 'roll']\n</code>\n</pre>\n", "senID": 11}, {"text": ["So it would seem useful to know by looking at that list which are attributes and which are methods without having to resort to trial and error or result to typing in hasattr(myInstance,suspectedAttributeName)."], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "hasattr(myInstance,suspectedAttributeName)", "childNum": 0, "tag": "b", "pos": 0, "childList": []}]}, {"text": ["After posting the question I tried "], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"code": "<pre>\n<code>\n for each in dir(d1):\n    print hasattr(d1,each)\n</code>\n</pre>\n", "senID": 14}, {"text": ["which tells me strictly speaking that all methods are attributes.", "but I can't call a method without the () so it seems to me that the hasattr() is misleading."], "childNum": 1, "tag": "p", "senID": 15, "childList": [{"text": "()", "childNum": 0, "tag": "b", "pos": 1, "childList": []}]}]