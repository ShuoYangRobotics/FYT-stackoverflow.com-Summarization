[{"text": ["Easy way of finding decimal places"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there an easy way or integrated function to find out the decimal places of a floating point number?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The number is parsed from a string, so one way is to count the digits after the '.", "' sign, but that looks quite clumsy to me.", "Is there a possibility to get the information needed out of a float or Decimal object?"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "float", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "Decimal", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["SOLUTION (one of them, of course :) )"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "SOLUTION", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I chose to use the python decimal.Decimal class to help me with my problem:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n e = abs(Decimal(string_value).as_tuple().exponent)\n</code>\n</pre>\n", "senID": 5}, {"text": ["NOTE: this only works when the parameter from which the Decimal is constructed is a string and not a float (which would lead to floating point inaccuracies)."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Thanks a lot for all other contributions."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]