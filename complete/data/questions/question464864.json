[{"text": ["Python code to pick out all possible combinations from a list?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list with 15 numbers in, and I need to write some code that produces all 32,768 combinations of those numbers. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've found some code (by googling) that apparently does what I'm looking for, but I found the code fairly opaque and am wary of using it.", "Plus I have a feeling there must be a more elegant solution."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "some code", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://desk.stinkpot.org:8080/tricks/index.php/2008/04/get-all-possible-combinations-of-a-lists-elements-in-python/"}]}, {"text": ["The only thing that occurs to me would be to just loop through the decimal integers 1-32768 and convert those to binary, and use the binary representation as a filter to pick out the appropriate numbers. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Does anyone know of a better way?", "Using map(), maybe?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Thanks,"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Ben"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]