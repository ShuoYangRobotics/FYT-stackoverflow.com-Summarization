[{"text": ["Iterate over a string 2 (or n) characters at a time in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Earlier today I needed to iterate over a string 2 characters at a time for parsing a string formatted like \"+c-R+D-E\" (there are a few extra letters)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "\"+c-R+D-E\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I ended up with this, which works, but it looks ugly.", "I ended up commenting what it was doing because it felt non-obvious.", "It almost seems pythonic, but not quite."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n # Might not be exact, but you get the idea, use the step\n# parameter of range() and slicing to grab 2 chars at a time\ns = \"+c-R+D-e\"\nfor op, code in (s[i:i+2] for i in range(0, len(s), 2)):\n  print op, code\n</code>\n</pre>\n", "senID": 3}, {"text": ["Are there some better/cleaner ways to do this?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]