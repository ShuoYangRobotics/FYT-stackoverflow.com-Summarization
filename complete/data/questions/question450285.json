[{"text": ["Executing command line programs from within python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm building a web application that will is going to manipulate (pad, mix, merge etc) sound files and I've found that sox does exactly what I want.", "Sox is a linux command line program and I'm feeling a little uncomfortable with having the python web app starting new sox processes on my server on a per request basis. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "sox", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://sox.sourceforge.net/"}]}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import os\nos.system('sox input.wav -b 24 output.aiff rate -v -L -b 90 48k')\n</code>\n</pre>\n", "senID": 3}, {"text": ["This whole setup seems a little unstable to me."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["So my question is, what's the best practice for running command line programs from within  a python (or any scripting language) web app?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Message queues would be one thing to implement in order to get around the whole request response cycle.", "But is there other ways to make these things more elegant?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]