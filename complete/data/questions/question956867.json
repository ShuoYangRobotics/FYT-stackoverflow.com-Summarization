[{"text": ["How to get string Objects instead Unicode ones from JSON in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm using Python (Python 2.5.2 on Ubuntu 8.10) to parse JSON from (ASCII encoded) text files.", "When loading these files with json (simplejson), all my string values are cast to Unicode objects instead of string objects."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "json", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["The problem is, I have to use the data with some libraries that only accept string objects."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Is it possible to get string objects instead unicode ones from simplejson?", "Any hints on how I can achieve this automatically?"], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "simplejson", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "Any hints on how I can achieve this automatically?", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["Edit: I can't change the libraries nor update them.", "One - the csv module - is even in the Python standard library (the documentation says it will support Unicode in the future).", "I could write wrappers of course, but maybe there is a more convenient way?"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "csv", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["The actual data I parse from the JSON files is rather nested and complex, so it would be a pain to look for every Unicode object therein and cast it manually... "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Here's a small example:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n >>> import simplejson as json\n>>> l = ['a', 'b']\n>>> l\n['a', 'b']\n>>> js = json.dumps(l)\n>>> js\n'[\"a\", \"b\"]'\n>>> nl = json.loads(js)\n>>> nl\n[u'a', u'b']\n</code>\n</pre>\n", "senID": 7}, {"text": ["Update: I completely agree with Jarret Hardie and nosklo: Since the JSON specs specifically state strings as Unicode simplejson should return Unicode objects."], "childNum": 3, "tag": "p", "senID": 8, "childList": [{"text": "Update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"href": "http://www.json.org/", "text": "JSON specs", "childNum": 0, "tag": "a", "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["But while searching the net, I came across some post, where people complain about simplejson actually returning string objects...", "I couldn't reproduce this behavior but it seems it is possible.", "Any hints?"], "childNum": 3, "tag": "p", "senID": 9, "childList": [{"text": "But", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "simplejson", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "Any hints?", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"text": ["Right now I use PyYAML to parse the files, it gives me string objects.", "Since JSON is a subset of YAML it works nicely."], "childNum": 2, "tag": "p", "senID": 10, "childList": [{"text": "PyYAML", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}]