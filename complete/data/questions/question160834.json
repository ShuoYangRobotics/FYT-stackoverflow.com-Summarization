[{"text": ["Are there any other good alternatives to zc.buildout and/or virtualenv for installing non-python dependencies?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am a member of a team that is about to launch a beta of a python (Django specifically) based web site and accompanying suite of backend tools.", "The team itself has doubled in size from 2 to 4 over the past few weeks and we expect continued growth for the next couple of months at least.", "One issue that has started to plague us is getting everyone up to speed in terms of getting their development environment configured and having all the right eggs installed, etc."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm looking for ways to simplify this process and make it less error prone.", "Both zc.buildout and virtualenv look like they would be good tools for addressing this problem but both seem to concentrate primarily on the python-specific issues.", "We have a couple of small subprojects in other languages (Java and Ruby specifically) as well as numerous python extensions that have to be compiled natively (lxml, MySQL drivers, etc).", "In fact, one of the biggest thorns in our side has been getting some of these extensions compiled against appropriate versions of the shared libraries so as to avoid segfaults, malloc errors and all sorts of similar issues.", "It doesn't help that out of 4 people we have 4 different development environments -- 1 leopard on ppc, 1 leopard on intel, 1 ubuntu and 1 windows."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Ultimately what would be ideal would be something that works roughly like this, from the dos/unix prompt:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["$ git clone [repository url]\n...\n$ python setup-env.py\n..."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["that then does what zc.buildout/virtualenv does (copy/symlink the python interpreter, provide a clean space to install eggs) then installs all required eggs, including installing any native shared library dependencies, installs the ruby project, the java project, etc."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Obviously this would be useful for both getting development environments up as well as deploying on staging/production servers."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Ideally I would like for the tool that accomplishes this to be written in/extensible via python, since that is (and always will be) the lingua franca of our team, but I am open to solutions in other languages."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["So, my question then is: does anyone have any suggestions for better alternatives or any experiences they can share using one of these solutions to handle larger/broader install bases?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]