[{"text": ["Python, loop through lines in a file; if line equals line in another file, return original line"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Text file 1 has the following format:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n 'WORD': 1\n'MULTIPLE WORDS': 1\n'WORD': 2\n</code>\n</pre>\n", "senID": 2}, {"text": ["etc."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I.e., a word separated by a colon followed by a number. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Text file 2 has the following format:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n 'WORD'\n'WORD'\n</code>\n</pre>\n", "senID": 6}, {"text": ["etc. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["I need to extract single words (i.e., only WORD not MULTIPLE WORDS) from File 1 and, if they match a word in File 2, return the word from File 1 along with its value."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["I have some poorly functioning code:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n def GetCounts(file1, file2):\n    target_contents  = open(file1).readlines()  #file 1 as list--&gt; 'WORD': n\n    match_me_contents = open(file2).readlines()   #file 2 as list -&gt; 'WORD'\n    ls_stripped = [x.strip('\\n') for x in match_me_contents]  #get rid of newlines\n\n    match_me_as_regex= re.compile(\"|\".join(ls_stripped))   \n\n    for line in target_contents:\n        first_column = line.split(':')[0]  #get the first item in line.split\n        number = line.split(':')[1]   #get the number associated with the word\n        if len(first_column.split()) == 1: #get single word, no multiple words \n            \"\"\" Does the word from target contents match the word\n            from match_me contents?  If so, return the line from  \n            target_contents\"\"\"\n            if re.findall(match_me_as_regex, first_column):  \n                print first_column, number\n\n#OUTPUT: WORD, n\n         WORD, n\n         etc.\n</code>\n</pre>\n", "senID": 10}, {"text": ["Because of the use of regex, the output is shotty.", "The code will return 'asset, 2', for example, since re.findall() will match 'set' from match_me.", "I need to match the target_word with the entire word from match_me to block the bad output resulting from partial regex matches. "], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]