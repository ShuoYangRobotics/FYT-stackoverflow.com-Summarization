[{"text": ["python c extension for standard deviation"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm writing a c extension to calculate he standard deviation.", "Performance is important because it will be performed over large data sets.", "I'm having a hard time figuring out how to get the value of pyobject once I get the item from a list.", "This is my first time writing a c extension for python and any help is appreciated.", "Apparently I don't know how to use the code sample button correctly :("], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This is what I have so far:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n #include &lt;Python.h&gt;\nstatic PyObject*\nfunc(PyObject *self, PyObject *args)\n{\n  PyObject *list, *item;\n  Py_ssize_t i, len;\n  if (!PyArg_UnpackTuple(args, \"func\", 1, 1, &amp;list)){\n    return NULL;\n  }\n  printf(\"hello world\\n\");\n  Py_INCREF(list);\n  len = PyList_GET_SIZE(list);\n  for (i=0;i&lt;len;i++){\n    item = PyList_GET_ITEM(list, i);\n    PyObject_Print(item,stdout,0);\n  }\n  return list;\n}\n\nstatic char func_doc[] = \"This function calculates standard deviation.\";\n\nstatic PyMethodDef std_methods[] = {\n  {\"func\", func, METH_VARARGS, func_doc},\n  {NULL, NULL}\n};\n\nPyMODINIT_FUNC\ninitstd(void)\n{\n  Py_InitModule3(\"std\", std_methods, \"This is a sample docstring.\");\n}\n</code>\n</pre>\n", "senID": 3}]