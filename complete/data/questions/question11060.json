[{"text": ["How should I unit test a code-generator?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is a difficult and open-ended question I know, but I thought I'd throw it to the floor and see if anyone had any interesting suggestions."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I have developed a code-generator that takes our python interface to our C++ code (generated via SWIG) and generates code needed to expose this as WebServices.", "When I developed this code I did it using TDD, but I've found my tests to be brittle as hell.", "Because each test essentially wanted to verify that for a given bit of input code (which happens to be a C++ header) I'd get a given bit of outputted code I wrote a small engine that reads test definitions from XML input files and generates test cases from these expectations."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["The problem is I dread going in to modify the code at all.", "That and the fact that the unit tests themselves are a: complex, and b: brittle."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["So I'm trying to think of alternative approaches to this problem, and it strikes me I'm perhaps tackling it the wrong way.", "Maybe I need to focus more on the outcome, IE: does the code I generate actually run and do what I want it to, rather than, does the code look the way I want it to."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Has anyone got any experiences of something similar to this they would care to share?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]