[{"text": ["What is the most efficent way to store a list in the Django models?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Currently I have a lot of python objects in my code similar to the following:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class MyClass():\n  def __init__(self, name, friends):\n      self.myName = name\n      self.myFriends = [str(x) for x in friends]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I want to turn this into a Django model, where self.myName is a string field, and self.myFriends is a list of strings."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from django.db import models\n\nclass myDjangoModelClass():\n    myName = models.CharField(max_length=64)\n    myFriends = ??? # what goes here?\n</code>\n</pre>\n", "senID": 4}, {"text": ["Since the list is such a common data structure in python, I sort of expected there to be a Django model field for it.", "I know I can use a ManyToMany or OneToMany relationship, but I was hoping to avoid that extra indirection in the code."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I added this related question, which people may find useful."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "related question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/1126642/how-would-you-inherit-from-and-override-the-django-model-classes-to-create-a-list"}]}]