[{"text": ["SQLAlchemy is convoluted?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This may seems rather argumentative, but I just went through SQLAlchemy's ORM tutorial and ended up with the following code:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "ORM tutorial", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.sqlalchemy.org/docs/05/ormtutorial.html"}]}, {"code": "<pre>\n<code>\n from sqlalchemy import create_engine\nfrom sqlalchemy import Table, Column, Integer, String, MetaData, ForeignKey\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('sqlite:///:memory:', echo=True)\n\nmetadata = MetaData()\nusers_table = Table('users', metadata,\n    Column('id', Integer, primary_key=True),\n    Column('name', String),\n    Column('fullname', String),\n    Column('password', String)\n)\n\nmetadata.create_all(engine)\n\nBase = declarative_base()\nclass User(Base):\n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    fullname = Column(String)\n    password = Column(String)\n\n    def __init__(self, name, fullname, password):\n        self.name = name\n        self.fullname = fullname\n        self.password = password\n\n    def __repr__(self):\n       return \"&lt;User('%s','%s', '%s')&gt;\" % (self.name, self.fullname, self.password)\n\nusers_table = User.__table__\nmetadata = Base.metadata\n\nSession = sessionmaker(bind=engine)\nSession = sessionmaker()\nSession.configure(bind=engine)  # once engine is available\nsession = Session()\n\n# actually using the ORM isn't too bad..\ned_user = User('ed', 'Ed Jones', 'edspassword')\nsession.add(ed_user)\n\nour_user = session.query(User).filter_by(name='ed').first() \nprint our_user\n\nsession.add_all([\n    User('wendy', 'Wendy Williams', 'foobar'),\n    User('mary', 'Mary Contrary', 'xxg527'),\n    User('fred', 'Fred Flinstone', 'blah')])\n\ned_user.password = 'f8s7ccs'\n\nprint session.dirty\nprint session.new\nsession.commit()\n\nfor instance in session.query(User).order_by(User.id): \n    print instance.name, instance.fullname\n\nfor name, fullname in session.query(User.name, User.fullname): \n    print name, fullname\n</code>\n</pre>\n", "senID": 2}, {"text": ["This seems incredibly complicated for effectively a Hello World table, especially compared to the roughly similar SQLObject code:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from sqlobject import SQLObject, StringCol, sqlhub, connectionForURI\n\nsqlhub.processConnection = connectionForURI('sqlite:/:memory:')\n\nclass Person(SQLObject):\n    fname = StringCol()\n    mi = StringCol(length=1, default=None)\n    lname = StringCol()\n\nPerson.createTable()\n\np = Person(fname=\"John\", lname=\"Doe\")\np.mi = 'Q'\np2 = Person.get(1)\nprint p2\nprint p2 is p\n</code>\n</pre>\n", "senID": 4}, {"text": ["I understand SQLAlchemy is \"more powerful\", but that power seems to come at a cost, or am I missing something?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]