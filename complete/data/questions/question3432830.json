[{"text": ["List comprehension for running total"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to get a running total from a list of numbers."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For demo purposes, I start with a sequential list of numbers using range"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "range", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n a = range(20)\n\nrunningTotal = []\nfor n in range(len(a)):\n    new = runningTotal[n-1] + a[n] if n &gt; 0 else a[n]\n    runningTotal.append(new)\n\n# This one is a syntax error\n# runningTotal = [a[n] for n in range(len(a)) if n == 0 else runningTotal[n-1] + a[n]]\n\nfor i in zip(a, runningTotal):\n    print \"{0:&gt;3}{1:&gt;5}\".format(*i)\n</code>\n</pre>\n", "senID": 3}, {"text": ["yields"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n 0    0\n  1    1\n  2    3\n  3    6\n  4   10\n  5   15\n  6   21\n  7   28\n  8   36\n  9   45\n 10   55\n 11   66\n 12   78\n 13   91\n 14  105\n 15  120\n 16  136\n 17  153\n 18  171\n 19  190\n</code>\n</pre>\n", "senID": 5}, {"text": ["As you can see, I initialize an empty list [], then append() in each loop iteration.", "Is there a more elegant way to this, like a list comprehension?"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "[]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "append()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]