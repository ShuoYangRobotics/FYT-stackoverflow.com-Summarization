[{"text": ["Python Optimized Comparison Between List of Dict"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to see whether nodes reside within the volume of a sphere, and add the node id to a list.", "However, the efficiency of the algorithm is incredibly slow and I'm not sure how to improve it."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I have two lists.", "List A has the format [{'num': ID, 'x': VALUE, 'y': VALUE, 'z': VALUE] while List B has the format [{'x': VALUE, 'y': VALUE, 'z': VALUE, 'rad': VALUE}]."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "[{'num': ID, 'x': VALUE, 'y': VALUE, 'z': VALUE]", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "[{'x': VALUE, 'y': VALUE, 'z': VALUE, 'rad': VALUE}]", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["The size of both lists can run upwards of 100,000 items each."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["My current code is posted below, but it's very inefficient. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n filteredList = []\n    for i in range(len(sList)):\n\n            minx = (sList[i]['x']) - (sList[i]['radius'])\n            maxx = (sList[i]['x']) + (sList[i]['radius'])\n            miny = (sList[i]['y']) - (sList[i]['radius'])\n            maxy = (sList[i]['y']) + (sList[i]['radius'])\n            minz = (sList[i]['z']) - (sList[i]['radius'])\n            maxz = (sList[i]['z']) + (sList[i]['radius'])\n\n            for j in range(len(nList)):\n                    if minx &lt;= nList[j]['x'] &lt;= maxx:\n                            if miny &lt;= nList[j]['y'] &lt;= maxy:\n                                    if minz &lt;= nList[j]['z'] &lt;= maxz:\n                                            tmpRad = findRadius(sList[i],nList[j])\n                                            if tmpRad &lt;= sList[i]['radius']:\n                                                    filteredList.append(int(nList[j]['num']))\n</code>\n</pre>\n", "senID": 5}, {"text": ["I'm at a loss and appreciate any ideas."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Edit: Adding extra information about the data format."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["List A (nList) -- defines nodes, with locations x,y,z, and identifier num\n[{'y': 0.0, 'x': 0.0, 'num': 1.0, 'z': 0.0},\n{'y': 0.0, 'x': 1.0, 'num': 2.0, 'z': 0.0},\n{'y': 0.0, 'x': 2.0, 'num': 3.0, 'z': 0.0},\n{'y': 0.0, 'x': 3.0, 'num': 4.0, 'z': 0.0},\n{'y': 0.0, 'x': 4.0, 'num': 5.0, 'z': 0.0},\n{'y': 0.0, 'x': 5.0, 'num': 6.0, 'z': 0.0},\n{'y': 0.0, 'x': 6.0, 'num': 7.0, 'z': 0.0},\n{'y': 0.0, 'x': 7.0, 'num': 8.0, 'z': 0.0},\n{'y': 0.0, 'x': 8.0, 'num': 9.0, 'z': 0.0},\n{'y': 0.0, 'x': 9.0, 'num': 10.0, 'z': 0.0}]  "], "childNum": 11, "tag": "p", "senID": 8, "childList": [{"text": "List A", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["List B (sList) -- defines spheres using x,y,z, radius\n[{'y': 18.0, 'x': 25.0, 'z': 26.0, 'radius': 0.0056470000000000001},\n{'y': 29.0, 'x': 23.0, 'z': 45.0, 'radius': 0.0066280000000000002},\n{'y': 46.0, 'x': 29.0, 'z': 13.0, 'radius': 0.014350999999999999},\n{'y': 0.0, 'x': 20.0, 'z': 25.0, 'radius': 0.014866000000000001},\n{'y': 27.0, 'x': 31.0, 'z': 18.0, 'radius': 0.018311999999999998},\n{'y': 10.0, 'x': 36.0, 'z': 46.0, 'radius': 0.024702000000000002},\n{'y': 27.0, 'x': 13.0, 'z': 48.0, 'radius': 0.027300999999999999},\n{'y': 14.0, 'x': 1.0, 'z': 13.0, 'radius': 0.033889000000000002},\n{'y': 31.0, 'x': 20.0, 'z': 11.0, 'radius': 0.034118999999999997},\n{'y': 23.0, 'x': 28.0, 'z': 8.0, 'radius': 0.036683}]  "], "childNum": 11, "tag": "p", "senID": 9, "childList": [{"text": "List B", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}]