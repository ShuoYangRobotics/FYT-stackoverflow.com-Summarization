[{"text": ["map lambda x,y with a constant x"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What would be an elegant way to map a 2 parameter Python lambda function to a list of values where the first parameter is constant and the second is taken from a list."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "map", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "lambda", "childNum": 0, "tag": "code", "childList": []}, {"text": "list", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Example:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Example:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n lambda x,y: x+y\nx='a'\ny=['2','4','8','16']\n</code>\n</pre>\n", "senID": 3}, {"text": ["expected result:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n ['a2','a4','a8','a16']\n</code>\n</pre>\n", "senID": 5}, {"text": ["Notes:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "This is just an example, the actual lambda function is more complicated", "tag": "none", "senID": 7}, {"text": "Assume I can't use list comprehension", "tag": "none", "senID": 8}]}]