[{"text": ["Is something like ConfigParser appropriate for saving state (key, value) between runs?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to save a set of key, value pairs (string, int) between runs of a Python program, reload them on subsequent runs and write the changes to be available on the next run."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I don't think of this data as a configuration file, but it would fit the ConfigParser capabilities quite well.", "I would only need two [sections].", "It's only a few hundred pairs and very simple so I don't think it's necessary to do an actual database."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Is it appropriate to use ConfigParser in this way?", "I've also considered using Perl and XML::Simple.", "What about that?", "Is there a way to do this in bash without Python or Perl?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]