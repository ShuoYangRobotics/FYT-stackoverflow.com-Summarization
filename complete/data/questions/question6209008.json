[{"text": ["Checking if float is equivalent to an integer value in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Python 3, I am checking whether a given value is triangular, that is, it can be represented as n(n+1)/2 for some positive integer n"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Can I just write:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import math\ndef is_triangular1(x):\n    num=(1/2) * (math.sqrt(8*x+1)-1 )\n    return int(num)==num\n</code>\n</pre>\n", "senID": 3}, {"text": ["Or do I need to do it like this?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n epsilon = 0.000000000001\ndef is_triangular2(x):\n    num=(1/2) * (math.sqrt(8*x+1)-1 )\n    return abs(int(num) - num)&lt;epsilon\n</code>\n</pre>\n", "senID": 5}, {"text": ["I checked that both of the functions return same results for x up to 1,000,000.", "But I am not sure if generally speaking int(x) == x will always correctly determine whether a number is integer, because of the cases when for example 5 is represented as 4.99999999999997 etc."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["As far as I know, the second way is the correct one if I do it in C, but I am not sure about Python 3."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]