[{"text": ["Python: item for item until stopterm in item?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Disclaimer: I'm fairly new to python!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["If I want all the lines of a file until (edit: and including) the line containing some string stopterm, is there a way of using the list syntax for it?", "I was hoping there would be something like:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "stopterm", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n usefullines = [line for line in file until stopterm in line]\n</code>\n</pre>\n", "senID": 3}, {"text": ["For now, I've got"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n usefullines = []\nfor line in file:\n    usefullines.append(line)\n    if stopterm in line:\n        break\n</code>\n</pre>\n", "senID": 5}, {"text": ["It's not the end of the world, but since there rest of Python syntax is so straightforward, I was hoping for a 1 thought->1 Python line mapping."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]