[{"text": ["How to get environment from a subprocess in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to call a process via a python program, however, this process need some specific environment variables that are set by another process.", "How can I get the first process environment variables to pass them to the second?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This is what the program look like:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import subprocess\n\nsubprocess.call(['proc1']) # this set env. variables for proc2\nsubprocess.call(['proc2']) # this must have env. variables set by proc1 to work\n</code>\n</pre>\n", "senID": 3}, {"text": ["but the to process don't share the same environment.", "Note that these programs aren't mine (the first is big and ugly .bat file and the second a proprietary soft) so I can't modify them (ok, I can extract all that I need from the .bat but it's very combersome)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["N.B.", ": I am using Windows, but I prefer a cross-platform solution (but my problem wouldn't happen on a Unix-like ...)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]