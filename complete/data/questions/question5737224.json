[{"text": ["Pythonic method of determining a list's contents change from odd to even values"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Writing some test cases and my mind wanders, assuming there is a better way to write something like this.", "I have a list, its numbers transition from all odd values to all even, doesn't matter where.", "I need to assert this is the case, here's what I came up with:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n values = [1, 3, 5, 7, 5, 3, 5, 3, 5, 7, 4, 6, 8, 4, 2, 2, 8, 6]\n\n# find all the indexes of odd and even values\nodds = [i for (i, v) in enumerate(values) if v % 2 == 1]\nevens = [i for (i, v) in enumerate(values) if v % 2 == 0]\n\n# indexes should be a continuous sequence: 0, 1, 2, 3 ... n\nassert odds + evens == range(evens[-1] + 1)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Seems like a long way to go.", "Suggestions on how this could be reduced?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]