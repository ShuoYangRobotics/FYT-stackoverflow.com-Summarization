[{"text": ["What is best way for interactive debug in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to utilize introspection capability of python for debugging/development, but cannot find appropriate tool for this."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I need to enter into shell (IPython for example) at specific position or at specific event (like exception), with locals and globals of shell being set to the frame's ones."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["My own quick hack to illustrate it:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n import inspect\nfrom IPython.Shell import IPShellEmbed\ndef run_debug():\n    stack = inspect.stack()\n    frame = stack[1][0]\n    loc = frame.f_locals\n    glob = frame.f_globals\n    shell = IPShellEmbed()\n    shell(local_ns=loc, global_ns=glob)\n</code>\n</pre>\n", "senID": 4}, {"text": ["With according run_debug() call from 'breakpoint' or try/except.", "But, obviously, this needs alot of polishing, esp to work with threaded apps properly. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["winpdb has breakpoints with console, but I found no way to quickly run proper python shell from it, and eval()/exec() are not very handy for long debug."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]