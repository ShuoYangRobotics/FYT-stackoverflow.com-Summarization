[{"text": ["Finding an Insertion in a String"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What's the best way of checking if StringA = StringB with an another StringC inserted at some arbitrary point? "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example, given abcdef and abcXYZdef, I want to find that abcXYZdef is abcdef with XYZ inserted at position 4. "], "childNum": 5, "tag": "p", "senID": 2, "childList": [{"text": "abcdef", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "abcXYZdef", "childNum": 0, "tag": "code", "childList": []}, {"text": "abcXYZdef", "childNum": 0, "tag": "code", "childList": []}, {"text": "abcdef", "childNum": 0, "tag": "code", "childList": []}, {"text": "XYZ", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["On the other hand, given abcdef and abRSTcdXYZef, I want to find that the first string cannot be turned into the second with only a single insertion."], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "abcdef", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "abRSTcdXYZef", "childNum": 0, "tag": "code", "childList": []}, {"text": "cannot", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["I know I could go over StringA character by character, from both ends, and check if it covers the whole of StringB, but that would be rather tedious to write.", "It would also be rather slow to do this in Python (which i am working in) and I would rather not write a special C-extension just for this."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Are there any clever things I can do with Regex's or other standard string-manipulation functions that can do this for me?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["edit: To clarify, StringC is completely unknown; There may not even be a valid StringC, and i will want to know if that is the case."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]