[{"text": ["Uses for Dynamic Languages"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["My primary language right now is D, and I'm in the process of learning Python because it's required for a course I'm taking.", "While I understand why dynamic languages would be a breath of fresh air for people programming in static languages without type inference or templates (IMHO templates are to a large extent compile-time duck typing), I'm curious what the benefits are of dynamic languages even when you have those.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The bottom line is that, if I'm going to learn Python, I want to learn it in a way that really changes my thinking about programming, rather than just writing D in Python.", "I have not used dynamic languages since I was a fairly novice programmer and unable to appreciate the flexibility they supposedly offer, and want to learn to take full advantage of them now.", "What can be done easily/elegantly in a dynamically typed, interpreted language that's awkward or impossible in a static language, even with templates, polymorphism, static type inference, and maybe runtime reflection?"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "even with templates, polymorphism, static type inference, and maybe runtime reflection?", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}]