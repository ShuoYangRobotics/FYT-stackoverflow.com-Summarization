[{"text": ["partial list unpack in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In python, assignment operator can unpack list or tuple into variables, like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = (1, 2)\na, b = l # here goes auto unpack\n</code>\n</pre>\n", "senID": 2}, {"text": ["But i need to specify exactly same amount of names to the left as an items count in the list to the right.", "But sometimes i don't know a size of the list to the right, for example if i use split().", "Example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n a, b = \"length=25\".split(\"=\") # this will result in a=\"length\" and b=25\n</code>\n</pre>\n", "senID": 4}, {"text": ["But the following code will lead an error:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n a, b = \"DEFAULT_LENGTH\".split(\"=\") # error, list has only 1 item\n</code>\n</pre>\n", "senID": 6}, {"text": ["is it possible to somehow unpack list in the example above so i get a = \"DEFAULT_LENGTH\" and b equals to 'None' or not set?", "Straightforward way looks kinda long:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n a = b = None\nif \"=\" in string :\n  a, b = string.split(\"=\")\nelse :\n  a = string\n</code>\n</pre>\n", "senID": 8}]