[{"text": ["lambda returns lambda in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Very rarely I'll come across some code in python that uses an anonymous function which returns an anonymous function...?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Unfortunately I can't find an example on hand, but it usually takes the form like this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n g = lambda x,c: x**c lambda c: c+1\n</code>\n</pre>\n", "senID": 3}, {"text": ["Why would someone do this?", "Maybe you can give an example that makes sense (I'm not sure the one I made makes any sense)."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Edit: Here's an example:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n swap = lambda a,x,y:(lambda f=a.__setitem__:(f(x,(a[x],a[y])),\n       f(y,a[x][0]),f(x,a[x][1])))()\n</code>\n</pre>\n", "senID": 6}]