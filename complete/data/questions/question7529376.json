[{"text": ["Pythonic way to mix two lists"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have two lists of length n and n+1:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n [a_1, a_2, ..., a_n]\n[b_1, b_2, ..., b_(n+1)]\n</code>\n</pre>\n", "senID": 2}, {"text": ["I want a function giving as a result a list with alternate elements from the two, that is"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n [b_1, a_1, ..., b_n, a_n, b_(n+1)]\n</code>\n</pre>\n", "senID": 4}, {"text": ["The following works, but does not look smart:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n def list_mixing(list_long,list_short):\n    list_res = []\n    for i in range(len(list_short)):\n        list_res.extend([list_long[i], list_short[i]])\n    list_res.append(list_long[-1])\n    return list_res\n</code>\n</pre>\n", "senID": 6}, {"text": ["Can anyone suggest a more pythonic way of doing this?", "Thanks!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]