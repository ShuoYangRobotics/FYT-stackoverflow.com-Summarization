[{"text": ["Programmatically converting/parsing LaTeX code to plain text"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a couple of code projects in C++/Python in which LaTeX-format descriptions and labels are used to generate PDF documentation or graphs made using LaTeX+pstricks.", "However, we also have some plain text outputs, such as an HTML version of the documentation (I already have code to write minimal markup for that) and a non-TeX-enabled plot renderer."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For these I would like to eliminate the TeX markup that is necessary for e.g.", "representing physical units.", "This includes non-breaking (thin) spaces, \\text, \\mathrm etc.", "It would also be nice to parse down things like \\frac{#1}{#2} into #1/#2 for the plain text output (and use MathJax for the HTML).", "Due to the system that we've got at the moment, I need to be able to do this from Python, i.e.", "ideally I'm looking for a Python package, but a non-Python executable which I can call from Python and catch the output string would also be fine."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "ideally", "childNum": 0, "tag": "em", "pos": 5, "childList": []}]}, {"text": ["I'm aware of the similar question on the TeX StackExchange site, but there weren't any really programmatic solutions to that: I've looked at detex, plasTeX and pytex, which they all seem a bit dead and don't really do what I need: programmatic conversion of a TeX string to a representative plain text string."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "similar question on the TeX StackExchange site", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://tex.stackexchange.com/questions/6431/options-for-converting-latex-to-plain-text"}]}, {"text": ["I could try writing a basic TeX parser using e.g.", "pyparsing, but a) that might be pitfall-laden and help would be appreciated and b) surely someone has tried that before, or knows of a way to hook into TeX itself to get a better result?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Update: Thanks for all the answers... it does indeed seem to be a bit of an awkward request!", "I can make do with less than general parsing of LaTeX, but the reason for considering a parser rather than a load of regexes in a loop is that I want to be able to handle nested macros and multi-arg macros nicely, and get the brace matching to work properly.", "Then I can e.g.", "reduce txt-irrelevant macros like \\text and \\mathrm first, and handle txt-relevant ones like \\frac last... maybe even with appropriate parentheses!", "Well, I can dream... for now regexes are not doing such a terrible job."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]