[{"text": ["Preferred Python unit-testing framework"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["So far I've been using the built-in unittest module for unit-testing Python code.", "However, for simple cases it seems like overkill.", "Being a derivative of xUnit, it appears a bit heavy for the dynamic nature of Python, where I would expect to write less to achieve the same effects.", "On the other hand, it is built-in, it makes you write your tests in an organized way, and it is tested by time."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The major alternatives I've seen online are:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["py.test"], "childNum": 0, "tag": "a", "senID": 3, "childList": []}, {"text": ["nose"], "childNum": 0, "tag": "a", "senID": 4, "childList": []}]}, {"text": ["Which of the frameworks do you prefer, and why? "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Update 10.12.2011: with the recent addition of test auto-discovery and many new features in unittest (in Python 2.7 and 3.2), IMHO it makes less sense to use an external library."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "Update 10.12.2011:", "childNum": 0, "tag": "em", "pos": 0, "childList": []}, {"text": "unittest", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Regarding doctest:\nI don't consider it a unit-testing framework per-se.", "I definitely wouldn't use it to write a large suite of tests for a sizable application.", "doctest is more suitable for making sure that the examples you provide in the documentation work.", "It has its place for this need, but it isn't a competitor for unittest, py.test and other frameworks."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "unit-testing framework", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]