[{"text": ["Python - Intersection of two lists"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I know how to get an intersection of two flat lists:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n b1 = [1,2,3,4,5,9,11,15]\nb2 = [4,5,6,7,8]\nb3 = [val for val in b1 if val in b2]\n</code>\n</pre>\n", "senID": 2}, {"text": ["or "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def intersect(a, b):\n     return list(set(a) &amp; set(b))\n\nprint intersect(b1, b2)\n</code>\n</pre>\n", "senID": 4}, {"text": ["But when I have to find intersection for nested lists then my problems starts:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n c1 = [1, 6, 7, 10, 13, 28, 32, 41, 58, 63]\nc2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]\n</code>\n</pre>\n", "senID": 6}, {"text": ["In the end I would like to receive:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n c3 = [[13,32],[7,13,28],[1,6]]\n</code>\n</pre>\n", "senID": 8}, {"text": ["Can you guys give me a hand with this?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"tag": "ul", "num": 1, "lis": [{"text": ["Flattening a shallow list in python"], "childNum": 0, "tag": "a", "senID": 10, "childList": []}]}]