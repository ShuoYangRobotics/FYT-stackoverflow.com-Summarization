[{"text": ["Understanding objects in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am a little confused by the object model of Python.", "I have two classes, one inherits from the other."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class Node():\n  def __init__(identifier):\n    self.identifier = identifier\n\nclass Atom(Node):\n  def __init__(symbol)\n    self.symbol = symbol\n</code>\n</pre>\n", "senID": 2}, {"text": ["What I am trying to do is not to override the __init__() method, but to create an instance of atom that will have attributes symbol and identifier."], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "__init__", "childNum": 1, "tag": "strong", "pos": 0, "childList": [{"text": "init", "tag": "em"}]}, {"text": "init", "childNum": 0, "tag": "em", "childList": []}, {"text": "symbol", "childNum": 0, "tag": "strong", "childList": []}, {"text": "identifier", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["Like this:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n Atom(\"Fe\", 1) # will create an atom with symbol \"Fe\" and identifier \"1\"\n</code>\n</pre>\n", "senID": 5}, {"text": ["Thus I want to be able to access Atom.identifier and Atom.symbol once an instance of Atom is created."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["How can I do that?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]