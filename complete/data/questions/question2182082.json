[{"text": ["python style question around reading small files"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What is the most pythonic way to read in a named file, strip lines that are either empty, contain only spaces, or have # as a first character, and then process remaining lines?", "Assume it all fits easily in memory."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Note: it's not tough to do this -- what I'm asking is for the most pythonic way.", "I've been writing a lot of Ruby and Java and have lost my feel."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here's a strawman:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n file_lines = [line.strip() for line in open(config_file, 'r').readlines() if len(line.strip()) &gt; 0]\nfor line in file_lines:\n  if line[0] == '#':\n    continue\n  # Do whatever with line here.\n</code>\n</pre>\n", "senID": 4}, {"text": ["I'm interested in concision, but not at the cost of becoming hard to read."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]