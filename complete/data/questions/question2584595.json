[{"text": ["Building a python module and linking it against a MacOSX framework"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to build a Python extension on MacOSX 10.6 and to link it against several frameworks (i386 only).", "I made a setup.py file, using distutils and the Extension object."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I order to link against my frameworks, my LDFLAGS env var should look like :"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "LDFLAGS", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n LDFLAGS = -lc -arch i386 -framework fwk1 -framework fwk2\n</code>\n</pre>\n", "senID": 3}, {"text": ["As I did not find any 'framework' keyword in the Extension module documentation, I used the extra_link_args keyword instead."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "extra_link_args", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n Extension('test',\ndefine_macros = [('MAJOR_VERSION', '1'), ,('MINOR_VERSION', '0')],\ninclude_dirs = ['/usr/local/include', 'include/', 'include/vitale'],\nextra_link_args = ['-arch i386',\n                   '-framework fwk1',\n                   '-framework fwk2'],\nsources = \"testmodule.cpp\",\nlanguage = 'c++' )\n</code>\n</pre>\n", "senID": 5}, {"text": ["Everything is compiling and linking fine.", "If I remove the -framework line from the extra_link_args, my linker fails, as expected.", "Here is the last two lines produced by a python setup.py build :"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n /usr/bin/g++-4.2 -arch x86_64 -arch i386 -isysroot /\n-L/opt/local/lib -arch x86_64 -arch i386 -bundle\n-undefined dynamic_lookup build/temp.macosx-10.6-intel-2.6/testmodule.o\n-o build/lib.macosx-10.6-intel-2.6/test.so\n-arch i386 -framework fwk1 -framework fwk2\n</code>\n</pre>\n", "senID": 7}, {"text": ["Unfortunately, the .so that I just produced is unable to find several symbols provided by this framework.", "I tried to check the linked framework with otool.", "None of them is appearing."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n $ otool -L test.so\ntest.so:\n    /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.9.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.0.1)\n</code>\n</pre>\n", "senID": 9}, {"text": ["There is the output of otool run on a test binary, made with g++ and ldd using the LDFLAGS described at the top of my post.", "On this example, the -framework did work."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n $ otool -L vitaosx \nvitaosx:\n    /Library/Frameworks/fwk1.framework/Versions/A/fwk1 (compatibility version 1.0.0, current version 1.0.0)\n    /Library/Frameworks/fwk2.framework/Versions/A/fwk2 (compatibility version 1.0.0, current version 1.0.0)\n    /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.9.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.0.1)\n</code>\n</pre>\n", "senID": 11}, {"text": ["May this issue be linked to the \"-undefined dynamic_lookup\" flag on the linking step ?", "I'm a little bit confused by the few lines of documentation that I'm finding on Google."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Cheers,"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}]