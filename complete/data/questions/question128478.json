[{"text": ["Should Python import statements always be at the top of a module?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["PEP 08 states:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "PEP 08", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0008/"}]}, {"text": ["However if the class/method/function that I am importing is only used in rare cases, surely it is more efficient to do the import when it is needed?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Isn't this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class SomeClass(object):\n\n    def not_often_called(self)\n        from datetime import datetime\n        self.datetime = datetime.now()\n</code>\n</pre>\n", "senID": 4}, {"text": ["more efficient than this?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n from datetime import datetime\n\nclass SomeClass(object):\n\n    def not_often_called(self)\n        self.datetime = datetime.now()\n</code>\n</pre>\n", "senID": 6}]