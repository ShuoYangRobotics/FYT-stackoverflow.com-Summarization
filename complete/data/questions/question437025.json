[{"text": ["How to implement a python REPL that nicely handles asynchronous output?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a Python-based app that can accept a few commands in a simple read-eval-print-loop.", "I'm using raw_input('&gt; ') to get the input.", "On Unix-based systems, I also import readline to make things behave a little better.", "All this is working fine."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "raw_input('&gt; ')", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "import readline", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["The problem is that there are asynchronous events coming in, and I'd like to print output as soon as they happen.", "Unfortunately, this makes things look ugly.", "The \"> \" string doesn't show up again after the output, and if the user is halfway through typing something, it chops their text in half.", "It should probably redraw the user's text-in-progress after printing something."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["This seems like it must be a solved problem.", "What's the proper way to do this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Also note that some of my users are Windows-based."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["TIA"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit: The accepted answer works under Unixy platforms (when the readline module is available), but if anyone knows how to make this work under Windows, it would be much appreciated!"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]