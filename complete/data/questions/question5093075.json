[{"text": ["How can I log current line, and stack info with Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have logging function as follows."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n logging.basicConfig(\n    filename = fileName,\n    format = \"%(levelname) -10s %(asctime)s %(message)s\",\n    level = logging.DEBUG\n)\n\ndef printinfo(string):\n    if DEBUG:\n        logging.info(string)\n\ndef printerror(string):\n    if DEBUG:\n        logging.error(string)\n    print string\n</code>\n</pre>\n", "senID": 2}, {"text": ["I need to login the line number, stack information.", "For example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n 1: def hello():\n2:    goodbye()\n3:\n4: def goodbye():\n5:    printinfo()\n\n---&gt; Line 5: goodbye()/hello()\n</code>\n</pre>\n", "senID": 4}, {"text": ["How can I do this with Python?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["SOLVED"], "childNum": 0, "tag": "h2", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def printinfo(string):\n    if DEBUG:\n        frame = inspect.currentframe()\n        stack_trace = traceback.format_stack(frame)\n        logging.debug(stack_trace[:-1])\n    if LOG:\n        logging.info(string)\n</code>\n</pre>\n", "senID": 7}, {"text": ["gives me this info which is exactly what I need."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n DEBUG      2011-02-23 10:09:13,500 [\n  '  File \"/abc.py\", line 553, in &lt;module&gt;\\n    runUnitTest(COVERAGE, PROFILE)\\n', \n  '  File \"/abc.py\", line 411, in runUnitTest\\n    printinfo(string)\\n']\n</code>\n</pre>\n", "senID": 9}]