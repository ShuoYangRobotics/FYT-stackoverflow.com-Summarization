[{"text": ["Python sum, why not strings?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Python has a built in function sum, which is effectively equivalent to:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "sum", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def sum(iterable, start):\n    return start + reduce(operator.add, iterable)\n</code>\n</pre>\n", "senID": 2}, {"text": ["for all types of parameters except strings.", "It works for numbers and lists, for example."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Why were strings specially left out?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I seem to remember discussions in the Python list for the reason, so an explanation or a link to a thread explaining it would be fine."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit: I am aware that the standard way is to do \"\".join.", "My question is why the option of using sum for strings was banned, and no banning was there for, say, lists."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "\"\".join", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Edit 2: Although I believe this is not needed given all the good answers I got, the question is: Why does sum work on an iterable containing numbers or an iterable containing lists but not an iterable containing strings?"], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "Edit 2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "Why does sum work on an iterable containing numbers or an iterable containing lists but not an iterable containing strings?", "childNum": 0, "tag": "em", "childList": []}]}]