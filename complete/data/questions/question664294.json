[{"text": ["Just declaring a variable in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is it possible to just declaring a variable in Python, like so?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["var"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["so that it's gonna be initialized to None?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["It seems like python allows this, but as soon as you access it, it crashes."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Is this possible?", "If not, why?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["EDIT: I wanna do this for cases like this:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n value\n\nfor index in sequence:\n\n   if value == None and conditionMet:\n       value = index\n       break\n</code>\n</pre>\n", "senID": 7}, {"tag": "ul", "num": 2, "lis": [{"text": ["Uninitialised value in python"], "childNum": 0, "tag": "a", "senID": 8, "childList": []}, {"text": ["Are there any declaration keywords in Python?"], "childNum": 0, "tag": "a", "senID": 9, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": ["Python: variable scope and function calls"], "childNum": 0, "tag": "a", "senID": 10, "childList": []}, {"text": ["Other languages have \"variables\""], "childNum": 0, "tag": "a", "senID": 11, "childList": []}]}]