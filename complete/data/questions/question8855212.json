[{"text": ["Nesting \"for\" loop within a \"try\" operator"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Folks,"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've resigned myself to working around this problem, but I wanted to check if Python is really acting as expected."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["In the example, \"sample.txt\" is any multi-line text file that is read and parsed."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n try:\n    file=open('sample.txt','r')\n    for line in file:\n          (some action here)\nexcept:\n    print \"Couldn't open file\"\nfile.close()\n</code>\n</pre>\n", "senID": 4}, {"text": ["The actions I observe are that \"sample.txt\" is opened and the first line handled, the logic then falls through to the \"except\" clause."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["WAD or is this a bug?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]