[{"text": ["How to make this naive python implement of Quicksort more pythonic?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm 2 hours into my reading of diveintopython and I implemented a naive version of quicksort. "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "diveintopython", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import operator\n\ndef even(num):\n    return operator.mod(num,2) == 0\n\ndef last(list):\n    return len(list)-1\n\ndef median(list):\n    if even(len(list)):\n        return len(list)/2 - 1\n    else:\n        return len(list)/2\n\ndef sort(list, pivot_selector):\n    if len(list) &lt;= 1:\n        return list\n    else:\n        i = pivot_selector(list)\n        pivot = list[i]\n        less, greater, equal = [], [], []\n        for x in list:\n            if x &lt; pivot:\n                less.append( x )\n            elif x == pivot:\n                equal.append( x )\n            else:\n                greater.append( x )\n\n    return sort(less, pivot_selector) + equal + sort(greater, pivot_selector)\n\nif __name__ == \"__main__\":\n    print sort([5,4,3,2],median)\n    print sort([],median)\n    print sort([2],median)\n    print sort([3,2],median)\n    print sort([3,2,3],median)\n    print sort([1,3,2],median)\n    print sort([1,'a',0],median)\n    print sort([None,1,0],median)\n</code>\n</pre>\n", "senID": 2}, {"text": ["5 questions:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]