[{"text": ["Speed of calculating powers (in python)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm curious as to why it's so much faster to multiply than to take powers in python (though from what I've read this may well be true in many other languages too).", "For example it's much faster to do"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n x*x\n</code>\n</pre>\n", "senID": 2}, {"text": ["than"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n x**2\n</code>\n</pre>\n", "senID": 4}, {"text": ["I suppose the ** operator is more general and can also deal with fractional powers.", "But if that's why it's so much slower, why doesn't it perform a check for an int exponent and then just do the multiplication?\n"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"text": ["Edit: Here's some example code I tried..."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def pow1(r, n):\n  for i in range(r):\n    p = i**n\n\ndef pow2(r, n):\n  for i in range(r):\n    p = 1\n    for j in range(n):\n      p *= i\n</code>\n</pre>\n", "senID": 7}, {"text": ["Now, pow2 is just a quick example and is clearly not optimised!", "But even so I find that using n = 2 and r = 1,000,000, then pow1 takes ~ 2500ms and pow2 takes ~ 1700ms.", "I admit that for large values of n, then pow1 does get much quicker than pow2.", "But that's not too surprising."], "childNum": 3, "tag": "p", "senID": 8, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}]}]