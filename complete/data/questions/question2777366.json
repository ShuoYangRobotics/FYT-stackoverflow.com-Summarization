[{"text": ["Python operators returning ints"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there any way to have Python operators line \"==\" and \">\" return ints instead of bools.", "I know that I could use the int function (int(1 == 1)) or add 0 ((1 == 1) + 0) but I was wondering if there was an easy way to do it.", "Like when you want division to return floats you could type from __future__ import division.", "Is there any way to do this with operators returning ints?", "Or could I make a class extending __future__._Feature that would do what I want?"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "int(1 == 1)", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "(1 == 1) + 0", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "from __future__ import division", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "__future__._Feature", "childNum": 0, "tag": "code", "pos": 4, "childList": []}]}]