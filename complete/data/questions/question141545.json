[{"text": ["overloading __init__ in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Let's say I have a class that has a member called data which is a list.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I want to be able to initialize the class with, for example, a filename (which contains data to initialize the list) or with an actual list."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["What's your technique for doing this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Do you just check the type by looking at __class__?"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "__class__", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Is there some trick I might be missing?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I'm used to C++ where overloading by argument type is easy. "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Thanks."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]