[{"text": ["python regex match line if exist or not"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a little problem with a regex."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here is a sample of the text to parse :"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n output = \"\"\"\ncountry : USA\nzzzzzzz\ncontinent : Americ\neeeeeee\n------\ncountry : China\nzzzzzzz\ncontinent : Asia\nplanet : Earth\n-------\ncountry : Izbud\nzzzzzzz\ncontinent : Gladiora\nzzzzzzz\nzzzzzzz\nplanet : Mars\n\"\"\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["I want to parse this and return the country, the continent and eventually the planet."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["So i did a regex :"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n results = re.findall(\n    r\"\"\"(?mx)\n        ^country\\s:\\s*(.+)\\s\n        (?:^.+\\s)*?\n        ^continent\\s:\\s*(.+)\\s\n        (?:^.+\\s)*?\n        (?:^planet\\s:\\s*(.+)\\s)*?\n\"\"\",output)\n</code>\n</pre>\n", "senID": 6}, {"text": ["but the return is :"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n [('USA', 'Americ', ''), ('China', 'Asia', ''), ('Izbud', 'Gladiora', '')]\n</code>\n</pre>\n", "senID": 8}, {"text": ["And I don't know where my regex is wrong ?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["If anyone has an idea,\nthanks."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]