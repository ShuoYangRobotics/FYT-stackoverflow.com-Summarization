[{"text": ["Abstract class with Python 2.5"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I currently refactor a class defining a client or a server.", "The class had a lot of"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if client:\n    XXXXXXXXXXXX\nelif server:\n    YYYYYYYYYYYY\n</code>\n</pre>\n", "senID": 2}, {"text": ["So I decided to create a class A with the similar code and one class C for the client and an other one S for the server which inherit A.", "(they don't have theses names of course ^^)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["So class A is some kind of abstract class.", "But the problem is there is no abstract classes in Python 2.5, it comes with 2.6 version.", "So I was wondering if there is a way to forbid instantiations of class A."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["One solution would have been to raise a NotImplemented error in the constructor of the class A, but C and S have the same code for it so I put it in the \"abstract\" class A (bad idea ?", ")."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["This may seem stupid but I develop in Python only from time to time and I'm a young programmer.", "What are your advices?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]