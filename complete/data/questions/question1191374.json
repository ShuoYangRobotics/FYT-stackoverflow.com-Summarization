[{"text": ["subprocess with timeout"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Python, I have a program snippet similar to the following that has the effect of running a custom command and returning the stdout data (or raise exception when exit code is non-zero):"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n proc = subprocess.Popen(\n    cmd,\n    # keep stderr separate; or merge it with stdout (default).\n    stderr=(subprocess.PIPE if ignore_stderr else subprocess.STDOUT),\n    stdout=subprocess.PIPE,\n    shell=True)\n</code>\n</pre>\n", "senID": 2}, {"text": ["And then I use communicate (not wait which could deadlock) to wait for the complete stdout data:"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "communicate", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "wait", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n stdoutdata, stderrdata = proc.communicate()\n</code>\n</pre>\n", "senID": 4}, {"text": ["My question is - how do I set a timeout for any command?", "For example, I don't want the program to wait indefinitely because a particular programs takes more than, say, 5 minutes to run."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Simpler, unsophisticated solutions would be nice."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]