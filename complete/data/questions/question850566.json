[{"text": ["Can a Python module use the imports from another file?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have something like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # a.py  \n import os\n class A:\n   ...\n\n # b.py\n import a\n class B(A):\n   ...\n</code>\n</pre>\n", "senID": 2}, {"text": ["In class B (b.py) I'd like to be able to use the modules imported in a.py (os in this case).", "Is it possible to achieve this behavior in Python or should I import the modules in both files?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Edit: I'm not worried about the import times, my problem is the visual clutter that the block of imports puts on the files.", "I end up having stuff like this in every controller (RequestHandler):"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n from django.utils import simplejson\n from google.appengine.ext import webapp\n from google.appengine.ext.webapp import template\n from google.appengine.ext import db\n</code>\n</pre>\n", "senID": 5}, {"text": ["That's what I'd like to avoid."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]