[{"text": ["Python functions can be given new attributes from outside the scope?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I didn't know you could do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def tom():\n    print \"tom's locals: \", locals()\n\ndef dick(z):\n    print \"z.__name__ = \", z.__name__\n    z.guest = \"Harry\"\n    print \"z.guest = \", z.guest\n    print \"dick's locals: \", locals()\n\ntom()              #&gt;&gt;&gt; tom's locals:  {}\n#print tom.guest    #AttributeError: 'function' object has no attribute 'guest'\nprint \"tom's dir:\", dir(tom)  # no 'guest' entry\n\ndick( tom)         #&gt;&gt;&gt; z.__name__ =  tom\n                   #&gt;&gt;&gt; z.guest =  Harry\n                   #&gt;&gt;&gt; dick's locals:  {'z': &lt;function tom at 0x02819F30&gt;}\ntom()              #&gt;&gt;&gt; tom's locals:  {}\n#print dick.guest  #AttributeError: 'function' object has no attribute 'guest'\n\nprint tom.guest    #&gt;&gt;&gt; Harry\nprint \"tom's dir:\", dir(tom)  # 'guest' entry appears\n</code>\n</pre>\n", "senID": 2}, {"text": ["Function tom() has no locals.", "Function dick() knows where tom() lives and puts up Harry as 'guest' over at tom()'s place.", "harry doesn't appear as a local at tom()'s place, but if you ask for tom's guest, harry answers.", "harry is a new attribute at tom()."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["UPDATE:  From outside tom(), you can say \"print dir(tom)\" and see the the tom-object's dictionary.", "(You can do it from inside tom(), too.", "So tom could find out he had a new lodger, harry, going under the name of 'guest'."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "inside", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["So, attributes can be added to a function's namespace from outside the function?", "Is that often done?", "Is it acceptable practice?", "Is it recommended in some situations?", "Is it actually vital at times?", "(Is it Pythonic?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["UPDATE: Title now says 'attributes'; it used to say 'variables'.", "Here's a PEP about Function Attributes."], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "PEP about Function Attributes", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.python.org/dev/peps/pep-0232/"}]}]