[{"text": ["Python: Best way to check for Python version in program that uses new language features?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["If I have a python script that requires at least a particular\nversion of python, what is the correct way to fail gracefully\nwhen an earlier version of python is used to launch the script?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["How do I get control early enough to issue an error message\nand exit?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["For example, I have a program that uses the ternery operator (new in 2.5) and \"with\" blocks\n(new in 2.6).", "I wrote a simple little interpreter-version\nchecker routine which is the first thing the script would\ncall ... except it doesn't get that far.", "Instead, the\nscript fails during python compilation, before my routines\nare even called.", "Thus the user of the script sees some very\nobscure synax error tracebacks - which pretty much require\nan expert to deduce that it is simply the case of running\nthe wrong version of python."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["update"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I know how to check the version of python.", "The issue is that some syntax is illegal in older versions of python.", "Consider this program:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n import sys\nif sys.version_info &lt; (2, 4):\n    raise \"must use python 2.5 or greater\"\nelse:\n    # syntax error in 2.4, ok in 2.5\n    x = 1 if True else 2\n    print x\n</code>\n</pre>\n", "senID": 6}, {"text": ["When run under 2.4, I want this result"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n $ ~/bin/python2.4 tern.py \nmust use python2.5 or greater\n</code>\n</pre>\n", "senID": 8}, {"text": ["and not this result:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n $ ~/bin/python2.4 tern.py \n  File \"tern.py\", line 5\n    x = 1 if True else 2\n           ^\nSyntaxError: invalid syntax\n</code>\n</pre>\n", "senID": 10}, {"text": ["(channeling for a coworker)"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]