[{"text": ["Writing a small yet flexible HTTP client"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm looking to find out how people would go about writing a quick (small) yet flexible HTTP client.", "By quick I mean not much code, (I'll leave it up to you to decide what that means), and preferably using built-in language functions as opposed to downloaded or custom libraries, such that a basic knowledge of socket programming should be sufficient to understand how the code works.", "By flexible I mean that you should be able to manipulate the incoming data easily.", "My own version of something like this would be"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/perl\nuse Socket;\nuse HTML::Parse;\n\nsocket(SOCKH, PF_INET, SOCK_STREAM, getprotobyname('tcp')) || die $!;\nconnect(SOCKH,sockaddr_in(80,inet_aton('www.example.com'))) || die $!;\n\n$old_fh = select(SOCKH);\n$|=1;\nselect($old_fh);\n\nprint SOCKH \"GET / HTTP/1.0\\n\\n\";\n\nwhile (&lt;SOCKH&gt;) {\n    $response .= $_;\n}\n\nprint parse_html($response)-&gt;format;\n\nclose(&lt;SOCKH&gt;);\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is just a quick client which I'll be editing for HTTP/1.1 shortly, or if you have suggestions on how to better it for compliancy please share!"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["EDIT: An update to my code, using LWP as Sinan Unur suggested:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n #!/usr/bin/perl\nuse LWP::Simple;\nuse HTML::Parse;\n\n$data = parse_html( get( 'www.example.com' ) )-&gt;format;\nforeach $line ( $data ) {\n    print $line; // or any other line-based operation\n}\n</code>\n</pre>\n", "senID": 5}]