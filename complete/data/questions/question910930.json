[{"text": ["Storing information on points in a 3d space"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm writing some code (just for fun so far) in Python that will store some data on every point in a 3d space.", "I'm basically after a 3d matrix object that stores arbitary objects that will allow me to do some advanced selections, like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": "Get the point where x=1,y=2,z=3.", "tag": "none", "senID": 2}, {"text": "Getting all points where y=2.", "tag": "none", "senID": 3}, {"text": "Getting all points within 3 units of position x=1,y=2,z=3.", "tag": "none", "senID": 4}, {"text": "Getting all points where point.getType() == \"Foo\"", "tag": "none", "senID": 5}]}, {"text": ["In all of the above, I'd need to end up with some sort of output that would give me the original position in the space, and the data stored at that point."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Apparently numpy can do what I want, but it seems highly optimised for scientific computing and working out how to get the data like I want above has so far eluded me."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Is there a better alternative or should I return to banging my head on the numpy wall?", ":)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["EDIT: some more info the first three answers made me realise I should include: I'm not worried about performance, this is purely a proof-of-concept where I'd prefer clean code to good performance.", "I will also have data for every point in the given 3d space, so I guess a Spare Matrix is bad?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]