[{"text": ["I'm new at python, building a high low game.", "I need some help!"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Make the computer guess a number that the user chooses between 1 and 1000 in no more than 10 guesses.This assignment uses an algorithm called a binary search.", "After each guess, the algorithm cuts the number of possible answers to search in half.", "Pseudocode for the complete\nprogram is given below; your task is to turn it into a working python program.", "The program should start by printing instructions to the screen, explaining that the user\nshould pick a number between 1 and 1000 and the computer will guess it in no more than\n10 tries.", "It then starts making guesses, and after each guess it asks the user for feedback.", "The user should be instructed to enter -1 if the guess needs to be lower, 0 if it was right,\nand 1 if it needs to be higher.When the program guesses correctly, it should report how many guesses were required.", "If the user enters an invalid response, the instructions should be repeated and the user allowed to try again."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Pseudocode   "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n - Print instructions to the user  \n-Start with high = 1000, low = 1, and tries = 1 \n- While high is greater than low   \n  - Guess the average of high and low  \n  - Ask the user to respond to the guess  \n  - Handle the four possible outcomes:  \n    - If the guess was right, print a message that tries guesses were required and quit the program\n    - If the guess was too high, set high to one less than the guess that was displayed to the user and increment tries  \n    - If the guess was too low, set low to one more than the guess that was displayed to the user and increment tries\n    - If the user entered an incorrect value, print out the instructions again\n- high and low must be equal, so print out the answer and the value of tries\n</code>\n</pre>\n", "senID": 3}, {"text": ["I need some serious help!", "I don't understand any of this stuff at all!", "This is all I have "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def main(x, nums, low, high):\n        input(\"Enter -1 if the guess needs to be lower, 0 if the guess was right, or 1 if the guess needs to be higher: \")\n    for i in range (1, 1001):\n\nmain()\n</code>\n</pre>\n", "senID": 5}, {"text": ["and I don't even know if it's right!"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]