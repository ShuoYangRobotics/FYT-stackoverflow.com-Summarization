[{"text": ["How do I notify a process of an SQLite database change done in a different process?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Let's say I have two or more processes dealing with an SQLite database - a \"player\" process and many \"editor\" processes. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The \"player\" process reads the database and updates a view - in my case it would be a waveform being mixed to the soundcard depending on events stored in the database."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["An \"editor\" process is any editor for that database: it changes the database constantly."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Now I want the player to reflect the editing changes quickly."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I know that SQLite supplies hooks to trace database changes within the same process, but there seems to be little info on how to do this with multiple processes."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I could poll the database constantly, compare records and trigger events, but that seems to be quite inefficient, especially when the database grows to a large size."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I am thinking about using a log table and triggers, but I wonder if there is a simpler method."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]