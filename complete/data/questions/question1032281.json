[{"text": ["Python: finding keys with unique values in a dictionary?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I receive a dictionary as input, and want to return a list of keys for which the dictionary values are unique in the scope of that dictionary."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I will clarify with an example.", "Say my input is dictionary a, constructed as follows:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n a = dict()\na['cat'] =      1\na['fish'] =     1\na['dog'] =      2  # &lt;-- unique\na['bat'] =      3\na['aardvark'] = 3\na['snake'] =    4  # &lt;-- unique\na['wallaby'] =  5\na['badger'] =   5\n</code>\n</pre>\n", "senID": 3}, {"text": ["The result I expect is ['dog', 'snake']."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "['dog', 'snake']", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["There are obvious brute force ways to achieve this, however I wondered if there's a neat Pythonian way to get the job done."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]