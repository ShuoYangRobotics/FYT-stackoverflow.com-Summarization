[{"text": ["Is it possible to delete a method from an object (not class) in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a class with a few methods, some of which are only valid when the object is in a particular state.", "I would like to have the methods simply not be bound to the objects when they're not in a suitable state, so that I get something like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; wiz=Wizard()\n&gt;&gt;&gt; dir(wiz)\n['__doc__', '__module__', 'addmana']\n&gt;&gt;&gt; wiz.addmana()\n&gt;&gt;&gt; dir(wiz)\n['__doc__', '__module__', 'addmana', 'domagic']\n&gt;&gt;&gt; wiz.domagic()\n&gt;&gt;&gt; dir(wiz)\n['__doc__', '__module__', 'addmana']\n&gt;&gt;&gt; wiz.domagic()\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: Wizard instance has no attribute 'domagic'\n</code>\n</pre>\n", "senID": 2}, {"text": ["I can see how to add methods (types.MethodType(method, object)), but I can't see any way to delete a method for just a single object:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; wiz.domagic\n&lt;bound method Wizard.domagic of &lt;__main__.Wizard instance at 0x7f0390d06950&gt;&gt;\n&gt;&gt;&gt; del wiz.domagic\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: Wizard instance has no attribute 'domagic'\n</code>\n</pre>\n", "senID": 4}, {"text": ["Overriding __dir__ (and getting an InvalidState or NotEnoughMana exception on invocation instead of AttributeError on reference) might be okay, but I can't see how to mimic the built-in behaviour of dir() accurately.", "(Ideally I'd prefer a way that works in Python 2.5, too)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Ideas?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]