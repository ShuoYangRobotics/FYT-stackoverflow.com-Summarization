[{"text": ["Python assert -- improved introspection of failure?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is a rather useless assertion error; it does not tell the values of the expression involved (assume constants used are actually variable names): "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n $ python -c \"assert 6-(3*2)\"\n[...]\nAssertionError\n</code>\n</pre>\n", "senID": 2}, {"text": ["Is there a better assert implementation in Python that is more fancy?", "It must not introduce additional overhead over execution (except when assert fails) .. and must turn off if -O flag is used."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "assert", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "-O", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Edit: I know about assert's second argument as a string.", "I don't want to write one .. as that is encoded in the expression that is being asserted.", "DRY (Don't Repeat Yourself)."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]