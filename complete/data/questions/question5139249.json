[{"text": ["python url unquote unicode "], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["i have a unicode string like '%C3%A7%C3%B6asd+fjkls%25asd' and i want to decode this string.", "I used urllib.unquote_plus(str) but it works wrong."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "'%C3%A7%C3%B6asd+fjkls%25asd'", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n - expected : '\u00e7\u00f6asd+fjkls%asd '\n- result : '\u00c3\u00a7\u00c3\u00b6asd fjkls%asd'\n</code>\n</pre>\n", "senID": 2}, {"text": ["double coded utf-8 characters(%C3%A7 and %C3%B6) are decoded wrong.", "my python version is 2.7 under a linux distro\nwhat is the best way to get expected result ?"], "childNum": 3, "tag": "p", "senID": 3, "childList": [{"text": "(%C3%A7 and %C3%B6)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["thanks in advance"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]