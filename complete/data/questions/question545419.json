[{"text": ["Using base class constructor as factory in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm using base class constructor as factory and changing class in this constructor/factory to select appropriate class -- is this approach is good python practice or there are more elegant ways? "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I've tried to read help about metaclasses but without big success."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here example of what I'm doing."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class Project(object):\n  \"Base class and factory.\"\n  def __init__(self, url):\n      if is_url_local(url):\n        self.__class__ = ProjectLocal\n      else:\n        self.__class__ = ProjectRemote\n      self.url = url\n\nclass ProjectLocal(Project):\n  def do_something(self):\n    # do the stuff locally in the dir pointed by self.url\n\nclass ProjectRemote(Project):\n  def do_something(self):\n    # do the stuff communicating with remote server pointed by self.url\n</code>\n</pre>\n", "senID": 4}, {"text": ["Having this code I can create the instance of ProjectLocal/ProjectRemote via base class Project:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n project = Project('http://example.com')\nproject.do_something()\n</code>\n</pre>\n", "senID": 6}, {"text": ["I know that alternate way is to using fabric function that will return the class object based on url, then code will looks similar:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n def project_factory(url):\n      if is_url_local(url):\n        return ProjectLocal(url)\n      else:\n        return ProjectRemote(url)\n\nproject = project_factory(url)\nproject.do_something()\n</code>\n</pre>\n", "senID": 8}, {"text": ["Is my first approach just matter of taste or it has some hidden pitfalls?"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]