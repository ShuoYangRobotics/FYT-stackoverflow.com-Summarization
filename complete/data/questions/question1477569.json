[{"text": ["Python: time a method call and stop it if time is exceeded"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to dynamically load code (comes as source), run it and get the results.", "The code that I load always includes a run method, which returns the needed results.", "Everything looks ridiculously easy, as usual in Python, since I can do"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n exec(source) #source includes run() definition\nresult = run(params)\n#do stuff with result\n</code>\n</pre>\n", "senID": 2}, {"text": ["The only problem is, the run() method in the dynamically generated code can potentially not terminate, so I need to only run it for up to x seconds.", "I could spawn a new thread for this, and specify a time for .join() method, but then I cannot easily get the result out of it (or can I).", "Performance is also an issue to consider, since all of this is happening in a long while loop"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Any suggestions on how to proceed?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Edit: to clear things up per dcrosta's request: the loaded code is not untrusted, but generated automatically on the machine.", "The purpose for this is genetic programming."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]