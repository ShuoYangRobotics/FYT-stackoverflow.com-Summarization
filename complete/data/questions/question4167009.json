[{"text": ["A cleaner/shorter way to solve this problem?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This exercise is taken from Google's Python Class:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Google's Python Class", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/intl/de-DE/edu/languages/google-python-class/index.html"}]}, {"text": ["Here's my solution so far:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def remove_adjacent(nums):\n  if not nums:\n    return nums\n\n  list = [nums[0]]\n\n  for num in nums[1:]:\n    if num != list[-1]:\n        list.append(num)\n\n  return list\n</code>\n</pre>\n", "senID": 3}, {"text": ["But this looks more like a C program than a Python script, and I have a feeling this can be done much more elegant."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["EDIT"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["So [1, 2, 2, 3] should give [1, 2, 3] and [1, 2, 3, 3, 2] should give [1, 2, 3, 2]"], "childNum": 4, "tag": "p", "senID": 6, "childList": [{"text": "[1, 2, 2, 3]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "[1, 2, 3]", "childNum": 0, "tag": "code", "childList": []}, {"text": "[1, 2, 3, 3, 2]", "childNum": 0, "tag": "code", "childList": []}, {"text": "[1, 2, 3, 2]", "childNum": 0, "tag": "code", "childList": []}]}]