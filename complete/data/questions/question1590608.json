[{"text": ["Is it possible to forward-declare a function in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to sort a list using my own cmp function.", "For the purpose of this discussion we can use the following example which is equivalent to what I'm trying to do:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "cmp", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n print \"\\n\".join([str(bla) for bla in sorted(mylist, cmp = cmp_configs)])\n</code>\n</pre>\n", "senID": 2}, {"text": ["However, because of the way I organized my code, I much prefer to put the definition of cmp_configs after the sort.", "However, I fail on:"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "cmp_configs", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "after", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n NameError: name 'cmp_configs' is not defined\n</code>\n</pre>\n", "senID": 4}, {"text": ["Is there any way to \"declare\" cmp_configs  before it's used, which will make my code cleaner, or do I have to define it only before?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "cmp_configs", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Note:  I assume that some people will be tempted to tell me that I should just reorganize my code so that I don't have this problem.", "However, there are cases when this is probably unavoidable, for instance when implementing some forms of recursion.", "If you don't like this example, assume that I have a case in which it's really necessary to forward declare a function."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "Note:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "really", "childNum": 0, "tag": "em", "pos": 2, "childList": []}]}, {"text": ["Edit:  A case in which may be necessary is:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def spam():\n    if end_condition():\n        return end_result()\n    else:\n        return eggs()\n\ndef eggs():\n    if end_condition():\n        return end_result()\n    else:\n        return spam()\n</code>\n</pre>\n", "senID": 8}, {"text": ["Where end_condition and end_result have been previously defined."], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "end_condition", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "end_result", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["But now I understand that since spam and eggs are called inside functions then by the time I call either one of them both of them will already have been defined, so the only solution is in fact to reorganize the code."], "childNum": 3, "tag": "p", "senID": 10, "childList": [{"text": "spam", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "eggs", "childNum": 0, "tag": "code", "childList": []}, {"text": "inside functions", "childNum": 0, "tag": "em", "childList": []}]}]