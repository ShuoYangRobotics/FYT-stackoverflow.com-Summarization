[{"text": ["Python: is using \"..%(var)s..\" % locals() a good practice?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I discovered this pattern (or anti-pattern) and I am very happy with it."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I feel it is very agile:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def example():\n    age = ...\n    name = ...\n    print \"hello %(name)s you are %(age)s years old\" % locals()\n</code>\n</pre>\n", "senID": 3}, {"text": ["Sometimes I use its cousin:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def example2(obj):\n    print \"The file at %(path)s has %(length)s bytes\" % obj.__dict__\n</code>\n</pre>\n", "senID": 5}, {"text": ["I don't need to create an artificial tuple and count parameters and keep the %s matching positions inside the tuple."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Do you like it?", "Do/Would you use it?", "Yes/No, please explain."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]