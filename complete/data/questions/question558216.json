[{"text": ["Plese help me write a function to determine if two numbers are nearly equal when rounded to n significant decimal digits"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have been asked to test a library provided by a 3rd party.", "The library is known to be accurate to n significant figures.", "Any less significant errors can safely be ignored.", "I want to write a function to help me compare the results:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def nearlyequal( a, b, sigfig=5 ):\n</code>\n</pre>\n", "senID": 2}, {"text": ["The purpose of this function is to determine if two floating-point numbers (a and b) are approximately equal.", "The function will return True if a==b (exact match) or if a and b have the same value when rounded to sigfig significant-figures when written decimal. "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "sigfig", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}, {"text": ["Can anybody suggest a good implementation, I've written a mini unit-test.", "Unless you can see a bug in my tests then a good implementation should be pass the following:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n assert nearlyequal(1, 1, 5) \nassert nearlyequal(1.0, 1.0, 5) \nassert nearlyequal(1.0, 1.0, 5) \nassert nearlyequal(-1e-9, 1e-9, 5) \nassert nearlyequal(1e9, 1e9 + 1 , 5) \nassert not nearlyequal( 1e4, 1e4 + 1, 5) \nassert nearlyequal( 0.0, 1e-15, 5 ) \nassert not nearlyequal( 0.0, 1e-4, 6 )\n</code>\n</pre>\n", "senID": 5}, {"text": ["Additional notes:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Thanks!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]