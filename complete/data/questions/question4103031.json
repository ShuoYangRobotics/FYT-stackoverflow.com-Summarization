[{"text": ["python: avoiding bug with variable use before assignment in a loop"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"code": "<pre>\n<code>\n for element in container:\n  # some code here\n  temp_variable = f1(element)\n  # more code\n\n# much later in the code\n\nfor element in container:\n  # some code\n  another_variable = g(temp_variable)\n  # more code\n  temp_variable = f2(element)\n  # more code\n</code>\n</pre>\n", "senID": 1}, {"text": ["In the second for loop, I accidentally used variable temp_variable before it's assigned.", "Normally, I'd get NameError exception, but here unfortunately it survived, valid and initialized, from the previous loop."], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "for", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "temp_variable", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "NameError", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Are there any coding practices, IDE tools, etc., that would help prevent such bugs?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Btw, I was thinking it might be better if variables inside the loop stayed didn't survive past the end of the loop."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["EDIT"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["@Ignacio Vazquez-Abrams:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["If I understood correctly, you suggest not to use the same variable name as a local variable in multiple loops.", "I have two problems with that:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]