[{"text": ["Pythonic way to assign default values"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Consider this line:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n some_value = lst.attr[idx]\n</code>\n</pre>\n", "senID": 2}, {"text": ["There are two possible errors here, the attr might not exist, and the idx might be out of range."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "attr", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "idx", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Is there any elegant way to reduce this statement?", "Ideally, to something like this:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n some_value = lst.attr[idx] or default_value\n</code>\n</pre>\n", "senID": 5}, {"text": ["(Don't try that at home.", "That only works for properly defined expressions that evaluate to  something."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Sure I can do:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n try:\n    some_value = lst.attr[idx]\nexcept:\n    some_value = default_value\n</code>\n</pre>\n", "senID": 8}, {"text": ["But what if I'm in the context of an assignment?", "For example:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n print [x.attr[idx] for x in y]\n</code>\n</pre>\n", "senID": 10}, {"text": ["What's the pythonic way to handle errors and assign default values in this case?"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]