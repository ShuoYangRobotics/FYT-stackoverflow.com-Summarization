[{"text": ["Python computing error"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I\u2019m using the API mpmath to compute the following sum"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Let us consider the serie u0, u1, u2 defined by:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n u0 = 3/2 = 1,5\n\nu1 = 5/3 = 1,6666666\u2026\n\nun+1 = 2003 - 6002/un + 4000/un un-1\n</code>\n</pre>\n", "senID": 3}, {"text": ["The serie converges on 2, but with rounding problem it seems to converge on 2000."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\nn   Calculated value    Rounded off exact value\n\n2   1,800001            1,800000000\n3   1,890000            1,888888889\n4   3,116924            1,941176471\n5   756,3870306         1,969696970\n6   1996,761549         1,984615385\n7   1999,996781         1,992248062\n8   1999,999997         1,996108949\n9   2000,000000         1,998050682\n10  2000,000000         1,999024390\n</pre>\n", "senID": 5}, {"text": ["My code :"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n from mpmath import *\nmp.dps = 50\nu0=mpf(3/2.0)\nu1=mpf(5/3.0)\nu=[]\nu.append(u0)\nu.append(u1)\nfor i in range (2,11):\n    un1=(2003-6002/u[i-1]+(mpf(4000)/mpf((u[i-1]*u[i-2]))))\n    u.append(un1)\nprint u\n</code>\n</pre>\n", "senID": 7}, {"text": ["my bad results :"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n [mpf('1.5'),   \n mpf('1.6666666666666667406815349750104360282421112060546875'),     \n mpf('1.8000000000000888711326751945268011597589466120961647'),  \n mpf('1.8888888889876302386905492787148253684796100079942617'),  \n mpf('1.9411765751351638992775070422559330255517747908588059'),    \n mpf('1.9698046831709839591526211645628191427874374792786951'),      \n mpf('2.093979191783975876606205176530675127058752077926479'),   \n mpf('106.44733511712489354422046139349654833300787666477228'),     \n mpf('1964.5606972399290690749220686397494349501387742896911'),   \n mpf('1999.9639916238009625032390578545797067344576357100626'),   \n mpf('1999.9999640260895343960004614025893194430187653900418')]\n</code>\n</pre>\n", "senID": 9}, {"text": ["I tried to perform with some others functions (fdiv\u2026) or to change the precision: same bad result"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["What\u2019s wrong with this code ?"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["Question:\nHow to change my code to find the value 2.0 ???", "with the formula :"], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["un+1 = 2003 - 6002/un + 4000/un un-1"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"text": ["thanks"], "childNum": 0, "tag": "p", "senID": 14, "childList": []}]