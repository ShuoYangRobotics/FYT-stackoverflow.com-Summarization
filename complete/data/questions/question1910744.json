[{"text": ["More efficient way to count intersections?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list of 300000 lists (fiber tracks), where each track is a list of (x,y,z) tuples/coordinates:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n tracks=\n[[(1,2,3),(3,2,4),...]\n [(4,2,1),(5,7,3),...]\n ...\n]\n</code>\n</pre>\n", "senID": 2}, {"text": ["I also have a group of masks, where each mask is defined as a list of (x,y,z) tuples/coordinates: "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n mask_coords_list=\n[[(1,2,3),(8,13,4),...]\n [(6,2,2),(5,7,3),...]\n ...\n]\n</code>\n</pre>\n", "senID": 4}, {"text": ["I am trying to find, for all possible pairs of masks:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I'm currently doing part 1 like so:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def mask_connectivity_matrix(tracks,masks,masks_coords_list):\n    connect_mat=zeros((len(masks),len(masks)))\n    for track in tracks:\n        cur=[]\n        for count,mask_coords in enumerate(masks_coords_list):\n            if any(set(track) &amp; set(mask_coords)):\n                cur.append(count)\n            for x,y in list(itertools.combinations(cur,2)):\n                connect_mat[x,y] += 1\n</code>\n</pre>\n", "senID": 7}, {"text": ["and part 2 like so:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n def mask_tracks(tracks,masks,masks_coords_list):\n    vox_tracks_img=zeros((xdim,ydim,zdim,len(masks)))\n    for track in tracks:\n        for count,mask in enumerate(masks_coords_list):\n            if any(set(track) &amp; set(mask)):\n                for x,y,z in track:\n                    vox_tracks_img[x,y,z,count] += 1\n</code>\n</pre>\n", "senID": 9}, {"text": ["Using sets to find intersections has sped this process up significantly but both portions still take over an hour when I have a list of 70 or more masks.", "Is there a more efficient way to do this than iterating for each track?"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]