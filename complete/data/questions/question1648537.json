[{"text": ["How to split a string by commas positioned outside of parenthesis?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I got a string of such format: "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n \"Wilbur Smith (Billy, son of John), Eddie Murphy (John), Elvis Presley, Jane Doe (Jane Doe)\"\n</code>\n</pre>\n", "senID": 2}, {"text": ["so basicly it's list of actor's names (optionally followed by their role in parenthesis).", "The role itself can contain comma (actor's name can not, I strongly hope so)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["My goal is to split this string into a list of pairs - (actor name, actor role). "], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "(actor name, actor role)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["One obvious solution would be to go through each character, check for occurances of '(', ')' and ',' and split it whenever a comma outside occures.", "But this seems a bit heavy..."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "'('", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "')'", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "','", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["I was thinking about spliting it using a regexp: first split the string by parenthesis:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n import re\nx = \"Wilbur Smith (Billy, son of John), Eddie Murphy (John), Elvis Presley, Jane Doe (Jane Doe)\"\ns = re.split(r'[()]', x) \n# ['Wilbur Smith ', 'Billy, son of John', ', Eddie Murphy ', 'John', ', Elvis Presley, Jane Doe ', 'Jane Doe', '']\n</code>\n</pre>\n", "senID": 7}, {"text": ["The odd elements here are actor names, even are the roles.", "Then I could split the names by commas and somehow extract the name-role pairs.", "But this seems even worse then my 1st approach."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Are there any easier / nicer ways to do this, either with a single regexp or a nice piece of code? "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]