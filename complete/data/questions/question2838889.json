[{"text": ["How can this verbose, unpythonic routine be improved?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a more pythonic way of doing this?", "I am trying to find the eight neighbours of an integer coordinate lying within an extent.", "I am interested in reducing its verbosity without sacrificing execution speed."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def fringe8((px, py), (x1, y1, x2, y2)):\n    f = [(px - 1, py - 1),\n         (px - 1, py),\n         (px - 1, py + 1),\n         (px, py - 1),\n         (px, py + 1),\n         (px + 1, py - 1),\n         (px + 1, py),\n         (px + 1, py + 1)]\n    f_inrange = []\n    for fx, fy in f:\n        if fx &lt; x1:  continue\n        if fx &gt;= x2: continue\n        if fy &lt; y1:  continue\n        if fy &gt;= y2: continue\n        f_inrange.append((fx, fy))\n    return f_inrange\n</code>\n</pre>\n", "senID": 2}]