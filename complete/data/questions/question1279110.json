[{"text": ["What's the regex for removing dots in acronyms but not in domain names?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to remove dots in acronyms but not in domain names in a python string.", "For example, \nI want the string"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n 'a.b.c. test@test.com http://www.test.com'\n</code>\n</pre>\n", "senID": 2}, {"text": ["to become"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n 'abc test@test.com http://www.test.com'\n</code>\n</pre>\n", "senID": 4}, {"text": ["The closest regex I made so far is"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n re.sub('(?:\\s|\\A).{1}\\.',lambda s: s.group()[0:2], s)\n</code>\n</pre>\n", "senID": 6}, {"text": ["which results to"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n 'ab.c. test@test.com http://www.test.com'\n</code>\n</pre>\n", "senID": 8}, {"text": ["It seems that for the above regex to work, I need to change the regex to"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n (?:\\s|\\A|\\G).{1}\\.\n</code>\n</pre>\n", "senID": 10}, {"text": ["but there is no end of match marker (\\G) in python."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["EDIT: As I have mentioned in my comment, the strings have no specific formatting.", "These strings contain informal human conversations and so may contain zero, one or several acronyms or domain names.", "A few errors is fine by me if it would save me from coding a \"real\" parser."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}]