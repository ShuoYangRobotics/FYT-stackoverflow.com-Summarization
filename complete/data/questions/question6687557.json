[{"text": ["Python: if more than one of three things is true, return false"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm writing a django model that allows my site to have coupons.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Coupons can have three types: lifetime account voucher, certain period of months voucher, certain number of dollars voucher.  "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["To keep things simple, I'm only allowing coupons to have one of the three possible values (i.e.", "a voucher can't be for $10 and 5 months).", "But I want to check when a coupon is being saved to ensure this rule is true.  "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Currently I have:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n true_count = 0\nif self.months:\n    true_count += 1\nif self.dollars:\n    true_count += 1\nif self.lifetime:\n    true_count += 1    \n\nif true_count &gt; 1:\n    raise ValueError(\"Coupon can be valid for only one of: months, lifetime, or dollars\")\n</code>\n</pre>\n", "senID": 5}, {"text": ["I know there's a better way to do this, but I'm not seeing it (call it coder's block)."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Help is much appreciated."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["In case it maters, the three types are int, int, and bool"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n months = models.IntegerField(default=0)\ncents = models.IntegerField(default=0)\n#dollars = models.FloatField(default=0.00)\n#dollars replaced with integer cents per advice of group\nlifetime = models.BooleanField(default=False)\n</code>\n</pre>\n", "senID": 9}]