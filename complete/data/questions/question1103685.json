[{"text": ["How to match search strings to content in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Usually when we search, we have a list of stories, we provide a search string, and expect back a list of results where the given search strings matches the story."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["What i am looking to do, is the opposite.", "Give a list of search strings, and one story and find out which search strings match to that story."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Now this could be done with re but the case here is i wanna use complex search queries as supported by solr.", "Full details of the query syntax here.", "Note: i wont use boost."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "query syntax here", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://lucene.apache.org/java/2%5F4%5F0/queryparsersyntax.html"}]}, {"text": ["Basically i want to get some pointers for the doesitmatch function in the sample code below."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def doesitmatch(contents, searchstring):\n    \"\"\"\n    returns result of searching contents for searchstring (True or False)\n    \"\"\"\n    ???????\n    ???????\n\n\nstory = \"big chunk of story 200 to 1000 words long\"\nsearchstrings = ['sajal' , 'sajal AND \"is a jerk\"' , 'sajal kayan' , 'sajal AND (kayan OR bangkok OR Thailand OR ( webmaster AND python))' , 'bangkok']\n\nmatches = [[searchstr] for searchstr in searchstrings if doesitmatch(story, searchstr) ]\n</code>\n</pre>\n", "senID": 5}, {"text": ["Edit: Additionally would also be interested to know if any module exists to convert lucene query like 'sajal AND (kayan OR bangkok OR Thailand OR ( webmaster AND python) OR \"is a jerk\")' into regex"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]