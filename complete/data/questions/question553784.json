[{"text": ["Can you use a string to instantiate a class in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm using a builder pattern to seperate a bunch of different configuration possibilities.", "Basically, I have a bunch of classes that are named an ID (something like ID12345).", "These all inherit from the base builder class.", "In my script, I need to instantiate an instance for each class (about 50) every time this app runs.", "So, I'm trying to see if instead of doing something like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n ProcessDirector = ProcessDirector()\nID12345 = ID12345()\nID01234 = ID01234()\n\nProcessDirector.construct(ID12345)\nProcessDirector.construct(ID01234)\n\nID12345.run()\nID01234.run()\n</code>\n</pre>\n", "senID": 2}, {"text": ["Can I do something like this (I know this doesn't work):"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n IDS = [\"ID12345\", \"ID01234\"]\n\nProcessDirector = ProcessDirector()\nfor id in IDS:\n  builder = id() #some how instantiate class from string\n  ProcessDirector.construct(builder)\n  builder.run()\n</code>\n</pre>\n", "senID": 4}, {"text": ["That way, when I need to add a new one in the future, all I have to do is add the id to the IDS list, rather than peppering the new ID throughout the code. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["EDIT"], "childNum": 0, "tag": "h2", "senID": 6, "childList": []}, {"text": ["Looks like there are some different opinions based on where the data is coming from.", "These IDs are entered in a file that no one else has access to.", "I'm not reading the strings from the command line, and I'd like to be able to do as little alteration when adding a new ID in the future. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]