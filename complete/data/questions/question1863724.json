[{"text": ["Reasons for this disparity in execution speed?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wrote a quick Python script to compare two files, each containing unordered hashes, in order to verify that both files are identical aside from order.", "Then I rewrote it in Ruby for educational purposes."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The Python implementation takes seconds, while the Ruby implementation takes around 4 minutes."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I have a feeling this is most likely due to my lack of Ruby knowledge, any ideas on what I am doing wrong?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Environment is Windows XP x64, Python 2.6, Ruby 1.8.6"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Python"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Python", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n f = open('c:\\\\file1.txt', 'r')\n\nhashes = dict()\n\nfor line in f.readlines():\n    if not line in hashes:\n        hashes[line] = 1\n    else:\n        hashes[line] += 1\n\n\nprint \"Done file 1\"\n\nf.close()\n\nf = open('c:\\\\file2.txt', 'r')\n\nfor line in f.readlines():\n    if not line in hashes:\n        print \"Hash not found!\"\n    else:\n        hashes[line] -= 1\n\nf.close()\n\nprint \"Done file 2\"\n\nnum_errors = 0\n\nfor key in hashes.keys():\n    if hashes[key] != 0:\n        print \"Uneven hash count: %s\" % key\n        num_errors += 1\n\nprint \"Total of %d mismatches found\" % num_errors\n</code>\n</pre>\n", "senID": 6}, {"text": ["Ruby"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Ruby", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n file = File.open(\"c:\\\\file1.txt\", \"r\")\nhashes = {}\n\nfile.each_line { |line|\n  if hashes.has_key?(line)\n    hashes[line] += 1\n  else\n    hashes[line] = 1\n  end\n}\n\nfile.close()\n\nputs \"Done file 1\"\n\nfile = File.open(\"c:\\\\file2.txt\", \"r\")\n\nfile.each_line { |line|\n  if hashes.has_key?(line)\n    hashes[line] -= 1\n  else\n    puts \"Hash not found!\"\n  end\n}\n\nfile.close()\n\nputs \"Done file 2\"\n\nnum_errors = 0\nhashes.each_key{ |key|\n  if hashes[key] != 0\n    num_errors += 1\n  end\n}\n\nputs \"Total of #{num_errors} mismatches found\"\n</code>\n</pre>\n", "senID": 8}, {"text": ["EDIT To give an idea of scale, each file is pretty big, over 900 000 hashes."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["PROGRESS"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "PROGRESS", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Using a nathanvda's suggestions, here is the optimized ruby script:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n f1 = \"c:\\\\file1.txt\"\nf2 = \"c:\\\\file2.txt\"\n\nhashes = Hash.new(0)\n\nFile.open(f1, \"r\") do |f|\n  while line = f.gets\n    hashes[line] += 1\n  end\nend  \n\nnot_founds = 0\n\nFile.open(f2, \"r\") do |f|\n  while line = f.gets\n    if hashes.has_key?(line)\n      hashes[line] -= 1\n    else\n      not_founds += 1\n    end\n  end\nend\n\nnum_errors = hashes.values.to_a.select { |z| z != 0}.size   \n\nputs \"Total of #{not_founds} lines not found in file2\"\nputs \"Total of #{num_errors} mismatches found\"\n</code>\n</pre>\n", "senID": 12}, {"text": ["On windows with Ruby 1.8.7, the original version took 250 seconds and the optimized version took 223."], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"text": ["On a linux VM!", "running ruby 1.9.1, the original version ran in 81 seconds, about 1/3 the time as windows 1.8.7.", "Interestingly, the optimized version took longer at 89 seconds.", "Note that while line = ... was necessary due to memory constraints."], "childNum": 0, "tag": "p", "senID": 14, "childList": []}, {"text": ["On windows with Ruby 1.9.1, the original took 457 seconds and the optimized version took 543."], "childNum": 0, "tag": "p", "senID": 15, "childList": []}, {"text": ["On windows with jRuby, the original took 45 seconds and the optimized version took 43."], "childNum": 0, "tag": "p", "senID": 16, "childList": []}, {"text": ["I am somewhat surprised by the results, I was expecting 1.9.1 to be an improvement over 1.8.7."], "childNum": 0, "tag": "p", "senID": 17, "childList": []}]