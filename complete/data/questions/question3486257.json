[{"text": ["idiomatic way of taking action on attempt to loop over an empty iterable"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Suppose that I am looping over a iterable and would like to take some action if the iterator is empty.", "The two best ways that I can think of to do this are "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n for i in iterable:\n     # do_something\nif not iterable:\n    # do_something_else\n</code>\n</pre>\n", "senID": 2}, {"text": ["and"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n empty = True\nfor i in iterable:\n    empty = False\n    # do_something\nif empty:\n    # do_something_else\n</code>\n</pre>\n", "senID": 4}, {"text": ["The first depends on the the iterable being a collection (so useless for when the iterable gets passed into the function/method where the loop is) and the second sets empty on every pass through the loop which seems ugly. "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "empty", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Is there another way that I'm missing or is the second alternative the best?", "It would be really cool if there was some clause that I could add to the loop statement that would handle this for me much like else makes not_found flags go away. "], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "else", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "not_found", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["[Deleted specific example because it seems to be confusing people]"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["I am not looking for clever hacks."], "childNum": 0, "tag": "h2", "senID": 8, "childList": []}, {"text": ["I am not looking for solutions that involve a lot of code"], "childNum": 0, "tag": "h2", "senID": 9, "childList": []}, {"text": ["I am looking for a simple language feature.", "I am looking for a clear and pythonic way to iterate over an iterable and take some action if the iterable is empty that any experienced python programmer will be understand.", "If I could do it without setting a flag on every iteration, that would be fantastic.", "If there is no simple idiom that does this, then forget about it."], "childNum": 2, "tag": "p", "senID": 10, "childList": [{"text": "clear", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}, {"text": "pythonic", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}]