[{"text": ["Python: Element order in dictionary"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Here is my Django code that does not work as expected:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n posts = Post.objects.all().order_by('-added')[:20] # ordered by 'added'\npost_list = dict([(obj.id, obj) for obj in posts])\n\n# ... some operations with dictionary elements go here ...\n\nposts_to_return = [post for post_id, post in post_list.items()] # order by 'id' now!\n</code>\n</pre>\n", "senID": 2}, {"text": ["Is there a way to keep the original element order, so the posts would be ordered by added in posts_to_return?"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "added", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "posts_to_return", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Thank you!"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["EDIT: Python 2.6, Django 1.3"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]