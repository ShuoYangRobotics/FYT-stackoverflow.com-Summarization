[{"text": ["Code refactoring with python decorators?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm actually struggling with some piece of code.", "I do know that it can be refactored, but I can't find the nice-smart-elegant solution."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here are two functions (much more functions of that kind are in my code):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def fooA(param1, param2):\n    if param2 == True:\n       code_chunk_1\n\n    fooA_code  #uses only param1\n\n    if param2 == True:\n       code_chunk_2\n\n\ndef fooB(param1, param2):\n    if param2 == True:\n       code_chunk_1\n\n    fooB_code  #uses only param1\n\n    if param2 == True:\n       code_chunk_2\n</code>\n</pre>\n", "senID": 3}, {"text": ["My first idea was to use this decorator:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def refactorMe(func):\n    def wrapper(*args):\n        if args[-1]:\n            code_chunk_1\n\n        func(*args)\n\n        if args[-1]:\n            code_chunk_2\n\n    return wrapper\n</code>\n</pre>\n", "senID": 5}, {"text": ["And finally:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n @refactorMe\ndef fooA(param1, param2):\n    fooA_code  #uses only param1\n\n@refactorMe\ndef fooB(param1, param2):\n    fooB_code  #uses only param1\n</code>\n</pre>\n", "senID": 7}, {"text": ["Unfortunately, I'm not happy with this solution:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "This decorator is \"intrusive\" and specific to the fooA &amp; fooB functions", "tag": "none", "senID": 9}, {"text": "param2 is not used anymore in the fooA &amp; fooB body, but we must keep it in the function signature", "tag": "none", "senID": 10}]}, {"text": ["Perhaps I'm not using the decorator for its initial purpose?"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"text": ["Is there any other way to refactor the code?"], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Thanks a lot!"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}]