[{"text": ["Some questions about python list element and list comprehensions"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Come straight to the point.", "A list e.g.", "lst = [1, 1, 1, 0, 0, 0], now I want to change 1 into 0 as lst = [0, 0, 0, 0, 0, 0]. "], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "lst = [1, 1, 1, 0, 0, 0]", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "lst = [0, 0, 0, 0, 0, 0]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["My original solution likes below:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n for item in lst:\n\n    if item == 1:\n\n        item = 0\n</code>\n</pre>\n", "senID": 3}, {"text": ["Actually, the result list is still lst = [1, 1, 1, 0, 0, 0]. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Q1: Is there any other solutions to solve it besides using list comprehension?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Q1", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Q2: How to write correct list comprehensions when many more if else for in it?", "So I have tried four styles below:"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "Q2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "if else for", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n No.1 lst = [0 if item == 1 for item in lst] # Returns syntax error\n\nNo.2 lst = [0 for item in lst if item == 1] # Returns [0, 0, 0]\n\nNo.3 lst = [0 if item == 1 else item for item in lst] # Returns [0, 0, 0, 0, 0, 0]\n\nNo.4 lst = [0 for item in lst if item == 1 else item] # Returns syntax error\n</code>\n</pre>\n", "senID": 7}]