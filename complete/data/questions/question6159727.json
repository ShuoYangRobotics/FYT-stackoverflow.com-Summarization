[{"text": ["Shell-style list generation or variable expression in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["----Complete Rephrasing----"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I was working on a new class where each instance was essentially sequential and linked.", "I had thought, in a very shell scripty way, that I could define a function to compile a list of all of these instances if I named them systematically.", "Then  I could do what I wanted in the first place, which was navigate through the sequence in some way."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["But I see that this is a awful approach.", "As I understand it now, I should do one of the following instead:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "ul", "num": 3, "lis": [{"text": "Include embedded references in the class and thereby create a recursive data structure.", "tag": "none", "senID": 4}, {"text": "Create a list of all of the instances, which is perhaps updated in the class ", "tag": "none", "senID": 5}, {"text": "Forget defining a new class in the first place and use a list of other objects.", "tag": "none", "senID": 6}]}, {"text": ["I hope I've got that straight.", "Thanks again for the advice."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["-----Original but edited generalized question-----"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Hello,"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["I'm relatively new to Python and I find myself always wanted to generate a list of existing objects of some kind.", "Say I had three variables named x# where # is a number from 1 to 3.", "The sort of code I feel tempted to write would be something like:"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n n=1\nList_Of_X=[]\nwhile n &lt; 4:\n  List_Of_X.append(\"x%s\" % (n))\n  n += 1\n</code>\n</pre>\n", "senID": 11}, {"text": ["But then of course I end up with a list of strings rather than variables.", "So, is there any way to 'express' the variables corresponding to the strings?", "Or better yet, create a list of variables in the first place?   "], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["Edit:  The crux was not specifying a list manually - I wanted somehow to automate that.", "It seems from the answers below that I can use my admittedly crummy method above to generate a list of strings, then use the eval() function to express them.", "Or, use a somewhat complex method of generating a list of objects in the first place.  "], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"text": ["I get the feeling that either solutions are probably not the best practices but I appreciate all the help!", "Thanks."], "childNum": 0, "tag": "p", "senID": 14, "childList": []}]