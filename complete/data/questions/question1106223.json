[{"text": ["How are these type of python decorators written?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to write a decorator that would limit the number of times a function can be executed, something along the following syntax :"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n @max_execs(5)\ndef my_method(*a,**k):\n   # do something here\n   pass\n</code>\n</pre>\n", "senID": 2}, {"text": ["I think it's possible to write this type of decorator, but I don't know how.", "I think a function won't be this decorator's first argument, right?", "I'd like a \"plain decorator\" implementation, not some class with a call method."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "call", "childNum": 1, "tag": "b", "pos": 2, "childList": [{"text": "call", "tag": "strong"}]}, {"text": "call", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["The reason for this is to learn how they are written.", "Please explain the syntax, and how that decorator works."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]