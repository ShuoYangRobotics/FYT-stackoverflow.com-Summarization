[{"text": ["Python append() vs. + operator on lists, why do these give different results?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Why do these two operations give different results?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; c = [1, 2, 3]\n&gt;&gt;&gt; c\n[1, 2, 3]\n&gt;&gt;&gt; c += c\n&gt;&gt;&gt; c\n[1, 2, 3, 1, 2, 3]\n&gt;&gt;&gt; c = [1, 2, 3]\n&gt;&gt;&gt; c.append(c)\n&gt;&gt;&gt; c\n[1, 2, 3, [...]]\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 2}, {"text": ["In the last case there's actually infinite recursion.", "c[-1] and c are the same.", "Why is it different with the + operation?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]