[{"text": ["How to do weighted random sample of categories in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Given a list of tuples where each tuple consists of a probability and an item I'd like to sample an item according to its probability.", "For example, give the list [ (.3, 'a'), (.4, 'b'), (.3, 'c')] I'd like to sample 'b' 40% of the time. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["What's the canonical way of doing this in python?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I've looked at the random module which doesn't seem to have an appropriate function and at numpy.random which although it has a multinomial function doesn't seem to return the results in a nice form for this problem.", "I'm basically looking for something like mnrnd in matlab."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Many thanks."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Thanks for all the answers so quickly.", "To clarify, I'm not looking for explanations of how to write a sampling scheme, but rather to be pointed to an easy way to sample from a multinomial distribution given a set of objects and weights, or to be told that no such function exists in a standard library and so one should write one's own."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]