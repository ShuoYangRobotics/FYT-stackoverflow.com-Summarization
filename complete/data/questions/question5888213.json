[{"text": ["Python regex matching in conditionals"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am parsing file and I want to check each line against a few complicated regexs.", "Something like this"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if re.match(regex1, line): do stuff\nelif re.match(regex2, line): do other stuff\nelif re.match(regex3, line): do still more stuff\n...\n</code>\n</pre>\n", "senID": 2}, {"text": ["Of course, to do the stuff, I need the match objects.", "I can only think of three possibilities, each of which leaves something to be desired."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n if re.match(regex1, line): \n    m = re.match(regex1, line)\n    do stuff\nelif re.match(regex2, line):\n    m = re.match(regex2, line)\n    do other stuff\n...\n</code>\n</pre>\n", "senID": 4}, {"text": ["which requires doing the complicated matching twice (these are long files and long regex :/) "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n m = re.match(regex1, line)\nif m: do stuff\nelse:\n    m = re.match(regex2, line)\n    if m: do other stuff\n    else:\n       ...\n</code>\n</pre>\n", "senID": 6}, {"text": ["which gets terrible as I indent further and further."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n while True:\n    m = re.match(regex1, line)\n    if m:\n        do stuff\n        break\n    m = re.match(regex2, line)\n    if m:\n        do other stuff\n        break\n    ...\n</code>\n</pre>\n", "senID": 8}, {"text": ["which just looks weird."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["What's the right way to do this?"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]