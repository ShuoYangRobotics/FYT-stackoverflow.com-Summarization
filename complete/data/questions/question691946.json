[{"text": ["Short (and useful) python snippets"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In spirit of the existing \"what's your most useful C/C++ snippet\" - thread:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "\"what's your most useful C/C++ snippet\"", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/469696/what-is-your-most-useful-c-c-snippet"}]}, {"text": ["Do you guys have short, monofunctional Python snippets that you use (often) and would like to share with the StackOverlow Community?", "Please keep the entries small (under 25 \nlines maybe?", ") and give only one example per post."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I'll start of with a short snippet i use from time to time to count sloc (source lines of code) in python projects:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n # prints recursive count of lines of python source code from current directory\n# includes an ignore_list. also prints total sloc\n\nimport os\ncur_path = os.getcwd()\nignore_set = set([\"__init__.py\", \"count_sourcelines.py\"])\n\nloclist = []\n\nfor pydir, _, pyfiles in os.walk(cur_path):\n    for pyfile in pyfiles:\n        if pyfile.endswith(\".py\") and pyfile not in ignore_set:\n            totalpath = os.path.join(pydir, pyfile)\n            loclist.append( ( len(open(totalpath, \"r\").read().splitlines()),\n                               totalpath.split(cur_path)[1]) )\n\nfor linenumbercount, filename in loclist: \n    print \"%05d lines in %s\" % (linenumbercount, filename)\n\nprint \"\\nTotal: %s lines (%s)\" %(sum([x[0] for x in loclist]), cur_path)\n</code>\n</pre>\n", "senID": 4}]