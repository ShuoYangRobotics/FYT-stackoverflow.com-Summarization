[{"text": ["how can python function access its own attributes?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["is it possible to access the python function object attributes from within the function scope?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "is it possible to access the python function object attributes from within the function scope?", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["e.g.", "let's have"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def f():\n    return SOMETHING\n\nf._x = \"foo\"\nf()           # -&gt; \"foo\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["now, what SOMETHING has to be, if we want to have the _x attribute content \"foo\" returned?", "if it's even possible (simply)"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["thanks"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["UPDATE:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "UPDATE:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["i'd like the following work also:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n g = f\ndel f\ng()          # -&gt; \"foo\"\n</code>\n</pre>\n", "senID": 8}, {"text": ["UPDATE 2:"], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "UPDATE 2:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Statement that it is not possible (if it is the case), and why, is more satisfying than providing a way how to fake it e.g.", "with a different object than a function"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]