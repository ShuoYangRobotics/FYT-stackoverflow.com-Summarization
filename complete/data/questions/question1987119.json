[{"text": ["fast folder size calculation in Python on Windows"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am looking for a fast way to calculate the size of a folder in Python on Windows.", "This is what I have so far:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def get_dir_size(path):\n  total_size = 0\n  if platform.system() == 'Windows':\n    try:\n      items = win32file.FindFilesW(path + '\\\\*')\n    except Exception, err:\n      return 0\n\n    # Add the size or perform recursion on folders.\n    for item in items:\n      attr = item[0]\n      name = item[-2]\n      size = item[5]\n\n      if (attr &amp; win32con.FILE_ATTRIBUTE_DIRECTORY) and \\\n         not (attr &amp; win32con.FILE_ATTRIBUTE_SYSTEM):  # skip system dirs\n        if name not in DIR_EXCLUDES:\n          total_size += get_dir_size(\"%s\\\\%s\" % (path, name))\n\n      total_size += size\n\n  return total_size\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is not good enough when size of folder is over 100G.", "Any ideas how to improve it?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["On a fast machine (2Ghz+ - 5G of RAM), it took 72 seconds to go over 422GB in 226,001 files and 12,043 folders.", "It takes 40 seconds using the explorer properties option."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I know I am being a bit greedy but I am hoping for a better solution."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Laurent Luce"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]