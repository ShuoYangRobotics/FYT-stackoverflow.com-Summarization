[{"text": ["Python lambda returning None instead of empty string"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have the following lambda function:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n f = lambda x: x == None and '' or x\n</code>\n</pre>\n", "senID": 2}, {"text": ["It should return an empty string if it receives None as the argument, or the argument if it's not None."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; f(4)\n4\n&gt;&gt;&gt; f(None)\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 5}, {"text": ["If I call f(None) instead of getting an empty string I get None.", "I printed the type of what the function returned and I got NoneType.", "I was expecting string."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["type('') returns string, so I'd like to know why the lambda doesn't return an empty string when I pass None as an argument. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["I'm fairly new to lambdas so I might have misunderstood some things about how they work."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]