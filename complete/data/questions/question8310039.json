[{"text": ["Why do std::string operations perform poorly?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I made a test to compare string operations in several languages for choosing a language for the server-side application.", "The results seemed normal until I finally tried C++, which surprised me a lot.", "So I wonder if I had missed any optimization and come here for help."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["The test are mainly intensive string operations, including concatenate and searching.", "The test is performed on Ubuntu 11.10 amd64, with GCC's version 4.6.1.", "The machine is Dell Optiplex 960, with 4G RAM, and Quad-core CPU."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["in Python (2.7.2):"], "childNum": 0, "tag": "h2", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def test():\n    x = \"\"\n    limit = 102 * 1024\n    while len(x) &lt; limit:\n        x += \"X\"\n        if x.find(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", 0) &gt; 0:\n            print(\"Oh my god, this is impossible!\")\n    print(\"x's length is : %d\" % len(x))\n\ntest()\n</code>\n</pre>\n", "senID": 4}, {"text": ["which gives result:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n x's length is : 104448\n\nreal    0m8.799s\nuser    0m8.769s\nsys     0m0.008s\n</code>\n</pre>\n", "senID": 6}, {"text": ["in Java (OpenJDK-7):"], "childNum": 0, "tag": "h2", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n public class test {\n    public static void main(String[] args) {\n        int x = 0;\n        int limit = 102 * 1024;\n        String s=\"\";\n        for (; s.length() &lt; limit;) {\n            s += \"X\";\n            if (s.indexOf(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") &gt; 0)\n            System.out.printf(\"Find!\\n\");\n        }\n        System.out.printf(\"x's length = %d\\n\", s.length());\n    }\n}\n</code>\n</pre>\n", "senID": 8}, {"text": ["which gives result:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n x's length = 104448\n\nreal    0m50.436s\nuser    0m50.431s\nsys     0m0.488s\n</code>\n</pre>\n", "senID": 10}, {"text": ["in Javascript (Nodejs 0.6.3)"], "childNum": 0, "tag": "h2", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n function test()\n{\n    var x = \"\";\n    var limit = 102 * 1024;\n    while (x.length &lt; limit) {\n        x += \"X\";\n        if (x.indexOf(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", 0) &gt; 0)\n            console.log(\"OK\");\n    }\n    console.log(\"x's length = \" + x.length);\n}();\n</code>\n</pre>\n", "senID": 12}, {"text": ["which gives result:"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"code": "<pre>\n<code>\n x's length = 104448\n\nreal    0m3.115s\nuser    0m3.084s\nsys     0m0.048s\n</code>\n</pre>\n", "senID": 14}, {"text": ["in C++ (g++ -Ofast)"], "childNum": 0, "tag": "h2", "senID": 15, "childList": []}, {"text": ["It's not surprising that Nodejs performas better than Python or Java.", "But I expected libstdc++ would give much better performance than Nodejs, whose result really suprised me."], "childNum": 0, "tag": "p", "senID": 16, "childList": []}, {"code": "<pre>\n<code>\n #include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\nvoid test()\n{\n    int x = 0;\n    int limit = 102 * 1024;\n    string s(\"\");\n    for (; s.size() &lt; limit;) {\n        s += \"X\";\n        if (s.find(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", 0) != string::npos)\n            cout &lt;&lt; \"Find!\" &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"x's length = \" &lt;&lt; s.size() &lt;&lt; endl;\n}\n\nint main()\n{\n    test();\n}\n</code>\n</pre>\n", "senID": 17}, {"text": ["which gives result:"], "childNum": 0, "tag": "p", "senID": 18, "childList": []}, {"code": "<pre>\n<code>\n x length = 104448\n\nreal    0m5.905s\nuser    0m5.900s\nsys     0m0.000s\n</code>\n</pre>\n", "senID": 19}, {"text": ["Brief Summary"], "childNum": 0, "tag": "h2", "senID": 20, "childList": []}, {"text": ["OK, now let's see the summary:"], "childNum": 0, "tag": "p", "senID": 21, "childList": []}, {"tag": "ul", "num": 4, "lis": [{"text": "javascript on Nodejs(V8): 3.1s", "tag": "none", "senID": 22}, {"text": "Python on CPython 2.7.2 : 8.8s", "tag": "none", "senID": 23}, {"text": "C++ with libstdc++: 5.9s", "tag": "none", "senID": 24}, {"text": "Java on OpenJDK 7: 50.4s", "tag": "none", "senID": 25}]}, {"text": ["Surprisingly!", "I tried \"-O2, -O3\" in C++ but noting helped.", "C++ seems about only 50% performance of javascript in V8, and even poor than CPython.", "Could anyone explain to me if I had missed some optimization in GCC or is this just the case?", "Thank you a lot."], "childNum": 0, "tag": "p", "senID": 26, "childList": []}]