[{"text": ["return statement in for loops"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have been working on this assignment for school and I just can't figure out what why I cant get this program to work properly.", "I am trying to get the program to allow the user to enter three animals.", "It is only allowing me to enter one.", "I know it has to do with my placement of the return statemet in the make_list function but can't figure out how to fix it."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here is my code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import pet_class\n\ndef main():\n    #get list of pet objects\n    pets = make_list()\n\n    #Display the data in a list.\n    print 'Here is the data you entered:'\n    display_list(pets)\n\n\n#The make_list function gets data from the user for three pets. The function\n# returns a list of pet objects containing the data.\n\ndef make_list():\n    #create empty list.\n    pet_list = []\n\n    #Add three pet objects to the list.\n    print 'Enter data for three pets.'\n    for count in range (1, 4):\n        #get the pet data.\n        print 'Pet number ' + str(count) + ':'\n        name = raw_input('Enter the pet name:')\n        animal=raw_input('Enter the pet animal type:')\n        age=raw_input('Enter the pet age:')\n        print\n\n        #create a new pet object in memory and assign it\n        #to the pet variable\n\n        pet = pet_class.PetName(name,animal,age)\n\n        #Add the object to the list.\n        pet_list.append(pet)\n\n        #Return the list\n        return pet_list\n\n#The display_list function accepts a list containing pet objects\n#as an argument and displays the data stored in each object.\n\ndef display_list(pet_list):\n    for item in pet_list:\n        print  item.get_name()\n        print  item.get_animal_type()\n        print  item.get_age() \n        print\n\n#call main function\nmain()\n</code>\n</pre>\n", "senID": 3}]