[{"text": ["How do I merge two python iterators?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have two iterators, a list and an itertools.count object (i.e.", "an infinite value generator).", "I would like to merge these two into a resulting iterator that will alternate yield values between the two:"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "list", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "itertools.count", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; import itertools\n&gt;&gt;&gt; c = itertools.count(1)\n&gt;&gt;&gt; items = ['foo', 'bar']\n&gt;&gt;&gt; merged = imerge(items, c)  # the mythical \"imerge\"\n&gt;&gt;&gt; merged.next()\n'foo'\n&gt;&gt;&gt; merged.next()\n1\n&gt;&gt;&gt; merged.next()\n'bar'\n&gt;&gt;&gt; merged.next()\n2\n&gt;&gt;&gt; merged.next()\nTraceback (most recent call last):\n    ...\nStopIteration\n</code>\n</pre>\n", "senID": 2}, {"text": ["What is the simplest, most concise way to do this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]