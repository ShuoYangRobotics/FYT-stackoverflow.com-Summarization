[{"text": ["How to extract bits from return code number in Bash"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am using pylint utility that returns this error codes:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n Pylint should leave with following status code:\n\n* 0 if everything went fine\n* 1 if a fatal message was issued\n* 2 if an error message was issued\n* 4 if a warning message was issued\n* 8 if a refactor message was issued\n* 16 if a convention message was issued\n* 32 on usage error\n\nstatus 1 to 16 will be bit-ORed so you can know which different\ncategories has been issued by analysing pylint output status code\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I need to determine if fatal or error message occured in Bash.", "How to do that?", "I guess I need bit operations for that ;-)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Edit: I know I need to do bitwise and with number three (3) and test against null to see if fatal message or error message were issued.", "My problem is simple: bash syntax to do it.", "Input is $?, ouptut is again $?", "(e.g.", "using test program).", "Thanks!"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "bash syntax to do it", "childNum": 0, "tag": "strong", "pos": 1, "childList": []}]}]