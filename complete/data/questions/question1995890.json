[{"text": ["Find out 20th, 30th, nth prime number.", "(I'm getting 20th but not 30th?", ") [Python]"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["The question is to find the 1000th prime number.", "I wrote the following python code for this.", "The problem is, I get the right answer for the 10th , 20th prime but after that each increment of 10 leaves me one off the mark.", "I can't catch the bug here :("], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n count=1            #to keep count of prime numbers\nprimes=()          #tuple to hold primes\ncandidate=3        #variable to test for primes\nwhile count&lt;20:\n    for x in range(2,candidate):\n        if candidate%x==0:\n            candidate=candidate+2\n        else : pass\n    primes=primes+(candidate,)            \n    candidate=candidate+2\n    count=count+1\nprint primes        \nprint \"20th prime is \", primes[-1]\n</code>\n</pre>\n", "senID": 2}, {"text": ["In case you're wondering, count is initialised as 1 because I am not testing for 2 as a prime number(I'm starting from 3) and candidate is being incremented by 2 because only odd numbers can be prime numbers.", "I know there are other ways of solving this problem, such as the prime number theorem but I wanna know what's wrong with this approach.", "Also if there are any optimisations you have in mind, please suggest."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "candidate", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Thank You             "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]