[{"text": ["How to generate all permutations of a list in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["How do you generate all the permutations of a list in Python, independently of the type of elements in that list. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n permutations ([])\n[]\n\npermutations ([1,])\n[1]\n\npermutations ([1,2])\n[1, 2]\n[2, 1]\n\npermutations ([1,2,3])\n[1, 2, 3]\n[1, 3, 2]\n[2, 1, 3]\n[2, 3, 1]\n[3, 1, 2]\n[3, 2, 1]\n</code>\n</pre>\n", "senID": 3}, {"text": ["EDIT:\nEliben pointed to a solution that's similar to mine altough simpler, so I'm choosing it as the Accepted Answer, altough apparently Python 2.6 (that hasn't been released yet) will have a builtin solution in the itertools module:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "itertools", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n import itertools\nitertools.permutations([1,2,3])\n</code>\n</pre>\n", "senID": 5}]