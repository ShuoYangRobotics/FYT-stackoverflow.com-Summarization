[{"text": ["Python list help"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["simple Python question:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Example list: A = [1,2,3,4,5]"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "A = [1,2,3,4,5]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I need to generate another list B which is a shallow copy of list A such that B is a new list containing the same elements in the same order (so that I can substitute one of B's elements w/o affecting A).", "How can I do this?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "which is a shallow copy of list A", "childNum": 0, "tag": "strike", "pos": 0, "childList": []}]}, {"text": ["clarification: I want to do something like"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def some_func(A)\n   B = {what do I do here to get a copy of A's elements?}\n   B[0] = some_other_func(B[0])\n   yet_another_func(B)\n</code>\n</pre>\n", "senID": 5}, {"text": ["based on all your answers + the Python docs, a better way to do what I want is the following:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def some_func(A)\n   B = [some_other_func(A[0])] + A[1:]\n   yet_another_func(B)\n</code>\n</pre>\n", "senID": 7}, {"text": ["thanks for pointing me in the right direction!"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]