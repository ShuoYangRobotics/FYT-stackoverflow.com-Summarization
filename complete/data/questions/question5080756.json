[{"text": ["Generate blocks of Python code with for loop"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I made a small GUI program with PyGtk for parametrically drawing the frame of a bike (the idea: you move some slider, and the frame gets redrawn with the updated parameter)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Somewhere in the code, I must create a slider for each parameter, and I get this very non-pythonic and repetitive code (sorry, I could not get the indentation right while writing this message):"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def adjustbottomBracketHeight(par):\n    BikeDrawing.p.bottomBracketHeight = par.get_value()\n    painelhoriz.queue_draw()\nbottomBracketHeightAdjust = gtk.Adjustment(value=BikeDrawing.p.bottomBracketHeight, lower=180., upper=400., step_incr=10.)\nbbhScale = gtk.HScale(adjustment=bottomBracketHeightAdjust)\nbbhScale.set_value_pos(gtk.POS_LEFT)\nbbhScale.connect(\"value-changed\", adjustbottomBracketHeight)\nbbhLabel = gtk.Label(\"Bottom bracket height\")\ntopcolumn1.pack_start(bbhLabel, False, False)\ntopcolumn1.pack_start(bbhScale, True, True)\n\ndef adjustseatTubeAngle(par):\n    BikeDrawing.p.seatTubeAngle = par.get_value()\n    painelhoriz.queue_draw()    \nseatTubeAngleAdjust = gtk.Adjustment(value=BikeDrawing.p.seatTubeAngle, lower=60., upper=85., step_incr=0.5)\nstaScale = gtk.HScale(adjustment=seatTubeAngleAdjust)\nstaScale.set_value_pos(gtk.POS_LEFT)\nstaScale.connect(\"value-changed\", adjustseatTubeAngle)\nstaLabel = gtk.Label(\"Seat tube angle\")\ntopcolumn1.pack_start(staLabel, False, False)\ntopcolumn1.pack_start(staScale, True, True)\n\ndef adjustSeatTubeLength(par):\n    BikeDrawing.p.seatTubeLength = par.get_value()\n    painelhoriz.queue_draw()\nseatTubeLengthAdjust = gtk.Adjustment(value=BikeDrawing.p.seatTubeLength, lower=300., upper=700., step_incr=10.)\nstlScale = gtk.HScale(adjustment=seatTubeLengthAdjust)\nstlScale.set_value_pos(gtk.POS_LEFT)\nstlScale.connect(\"value-changed\", adjustSeatTubeLength)\ntopcolumn1.pack_start(stlScale, True, True)\n\ndef adjusttopTubeLength(par):\n    BikeDrawing.p.topTubeLength = par.get_value()\n    painelhoriz.queue_draw()\ntopTubeLengthAdjust = gtk.Adjustment(value=BikeDrawing.p.topTubeLength,\n    lower=400., upper=700., step_incr=10.)\nttlScale = gtk.HScale(adjustment=topTubeLengthAdjust)\nttlScale.set_value_pos(gtk.POS_LEFT)\nttlScale.connect(\"value-changed\", adjusttopTubeLength)\ntopcolumn1.pack_start(ttlScale, True, True)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Well with some minor adaptations, I would like (to know how ;o) to \"create\" this kind of code iterating over a list of the parameter names, something similar to:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n par_list = ['bottomBracketHeight', 'seatTubeAngle', 'seatTubeHeight']\ndef widgetize(PARAMETER):\n    \"\"\" Create blocks of code where the name PARAMETER would be used to personalize names of handlers, functions, objects, etc. \"\"\"\n\nfor par in par_list:\n    widgetize(par)\n</code>\n</pre>\n", "senID": 5}, {"text": ["I read some previous questions/answers and there seems not to be an answer to this specific problem."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I appreciate very much your attention"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]