[{"text": ["python/clojure equivalent to mathematica's NestWhileList"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Impetus: I was looking for something in python which would get me "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "was", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n f([1,2,3]) == [[1,2,3], [2,3], [3]]\n</code>\n</pre>\n", "senID": 2}, {"text": ["In clojure, this would just be (nest rest #(not (empty?", "%)) lst), or it would if we had a nest function.", "Do we?", "I'm tired of staring at the clojure api list.."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "(nest rest #(not (empty? %)) lst)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Better approaches in python or clojure would also be appreciated.."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]