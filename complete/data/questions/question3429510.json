[{"text": ["Pythonic way to convert a list of integers into a string of comma-separated ranges"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list of integers which I need to parse into a string of ranges."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n [0, 1, 2, 3] -&gt; \"0-3\"\n [0, 1, 2, 4, 8] -&gt; \"0-2,4,8\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["And so on."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I'm still learning more pythonic ways of handling lists, and this one is a bit difficult for me.", "My latest thought was to create a list of lists which keeps track of paired numbers:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n [ [0, 3], [4, 4], [5, 9], [20, 20] ]\n</code>\n</pre>\n", "senID": 6}, {"text": ["I could then iterate across this structure, printing each sub-list as either a range, or a single value."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["I don't like doing this in two iterations, but I can't seem to keep track of each number within each iteration.", "My thought would be to do something like this:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Here's my most recent attempt.", "It works, but I'm not fully satisfied; I keep thinking there's a more elegant solution which completely escapes me.", "The string-handling iteration isn't the nicest, I know -- it's pretty early in the morning for me :)"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n def createRangeString(zones):\n        rangeIdx = 0\n        ranges   = [[zones[0], zones[0]]]\n        for zone in list(zones):\n            if ranges[rangeIdx][1] in (zone, zone-1):\n                ranges[rangeIdx][1] = zone\n            else:\n                ranges.append([zone, zone])\n                rangeIdx += 1\n\n        rangeStr = \"\"\n        for range in ranges:\n            if range[0] != range[1]:\n                rangeStr = \"%s,%d-%d\" % (rangeStr, range[0], range[1])\n            else:\n                rangeStr = \"%s,%d\" % (rangeStr, range[0])\n\n        return rangeStr[1:]\n</code>\n</pre>\n", "senID": 10}, {"text": ["Is there a straightforward way I can merge this into a single iteration?", "What else could I do to make it more Pythonic?"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]