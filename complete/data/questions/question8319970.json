[{"text": ["comparing two files and writing the missing values to a file"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a problem when I try to compare two large files.", "What I am trying to do is take a line from one file, search all the lines of another file for a match and if there isn't one, write that line to another file.", "I was able to recreate the problem with the simple example below:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["file1.txt (contents)"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "file1.txt (contents", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n apple\nbanana\npear\npeach\nlime\n</code>\n</pre>\n", "senID": 3}, {"text": ["file_old.txt (contents)"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "file_old.txt (contents)", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n lime\napple\npear\npeach\n</code>\n</pre>\n", "senID": 5}, {"text": ["Since I am looking for lines in file1 that are not in file_old, I would expect that 'banana' would be the only value to show in the output file.", "But in the output file, \"*fill_diff*\", I am showing:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n apple\nbanana\nbanana\n</code>\n</pre>\n", "senID": 7}, {"text": ["What is wrong with my code to try and produce the differences in a file?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n def main():\n\n    file_old = open(r'C:\\Users\\test\\Desktop\\file_old.txt', 'r+')\n    file_new = open(r'C:\\Users\\test\\Desktop\\file1.txt', 'r+')\n    file_diff = open(r'C:\\Users\\test\\Desktop\\file_diff.txt', 'w')\n\n    for each_line in file_new: \n        for every_line in file_old:\n            if each_line == every_line:\n                break\n            file_diff.write(each_line)\n\n    file_old.close()\n    file_new.close()\n    file_diff.close()\n\nmain()\n</code>\n</pre>\n", "senID": 9}, {"text": ["Thanks!"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]