[{"text": ["How to create a Python decorator that can be used either with or without parameters?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to create a Python decorator that can be used either with parameters:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n @redirect_output(\"somewhere.log\")\ndef foo():\n    ....\n</code>\n</pre>\n", "senID": 2}, {"text": ["or without them (for instance to redirect the output to stderr by default):"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n @redirect_output\ndef foo():\n    ....\n</code>\n</pre>\n", "senID": 4}, {"text": ["Is that at all possible?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Note that I'm not looking for a different solution to the problem of redirecting output, it's just an example of the syntax I'd like to achieve."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]