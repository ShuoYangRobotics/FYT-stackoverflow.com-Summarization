[{"text": ["When adding to list why does Python copy values instead of pointers?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["What I was trying to do (C code):"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n int a = 2, b = 3, c = 4;\n\nint* arr[3] = {&amp;a, &amp;b, &amp;c};\n\nfor (int i = 0; i &lt; 3; ++i) {\n    if (*(arr[i]) &gt; 1) {\n        *(arr[i]) = 1\n    }\n}\n</code>\n</pre>\n", "senID": 2}, {"text": ["I was expecting Python to do similar pointer like behavior with this piece of code."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = 2\n&gt;&gt;&gt; b = 3\n&gt;&gt;&gt; c = 4\n&gt;&gt;&gt; for x in [a, b, c]:\n...     if x &gt; 1:\n...             x = 1\n... \n&gt;&gt;&gt; a,b,c\n(2, 3, 4)\n</code>\n</pre>\n", "senID": 4}, {"text": ["How can the C code like behavior be achieved in Python?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]