[{"text": ["In python, how does one efficiently find the largest consecutive set of numbers in a list that are not necessarily adjacent?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["For instance, if I have a list "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n [1,4,2,3,5,4,5,6,7,8,1,3,4,5,9,10,11]\n</code>\n</pre>\n", "senID": 2}, {"text": ["This algorithm should return [1,2,3,4,5,6,7,8,9,10,11]."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["To clarify, the longest list should run forwards.", "I was wondering what is an algorithmically efficient way to do this (preferably not O(n^2))?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Also, I'm open to a solution not in python since the algorithm is what matters."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Thank you."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]