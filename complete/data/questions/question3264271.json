[{"text": ["What is the python equivalent to perl \"a\"..\"azc\""], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In perl, to get a list of all strings from \"a\" to \"azc\", to only thing to do is using the range operator:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n perl -le 'print \"a\"..\"azc\"'\n</code>\n</pre>\n", "senID": 2}, {"text": ["What I want is a list of strings:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n [\"a\", \"b\", ..., \"z\", \"aa\", ..., \"az\" ,\"ba\", ..., \"azc\"]\n</code>\n</pre>\n", "senID": 4}, {"text": ["I suppose I can use ord and chr, looping over and over, this is simple to get for \"a\" to \"z\", eg:"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "ord", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "chr", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; [chr(c) for c in range(ord(\"a\"), ord(\"z\") + 1)]\n['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n</code>\n</pre>\n", "senID": 6}, {"text": ["But a bit more complex for my case, here."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Thanks for any help !"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]