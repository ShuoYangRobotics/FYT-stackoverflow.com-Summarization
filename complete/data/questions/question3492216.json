[{"text": ["Why does updating a set in a tuple cause an error?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have just tried the following in Python 2.6:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; foo = (set(),)\n&gt;&gt;&gt; foo[0] |= set(range(5))\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; foo\n(set([0, 1, 2, 3, 4]),)\n&gt;&gt;&gt; foo[0].update(set(range(10)))\n&gt;&gt;&gt; foo\n(set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]),)\n</code>\n</pre>\n", "senID": 2}, {"text": ["I have several questions here:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": "Why does ", "tag": "none", "senID": 4}, {"text": "why does ", "tag": "none", "senID": 5}]}, {"text": ["Edit Many people have pointed out, that tuples are immutable.", "I am aware of that.", "They have also pointed out, that |= would create a new set object and assign it to the tuple.", "That is wrong.", "See this:"], "childNum": 3, "tag": "p", "senID": 6, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "|=", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "set", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; foo = set()\n&gt;&gt;&gt; bar = foo\n&gt;&gt;&gt; foo is bar\nTrue\n&gt;&gt;&gt; foo |= set(range(5))\n&gt;&gt;&gt; foo\nset([0, 1, 2, 3, 4])\n&gt;&gt;&gt; bar\nset([0, 1, 2, 3, 4])\n&gt;&gt;&gt; foo is bar\nTrue\n</code>\n</pre>\n", "senID": 7}, {"text": ["This means that no new object has been created, but the existing one was modified.", "This should work with the tuple.", "Please note also that, although my first code throws a TypeError, the set within the tuple is still updated.", "That is the effect I am interested in.", "Why the TypeError, when the operation obviously was successful?"], "childNum": 2, "tag": "p", "senID": 8, "childList": [{"text": "TypeError", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "TypeError", "childNum": 0, "tag": "code", "pos": 4, "childList": []}]}]