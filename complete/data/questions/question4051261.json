[{"text": ["Handle a blocking function call in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm working with the Gnuradio framework.", "I handle flowgraphs I generate to send/receive signals.", "These flowgraphs initialize and start, but they don't return the control flow to my application:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Gnuradio framework", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://gnuradio.org/redmine/wiki/gnuradio"}]}, {"text": ["I imported time"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "time", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n while time.time() &lt; endtime:\n        # invoke GRC flowgraph for 1st sequence\n        if not seq1_sent:\n            tb = send_seq_2.top_block()\n            tb.Run(True)\n            seq1_sent = True\n            if time.time() &lt; endtime:\n                break\n\n        # invoke GRC flowgraph for 2nd sequence\n        if not seq2_sent:\n            tb = send_seq_2.top_block()\n            tb.Run(True)\n            seq2_sent = True\n            if time.time() &lt; endtime:\n                break\n</code>\n</pre>\n", "senID": 3}, {"text": ["The problem is: only the first if statement invokes the flow-graph (that interacts with the hardware).", "I'm stuck in this.", "I could use a Thread, but I'm unexperienced how to timeout threads in Python.", "I doubt that this is possible, because it seems killing threads isn't within the APIs.", "This script only has to work on Linux..."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["How do you handle blocking functions with Python properly - without killing the whole program.", "Another more concrete example for this problem is:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n import signal, os\n\ndef handler(signum, frame):\n        # print 'Signal handler called with signal', signum\n        #raise IOError(\"Couldn't open device!\")\n        import time\n        print \"wait\"\n        time.sleep(3)\n\n\ndef foo():\n    # Set the signal handler and a 5-second alarm\n    signal.signal(signal.SIGALRM, handler)\n    signal.alarm(3)\n\n    # This open() may hang indefinitely\n    fd = os.open('/dev/ttys0', os.O_RDWR)\n    signal.alarm(0)          # Disable the alarm\n\n\nfoo()\nprint \"hallo\"\n</code>\n</pre>\n", "senID": 6}, {"text": ["How do I still get print \"hallo\".", ";)"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "print \"hallo\"", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Thanks,\nMarius"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]