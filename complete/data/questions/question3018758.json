[{"text": ["Determine precision and scale of particular number in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a variable in Python containing a floating point number (e.g.", "num = 24654.123), and I'd like to determine the number's precision and scale values (in the Oracle sense), so 123.45678 should give me (8,5), 12.76 should give me (4,2), etc."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "num = 24654.123", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["I was first thinking about using the string representation (via str or repr), but those fail for large numbers (although I understand now it's the limitations of floating point representation that's the issue here):"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "str", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "repr", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; num = 1234567890.0987654321\n&gt;&gt;&gt; str(num) = 1234567890.1\n&gt;&gt;&gt; repr(num) = 1234567890.0987654\n</code>\n</pre>\n", "senID": 3}, {"text": ["Edit:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Edit:", "childNum": 0, "tag": "b", "pos": 0, "childList": []}]}, {"text": ["Good points below.", "I should clarify.", "The number is already a float and is being pushed to a database via cx_Oracle.", "I'm trying to do the best I can in Python to handle floats that are too large for the corresponding database type short of executing the INSERT and handling Oracle errors (because I want to deal with the numbers a field, not a record, at a time).", "I guess map(len, repr(num).split('.", "')) is the closest I'll get to the precision and scale of the float?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "map(len, repr(num).split('.'))", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]