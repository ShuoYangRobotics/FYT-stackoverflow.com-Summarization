[{"text": ["How to get progress of os.walk in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a piece of code which I'm using to search for the executables of game files and returning the directories.", "I would really like to get some sort of progress indicator as to how far along os.walk is.", "How would I accomplish such a thing?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "os.walk", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["I tried doing startpt = root.count(os.sep) and gauging off of that but that just gives how deep os.walk is in a directory tree."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "startpt = root.count(os.sep)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "os.walk", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n def locate(filelist, root=os.curdir): #Find a list of files, return directories.\n    for path, dirs, files in os.walk(os.path.abspath(root)):\n        for filename in returnMatches(filelist, [k.lower() for k in files]):\n            yield path + \"\\\\\"\n</code>\n</pre>\n", "senID": 3}]