[{"text": ["sequence of vowels count"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is not a homework question, it is an exam preparation question."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I should de\ufb01ne a function syllables(word) that counts the number of syllables in\na word in the following way:"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "syllables(word)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["\u2022 a maximal sequence of vowels is a syllable;"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["\u2022 a \ufb01nal e in a word is not a syllable (or the vowel sequence it is a part\nof)."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "e", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I do not have to deal with any special cases, such as a \ufb01nal e in a\none-syllable word (e.g., \u2019be\u2019 or \u2019bee\u2019)."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "e", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; syllables(\u2019honour\u2019)\n2\n&gt;&gt;&gt; syllables(\u2019decode\u2019)\n2\n&gt;&gt;&gt; syllables(\u2019oiseau\u2019)\n2\n</code>\n</pre>\n", "senID": 6}, {"text": ["Should I use regular expression here or just list comprehension ?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]