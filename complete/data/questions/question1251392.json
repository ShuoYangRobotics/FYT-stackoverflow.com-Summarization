[{"text": ["Read from socket: Is it guaranteed to at least get x bytes?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a rare bug that seems to occur reading a socket."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["It seems, that during reading of data sometimes I get only 1-3 bytes of a data package that is bigger than this."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["As I learned from pipe-programming, there I always get at least 512 bytes as long as the sender provides enough data."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Also my sender does at least transmit >= 4 Bytes anytime it does transmit anything -- so I was thinking that at least 4 bytes will be received at once in the beginning (!!", ") of the transmission."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["In 99.9% of all cases, my assumption seems to hold ... but there are really rare cases, when less than 4 bytes are received.", "It seems to me ridiculous, why the networking system should do this?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Does anybody know more?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Here is the reading-code I use:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n mySock, addr = masterSock.accept()\nmySock.settimeout(10.0)\nresult = mySock.recv(BUFSIZE)\n# 4 bytes are needed here ...\n...\n# read remainder of datagram\n...\n</code>\n</pre>\n", "senID": 8}, {"text": ["The sender sends the complete datagram with one call of send."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Edit: the whole thing is working on localhost -- so no complicated network applications (routers etc.", ") are involved.", "BUFSIZE is at least 512 and the sender sends at least 4 bytes."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]