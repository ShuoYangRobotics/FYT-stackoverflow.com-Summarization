[{"text": ["Python elegant assignment based on True/False values"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a variable I want to set depending on the values in three booleans.", "The most straight-forward way is an if statement followed by a series of elifs:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if a and b and c:\n    name = 'first'\nelif a and b and not c:\n    name = 'second'\nelif a and not b and c:\n    name = 'third'\nelif a and not b and not c:\n    name = 'fourth'\nelif not a and b and c:\n    name = 'fifth'\nelif not a and b and not c:\n    name = 'sixth'\nelif not a and not b and c:\n    name = 'seventh'\nelif not a and not b and not c:\n    name = 'eighth'\n</code>\n</pre>\n", "senID": 2}, {"text": ["This is a bit awkward, and I'm wondering if there's a more Pythonic way to handle this problem.", "A couple of ideas come to mind."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I call it a hack because I'm not too wild about seven of the keys being False and overriding each other."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["This works because Python ands and ors return the last value to be evaluated, but you have to know that in order to understand this otherwise bizarre code."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["None of these three options is very satisfying.", "What do you recommend?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]