[{"text": ["In Python, why can a function modify some arguments as perceived by the caller, but not others?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm new to Python and am trying to understand its approach to variable scope.", "In this example, why is f() able to alter the value of x, as perceived within main(), but not the value of n?"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "f()", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "x", "childNum": 0, "tag": "code", "childList": []}, {"text": "main()", "childNum": 0, "tag": "code", "childList": []}, {"text": "n", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n def f(n, x):\n    n = 2\n    x.append(4)\n    print 'In f():', n, x\n\ndef main():\n    n = 1\n    x = [0,1,2,3]\n    print 'Before:', n, x\n    f(n, x)\n    print 'After: ', n, x\n\nmain()\n</code>\n</pre>\n", "senID": 2}, {"text": ["Output:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n Before: 1 [0, 1, 2, 3]\nIn f(): 2 [0, 1, 2, 3, 4]\nAfter:  1 [0, 1, 2, 3, 4]\n</code>\n</pre>\n", "senID": 4}]