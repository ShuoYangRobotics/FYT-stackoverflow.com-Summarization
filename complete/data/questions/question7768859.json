[{"text": ["Python: for loop in index assignment"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["While working through the awesome book \"Programming Collective Intelligence\", by Toby Segaran, I've encountered some techniques in index assignments I'm not entirely familiar with."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Take this for example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n createkey='_'.join(sorted([str(wi) for wi in wordids]))\n</code>\n</pre>\n", "senID": 3}, {"text": ["or:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n normalizedscores = dict([(u,float(l)/maxscore) for (u,l) in linkscores.items()])\n</code>\n</pre>\n", "senID": 5}, {"text": ["All the nested tuples in the indexes have me a bit confused.", "What is actually being assigned to these varibles?", "I assumed obviously the .join one comes out as a string, but what about the latter?", "If someone could explain the mechanics of these loops I'd really appreciate it.", "I assume these are pretty common techniques, but being new to Python, I suppose to ask is a moment's shame.", "Thanks!"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": ".join", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}]