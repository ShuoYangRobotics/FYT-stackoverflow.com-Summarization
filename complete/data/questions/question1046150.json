[{"text": ["python classes that refer to each other"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have two classes that refer to each other, but obviously the compiler complains.", "Is there any way around this?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["EDIT"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Actually my code is slightly different than what Hank Gay uses.", "So python can definitely deal with some kinds of circular references, but it tosses an error in the following situation.", "Below is what I've got and I get an 'name Y not defined error'"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n class X(models.Model):\n\n        creator = Registry()\n        creator.register(Y)\n\nclass Y(models.Model):\n    a = models.ForeignKey(X)\n    b = models.CharField(max_length=200)\n</code>\n</pre>\n", "senID": 4}, {"text": ["Hope this helps clarify.", "Any suggestions."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]