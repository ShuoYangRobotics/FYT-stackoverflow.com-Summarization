[{"text": ["speed-up python function to process files with data segments separated by a blank space"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to process files with data segments separated by a blank space, for example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n 93.18 15.21 36.69 33.85 16.41 16.81 29.17 \n21.69 23.71 26.38 63.70 66.69 0.89 39.91 \n86.55 56.34 57.80 98.38 0.24 17.19 75.46 \n[...]\n1.30 73.02 56.79 39.28 96.39 18.77 55.03\n\n99.95 28.88 90.90 26.70 62.37 86.58 65.05 \n25.16 32.61 17.47 4.23 34.82 26.63 57.24 \n36.72 83.30 97.29 73.31 31.79 80.03 25.71 \n[...]\n2.74 75.92 40.19 54.57 87.41 75.59 22.79\n\n.\n.\n.\n</code>\n</pre>\n", "senID": 2}, {"text": ["for this I am using the following function.", "In every call I get the necessary data, but I need to speed-up the code."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Is there a more efficient way?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["EDIT: I will be updating the code with the changes that achieve improvements"], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "I will be updating the code with the changes that achieve improvements", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["ORIGINAL:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "ORIGINAL:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def get_pos_nextvalues(pos_file, indices):\n    result = []\n    for line in pos_file:\n        line = line.strip()\n        if not line:\n            break\n        values = [float(value) for value in line.split()]\n        result.append([float(values[i]) for i in indices])\n    return np.array(result)\n</code>\n</pre>\n", "senID": 7}, {"text": ["NEW:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "NEW:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def get_pos_nextvalues(pos_file, indices):\n    result = ''\n    for line in pos_file:\n        if len(line) &gt; 1:\n            s = line.split()\n            result += ' '.join([s [i] for i in indices])\n        else:\n            break\n    else:\n        return np.array([])\n    result = np.fromstring(result, dtype=float, sep=' ')\n    result = result.reshape(result.size/len(indices), len(indices))\n    return result\n</code>\n</pre>\n", "senID": 9}, {"text": [], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n pos_file = open(filename, 'r', buffering=1024*10)\n\n[...]\n\nwhile(some_condition):\n    vs = get_pos_nextvalues(pos_file, (4,5,6))\n    [...]\n</code>\n</pre>\n", "senID": 11}, {"text": ["speedup = 2.36"], "childNum": 1, "tag": "p", "senID": 12, "childList": [{"text": "speedup", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]