[{"text": ["Access to errno from Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am stuck with a fairly complex Python module that does not return useful error codes (it actually fails disturbingly silently).", "However, the underlying C library it calls sets errno."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Normally errno comes in over OSError attributes, but since I don't have an exception, I can't get at it."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Using ctypes, libc.errno doesn't work because errno is a macro in GNU libc.", "Python 2.6 has some affordances but Debian still uses Python 2.5.", "Inserting a C module into my pure Python program just to read errno disgusts me."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Is there some way to access errno?", "A Linux-only solution is fine, since the library being wrapped is Linux-only.", "I also don't have to worry about threads, as I'm only running one thread during the time in which this can fail."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]