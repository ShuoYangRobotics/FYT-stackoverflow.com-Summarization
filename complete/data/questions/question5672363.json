[{"text": ["Most elegant way to modify Python list elements inplace"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a 2D list that looks like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n table = [['donkey', '2', '1', '0'], ['goat', '5', '3', '2']]\n</code>\n</pre>\n", "senID": 2}, {"text": ["I want to change the last three elements to integers, but the code below feels very ugly:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for row in table:\n    for i in range(len(row)-1):\n        row[i+1] = int(row[i+1])\n</code>\n</pre>\n", "senID": 4}, {"text": ["But I'd rather have something that looks like:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n for row in table:\n    for col in row[1:]:\n        col = int(col)\n</code>\n</pre>\n", "senID": 6}, {"text": ["I think there should be a way to write the code above, but the slice creates an iterator/new list that's separate from the original, so the references don't carry over.  "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Is there some way to get a more Pythonic solution?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]