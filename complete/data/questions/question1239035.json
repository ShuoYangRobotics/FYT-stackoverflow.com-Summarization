[{"text": ["Asynchronous method call in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I was wondering if there's any library for asynchronous method calls in Python.", "It would be great if you could do something like"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "Python", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Python%5F%28programming%5Flanguage%29"}]}, {"code": "<pre>\n<code>\n @async\ndef longComputation():\n    &lt;code&gt;\n\n\ntoken = longComputation()\ntoken.registerCallback(callback_function)\n# alternative, polling\nwhile not token.finished():\n    doSomethingElse()\n    if token.finished():\n        result = token.result()\n</code>\n</pre>\n", "senID": 2}, {"text": ["Or to call a non-async routine asynchronously"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def longComputation()\n    &lt;code&gt;\n\ntoken = asynccall(longComputation())\n</code>\n</pre>\n", "senID": 4}, {"text": ["It would be great to have a more refined strategy as native in the language core.", "Was this considered?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]