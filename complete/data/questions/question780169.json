[{"text": ["How do I create collision detections for my bouncing balls?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have coded an animation (in python) for three beach balls to bounce around a screen.", "I now wish to have them all collide and be able to bounce off each other.", "I would really appreciate any help that can be offered."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import pygame\nimport random\nimport sys\nclass Ball:\n\n\n    def __init__(self,X,Y):\n\n        self.velocity = [1,1]\n        self.ball_image = pygame.image.load ('Beachball.jpg'). convert()\n        self.ball_boundary = self.ball_image.get_rect (center=(X,Y))\n        self.sound = pygame.mixer.Sound ('Thump.wav')\n        self.rect = self.ball_image.get_rect (center=(X,Y))\n\nif __name__ =='__main__':\n\n    width = 800\n    height = 600\n    background_colour = 0,0,0\n    pygame.init()\n    window = pygame.display.set_mode((width, height))\n    pygame.display.set_caption(\"Bouncing Ball animation\")\n    num_balls = 3\n    ball_list = []\n    for number in range(num_balls):\n        ball_list.append( Ball(random.randint(10, (width - 10)),random.randint(10, (height - 10))) )\n    while True:\n        for event in pygame.event.get():\n                print event \n                if event.type == pygame.QUIT:\n                        sys.exit(0)\n        window.fill (background_colour)\n\n        for ball in ball_list:\n                if ball.ball_boundary.left &lt; 0 or ball.ball_boundary.right &gt; width:\n                        ball.sound.play()\n                        ball.velocity[0] = -1 * ball.velocity[0]\n                if ball.ball_boundary.top &lt; 0 or ball.ball_boundary.bottom &gt; height:\n                        ball.sound.play()\n                        ball.velocity[1] = -1 * ball.velocity[1]\n\n                ball.ball_boundary = ball.ball_boundary.move (ball.velocity)\n                window.blit (ball.ball_image, ball.ball_boundary)\n        pygame.display.flip()\n</code>\n</pre>\n", "senID": 2}]