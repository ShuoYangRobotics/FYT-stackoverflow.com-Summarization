[{"text": ["Compressing UTF-8(or other 8-bit encoding) to 7 or fewer bits"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wish to take a file encoded in UTF-8 that doesn't use more than 128 different characters, then move it to a 7-bit encoding to save the 1/8 of space.", "For example, if I have a 16 MB text file that only uses the first 128(ascii) characters, I would like to shave off the extra bit to reduce the file to 14MB."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["How would I go about doing this?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["There doesn't seem to be an existing free or proprietary program to do so, so I was thinking I might try and make a simple(if inefficient) one."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The basic idea I have is to make a function from the current hex/decimal/binary values used for each character to the 128 values I would have in the seven bit encoding, then scan through the file and write each modified value to a new file."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["So if the file looked like(I'll use a decimal example because I try not to have to think in hex)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["127 254 025 212 015 015 132...", "It would become"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["001 002 003 004 005 005 006"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["If 127 mapped to 001, 254 mapped to 005, etc."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["I'm not entirely sure on a couple things, though."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Thank you."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]