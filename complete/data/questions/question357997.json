[{"text": ["Does Python have something like anonymous inner classes of Java?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Java you can define a new class inline using anonymous inner classes.", "This is useful when you need to rewrite only a single method of the class."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Suppose that you want create a subclass of OptionParser that overrides only a single method (for example exit()).", "In Java you can write something like this:"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "OptionParser", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "exit()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n new OptionParser () {\n\n    public void exit() {\n        // body of the method\n    }\n};\n</code>\n</pre>\n", "senID": 3}, {"text": ["This piece of code creates a anonymous class that extends OptionParser and override only the exit() method."], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "OptionParser", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "exit()", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["There is a similar idiom in Python?", "Which idiom is used in these circumstances?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]