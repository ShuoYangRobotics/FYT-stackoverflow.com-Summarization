[{"text": ["how to optimally count elements in a python list"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is almost the same question than here, except that I am asking about the most efficient solution for a sorted result."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "here", "tag": "a", "pos": 0, "childList": [{"text": "here", "tag": "strong"}], "childNum": 1, "href": "http://stackoverflow.com/questions/3710976/counting-unique-elements-in-a-list"}, {"text": "here", "childNum": 0, "tag": "strong", "childList": []}]}, {"text": ["I have a list (about 10 integers randomly between 0 and 12), for example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n the_list = [5, 7, 6, 5, 5, 4, 4, 7, 5, 4]\n</code>\n</pre>\n", "senID": 3}, {"text": ["I want to create a function that returns a list of tuples (item, counts) ordered by the first element, for example"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n output = [(4, 3), (5, 4), (6, 1), (7, 2)]\n</code>\n</pre>\n", "senID": 5}, {"text": ["So far I have used:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def dupli(the_list):\n    return [(item, the_list.count(item)) for item in sorted(set(the_list))]\n</code>\n</pre>\n", "senID": 7}, {"text": ["But I call this function almost a millon time and I need to make it as fast as I (python) can.", "Therefore my question: How to make this function less time comsuming?", "(what about memory?"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "How to make this function less time comsuming? (what about memory?)", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["I have played around a bit, but nothing obvious came up:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n from timeit import Timer as T\nnumber=10000\nsetup = \"the_list=[5, 7, 6, 5, 5, 4, 4, 7, 5, 4]\"\n\nstmt = \"[(item, the_list.count(item)) for item in sorted(set(the_list))]\"\nT(stmt=stmt, setup=setup).timeit(number=number)\n\nOut[230]: 0.058799982070922852\n\nstmt = \"L = []; \\nfor item in sorted(set(the_list)): \\n    L.append((item, the_list.count(item)))\"\nT(stmt=stmt, setup=setup).timeit(number=number)\n\nOut[233]: 0.065041065216064453\n\nstmt = \"[(item, the_list.count(item)) for item in set(sorted(the_list))]\"\nT(stmt=stmt, setup=setup).timeit(number=number)\n\nOut[236]: 0.098351955413818359\n</code>\n</pre>\n", "senID": 10}, {"text": ["Thanks\nChristophe"], "childNum": 1, "tag": "p", "senID": 11, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}]