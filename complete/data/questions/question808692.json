[{"text": ["Creating an interactive shell for .NET apps and embed scripting languages like python/iron python into it"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I was learning python using the tutorial that comes with the standard python installation.", "One of the benefits that the author states about python is \"maybe you\u2019ve written a program that could use an extension language, and you don\u2019t want to design and implement a whole new language for your application\" - My question is how would i go about designing a program (using c#) that can be extended using Python interactively(for this to be possible, i would imagine that i would need to create some sort of a \"shell\" or \"interactive\" mode for the .net program) ?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Are there any pointers on how to design .NET programs that have an interactive shell.", "I would then like to use python script in the shell to \"extend\" or interact with the program."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["EDIT: This question partly stems from the demo give by Miguel de Icaza during PDC 2008 where he showed the interactive csharp command prompt, C# 4.0 i think also has this \"compiler as a service\" feature.", "I looked at that and thought how cool would it be to design a windows or web program in .NET that had a interactive shell.. and a scripting language like python could be used to extend the features provided by the program."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "EDIT:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Also, i started thinking about this kind of functionality after reading one of Steve Yegge's essays where he talks about systems that live forever."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]