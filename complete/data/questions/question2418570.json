[{"text": ["Testing warnings with doctest"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to use doctests to test the presence of certain warnings.", "For example, suppose I have the following module:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "doctests", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/doctest.html"}]}, {"code": "<pre>\n<code>\n from warnings import warn\n\nclass Foo(object):\n    \"\"\"\n    Instantiating Foo always gives a warning:\n\n    &gt;&gt;&gt; foo = Foo()\n    testdocs.py:14: UserWarning: Boo!\n      warn(\"Boo!\", UserWarning)\n    &gt;&gt;&gt; \n    \"\"\"\n\n    def __init__(self):\n        warn(\"Boo!\", UserWarning)\n</code>\n</pre>\n", "senID": 2}, {"text": ["If I run python -m doctest testdocs.py to run the doctest in my class and make sure that the warning is printed, I get:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "python -m doctest testdocs.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n testdocs.py:14: UserWarning: Boo!\n  warn(\"Boo!\", UserWarning)\n**********************************************************************\nFile \"testdocs.py\", line 7, in testdocs.Foo\nFailed example:\n    foo = Foo()\nExpected:\n    testdocs.py:14: UserWarning: Boo!\n      warn(\"Boo!\", UserWarning)\nGot nothing\n**********************************************************************\n1 items had failures:\n   1 of   1 in testdocs.Foo\n***Test Failed*** 1 failures.\n</code>\n</pre>\n", "senID": 4}, {"text": ["It looks like the warning is getting printed but not captured or noticed by doctest.", "I'm guessing that this is because warnings are printed to sys.stderr instead of sys.stdout.", "But this happens even when I say sys.stderr = sys.stdout at the end of my module."], "childNum": 3, "tag": "p", "senID": 5, "childList": [{"text": "sys.stderr", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "sys.stdout", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "sys.stderr = sys.stdout", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["So is there any way to use doctests to test for warnings?", "I can find no mention of this one way or the other in the documentation or in my Google searching."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]