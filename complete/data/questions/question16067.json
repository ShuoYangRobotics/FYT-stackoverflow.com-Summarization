[{"text": ["Prototyping with Python code before compiling"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have been mulling over writing a peak fitting library for a while.", "I know Python fairly well and plan on implementing everything in Python to begin with but envisage that I may have to re-implement some core routines in a compiled language eventually."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["IIRC, one of Python's original remits was as a prototyping language, however Python is pretty liberal in allowing functions, functors, objects to be passed to functions and methods, whereas I suspect the same is not true of say C or Fortran."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["What should I know about designing functions/classes which I envisage will have to interface into the compiled language?", "And how much of these potential problems are dealt with by libraries such as cTypes, bgen, SWIG, Boost.Python, Cython or Python SIP?"], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "SWIG", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.swig.org/"}, {"href": "http://www.boost.org/doc/libs/1_35_0/libs/python/doc/index.html", "text": "Boost.Python", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://cython.org/", "text": "Cython", "childNum": 0, "tag": "a", "childList": []}, {"href": "http://www.riverbankcomputing.co.uk/software/sip/intro", "text": "Python SIP", "childNum": 0, "tag": "a", "childList": []}]}, {"text": ["For this particular use case, (a fitting library) I imagine allowing users to define mathematical functions (Guassian, Lorentzian etc.", ") as Python functions which can then to be passed an interpreted by the compiled code fitting library.", "Passing and returning arrays is also essential."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]