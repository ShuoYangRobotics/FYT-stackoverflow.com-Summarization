[{"text": ["Python: How to tell the for loop to continue from a function?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Sometimes I need the following pattern within a for loop.", "At times more than once in the same loop:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "for", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n try:\n        var = 'attempt to do something that may fail on a number of levels'\n    except Exception, e:\n        log(e)\n        continue\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I don't see a nice way to wrap this in a function as it can not return continue:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "return continue", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def attempt(this):\n    try:\n        return this\n    except Exception, e:\n        log(e)\n        # 1. continue # &lt;-- syntax error: continue not properly in loop or\n        # 2. return continue # &lt;-- invalid syntax\n        # 3.\n        return False # &lt;-- this sort of works, but makes me feel powerless\n</code>\n</pre>\n", "senID": 4}, {"text": ["If I return False than I could:"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "return False", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n var = attempt('to do something that may fail on a number of levels')\n    if not var:\n        continue\n</code>\n</pre>\n", "senID": 6}, {"text": ["But I don't feel that does it the justice.", "I want to tell the for loop to continue (or fake it) from within attempt function."], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "continue", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "attempt", "childNum": 0, "tag": "code", "childList": []}]}]