[{"text": ["How much input validation should I be doing on my python functions/methods?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm interested in how much up front validation people do in the Python they write."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Here are a few examples of simple functions:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def factorial(num):\n    \"\"\"Computes the factorial of num.\"\"\"\n\ndef isPalindrome(inputStr):\n    \"\"\"Tests to see if inputStr is the same backwards and forwards.\"\"\"\n\ndef sum(nums):\n    \"\"\"Same as the built-in sum()... computes the sum of all the numbers passed in.\"\"\"\n</code>\n</pre>\n", "senID": 3}, {"text": ["How thoroughly do you check the input values before beginning computation, and how do you do your checking?", "Do you throw some kind of proprietary exception if input is faulty (BadInputException defined in the same module, for example)?", "Do you just start your calculation and figure it will throw an exception at some point if bad data was passed in (\"asd\" to factorial, for example)?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["When the passed in value is supposed to be a container do you check not only the container but all the values inside it?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["What about situations like factorial, where what's passed in might be convertible to an int (e.g.", "a float) but you might lose precision when doing so?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]