[{"text": ["How do I unit test a module that relies on urllib2?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've got a piece of code that I can't figure out how to unit test!", "The module pulls content from external XML feeds (twitter, flickr, youtube, etc.", ") with urllib2.", "Here's some pseudo-code for it:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n params = (url, urlencode(data),) if data else (url,)\nreq = Request(*params)\nresponse = urlopen(req)\n#check headers, content-length, etc...\n#parse the response XML with lxml...\n</code>\n</pre>\n", "senID": 2}, {"text": ["My first thought was to pickle the response and load it for testing, but apparently urllib's response object is unserializable (it raises an exception)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Just saving the XML from the response body isn't ideal, because my code uses the header information too.", "It's designed to act on a response object."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["And of course, relying on an external source for data in a unit test is a horrible idea."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "horrible", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["So how do I write a unit test for this?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]