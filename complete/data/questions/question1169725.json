[{"text": ["Adding Values From Tuples of Same Length"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In a graphical program I'm writing using pygame I use a tuple representing a coordinate like this: (50, 50)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Sometimes, I call a function which returns another tuple such as (3, -5), which represents the change in coordinate."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["What is the best way to add the change value to the coordinate value.", "It would be nice if I could do something like coordinate += change, but it appears that would simply concatenate the two tuples to something like (50, 50, 3, -5).", "Rather than adding the 1st value to the 1st value and the 2nd to the 2nd, and returning a resulting tuple."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Until now I've been using this rather tiresome method:\ncoord = (coord[0] + change[0], coord[1] + change[1])"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["What is a better, more concise method to add together the values of two tuples of the same length.", "It seems especially important to know how to do it if the tuples are of an arbitrary length or a particularly long length that would make the previous method even more tiresome."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]