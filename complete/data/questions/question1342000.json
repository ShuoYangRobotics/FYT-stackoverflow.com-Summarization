[{"text": ["How to replace non ascii characters in string?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a string that looks like so:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n 6\u00c2\u00a0918\u00c2\u00a0417\u00c2\u00a0712\n</code>\n</pre>\n", "senID": 2}, {"text": ["The clear cut way to trim this string (as I understand Python) is simply to"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["say the string is in a variable called s, we get:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n s.replace('\u00c2 ', '')\n</code>\n</pre>\n", "senID": 5}, {"text": ["That should do the trick.", "But of course it complains that the Non-ASCII character '\\xc2' in file blabla.py is not encoded."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "'\\xc2'", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "blabla.py", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["I never quite could understand how to switch between different encodings."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Appreciate some help."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["EDIT:"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Here's the code, it really is just the same as above, but now it's in context."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["The file is saved as UTF-8 in notepad.", "The file has the following header:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python2.4\n# -*- coding: utf-8 -*-\n</code>\n</pre>\n", "senID": 12}, {"text": ["The code:"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"code": "<pre>\n<code>\n f = urllib.urlopen(url)\n\nsoup = BeautifulSoup(f)\n\ns = soup.find('div', {'id':'main_count'})\n\n#making a print 's' here goes well. it shows 6\u00c2 918\u00c2 417\u00c2 712\n\ns.replace('\u00c2 ','')\n\nsave_main_count(s)\n</code>\n</pre>\n", "senID": 14}, {"tag": "hr", "senID": 15}, {"text": ["it gets no further than s.replace..."], "childNum": 0, "tag": "p", "senID": 16, "childList": []}]