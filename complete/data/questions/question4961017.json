[{"text": ["Clojure style function \"threading\" in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Clojure has a \"->\" macro which inserts each expression recursively as the first argument of the next expression."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["This means that I could write:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n (-&gt; arg f1 f2 f3)\n</code>\n</pre>\n", "senID": 3}, {"text": ["and it behaves like (shell piping):"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n f3(f2(f1(arg)))\n</code>\n</pre>\n", "senID": 5}, {"text": ["I would like to do this in Python; however, searching seems to be a nightmare!", "I couldn't search for \"->\", and neither could I search for Python function threading!"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "threading", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"text": ["Is there a way to overload, say, the | operator so that I could write this in Python?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n arg | f1 | f2 | f3\n</code>\n</pre>\n", "senID": 8}, {"text": ["Thanks!"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]