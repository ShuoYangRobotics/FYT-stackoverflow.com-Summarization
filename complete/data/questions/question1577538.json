[{"text": ["How can I get all days between two days?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need all the weekdays between two days."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\nWednesday - Friday  = Wednesday, Thursday, Friday  \n        3 - 5       = 3, 4, 5\n\n Saturday - Tuesday = Saturday, Sunday, Monday, Tuesday\n        6 - 2       = 6, 7, 1, 2\n</pre>\n", "senID": 3}, {"text": ["I'm pretty sure there is a clever algorithm out there to solve this.", "The only algorithms I can think of use either a loop or an if statement."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "if", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["There has to be an elegant way to solve this.", "I use the numbers 1-7 for the weekdays, but 0-6 is fine too."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["The best I could come up with:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def between(d1, d2):\n     alldays = [0,1,2,3,4,5,6,0,1,2,3,4,5,6]    # or range(7) * 2\n     offset = 8 if d1 &gt; d2 else 1\n     return alldays[d1:d2 + offset]\n\nbetween(0, 4)\n# [0,1,2,3,4]\n\nbetween(5,2)\n# [5,6,0,1,2]\n</code>\n</pre>\n", "senID": 7}]