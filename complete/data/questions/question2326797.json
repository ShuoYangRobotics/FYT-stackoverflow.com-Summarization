[{"text": ["How to set target hosts in Fabric file"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to use Fabric to deploy my web app code to development, staging and production servers.", "My fabfile:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def deploy_2_dev():\n  deploy('dev')\n\ndef deploy_2_staging():\n  deploy('staging')\n\ndef deploy_2_prod():\n  deploy('prod')\n\ndef deploy(server):\n  print 'env.hosts:', env.hosts\n  env.hosts = [server]\n  print 'env.hosts:', env.hosts\n</code>\n</pre>\n", "senID": 2}, {"text": ["Sample output:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n host:folder user$ fab deploy_2_dev\nenv.hosts: []\nenv.hosts: ['dev']\nNo hosts found. Please specify (single) host string for connection:\n</code>\n</pre>\n", "senID": 4}, {"text": ["When I create a set_hosts() task as shown in the Fabric docs, env.hosts is set properly.", "However, this is not a viable option, neither is a decorator.", "Passing hosts on the command line would ultimately result in some kind of shell script that calls the fabfile, I would prefer having one single tool do the job properly."], "childNum": 2, "tag": "p", "senID": 5, "childList": [{"text": "set_hosts()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Fabric docs", "tag": "a", "pos": -1, "childList": [], "childNum": 0, "href": "http://docs.fabfile.org/0.9.0/usage/execution.html#globally-via-env"}]}, {"text": ["It says in the Fabric docs that 'env.hosts is simply a Python list object'.", "From my observations, this is simply not true."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Can anyone explain what is going on here ?", "How can I set the host to deploy to ?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]