[{"text": ["Choosing between different switch-case replacements in Python - dictionary or if-elif-else?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I recently read the questions that recommend against using switch-case statements in languages that do support it.", "As far as Python goes, I've seen a number of switch case replacements, such as:  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Given the wide variety of options, I am having a bit of difficulty deciding what to do for a particular piece of code.", "I would like to learn the criteria for selecting one of these methods over the other in general.", "In addition, I would appreciate advice on what to do in the specific cases where I am having trouble deciding (with an explanation of the choice)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here is the specific problem:\n(1)  "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def _setCurrentCurve(self, curve):\n        if curve == \"sine\":\n            self.currentCurve =  SineCurve(startAngle = 0, endAngle = 14,\n            lineColor = (0.0, 0.0, 0.0), expansionFactor = 1,\n            centerPos = (0.0, 0.0))\n        elif curve == \"quadratic\":\n            self.currentCurve = QuadraticCurve(lineColor = (0.0, 0.0, 0.0))\n</code>\n</pre>\n", "senID": 4}, {"text": ["This method is called by a qt-slot in response to choosing to draw a curve from a menu.", "The above method will contain a total of 4-7 curves once the application is complete.", "Is it justified to use a throw away dictionary in this case?", "Since the most obvious way to do this is if-elif-else, should I stick with that?", "I have also consider using **kargs here (with a friends help) since all the curve classes use **kargs..."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "qt-slot", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["(2)\nThis second piece of code is a qt-slot that is called when the user changes a property of a curve.", "Basically the slot takes the data from the gui (spinBox) and puts it in an instance variable of the appropriate curve class.", "In this case, I again have the same question - should I use a dict?"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "qt-slot", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}, {"text": ["Here is the aforementioned slot- "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n def propertyChanged(self, name, value):\n    \"\"\"A Qt slot, to react to changes of SineCurve's properties.\"\"\"\n    if name == \"amplitude\":\n        self.amplitude = value\n    elif name == \"expansionFactor\":\n        self.expansionFactor = value\n    elif name == \"startAngle\":\n        self.startAngle = value\n    elif name == \"endAngle\":\n        self.endAngle = value\n</code>\n</pre>\n", "senID": 8}, {"text": ["For reference, here is the code for connecting to the above slot -  "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n def _connectToPage(self, page):\n    for connectionData in page.getConnectibles():\n        self.connect(connectionData[\"object\"],\n                    SIGNAL(connectionData[\"signal\"]),\n                    lambda value, name = connectionData[\"property\"]:\\\n                        self.currentCurve.propertyChanged(name, value))\n        self.connect(connectionData[\"object\"],\n                    SIGNAL(connectionData[\"signal\"]),\n                    self.hackedDisplayArea.update)\n</code>\n</pre>\n", "senID": 10}, {"text": ["Note - The self.endAngle etc.", "are initialized in the constructor."], "childNum": 1, "tag": "p", "senID": 11, "childList": [{"text": "Note", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As far as I know, the reasons for choosing a dict is for fast lookup.", "When is that warranted?", "when I have 100 cases or more?", "Is it a good idea to keep building and throwing away a dictionary each time the function is called?", "If I build a dict for this purpose outside a function, should I check If it is needed elswhere?", "What happens if it is not needed elsewhere?"], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["My question is what is the best-practice if there is one?", "What is the best/most elegant way to go about things?", "Put in yet another way, when to use if-elif-else, when to use each of the other options?"], "childNum": 1, "tag": "p", "senID": 13, "childList": [{"text": "if-elif-else", "childNum": 0, "tag": "strong", "pos": 2, "childList": []}]}]