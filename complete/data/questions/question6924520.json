[{"text": ["Binary negation in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I can't seem to find logical negation of integers as an operator anywhere in Python."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Currently I'm using this:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def not_(x):\n    assert x in (0, 1)\n    return abs(1-x)\n</code>\n</pre>\n", "senID": 3}, {"text": ["But I feel a little stupid.", "Isn't there a built-in operator for this?", "The logical negation (not) returns a Boolean -- that's not really what I want.", "Is there a different operator, or a way to make not return an integer, or am I stuck with this dodgy workaround?"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "not", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "not", "childNum": 0, "tag": "code", "pos": 3, "childList": []}]}]