[{"text": ["Determining neighbours of cell two dimensional list"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a list of lists, something like "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["[[1, 2, 3,],[4, 5, 6,],[7, 8, 9]]."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "[[1, 2, 3,],[4, 5, 6,],[7, 8, 9]]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Represented graphically as: "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n 1 2 3\n4 5 6\n7 8 9\n</code>\n</pre>\n", "senID": 4}, {"text": ["I'm looking for an elegant approach to checking the value of neighbours of a cell, horizontally, vertically and diagonally.", "For instance, the neighbours of [0][2] are [0][1], [1][1] and [1][2] or the numbers 2, 5, 6. "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Now I realise I could just do a bruteforce attack checking every value a la:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n [i-1][j]\n[i][j-1]\n[i-1][j-1]\n[i+1][j]\n[i][j+1]\n[i+1][j+1]\n[i+1][j-1]\n[i-1][j+1]\n</code>\n</pre>\n", "senID": 7}, {"text": ["But thats easy, and I figured I can learn more by seeing some more elegant approaches."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]