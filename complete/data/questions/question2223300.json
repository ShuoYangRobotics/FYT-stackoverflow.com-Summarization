[{"text": ["A class subclass of itself.", "Why mutual subclassing is forbidden?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Complex question I assume, but studying OWL opened a new perspective to live, the universe and everything.", "I'm going philosophical here."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I am trying to achieve a class C which is subclass of B which in turn is subclass of C. Just for fun, you know..."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["So here it is"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; class A(object): pass\n... \n&gt;&gt;&gt; class B(A): pass\n... \n&gt;&gt;&gt; class C(B): pass\n... \n&gt;&gt;&gt; B.__bases__\n(&lt;class '__main__.A'&gt;,)\n&gt;&gt;&gt; B.__bases__ = (C,)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: a __bases__ item causes an inheritance cycle\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 4}, {"text": ["clearly, python is smart and forbids this.", "However, in OWL it is possible to define two classes to be mutual subclasses.", "The question is: what is the mind boggling explanation why this is allowed in OWL (which is not a programming language) and disallowed in programming languages ?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]