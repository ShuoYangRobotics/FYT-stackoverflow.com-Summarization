[{"text": ["Need help making a permutation faster"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Here is my working code, I am trying to find ways to make it faster in finding the valid words, I was thinking about possibly making separate dictionary lists for each words, what do yall think?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n import random\nimport itertools\n\nfile_name='words.txt'\n\ndef load_words():\n    try:\n        f=open(file_name,'r')\n        str1=f.read()\n        f.close()\n    except:\n        print('Problem opening the file',file_name)\n    list1=[]\n    list1=str1.split()\n    return(list1)\n\ndef is_valid(str1,list1):\n    valid=False\n    if str1 in list1:\n        valid=True\n    return valid\n\ndef generate(words,letters):\n    answers=[]\n    for length in range(2,len(letters)+1):\n        for x in itertools.permutations(letters,length):\n            word=''\n            for let in x:\n                word+=let\n            if is_valid(word.upper(),words):\n                answers.append(word)\n                print(word)\n    print(answers)\n\ndef main():\n    words=load_words()\n    letters = input('Enter your letters')\n    answers = generate(words,letters)\n\nmain()\n</code>\n</pre>\n", "senID": 2}]