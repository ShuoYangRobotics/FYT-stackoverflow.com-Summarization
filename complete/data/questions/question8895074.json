[{"text": ["Protect commas on consecutive string.join() and string.split()"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Suppose the following code (notice the commas inside the strings):"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = ['1',\",2\",\"3,\"]\n</code>\n</pre>\n", "senID": 2}, {"text": ["I need to concatenate the values into a single string.", "Naive example:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; b = \",\".join(a)\n&gt;&gt;&gt; b\n'1,,2,3,'\n</code>\n</pre>\n", "senID": 4}, {"text": ["And later I need to split the resulting object again:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; b.split(',')\n['1', '', '2', '3', '']\n</code>\n</pre>\n", "senID": 6}, {"text": ["However, the result I am looking for is the original list:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "original", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n ['1', ',2', '3,']\n</code>\n</pre>\n", "senID": 8}, {"text": ["What's the simplest way to protect the commas in this process?", "The best solution I came up with looks rather ugly."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Note: the comma is just an example.", "The strings can contain any character.", "And I can choose other characters as separators."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]