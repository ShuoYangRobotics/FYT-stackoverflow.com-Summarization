[{"text": ["Standard Regex vs python regex discrepancy"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am reading a book and they provide an example of how to match a given string with regular expressions.", "Here is their example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n b*(abb*)*(a|\u220a) - Strings of a's and b's with no consecutive a's.\n</code>\n</pre>\n", "senID": 2}, {"text": ["Now I've tried converting it to python like so:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt; p = re.compile(r'b*(abb*)*(a|)') # OR\n&gt;&gt; p = re.compile(r'b*(abb*)*(a|\\b)')\n\n# BUT it still doesn't work\n&gt;&gt;&gt; p.match('aa')\n&lt;_sre.SRE_Match object at 0x7fd9ad028c68&gt;\n</code>\n</pre>\n", "senID": 4}, {"text": ["My question is two-fold:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Clarification: For people asking what standard regex is - it is the formal language theory standard: http://en.wikipedia.org/wiki/Regular_expression#Formal_language_theory"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "http://en.wikipedia.org/wiki/Regular_expression#Formal_language_theory", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Regular_expression#Formal_language_theory"}]}]