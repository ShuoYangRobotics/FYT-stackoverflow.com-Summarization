[{"text": ["How do I efficiently filter computed values within a Python list comprehension?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["The Python list comprehension syntax makes it easy to filter values within a comprehension.", "For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n result = [x**2 for x in mylist if type(x) is int]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Will return a list of the squares of integers in mylist.", "However, what if the test involves some (costly) computation and you want to filter on the result?", "One option is:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n result = [expensive(x) for x in mylist if expensive(x)]\n</code>\n</pre>\n", "senID": 4}, {"text": ["This will result in a list of non-\"false\" expensive(x) values, however expensive() is called twice for each x.", "Is there a comprehension syntax that allows you to do this test while only calling expensive once per x?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]