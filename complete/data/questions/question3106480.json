[{"text": ["Really simple way to deal with XML in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Musing over a recently asked question, I started to wonder if there is a really simple way to deal with XML documents in Python.", "A pythonic way, if you will."], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "recently asked question", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://stackoverflow.com/questions/3063319/"}, {"text": "really simple", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"text": ["Perhaps I can explain best if i give example: let's say the following - which i think is a good example of how XML is (mis)used in web services - is the response i get from http request to http://www.google.com/ig/api?weather=94043"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "http://www.google.com/ig/api?weather=94043", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.google.com/ig/api?weather=94043"}]}, {"code": "<pre>\n<code>\n &lt;xml_api_reply version=\"1\"&gt;\n  &lt;weather module_id=\"0\" tab_id=\"0\" mobile_row=\"0\" mobile_zipped=\"1\" row=\"0\" section=\"0\" &gt;\n    &lt;forecast_information&gt;\n      &lt;city data=\"Mountain View, CA\"/&gt;\n      &lt;postal_code data=\"94043\"/&gt;\n      &lt;latitude_e6 data=\"\"/&gt;\n      &lt;longitude_e6 data=\"\"/&gt;\n      &lt;forecast_date data=\"2010-06-23\"/&gt;\n      &lt;current_date_time data=\"2010-06-24 00:02:54 +0000\"/&gt;\n      &lt;unit_system data=\"US\"/&gt;\n    &lt;/forecast_information&gt;\n    &lt;current_conditions&gt;\n      &lt;condition data=\"Sunny\"/&gt;\n      &lt;temp_f data=\"68\"/&gt;\n      &lt;temp_c data=\"20\"/&gt;\n      &lt;humidity data=\"Humidity: 61%\"/&gt;\n      &lt;icon data=\"/ig/images/weather/sunny.gif\"/&gt;\n      &lt;wind_condition data=\"Wind: NW at 19 mph\"/&gt;\n    &lt;/current_conditions&gt;\n    ...\n    &lt;forecast_conditions&gt;\n      &lt;day_of_week data=\"Sat\"/&gt;\n      &lt;low data=\"59\"/&gt;\n      &lt;high data=\"75\"/&gt;\n      &lt;icon data=\"/ig/images/weather/partly_cloudy.gif\"/&gt;\n      &lt;condition data=\"Partly Cloudy\"/&gt;\n    &lt;/forecast_conditions&gt;\n  &lt;/weather&gt;\n&lt;/xml_api_reply&gt;\n</code>\n</pre>\n", "senID": 3}, {"text": ["After loading/parsing such document, i would like to be able to access the information as simple as say "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; xml['xml_api_reply']['weather']['forecast_information']['city'].data\n'Mountain View, CA'\n</code>\n</pre>\n", "senID": 5}, {"text": ["or"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; xml.xml_api_reply.weather.current_conditions.temp_f['data']\n'68'\n</code>\n</pre>\n", "senID": 7}, {"text": ["From what I saw so far, seems that ElementTree is the closest to what I dream of.", "But it's not there, there is still some fumbling to do when consuming XML.", "OTOH, what I am thinking is not that complicated - probably just thin veneer on top of a parser - and yet it can decrease annoyance of dealing with XML.", "Is there such a magic?", "(And if not - why?"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "ElementTree", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["PS.", "Note I have tried BeautifulSoup already and while I like its approach, it has real issues with empty &lt;element/&gt;s - see below in comments for examples."], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "BeautifulSoup", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "&lt;element/&gt;", "childNum": 0, "tag": "code", "childList": []}]}]