[{"text": ["Splitting tuples in Python - best practice?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a method in my Python code that returns a tuple - a row from a SQL query.", "Let's say it has three fields: (jobId, label, username)"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For ease of passing it around between functions, I've been passing the entire tuple as a variable called 'job'.", "Eventually, however, I want to get at the bits, so I've been using code like this:\n(jobId, label, username) = job"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I've realised, however, that this is a maintenance nightmare, because now I can never add new fields to the result set without breaking all of my existing code.", "How should I have written this?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Here are my two best guesses:\n(jobId, label, username) = (job[0], job[1], job[2])\n...but that doesn't scale nicely when you have 15...20 fields"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["or to convert the results from the SQL query to a dictionary straight away and pass that around (I don't have control over the fact that it starts life as a tuple, that's fixed for me)"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]