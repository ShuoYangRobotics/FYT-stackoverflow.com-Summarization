[{"text": ["Why does defining __getitem__ on a class make it iterable in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Why does defining __getitem__ on a class make it iterable? "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For instance if I write:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class b:\n  def __getitem__(self, k):\n    return k\n\ncb = b()\n\nfor k in cb:\n  print k\n</code>\n</pre>\n", "senID": 3}, {"text": ["I get the output:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n 0\n1\n2\n3\n4\n5\n6\n7\n8\n...\n</code>\n</pre>\n", "senID": 5}, {"text": ["I would really expect to see an error returned from \"for k in cb:\""], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]