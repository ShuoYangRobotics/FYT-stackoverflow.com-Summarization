[{"text": ["python arbitrarily incrementing an iterator inside a loop"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am probably going about this in the wrong manner, but I was wondering how to handle this in python. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["First some c code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n int i;\n\nfor(i=0;i&lt;100;i++){\n  if(i == 50)\n    i = i + 10;\n  printf(\"%i\\n\", i);\n}\n</code>\n</pre>\n", "senID": 3}, {"text": ["Ok so we never see the 50's... "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["My question is, how can I do something similar in python?", "For instance:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n for line in cdata.split('\\n'):\n  if exp.match(line):\n    #increment the position of the iterator by 5?\n    pass\n  print line\n</code>\n</pre>\n", "senID": 6}, {"text": ["With my limited experience in python, I only have one solution, introduce a counter and another if statement.", "break the loop until the counter reaches 5 after exp.match(line) is true. "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["There has got to be a better way to do this, hopefully one that does not involve importing another module. "], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Thanks in advance!  "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]