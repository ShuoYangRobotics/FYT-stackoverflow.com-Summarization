[{"text": ["Python -- Send Email When Exception Is Raised?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a python class with many methods():"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "python", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Method1()"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "Method1()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Method2()"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Method2()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["..........."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["..........."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["MethodN()"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "MethodN()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["All methods -- while performing different tasks -- have the same scheme:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n do something\ndo something else\nhas anything gone wrong?\n    raise an exception\n</code>\n</pre>\n", "senID": 8}, {"text": ["I want to be able to get an email whenever an exception is raised anywhere in the class."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Is there some easy way to combine this logic into the class, rather than calling SendEmail() before every raise Exception statement?", "what is the right, pythonic way to deal with such a case?", "canh a 'generalized' Exception handler be the solution?", "I'd be glad for any ideas you may have."], "childNum": 2, "tag": "p", "senID": 10, "childList": [{"text": "SendEmail()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "raise Exception", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]