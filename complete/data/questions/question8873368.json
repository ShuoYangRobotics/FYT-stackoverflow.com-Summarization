[{"text": ["How many common English words of 4 letters or more can you make from the letters of a given word (each letter can only be used once)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["On the back of a block calendar I found the following riddle:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["My first solution that I came up with was:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n from itertools import permutations\n\nwith open('/usr/share/dict/words') as f:\n    words = f.readlines()\n\nwords = map(lambda x: x.strip(), words)\n\ngiven_word = 'textbook'\n\nfound_words = []\n\nps = (permutations(given_word, i) for i in range(4, len(given_word)+1))\n\nfor p in ps:\n    for word in map(''.join, p):\n        if word in words and word != given_word:\n            found_words.append(word)\nprint set(found_words)\n</code>\n</pre>\n", "senID": 3}, {"text": ["This gives the result set(['tote', 'oboe', 'text', 'boot', 'took', 'toot', 'book', 'toke', 'betook']) but took more than 7 minutes on my machine."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "set(['tote', 'oboe', 'text', 'boot', 'took', 'toot', 'book', 'toke', 'betook'])", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["My next iteration was:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n with open('/usr/share/dict/words') as f:\n    words = f.readlines()\n\nwords = map(lambda x: x.strip(), words)\n\ngiven_word = 'textbook'\n\nprint [word for word in words if len(word) &gt;= 4 and sorted(filter(lambda letter: letter in word, given_word)) == sorted(word) and word != given_word]\n</code>\n</pre>\n", "senID": 6}, {"text": ["Which return an answer almost immediately but gave as answer: ['book', 'oboe', 'text', 'toot'] "], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "['book', 'oboe', 'text', 'toot']", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["What is the fastest, correct and most pythonic solution to this problem?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["(edit: added my earlier permutations solution and its different output)."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]