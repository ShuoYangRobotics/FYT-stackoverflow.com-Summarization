[{"text": ["Why is super() broken in Python-2.x?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["It's often stated that super should be avoided in Python 2.", "I've found in my use of super in Python 2 that it never acts the way I expect unless I provide all arguments such as the example:"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "super", "tag": "a", "pos": 0, "childList": [{"text": "super", "tag": "code"}], "childNum": 1, "href": "http://docs.python.org/library/functions.html#super"}, {"text": "super", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"href": "http://fuhm.net/super-harmful/", "text": "avoided", "childNum": 0, "tag": "a", "childList": []}, {"text": "super", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n super(ThisClass, self).some_func(*args, **kwds)\n</code>\n</pre>\n", "senID": 2}, {"text": ["It seems to me this defeats the purpose of using super(), it's neither more concise, or much better than TheBaseClass.some_func(self, *args, **kwds).", "For most purposes method resolution order is a distance fairy tale."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "super()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "TheBaseClass.some_func(self, *args, **kwds)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"tag": "ul", "num": 3, "lis": [{"text": "Other than the fact that ", "tag": "none", "senID": 4}, {"text": "How and why has ", "tag": "none", "senID": 5}, {"text": "When and why should I use ", "tag": "none", "senID": 6}]}]