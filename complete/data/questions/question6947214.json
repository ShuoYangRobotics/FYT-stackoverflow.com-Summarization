[{"text": ["Help me simplify this code (Python)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm a beginner in Python, teaching myself off of Google Code University.", "I had this problem as an exercise, and was able to solve it using the solution shown below:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # F. front_back\n# Consider dividing a string into two halves.\n# If the length is even, the front and back halves are the same length.\n# If the length is odd, we'll say that the extra char goes in the front half.\n# e.g. 'abcde', the front half is 'abc', the back half 'de'.\n# Given 2 strings, a and b, return a string of the form\n#  a-front + b-front + a-back + b-back\ndef front_back(a, b):\n  if len(a) % 2 == 0:\n    ad = len(a) / 2\n    if len(b) % 2 == 0:\n      bd = len(b) / 2\n    else:\n      bd = (len(b) / 2) + 1\n  else:\n    ad = (len(a) / 2) + 1\n    if len(b) % 2 == 0: \n      bd = len(b) / 2\n    else:\n      bd = (len(b) / 2) + 1\n\n  return a[:ad] + b[:bd] + a[ad:] + b[bd:]\n</code>\n</pre>\n", "senID": 2}, {"text": ["This produces the correct output and solves the problem.", "However, I am duplicating the logic of whether to split a string evenly or add the odd number to the first half, and this seems redundant.", "There has to be a more efficient way of doing this.", "The same exact check and logic is being applied to a and b.", "Anyone?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}]