[{"text": ["resampling, interpolating matrix"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to interpolate some data for the purpose of plotting.", "For instance, given N data points, I'd like to be able to generate a \"smooth\" plot, made up of 10*N or so interpolated data points."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["My approach is to generate an N-by-10*N matrix and compute the inner product the original vector and the matrix I generated, yielding a 1-by-10*N vector.", "I've already worked out the math I'd like to use for the interpolation, but my code is pretty slow.", "I'm pretty new to Python, so I'm hopeful that some of the experts here can give me some ideas of ways I can try to speed up my code."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I think part of the problem is that generating the matrix requires 10*N^2 calls to the following function:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def sinc(x):\n    import math\n    try:\n        return math.sin(math.pi * x) / (math.pi * x)\n    except ZeroDivisionError:\n        return 1.0\n</code>\n</pre>\n", "senID": 4}, {"text": ["(This comes from sampling theory.", "Essentially, I'm attempting to recreate a signal from its samples, and upsample it to a higher frequency."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "comes from sampling theory", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://en.wikipedia.org/wiki/Whittaker%E2%80%93Shannon_interpolation_formula"}]}, {"text": ["The matrix is generated by the following:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def resampleMatrix(Tso, Tsf, o, f):\n    from numpy import array as npar\n    retval = []\n\n    for i in range(f):\n        retval.append([sinc((Tsf*i - Tso*j)/Tso) for j in range(o)])\n\n    return npar(retval)\n</code>\n</pre>\n", "senID": 7}, {"text": ["I'm considering breaking up the task into smaller pieces because I don't like the idea of an N^2 matrix sitting in memory.", "I could probably make 'resampleMatrix' into a generator function and do the inner product row-by-row, but I don't think that will speed up my code much until I start paging stuff in and out of memory."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Thanks in advance for your suggestions!"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]