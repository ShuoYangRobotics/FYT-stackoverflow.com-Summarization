[{"text": ["Extracting text from HTML file using Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'd like to extract the text from an HTML file using Python.", "I want essentially the same output I would get if I copied the text from a browser and pasted it into notepad.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'd like something more robust than using regular expressions that may fail on poorly formed HTML.", "I've seen many people recommend Beautiful Soup, but I've had a few problems using it.", "For one, it picked up unwanted text, such as JavaScript source.", "Also, it did not interpret HTML entities.", "For example, I would expect &amp;#39; in HTML source to be converted to an apostrophe in text, just as if I'd pasted the browser content into notepad."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Update html2text looks promising.", "It handles HTML entities correctly and ignores JavaScript.", "However, it does not exactly produce plain text; it produces markdown that would then have to be turned into plain text.", "It comes with no examples or documentation, but the code looks clean."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "hr", "senID": 4}, {"text": ["Related questions:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"tag": "ul", "num": 2, "lis": [{"text": ["Filter out HTML tags and resolve entities in python"], "childNum": 0, "tag": "a", "senID": 6, "childList": []}, {"text": ["Convert XML/HTML Entities into Unicode String in Python"], "childNum": 0, "tag": "a", "senID": 7, "childList": []}]}]