[{"text": ["How to do a Python split() on languages (like Chinese) that don't use whtespace as word separator?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to split a sentence into a list of words."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For English and European languages this is easy, just use split()"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; \"This is a sentence.\".split()\n['This', 'is', 'a', 'sentence.']\n</code>\n</pre>\n", "senID": 3}, {"text": ["But I also need to deal with sentences in languages such as Chinese that don't use whitespace as word separator."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; u\"\u8fd9\u662f\u4e00\u4e2a\u53e5\u5b50\".split()\n[u'\\u8fd9\\u662f\\u4e00\\u4e2a\\u53e5\\u5b50']\n</code>\n</pre>\n", "senID": 5}, {"text": ["Obviously that doesn't work."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["How do I split such a sentence into a list of words?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["UPDATE:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "UPDATE:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["So far the answers seem to suggest that this requires natural language processing techniques and that the word boundaries in Chinese are ambiguous.", "I'm not sure I understand why.", "The word boundaries in Chinese seem very definite to me.", "Each Chinese word/character has a corresponding unicode and is displayed on screen as an separate word/character."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["So where does the ambiguity come from.", "As you can see in my Python console output Python has no problem telling that my example sentence is made up of 5 characters:"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n \u8fd9 - u8fd9\n\u662f - u662f\n\u4e00 - u4e00\n\u4e2a - u4e2a\n\u53e5 - u53e5\n\u5b50 - u5b50\n</code>\n</pre>\n", "senID": 11}, {"text": ["So obviously Python has no problem telling the word/character boundaries.", "I just need those words/characters in a list."], "childNum": 0, "tag": "p", "senID": 12, "childList": []}]