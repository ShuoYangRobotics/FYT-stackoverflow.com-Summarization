[{"text": ["How is the 'is' keyword implemented in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["... the is keyword that can be used for equality in strings."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "is", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = 'str'\n&gt;&gt;&gt; s is 'str'\nTrue\n&gt;&gt;&gt; s is 'st'\nFalse\n</code>\n</pre>\n", "senID": 2}, {"text": ["I tried both __is__() and __eq__() but they didn't work."], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "__is__()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "__eq__()", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; class MyString:\n...   def __init__(self):\n...     self.s = 'string'\n...   def __is__(self, s):\n...     return self.s == s\n...\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; m = MyString()\n&gt;&gt;&gt; m is 'ss'\nFalse\n&gt;&gt;&gt; m is 'string' # &lt;--- Expected to work\nFalse\n&gt;&gt;&gt;\n&gt;&gt;&gt; class MyString:\n...   def __init__(self):\n...     self.s = 'string'\n...   def __eq__(self, s):\n...     return self.s == s\n...\n&gt;&gt;&gt;\n&gt;&gt;&gt; m = MyString()\n&gt;&gt;&gt; m is 'ss'\nFalse\n&gt;&gt;&gt; m is 'string' # &lt;--- Expected to work, but again failed\nFalse\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 4}, {"text": ["Thanks for your help!"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]