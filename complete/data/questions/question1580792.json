[{"text": ["How to avoid excessive parameter passing?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am developing a medium size program in python spread across 5 modules.", "The program accepts command line arguments using OptionParser in the main module e.g.", "main.py.", "These options are later used to determine how methods in other modules behave (e.g.", "a.py, b.py).", "As I extend the ability for the user to customise the behaviour or the program I find that I end up requiring this user-defined parameter in a method in a.py that is not directly called by main.py, but is instead called by another method in a.py:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["main.py:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import a\n p = some_command_line_argument_value\n a.meth1(p)\n</code>\n</pre>\n", "senID": 3}, {"text": ["a.py:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n meth1(p):\n       # some code\n       res = meth2(p)\n       # some more code w/ res\n\nmeth2(p):\n       # do something with p\n</code>\n</pre>\n", "senID": 5}, {"text": ["This excessive parameter passing seems wasteful and wrong, but has hard as I try I cannot think of a design pattern that solves this problem.", "While I had some formal CS education (minor in CS during my B.Sc.", "), I've only really come to appreciate good coding practices since I started using python.", "Please help me become a better programmer!"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]