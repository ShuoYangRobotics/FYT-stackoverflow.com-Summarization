[{"text": ["Mass string replace in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Say I have a string that looks like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n str = \"The &amp;yquick &amp;cbrown &amp;bfox &amp;Yjumps over the &amp;ulazy dog\"\n</code>\n</pre>\n", "senID": 2}, {"text": ["You'll notice a lot of locations in the string where there is an ampersand, followed by a character (such as \"&amp;y\" and \"&amp;c\").", "I need to replace these characters with an appropriate value that I have in a dictionary, like so:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n dict = {\"&amp;y\":\"\\033[0;30m\",\n        \"&amp;c\":\"\\033[0;31m\",\n        \"&amp;b\":\"\\033[0;32m\",\n        \"&amp;Y\":\"\\033[0;33m\",\n        \"&amp;u\":\"\\033[0;34m\"}\n</code>\n</pre>\n", "senID": 4}, {"text": ["What is the fastest way to do this?", "I could manually find all the ampersands, then loop through the dictionary to change them, but that seems slow.", "Doing a bunch of regex replaces seems slow as well (I will have a dictionary of about 30-40 pairs in my actual code)."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Any suggestions are appreciated, thanks."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Edit:"], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["As has been pointed out in comments throught this question, my dictionary is defined before runtime, and will never change during the course of the applications life cycle.", "It is a list of ANSI escape sequences, and will have about 40 items in it.", "My average string length to compare against will be about 500 characters, but there will be ones that are up to 5000 characters (although, these will be rare).", "I am also using Python 2.6 currently."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Edit #2\nI accepted Tor Valamos answer as the correct one, as it not only gave a valid solution (although it wasn't the best solution), but took all others into account and did a tremendous amount of work to compare all of them.", "That answer is one of the best, most helpful answers I have ever come across on StackOverflow.", "Kudos to you."], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "Edit #2", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "best", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}]