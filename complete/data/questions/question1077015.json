[{"text": ["python list comprehensions; compressing a list of lists?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["guys.", "I'm trying to find the most elegant solution to a problem and wondered if python has anything built-in for what I'm trying to do. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["What I'm doing is this.", "I have a list, A, and I have a function f which takes an item and returns a list.", "I can use a list comprehension to convert everything in A like so;"], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "A", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "f", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "A", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"code": "<pre>\n<code>\n [f(a) for a in A]\n</code>\n</pre>\n", "senID": 3}, {"text": ["But this return a list of lists;"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n [a1,a2,a3] =&gt; [[b11,b12],[b21,b22],[b31,b32]]\n</code>\n</pre>\n", "senID": 5}, {"text": ["What I really want is to get the flattened list;"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n [b11,b12,b21,b22,b31,b32]\n</code>\n</pre>\n", "senID": 7}, {"text": ["Now, other languages have it; it's traditionally called flatmap in functional programming languages, and .Net calls it SelectMany.", "Does python have anything similar?", "Is there a neat way to map a function over a list and flatten the result?"], "childNum": 2, "tag": "p", "senID": 8, "childList": [{"text": "flatmap", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "SelectMany", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["The actual problem I'm trying to solve is this; starting with a list of directories, find all the subdirectories.", "so;"], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "The actual problem I'm trying to solve is this; starting with a list of directories, find all the subdirectories. so;", "childNum": 0, "tag": "em", "pos": -1, "childList": []}]}, {"code": "<pre>\n<code>\n import os\ndirs = [\"c:\\\\usr\", \"c:\\\\temp\"]\nsubs = [os.listdir(d) for d in dirs]\nprint subs\n</code>\n</pre>\n", "senID": 10}, {"text": ["currentliy gives me a list-of-lists, but I really want a list."], "childNum": 1, "tag": "p", "senID": 11, "childList": [{"text": "currentliy gives me a list-of-lists, but I really want a list.", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]