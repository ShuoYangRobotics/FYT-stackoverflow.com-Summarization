[{"text": ["How to read and process binary (base-2) logical representations from file"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a file containing 800 lines like:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n id       binary-coded-info\n---------------------------\n4657     001001101\n4789     110111111\netc.\n</code>\n</pre>\n", "senID": 2}, {"text": ["where each 0 or 1 stands for the presence of some feature.", "I want to read this file and do several bitwise logical operations on the\nbinary-coded-info (the operations depend on user input\nand on info from a second file with 3000 lines).", "Then, \nthese re-calculated binary-coded-info should be written to\nfile (with trailing zeros, e.g. "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n 4657     000110011\n4789     110110000\netc.\n</code>\n</pre>\n", "senID": 4}, {"text": ["How should I do this without writing my own base conversion routine?", "I am open for anything, also languages I do not know, like python, perl, etc.", "And it should work without compiling."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["So far, I tried to script, awk and sed my way.", "This would\nmean (I think): batch read as base-2, convert to base-10, do bitwise operations depending on user input and second file,\nconvert to base-2, add leading zeros and print.", "The usual console hints\nto use bc do not seem elegant because I have many lines in a file.", "The same holds for dc.sed.", "And awk doesnt seem to have an \nequivalent to flagging input as binary ( as in \"echo $((2#101010))\"  ),\nand also, the printf trick doesn't work for binary.", "So, how would I do this\nmost elegantly (or, at all, for that matter) ?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]