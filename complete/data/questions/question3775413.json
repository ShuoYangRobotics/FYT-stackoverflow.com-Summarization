[{"text": ["What is the Perl version of a Python iterator?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am learning Perl at my work and enjoying it.", "I usually do my work in Python but boss wants Perl. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Most of the concepts in Python and Perl match nicely: Python dictionary=Perl hash; Python tuple=Perl list; Python list=Perl array; etc. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Question: Is there a Perl version of the Python form of an Iterator / Generator? "], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "Iterator", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/stdtypes.html#iterator-types"}]}, {"text": ["An example: A Classic Python way to generate the Fibonacci numbers is: "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python\n\ndef fibonacci(mag):\n     a, b = 0, 1\n     while a&lt;=10**mag:\n         yield a\n         a, b = b, a+b\n\nfor number in fibonacci(15):  \n     print \"%17d\" % number\n</code>\n</pre>\n", "senID": 5}, {"text": ["Iterators are also useful if you want to generate a subsection of a much larger list as needed.", "Perl 'lists' seem more static - more like a Python tuple.", "In Perl, can foreach be dynamic or is only based on a static list?"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "foreach", "childNum": 0, "tag": "code", "pos": 2, "childList": []}]}, {"text": ["The Python form of Iterator is a form that I have gotten used to, and I do not find it documented in Perl... Other than writing this in loops or recursively or generating a huge static list, how do I (for ex) write the Fibonacci subroutine it in Perl?", "Is there a Perl yield that I am missing? "], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "yield", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"text": ["Specifically -- how do I write this:"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/perl\nuse warnings; use strict; # yes -- i use those!\n\nsub fibonacci {\n   # What goes here other than returning an array or list? \n}\n\nforeach my $number (fibonacci(15)) { print $number . \"\\n\"; }\n</code>\n</pre>\n", "senID": 9}, {"text": ["Thanks in advance to being kind to the newbie..."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]