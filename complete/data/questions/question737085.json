[{"text": ["What am I missing about SqlAlchemy?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["So I wanted to introduce a friend to the wonderful world of python ORM libraries, which I still know little about."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Our databases are extremely fragmented and at times under normalized (for efficiency) and over normalized.", "Making \"entities\" out of it at this point is too much work (we have lots of legacy php code working with this) so the best I could think of was using sqlsoup to introspect our tables so he didn't have to write any mappers which he hated."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["We liked the fact that selecting all columns and records from tables was easier this way, updating single items was also very easy since it could be done with a single query."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["But everything else seems to take more code than custom SQL code, he wasn't thrilled when I couldn't select just a few columns, but what really bothered me is that even simple filters are more verbose.", "Example:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n soup.mytable.filter_by(and_(soup.mytable.foo &lt; 'x', soup.mytable.foo &gt;= 'y'))\n</code>\n</pre>\n", "senID": 5}, {"text": ["Is not easier than raw SQL (plus a custom querying object that does auto-escaping and such)..."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n mydb(\"SELECT * FROM mytable WHERE foo &lt; $x AND foo &gt;= $y\", x='x', y='y')\n</code>\n</pre>\n", "senID": 7}, {"text": ["Specially considering that we don't have to learn every MySQL function again.", "So except for the database agnosticism that we don't use, how can SqlAlchemy (or any Python ORM) make my life easier?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]