[{"text": ["How to concisely cascade through multiple regex statements in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["My dilemma: I'm passing my function a string that I need to then perform numerous regex manipulations on.", "The logic is if there's a match in the first regex, do one thing.", "If no match, check for a match with the second and do something else, if not check the third, and so forth.", "I could do something like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n if re.match('regex1', string):\n    match = re.match('regex1', string)\n    # Manipulate match.group(n) and return\nelif re.match('regex2', string):\n    match = re.match('regex2', string)\n    # Do second manipulation\n[etc.]\n</code>\n</pre>\n", "senID": 2}, {"text": ["However, this feels unnecessarily verbose, and usually when that's the case it means there's a better way that I'm either overlooking or don't yet know about."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Does anyone have a suggestion for a better way to do this (better from a code-appearance standpoint, a memory usage standpoint, or both)?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]