[{"text": ["Modern, high performance bloom filter in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm looking for a production quality bloom filter implementation in Python to handle fairly large numbers of items (say 100M to 1B items with 0.01% false positive rate). "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Pybloom is one option but it seems to be showing its age as it throws DeprecationWarning errors  on Python 2.5 on a regular basis.", "Joe Gregorio also has an implementation. "], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "Pybloom", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.imperialviolet.org/pybloom.html"}, {"text": "an implementation", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://bitworking.org/news/380/bloom-filter-resources"}]}, {"text": ["Requirements are fast lookup performance and stability.", "I'm also open to creating Python interfaces to particularly good c/c++ implementations, or even to Jython if there's a good Java implementation."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Lacking that, any recommendations on a bit array / bit vector representation that can handle ~16E9 bits?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]