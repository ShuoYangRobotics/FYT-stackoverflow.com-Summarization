[{"text": ["Python: linking/binding variables together in a dictionary"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["first post, so play nice!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I have a fairly basic question about Python dictionaries.", "I would like to have some dict value that updates when another variable is changed (or at least recalculated when it is next called) - eg:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n mass = 1.0\nvolume = 0.5\nmydict = {'mass':mass,'volume':volume}\nmydict['density'] = mydict['mass']/mydict['volume']\n</code>\n</pre>\n", "senID": 3}, {"text": ["So in this case, mydict['density'] just returns 2.0.", "If I change mydict['mass'] = 2.0, the density will not be updated.", "Fine - I can kind of understand why - the density is defined by the values when they were passed to the declaration.", "So I thought maybe I could approach this with a lambda expression, eg (apologies for the horrid code!", "):"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n mydict['density_calc'] = lambda x,y: x/y\nmydict['density'] = mydict['density_calc'](mydict['mass'],mydict['volume'])\n</code>\n</pre>\n", "senID": 5}, {"text": ["But again, this only returns the original density, despite changing mydict['mass'].", "As a final attempt, I tried this:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n def density(mass,volume): return mass/volume\nmydict['density_calc'] = lambda x,y: density(x,y)\nmydict['density'] = mydict['density_calc'](mydict['mass'],mydict['volume'])\n</code>\n</pre>\n", "senID": 7}, {"text": ["Again, no dice.", "This seems like a really simple problem to solve, so apologies in advance, but if anyone could help me out, I'd be very appreciative!"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Cheers,"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Dave"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]