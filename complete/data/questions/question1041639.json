[{"text": ["Get a dict of all variables currently in scope and their values"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Consider this snippet:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n globalVar = 25\n\ndef myfunc(paramVar):\n    localVar = 30\n    print \"Vars: {globalVar}, {paramVar}, {localVar}!\".format(**VARS_IN_SCOPE)\n\nmyfunc(123)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Where VARS_IN_SCOPE is the dict I'm after that would contain globalVar, paramVar and localVar, among other things."], "childNum": 4, "tag": "p", "senID": 3, "childList": [{"text": "VARS_IN_SCOPE", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "globalVar", "childNum": 0, "tag": "code", "childList": []}, {"text": "paramVar", "childNum": 0, "tag": "code", "childList": []}, {"text": "localVar", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["I'd like to basically be able to reference all the variables that are currently in scope inside the string.", "Hence the expected output would be:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Vars: 25, 123, 30"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Vars: 25, 123, 30", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["I can achieve this by passing **dict(globals().items() + locals().items()) to format().", "Is this always correct or are there some corner cases that this expression would handle incorrectly?"], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "**dict(globals().items() + locals().items())", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "format()", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["Rewritten to clarify the question."], "childNum": 1, "tag": "p", "senID": 7, "childList": [{"text": "Rewritten to clarify the question.", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]