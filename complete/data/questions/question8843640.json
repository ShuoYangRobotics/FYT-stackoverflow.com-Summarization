[{"text": ["Python - Searching Dictionary"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Sample data:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n {\n    10116079620: {'ip.dst': ['10.1.1.5'], 'ip.src': ['1.2.3.4'], 'category': ['Misc']}, \n    10116882439: {'ip.dst': ['1.2.3.4'], 'ip.src': ['10.1.1.5'], 'category': ['Misc']}, \n    10116080136: {'ip.dst': ['10.10.10.99'], 'ip.src': ['1.2.3.4'], 'category': ['Misc']}, \n    10116884490: {'ip.dst': ['10.10.10.99'], 'ip.src': ['2.3.4.5'], 'alias': ['www.example.com'], 'category': ['Misc']}, \n    10117039635: {'ip.dst': ['2.3.4.5'], 'ip.src': ['10.11.11.50'], 'alias': ['google.com'], 'category': ['Misc']}, \n    10118099993: {'ip.dst': ['1.2.3.4'], 'ip.src': ['10.11.11.49'], 'alias': ['www.google.com'], 'category': ['Misc']},\n    10118083243: {'ip.dst': ['10.11.11.49'], 'ip.src': ['4.3.2.1'], 'alias': ['www.google.com'], 'category': ['Misc']}}\n}\n</code>\n</pre>\n", "senID": 2}, {"text": ["Goal:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["My goal is to search the sample dictionary with a value (IP address) that is known to exist though it is not known if it will appear in ip.dst or ip.src.", "Once found I want to write the \"opposite\" (other) IP address to a new list... if the searched address was found in ip.src I want to capture ip.dst and vice versa."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["A searched address can be found more than once - the resulting list does not need to reflect duplicates."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["If 1.2.3.4 is searched then the following would be captured:\n* 10.1.1.5\n* 10.10.10.99\n* 10.11.11.49"], "childNum": 3, "tag": "p", "senID": 6, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["Searching on 10.10.10.99 would capture:\n* 1.2.3.4\n* 2.3.4.5"], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["This I'm sure is simple yet I am stuck with nasty, nested loops and need a concise routine clearer than my mud."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Your assistance is appreciated."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["Thanks."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]