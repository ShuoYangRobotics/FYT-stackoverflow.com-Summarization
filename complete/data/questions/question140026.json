[{"text": ["Writing a Domain Specific Language for selecting rows from a table"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm writing a server that I expect to be run by many different people, not all of whom I will have direct contact with.", "The servers will communicate with each other in a cluster.", "Part of the server's functionality involves selecting a small subset of rows from a potentially very large table.", "The exact choice of what rows are selected will need some tuning, and it's important that it's possible for the person running the cluster (eg, myself) to update the selection criteria without getting each and every server administrator to deploy a new version of the server."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Simply writing the function in Python isn't really an option, since nobody is going to want to install a server that downloads and executes arbitrary Python code at runtime."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["What I need are suggestions on the simplest way to implement a Domain Specific Language to achieve this goal.", "The language needs to be capable of simple expression evaluation, as well as querying table indexes and iterating through the returned rows.", "Ease of writing and reading the language is secondary to ease of implementing it.", "I'd also prefer not to have to write an entire query optimiser, so something that explicitly specifies what indexes to query would be ideal."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The interface that this will have to compile against will be similar in capabilities to what the App Engine datastore exports: You can query for sequential ranges on any index on the table (eg, less-than, greater-than, range and equality queries), then filter the returned row by any boolean expression.", "You can also concatenate multiple independent result sets together."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I realise this question sounds a lot like I'm asking for SQL.", "However, I don't want to require that the datastore backing this data be a relational database, and I don't want the overhead of trying to reimplement SQL myself.", "I'm also dealing with only a single table with a known schema.", "Finally, no joins will be required.", "Something much simpler would be far preferable."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit: Expanded description to clear up some misconceptions."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]