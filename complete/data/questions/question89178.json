[{"text": ["In Python, what is the fastest algorithm for removing duplicates from a list so that all elements are unique *while preserving order*?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["For example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; x = [1, 1, 2, 'a', 'a', 3]\n&gt;&gt;&gt; unique(x)\n[1, 2, 'a', 3]\n</code>\n</pre>\n", "senID": 2}, {"text": ["Assume list elements are hashable."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Clarification: The result should keep the first duplicate in the list.", "For example, [1, 2, 3, 2, 3, 1] becomes [1, 2, 3]."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Clarification:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]