[{"text": ["Python \"is\" operator behaves unexpectedly with integers"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Why does the following behave unexpectedly in Python?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; a = 256\n&gt;&gt;&gt; b = 256\n&gt;&gt;&gt; a is b\nTrue           # this is an expected result\n&gt;&gt;&gt; a = 257\n&gt;&gt;&gt; b = 257\n&gt;&gt;&gt; a is b\nFalse          # what happened here? why is this False?\n&gt;&gt;&gt; 257 is 257\nTrue           # yet the literal numbers compare properly\n</code>\n</pre>\n", "senID": 2}, {"text": ["I am using Python 2.5.2.", "Trying some different versions of Python, it appears that a Python 2.3.3 shows the above behaviour between 99 and 100."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Based on the above, I can hypothesise that Python is internally implemented such that \"small\" integers are stored in a different way than larger integers, and the is operator can tell the difference.", "Why the leaky abstraction?", "What is a better way of comparing two arbitrary objects to see whether they are the same, and I don't know in advance whether they are numbers or not?"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "is", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]