[{"text": ["How do I check for if an exact string exists in another string?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm currently running into a bit of a problem.", "I'm trying to write a program that will highlight occurrences of a word or phrase inside of another string, but only if the string it's being matched to is exactly the same.", "The part I'm running into troubles with is identifying whether or not the subphrase I'm matching the phrase with is contained within another larger subphrase."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["A quick example which shows this problem:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; indicators = [\"therefore\", \"for\", \"since\"]\n&gt;&gt;&gt; phrase = \"... therefore, I conclude I am awesome.\"\n&gt;&gt;&gt; indicators_in_phrase = [indicator for indicator in indicators \n                            if indicator in phrase.lower()]\n&gt;&gt;&gt; print indicators_in_phrase\n['therefore', 'for']\n</code>\n</pre>\n", "senID": 3}, {"text": ["I do not want 'for' included in that list.", "I know why it is being included, but I can't think of any expression that could filter out substrings like that."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["I've noticed other similar questions on the site, but each involves a Regex solution, which is something I'm not feeling comfortable with yet, especially not in Python.", "Is there any kind-of-easy way to solve this problem without using a Regex expression?", "If not, the corresponding Regex expression and how it might be implemented in the above example would be very much appreciated."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]