[{"text": ["Extended slice that goes to beginning of sequence with negative stride"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Bear with me while I explain my question.", "Skip down to the bold heading if you already understand extended slice list indexing."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["In python, you can index lists using slice notation.", "Here's an example:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A = list(range(10))\n&gt;&gt;&gt; A[0:5]\n[0, 1, 2, 3, 4]\n</code>\n</pre>\n", "senID": 3}, {"text": ["You can also include a stride, which acts like a \"step\":"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A[0:5:2]\n[0, 2, 4]\n</code>\n</pre>\n", "senID": 5}, {"text": ["The stride is also allowed to be negative, meaning the elements are retrieved in reverse order:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A[5:0:-1]\n[5, 4, 3, 2, 1]\n</code>\n</pre>\n", "senID": 7}, {"text": ["But wait!", "I wanted to see [4, 3, 2, 1, 0].", "Oh, I see, I need to decrement the start and end indices:"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "[4, 3, 2, 1, 0]", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A[4:-1:-1]\n[]\n</code>\n</pre>\n", "senID": 9}, {"text": ["What happened?", "It's interpreting -1 as  being at the end of the array, not the beginning.", "I know you can achieve this as follows:"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A[4::-1]\n[4, 3, 2, 1, 0]\n</code>\n</pre>\n", "senID": 11}, {"text": ["But you can't use this in all cases.", "For example, in a method that's been passed indices.  "], "childNum": 0, "tag": "p", "senID": 12, "childList": []}, {"text": ["My question is:"], "childNum": 0, "tag": "h2", "senID": 13, "childList": []}, {"text": ["Is there any good pythonic way of using extended slices with negative strides and explicit start and end indices that include the first element of a sequence?"], "childNum": 1, "tag": "p", "senID": 14, "childList": [{"text": "and explicit start and end indices", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["This is what I've come up with so far, but it seems unsatisfying."], "childNum": 0, "tag": "p", "senID": 15, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; A[0:5][::-1]\n[4, 3, 2, 1, 0]\n</code>\n</pre>\n", "senID": 16}]