[{"text": ["What is C#'s version of the GIL?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In the current implementation of CPython, there is an object known as the \"GIL\" or \"Global Interpreter Lock\".", "It is essentially a mutex that prevents two Python threads from executing Python code at the same time.", "This prevents two threads from being able to corrupt the state of the Python interpreter, but also prevents multiple threads from really executing together.", "Essentially, if I do this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # Thread A\nsome_list.append(3)\n# Thread B\nsome_list.append(4)\n</code>\n</pre>\n", "senID": 2}, {"text": ["I can't corrupt the list, because at any given time, only one of those threads are executing, since they must hold the GIL to do so.", "Now, the items in the list might be added in some indeterminate order, but the point is that the list isn't corrupted, and two things will always get added."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["So, now to C#.", "C# essentially faces the same problem as Python, so, how does C# prevent this?", "I'd also be interested in hearing Java's story, if anyone knows it."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Clarification: I'm interested in what happens without explicit locking statements, especially to the VM.", "I am aware that locking primitives exist for both Java &amp; C# - they exist in Python as well: The GIL is not used for multi-threaded code, other than to keep the interpreter sane.", "I am interested in the direct equivalent of the above, so, in C#, if I can remember enough... :-)"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "Clarification:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n List&lt;String&gt; s;\n// Reference to s is shared by two threads, which both execute this:\ns.Add(\"hello\");\n// State of s?\n// State of the VM? (And if sane, how so?)\n</code>\n</pre>\n", "senID": 6}, {"text": ["Here's another example:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n class A\n{\n    public String s;\n}\n// Thread A &amp; B\nsome_A.s = some_other_value;\n\n// some_A's state must change: how does it change?\n// Is the VM still in good shape afterwards?\n</code>\n</pre>\n", "senID": 8}, {"text": ["I'm not looking to write bad C# code, I understand the lock statements.", "Even in Python, the GIL doesn't give you magic-multi-threaded code: you must still lock shared resources.", "But the GIL prevents Python's \"VM\" from being corrupted - it is this behavior that I'm interested in."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "lock", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}]