[{"text": ["Efficiently average the second column by intervals defined by the first column"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["There are two numeric columns in a data file.", "I need to calculate the average of the second column by intervals (such as 100) of the first column."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I can program this task in R, but my R code is really slow for a relatively large data file (millions of rows, with the value of first column changing between 1 to 33132539). "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Here I show my R code.", "How could I tune it to be faster?", "Other solutions that are perl, python, awk or shell based are appreciated."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Thanks in advance."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["(1) my data file (tab-delimited, millions of rows) "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n 5380    30.07383\\n\n5390    30.87\\n\n5393    0.07383\\n\n5404    6\\n\n5428    30.07383\\n\n5437    1\\n\n5440    9\\n\n5443    30.07383\\n\n5459    6\\n\n5463    30.07383\\n\n5480    7\\n\n5521    30.07383\\n\n5538    0\\n\n5584    20\\n\n5673    30.07383\\n\n5720    30.07383\\n\n5841    3\\n\n5880    30.07383\\n\n5913    4\\n\n5958    30.07383\\n\n</code>\n</pre>\n", "senID": 6}, {"text": ["(2) what I want to get, here interval = 100"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n intervals_of_first_columns, average_of_2nd column_by_the_interval\n100, 0\\n\n200, 0\\n\n300, 20.34074\\n\n400, 14.90325\\n\n.....\n</code>\n</pre>\n", "senID": 8}, {"text": ["(3) R code"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n chr1 &lt;- 33132539 # set the limit for the interval\nwindow &lt;- 100 # set the size of interval\n\nspe &lt;- read.table(\"my_data_file\", header=F) # read my data in\nnames(spe) &lt;- c(\"pos\", \"rho\") # name my data \n\ninterval.chr1 &lt;- data.frame(pos=seq(0, chr1, window)) # setup intervals\nmeanrho.chr1 &lt;- NULL # object for the mean I want to get\n\n# real calculation, really slow on my own data.\nfor(i in 1:nrow(interval.chr1)){\n  count.sub&lt;-subset(spe, chrom==1 &amp; pos&gt;=interval.chr1$pos[i] &amp; pos&lt;=interval.chr1$pos[i+1])\n  meanrho.chr1[i]&lt;-mean(count.sub$rho)\n}\n</code>\n</pre>\n", "senID": 10}]