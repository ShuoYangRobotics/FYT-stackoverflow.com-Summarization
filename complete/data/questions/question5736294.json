[{"text": ["De-greedifying a regular expression in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to write a regular expression that will convert a full path filename to a short filename for a given filetype, minus the file extension."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["For example, I'm trying to get just the name of the .bar file from a string using"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n re.search('/(.*?)\\.bar$', '/def_params/param_1M56/param/foo.bar')\n</code>\n</pre>\n", "senID": 3}, {"text": ["According to the Python re docs, *?", "is the ungreedy version of *, so I was expecting to get"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "*?", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "*", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n 'foo'\n</code>\n</pre>\n", "senID": 5}, {"text": ["returned for match.group(1) but instead I got "], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "match.group(1)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n 'def_params/param_1M56/param/foo'\n</code>\n</pre>\n", "senID": 7}, {"text": ["What am I missing here about greediness?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]