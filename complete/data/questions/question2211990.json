[{"text": ["How to implement an efficient infinite generator of prime numbers in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is not a homework, I am just curious."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["INFINITE is the key word here."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I wish to use it as for p in primes().", "I believe that this is a built-in function in Haskell."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["So, the answer cannot be as naive as \"Just do a Sieve\"."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["First of all, you do not know how many consecutive primes will be consumed.", "Well, suppose you could concoct 100 of them at a time.", "Would you use the same Sieve approach as well as the frequency of prime numbers formula?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I prefer non-concurrent approach."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Thank you for reading (and writing ;) )!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]