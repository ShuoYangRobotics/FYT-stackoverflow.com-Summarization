[{"text": ["What is the best way to get the first item from an iterable matching a condition?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In Python, I would like to get the first item from a list matching a condition.", "For example, the following function is adequate:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def first(the_iterable, condition = lambda x: True):\n    for i in the_iterable:\n        if condition(i):\n            return i\n</code>\n</pre>\n", "senID": 2}, {"text": ["This function could be used something like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; first(range(10))\n0\n&gt;&gt;&gt; first(range(10), lambda i: i &gt; 3)\n4\n</code>\n</pre>\n", "senID": 4}, {"text": ["However, I can't think of a good built-in / one-liner to let me do this (and I don't particularly want to copy this function around if I don't have to).", "Any ideas?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["(It's important that the resulting method not process the entire list, which could be quite large."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]