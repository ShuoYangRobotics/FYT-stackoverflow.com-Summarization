[{"text": ["Python: Split unicode string on word boundaries"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to take a string, and shorten it to 140 characters."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Currently I am doing:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n if len(tweet) &gt; 140:\n    tweet = re.sub(r\"\\s+\", \" \", tweet) #normalize space\n    footer = \"\u2026 \" + utils.shorten_urls(post['url'])\n    avail = 140 - len(footer)\n    words = tweet.split()\n    result = \"\"\n    for word in words:\n        word += \" \"\n        if len(word) &gt; avail:\n            break\n        result += word\n        avail -= len(word)\n    tweet = (result + footer).strip()\n    assert len(tweet) &lt;= 140\n</code>\n</pre>\n", "senID": 3}, {"text": ["So this works great for English, and English like strings, but fails for a Chinese string because tweet.split() just returns one array:"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "tweet.split()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; s = u\"\u7b80\u8baf\uff1a\u65b0\u83ef\u793e\u5831\u9053\uff0c\u7f8e\u570b\u7e3d\u7d71\u5967\u5df4\u99ac\u4e58\u5750\u7684\u300c\u7a7a\u8ecd\u4e00\u865f\u300d\u5c08\u6a5f\u665a\u4e0a10\u664242\u5206\u9032\u5165\u4e0a\u6d77\u7a7a\u57df\uff0c\u9810\u8a08\u7d0430\u5206\u9418\u5f8c\u62b5\u9054\u6d66\u6771\u570b\u969b\u6a5f\u5834\uff0c\u958b\u5c55\u4ed6\u4e0a\u4efb\u5f8c\u9996\u6b21\u8a2a\u83ef\u4e4b\u65c5\u3002\"\n&gt;&gt;&gt; s\nu'\\u7b80\\u8baf\\uff1a\\u65b0\\u83ef\\u793e\\u5831\\u9053\\uff0c\\u7f8e\\u570b\\u7e3d\\u7d71\\u5967\\u5df4\\u99ac\\u4e58\\u5750\\u7684\\u300c\\u7a7a\\u8ecd\\u4e00\\u865f\\u300d\\u5c08\\u6a5f\\u665a\\u4e0a10\\u664242\\u5206\\u9032\\u5165\\u4e0a\\u6d77\\u7a7a\\u57df\\uff0c\\u9810\\u8a08\\u7d0430\\u5206\\u9418\\u5f8c\\u62b5\\u9054\\u6d66\\u6771\\u570b\\u969b\\u6a5f\\u5834\\uff0c\\u958b\\u5c55\\u4ed6\\u4e0a\\u4efb\\u5f8c\\u9996\\u6b21\\u8a2a\\u83ef\\u4e4b\\u65c5\\u3002'\n&gt;&gt;&gt; s.split()\n[u'\\u7b80\\u8baf\\uff1a\\u65b0\\u83ef\\u793e\\u5831\\u9053\\uff0c\\u7f8e\\u570b\\u7e3d\\u7d71\\u5967\\u5df4\\u99ac\\u4e58\\u5750\\u7684\\u300c\\u7a7a\\u8ecd\\u4e00\\u865f\\u300d\\u5c08\\u6a5f\\u665a\\u4e0a10\\u664242\\u5206\\u9032\\u5165\\u4e0a\\u6d77\\u7a7a\\u57df\\uff0c\\u9810\\u8a08\\u7d0430\\u5206\\u9418\\u5f8c\\u62b5\\u9054\\u6d66\\u6771\\u570b\\u969b\\u6a5f\\u5834\\uff0c\\u958b\\u5c55\\u4ed6\\u4e0a\\u4efb\\u5f8c\\u9996\\u6b21\\u8a2a\\u83ef\\u4e4b\\u65c5\\u3002']\n</code>\n</pre>\n", "senID": 5}, {"text": ["How should I do this so it handles I18N?", "Does this make sense in all languages?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I'm on python 2.5.4 if that matters."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]