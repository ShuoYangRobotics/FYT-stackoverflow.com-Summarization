[{"text": ["Python Eratosthenes Sieve Algorithm Optimization"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm attempting to implement the Sieve of Eratosthenes.", "The output seems to be correct (minus \"2\" that needs to be added) but if the input to the function is larger than 100k or so it seems to take an inordinate amount of time.", "What are ways that I can optimize this function?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def sieveErato(n):\n     numberList = range(3,n,2)\n\n     for item in range(int(math.sqrt(len(numberList)))):\n            divisor = numberList[item]\n            for thing in numberList:\n                    if(thing % divisor == 0) and thing != divisor:\n                            numberList.remove(thing)\n    return numberList\n</code>\n</pre>\n", "senID": 2}]