[{"text": ["How do I limit the number of active threads in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Am new to python and making some headway with threading - am doing some music file conversion and want to be able to utilize the multiple cores on my machine (one active conversion thread per core).  "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "threading", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n class EncodeThread(threading.Thread):\n    # this is hacked together a bit, but should give you an idea\n    def run(self):\n        decode = subprocess.Popen([\"flac\",\"--decode\",\"--stdout\",self.src],\n                            stdout=subprocess.PIPE)\n        encode = subprocess.Popen([\"lame\",\"--quiet\",\"-\",self.dest],\n                                stdin=decode.stdout)\n        encode.communicate()\n\n# some other code puts these threads with various src/dest pairs in a list\n\nfor proc in threads: # `threads` is my list of `threading.Thread` objects\n    proc.start()\n</code>\n</pre>\n", "senID": 2}, {"text": ["Everything works, all the files get encoded, bravo!", "... however, all the processes spawn immediately, yet I only want to run two at a time (one for each core).", "As soon as one is finished, I want it to move on to the next on the list until it is finished, then continue with the program."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["How do I do this?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["(I've looked at the thread pool and queue functions but I can't find a simple answer."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Edit: maybe I should add that each of my threads is using subprocess.Popen to run a separate command line decoder (flac) piped to stdout which is fed into a command line encoder (lame/mp3).  "], "childNum": 4, "tag": "p", "senID": 6, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "subprocess.Popen", "childNum": 0, "tag": "code", "childList": []}, {"text": "decoder", "childNum": 0, "tag": "em", "childList": []}, {"text": "encoder", "childNum": 0, "tag": "em", "childList": []}]}]