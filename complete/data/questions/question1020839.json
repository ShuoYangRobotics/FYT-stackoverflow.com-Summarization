[{"text": ["How to make a simple command-line chat in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I study network programming and would like to write a simple command-line chat in Python."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm wondering how make receving constant along with inputing available for sending at any time. "], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["As you see, this client can do only one job at a time:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from socket import *\n\nHOST = 'localhost'\nPORT = 21567\nBUFSIZE = 1024\nADDR = (HOST, PORT)\n\ntcpCliSock = socket(AF_INET, SOCK_STREAM)\ntcpCliSock.connect(ADDR)\n\nwhile 1:\n    data = raw_input('&gt; ')\n    if not data: break\n    tcpCliSock.send(data)\n    data = tcpCliSock.recv(BUFSIZE)\n    if not data: break\n    print data\n\ntcpCliSock.close()\n</code>\n</pre>\n", "senID": 4}, {"text": ["So if another client sends a message, this client will only receive it after sending a message too.", "I bet you understand me.", "I have googled for the matter and found out many interesting things such as asynchronous I/O, threading, non-blocking synchronization, concurrent programming and so on.", "I have also installed the twisted package.", "In brief, I've been learning all these things but yet haven't found what I was looking for.", "(Of course, I will keep trying and trying until I get to the point."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["So, my question is how make that?", "=)  "], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]