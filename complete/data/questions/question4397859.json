[{"text": ["Smart filter with python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Hi\nI need filter out all rows that don't contain symbols from huge \"necessary\" list, example code:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def any_it(iterable):\n      for element in iterable:\n          if element: return True\n      return False\n\nregexp = re.compile(r'fruit=([A-Z]+)')\nnecessary = ['YELLOW', 'GREEN', 'RED', ...] # huge list of 10 000 members\nf = open(\"huge_file\", \"r\") ## file with &gt; 100 000 lines\nlines = f.readlines()\nf.close()\n\n## File rows like, let's say:\n# 1 djhds fruit=REDSOMETHING sdkjld\n# 2 sdhfkjk fruit=GREENORANGE lkjfldk\n# 3 dskjldsj fruit=YELLOWDOG sldkfjsdl\n# 4 gfhfg fruit=REDSOMETHINGELSE fgdgdfg\n\nfiltered = (line for line in lines if any_it(regexp.findall(line)[0].startswith(x) for x in necessary))\n</code>\n</pre>\n", "senID": 2}, {"text": ["I have python 2.4, so I can't use built-in any().", "I wait a long time for this filtering, but is there some way to optimize it?", "For example row 1 and 4 contains \"RED..\" pattern, if we found that \"RED..\" pattern is ok, can we skip search in 10000-members list for row 4 the same pattern??", "Is there some another way to optimize filtering?", "Thank you.", "...edited...\nUPD: See real example data in comments to this post.", "I'm also interested in sorting by \"fruits\" the result.", "Thanks!", "...end edited..."], "childNum": 10, "tag": "p", "senID": 3, "childList": [{"text": "any()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 4, "childList": []}, {"text": "edited", "childNum": 0, "tag": "strong", "pos": 5, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 6, "childList": []}, {"text": "UPD:", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 7, "childList": []}, {"text": "end edited", "childNum": 0, "tag": "strong", "pos": 8, "childList": []}]}]