[{"text": ["Web scraping with Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm currently trying to scrape a website that has fairly poorly-formatted HTML (often missing closing tags, no use of classes or ids so it's incredibly difficult to go straight to the element you want, etc.).", "I've been using BeautifulSoup with some success so far but every once and a while (though quite rarely), I run into a page where BeautifulSoup creates the HTML tree a bit differently from (for example) Firefox or Webkit.", "While this is understandable as the formatting of the HTML leaves this ambiguous, if I were able to get the same parse tree as Firefox or Webkit produces I would be able to parse things much more easily.", "The problems are usually something like the site opens a &lt;b&gt; tag twice and when BeautifulSoup sees the second &lt;b&gt; tag, it immediately closes the first while Firefox and Webkit nest the &lt;b&gt; tags."], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "&lt;b&gt;", "childNum": 0, "tag": "code", "pos": 3, "childList": []}, {"text": "&lt;b&gt;", "childNum": 0, "tag": "code", "childList": []}, {"text": "&lt;b&gt;", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Is there a web scraping library for Python (or even any other language (I'm getting desperate)) that can reproduce the parse tree generated by Firefox or WebKit (or at least get closer than BeautifulSoup in cases of ambiguity)."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}]