[{"text": ["Python: how to know function return type and argument types?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["While I am aware of the duck-typing concept of Python, I sometimes struggle with the type of arguments of functions, or the type of the return value of the function."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Now, if I wrote the function myself, I DO know the types.", "But what if somebody wants to use and call my functions, how is he/she expected to know the types?", "I usually put type information in the function's docstring (like: \"...the id argument should be an integer...\" and \"... the function will return a (string, [integer]) tuple.", "\")"], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "\"...the id argument should be an integer...\"", "childNum": 0, "tag": "code", "pos": 2, "childList": []}, {"text": "\"... the function will return a (string, [integer]) tuple.\"", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["But is looking up the information in the docstring (and putting it there, as a coder) really the way it is supposed to be done? "], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Edit: While the majority of answers seem to direct towards \"yes, document!", "\" I feel this is not always very easy for 'complex' types.", "For example: how to describe concisely in a docstring that a function returns a list of tuples, with each tuple of the form (node_id, node_name, uptime_minutes) and that the elements are respectively a string, string and integer?", "The docstring PEP documentation doesn't give any guidelines on that.", "I guess the counterargument will be that in that case classes should be used, but I find python very flexible because it allows passing around these things using lists and tuples, i.e.", "without classes."], "childNum": 6, "tag": "p", "senID": 4, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 1, "childList": []}, {"text": "concisely", "childNum": 0, "tag": "em", "pos": 2, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 3, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "pos": 4, "childList": []}, {"text": "without", "childNum": 0, "tag": "em", "pos": 5, "childList": []}]}]