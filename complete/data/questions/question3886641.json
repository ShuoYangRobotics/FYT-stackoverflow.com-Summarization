[{"text": ["switch case in python doesn't work; need another pattern"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need a help with a code here, i wanted to implement the switch case pattern in python so like some tutorial said , i can use a dictionary for that but here is my problem:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n # type can be either create or update or .. \n  message = { 'create':msg(some_data),\n              'update':msg(other_data)\n              # can have more\n            }\n\n  return message(type)\n</code>\n</pre>\n", "senID": 2}, {"text": ["but it's not working for me because some_data or other_data can be None (it raise an error if it's none) and the msg function need to be simple (i don't want to put some condition in it)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["the problem here is that the function msg() is executed in each time for filling the dict\nunlike the switch case pattern who usually in other programming language don't execute the code in the case unless it's a match."], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "case", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["is there an other way to do this or i just need to do if elif ... "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Update:\n  thank you for all the replies, but actually it's more like this "], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Update:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n message = { 'create': \"blabla %s\" % msg(some_data),\n            'update': \"blabla %s\" % msg(other_data)\n            'delete': \"blabla %s\" % diff(other_data, some_data)\n           }\n</code>\n</pre>\n", "senID": 7}, {"text": ["so lambda don't work here and not the same function is called, so it's more like a real switch case that i need , and maybe i have to think on an other pattern ."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]