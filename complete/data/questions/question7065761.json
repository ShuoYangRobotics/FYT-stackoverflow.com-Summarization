[{"text": ["how to substract two datetime.time values in django template,and how to format a duration as hour,minutes"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["In a django app ,I am sending a list of Entry objects to the template.Each Entry object has a start, end times which are datetime.time values(from TimeFields on the form).While listing the Entry objects,I need to show the duration for each entry.Putting a duration field in model seemed to be reduntant since ,start and end times were already there"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "Entry", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "Entry", "childNum": 0, "tag": "code", "childList": []}, {"text": "TimeFields", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["model"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n class Entry(models.Model):\n    title = models.CharField(unique=True,max_length=50)\n    starttime=models.TimeField(null=True)\n    endtime=models.TimeField(null=True)\n...\n</code>\n</pre>\n", "senID": 3}, {"text": ["template"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n {% for entry in object_list %}\n&lt;tr&gt; \n  &lt;td&gt; {{entry.title}} &lt;/td&gt;\n  &lt;td&gt; {{entry.starttime}}&lt;/td&gt;\n  &lt;td&gt; {{entry.endtime}}&lt;/td&gt;\n  &lt;td&gt; want to show duration here &lt;/td&gt;\n{%endfor %}\n</code>\n</pre>\n", "senID": 5}, {"text": ["1.Is there any filter which can take two datetime.time values and calculate the duration in seconds.", "ie,"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "1.", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n given\n t1=datetime.time(2,30,50) and\n t2=datetime.time(3,00,50)\nshould show\n30 minutes\n</code>\n</pre>\n", "senID": 7}, {"text": ["2.Also,is there a filter,that can show a duration in given number of minutes as hour,minutes if the minutes value is greater than 60"], "childNum": 1, "tag": "p", "senID": 8, "childList": [{"text": "2.", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["ie,"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n if duration is 50 minutes ==&gt; 50 minutes\nif duration is 150 minutes ==&gt; 2 hours,30 minutes\n</code>\n</pre>\n", "senID": 10}, {"text": ["update"], "childNum": 1, "tag": "p", "senID": 11, "childList": [{"text": "update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def diff_in_time(start,end):\n    startdelta=datetime.timedelta(hours=start.hour,minutes=start.minute,seconds=start.second)\n    enddelta=datetime.timedelta(hours=end.hour,minutes=end.minute,seconds=end.second)\n    return (enddelta-startdelta).seconds/60\n</code>\n</pre>\n", "senID": 12}, {"text": ["when i tried with some sample time values ,it gave me the expected result"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"code": "<pre>\n<code>\n #start 11:35:00 pm\n#end   00:05:00 am\nstart= datetime.time(23,35,00)\nend = datetime.time(00,05,00)\nprint diff_in_time(start,end)\n\n==&gt; 30 minutes\n\n#start 00:35:00 am\n#end   01:35:00 am\nstart= datetime.time(00,35,00)\nend = datetime.time(01,35,00)\nprint diff_in_time(start,end)\n\n==&gt;60 minutes\n</code>\n</pre>\n", "senID": 14}]