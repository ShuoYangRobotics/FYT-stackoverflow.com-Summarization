[{"text": ["Finding a Value within a Range in a List of Tuple Values in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to get the Body Mass Index (BMI) classification for a BMI value that falls within a standard BMI range - for instance, if someone's BMI were 26.2, they'd be in the \"Overweight\" range."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I made a list of tuples of the values (see below), although of course I'm open to any other data structure.", "This would be easy to do with SQL's BETWEEN but I'd like to do it in pure Python, mostly because it means one fewer DB connections but also as an exercise in doing more in \"pure\" Python."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n bmi_ranges = []\nbmi_ranges.append((u'Underweight', u'Severe Thinness', 0, 15.99))\nbmi_ranges.append((u'Underweight', u'Moderate Thinness', 16.00, 16.99))\nbmi_ranges.append((u'Underweight', u'Mild Thinness', 17.00, 18.49))\nbmi_ranges.append((u'Normal Range', u'Normal Range', 18.50, 24.99))\nbmi_ranges.append((u'Overweight', u'Overweight', 25.00, 29.99))\nbmi_ranges.append((u'Obese', u'Obese Class I', 30.00, 34.99))\nbmi_ranges.append((u'Obese', u'Obese Class II', 35.00, 39.99))\nbmi_ranges.append((u'Obese', u'Obese Class III', 40.00, 1000.00))\n</code>\n</pre>\n", "senID": 3}, {"text": ["If a range is exactly in the list of tuples it's easy enough to just iterate through with a listcomp, but how do I find that a value is within the range of any of the other values?"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "exactly", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]