[{"text": ["Python decorator makes function forget that it belongs to a class"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am trying to write a decorator to do logging:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def logger(myFunc):\n    def new(*args, **keyargs):\n        print 'Entering %s.%s' % (myFunc.im_class.__name__, myFunc.__name__)\n        return myFunc(*args, **keyargs)\n\n    return new\n\nclass C(object):\n    @logger\n    def f():\n        pass\n\nC().f()\n</code>\n</pre>\n", "senID": 2}, {"text": ["I would like this to print:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n Entering C.f\n</code>\n</pre>\n", "senID": 4}, {"text": ["but instead I get this error message:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n AttributeError: 'function' object has no attribute 'im_class'\n</code>\n</pre>\n", "senID": 6}, {"text": ["Presumably this is something to do with the scope of 'myFunc' inside 'logger', but I've no idea what."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]