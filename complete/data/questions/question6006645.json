[{"text": ["Python equivalent of PHP's @"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there a Python equivalent of PHP's @?"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "@", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n @function_which_is_doomed_to_fail();\n</code>\n</pre>\n", "senID": 2}, {"text": ["I've always used this block:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n try:\n  foo()\nexcept:\n  pass\n</code>\n</pre>\n", "senID": 4}, {"text": ["But I know there has to be a better way."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "know", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["Does anyone know how I can Pythonicify that code?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I think adding some context to that code would be appropriate:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n for line in blkid:\n  line = line.strip()\n  partition = Partition()\n\n  try:\n    partition.identifier = re.search(r'^(/dev/[a-zA-Z0-9]+)', line).group(0)\n  except:\n    pass\n\n  try:\n    partition.label = re.search(r'LABEL=\"((?:[^\"\\\\]|\\\\.)*)\"', line).group(1)\n  except:\n    pass\n\n  try:\n    partition.uuid = re.search(r'UUID=\"((?:[^\"\\\\]|\\\\.)*)\"', line).group(1)\n  except:\n    pass\n\n  try:\n    partition.type = re.search(r'TYPE=\"((?:[^\"\\\\]|\\\\.)*)\"', line).group(1)\n  except:\n    pass\n\n  partitions.add(partition)\n</code>\n</pre>\n", "senID": 8}]