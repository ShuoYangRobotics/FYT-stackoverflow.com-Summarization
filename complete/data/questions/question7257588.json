[{"text": ["Why can't I use a list as a dict key in python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm a bit confused about what can/can't be used as a key for a python dict.  "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n dicked = {}\ndicked[None] = 'foo'     # None ok\ndicked[(1,3)] = 'baz'    # tuple ok\nimport sys\ndicked[sys] = 'bar'      # wow, even a module is ok !\ndicked[(1,[3])] = 'qux'  # oops, not allowed\n</code>\n</pre>\n", "senID": 2}, {"text": ["So a tuple is an immutable type but if I hide a list inside of it, then it can't be a key.. couldn't I just as easily hide a list inside a module?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I had some vague idea that that the key has to be \"hashable\" but I'm just going to admit my own ignorance about the technical details; I don't know what's really going on here.", "What would go wrong if you tried to use lists as keys, with the hash as, say, their memory location?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]