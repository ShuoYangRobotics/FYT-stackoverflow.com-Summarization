[{"text": ["Is str.replace(..).replace(..) ad nauseam a standard idiom in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["For instance, say I wanted a function to escape a string for use in HTML (as in Django's escape filter):"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "escape filter", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/ref/templates/builtins/#escape"}]}, {"code": "<pre>\n<code>\n def escape(string):\n        \"\"\"\n        Returns the given string with ampersands, quotes and angle \n        brackets encoded.\n        \"\"\"\n        return string.replace('&amp;', '&amp;amp;').replace('&lt;', '&amp;lt;').replace('&gt;', '&amp;gt;').replace(\"'\", '&amp;#39;').replace('\"', '&amp;quot;')\n</code>\n</pre>\n", "senID": 2}, {"text": ["This works, but it gets ugly quickly and appears to have poor algorithmic performance (in this example, the string is repeatedly traversed 5 times).", "What would be better is something like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def escape(string):\n        \"\"\"\n        Returns the given string with ampersands, quotes and angle \n        brackets encoded.\n        \"\"\"\n        # Note that ampersands must be escaped first; the rest can be escaped in \n        # any order.\n        return replace_multi(string.replace('&amp;', '&amp;amp;'),\n                             {'&lt;': '&amp;lt;', '&gt;': '&amp;gt;', \n                              \"'\": '&amp;#39;', '\"': '&amp;quot;'})\n</code>\n</pre>\n", "senID": 4}, {"text": ["Does such a function exist, or is the standard Python idiom to use what I wrote before?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]