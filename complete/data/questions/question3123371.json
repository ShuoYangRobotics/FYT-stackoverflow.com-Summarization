[{"text": ["Splitting a 16 bit int into two 8 bit ints in python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have to convert a given 16 bit integer into two 8 bit integers, which are then taken and used as output, where they are headed takes the two 8 bit integers and recombines them as 16 bit input (unfortunately out of my control).", "My solution works, but feels unclean.", "For the coarse number I am bit shifting the original number, and for the fine number I am looking at it modulo 256."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["So should I be doing floor division for the coarse number, or should I be taking the lowest 8 bits for the fine number (and if so how?", ")?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Or am I crazy and using two different methods to split the number is not a problem?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def convert(x):\n    ''' convert 16 bit int x into two 8 bit ints, coarse and fine.\n\n    '''\n    c = x &gt;&gt; 8  # The value of x shifted 8 bits to the right, creating coarse.\n    f = x % 256  # The remainder of x / 256, creating fine.\n    return c, f\n</code>\n</pre>\n", "senID": 4}]