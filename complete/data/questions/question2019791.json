[{"text": ["python list that matches everything"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I probably didn't ask correctly: I would like a list value that can match any list: the \"inverse\" of (None,)\nbut even with (None,) it will match item as None (which I don't want)"], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "(None,)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "(None,)", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["The point is I have a function working with: [x for x in my_list if x[field] not in filter_list]"], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "[x for x in my_list if x[field] not in filter_list]", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["and I would like to filter everything or nothing without making tests like:\nif filter_list==(None,): return [] and if filter_list==('*',): return my_list"], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "if filter_list==(None,): return []", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "if filter_list==('*',): return my_list", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["PS: I wanted to simplify my question leading to some errors (list identifier) or stupid thing [x for x in x] ;)"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "list", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "[x for x in x]", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Hi,"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["I need to do some filtering with list comprehension in python."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["if I do something like that:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n [x for x in list if x in (None,)]\n</code>\n</pre>\n", "senID": 8}, {"text": ["I get rid of all values, which is fine"], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["but I would like to have the same thing to match everything"], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["I can do something like:"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}, {"code": "<pre>\n<code>\n [x for x in list if x not in (None,)]\n</code>\n</pre>\n", "senID": 12}, {"text": ["but it won't be homogeneous with the rest"], "childNum": 0, "tag": "p", "senID": 13, "childList": []}, {"text": ["I tried some things but for example (True,) matches only  1"], "childNum": 2, "tag": "p", "senID": 14, "childList": [{"text": "(True,)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "1", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Note than the values to filter are numeric, but if you have something generic (like (None,) to match nothing), it would be great"], "childNum": 1, "tag": "p", "senID": 15, "childList": [{"text": "(None,)", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Thanks\nLouis"], "childNum": 0, "tag": "p", "senID": 16, "childList": []}]