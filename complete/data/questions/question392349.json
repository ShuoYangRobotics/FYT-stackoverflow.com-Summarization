[{"text": ["Modify bound variables of a closure in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Is there any way to modify the bound value of one of the variables inside a closure?", "Look at the example to understand it better."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def foo():\n\tvar_a = 2\n\tvar_b = 3\n\n\tdef _closure(x):\n\t\treturn var_a + var_b + x\n\n\treturn _closure\n\n\nlocalClosure = foo()\n\n# Local closure is now \"return 2 + 3 + x\"\na = localClosure(1) # 2 + 3 + 1 == 6\n\n# DO SOME MAGIC HERE TO TURN \"var_a\" of the closure into 0\n# ...but what magic? Is this even possible?\n\n# Local closure is now \"return 0 + 3 + x\"\nb = localClosure(1) # 0 + 3 +1 == 4\n</code>\n</pre>\n", "senID": 2}]