[{"text": ["Python: avoiding if condition for this code?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["for the following code "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n a =func()\nif a != None:\n    b.append(a)\n</code>\n</pre>\n", "senID": 2}, {"text": ["a can be assigned to None, is there a way to avoid the if statement and only use one line of code?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["original problem is the following"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import xml.etree.ElementTree as etree\n\nr = etree.parse(f).getroot()\nb = etree.Element('register',{})\n\na = r.find('tag_name') # a may get None if did not find it\nif a != None:\n    b.append(a)\n</code>\n</pre>\n", "senID": 5}, {"text": ["ok, I used all the answers and got this, personally I think it's the most complex python I have ever wrote so far, lol"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n NS_MAP = {\n    'spirit' : 'http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4',\n    'app' : 'http://www.app.com/SPIRIT-app'\n    }\n\nmp=etree.Element('MemoryProperty', {'version':'alpha'})\nmpt=etree.ElementTree(mp)\n\n\ndef copy_tags(tp, op, p, tn, ns='spirit'):\n    c =  p.find('{%s}%s'%(NS_MAP[ns],tn))\n    if c is not None:\n        (op == '&lt;-') and tp.append(c)\n        return c    \n\nfor reg in regs:\n    te = etree.Element('register',{})\n    copy_tags(te,'&lt;-',reg,'name')\n    copy_tags(te,'&lt;-',reg,'addressOffset')\n    copy_tags(te,'&lt;-',reg,'access')\n    (lambda e, t: copy_tags(te,'&lt;-',t,'usageConstraints',ns='app') if t is not None else None)(te, copy_tags(te,'|',reg,'vendorExtensions'))\n\n    mp.append(te)\n\nmpt.write('map_gen.xml')\n</code>\n</pre>\n", "senID": 7}]