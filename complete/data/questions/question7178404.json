[{"text": ["How to avoid using readlines()?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to deal with super large txt input files, and I usually use .readlines() to first read the whole file, and turn it into a list."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I know it's really memory-cost and can be quite slow, but I also need to make use of LIST characteristics to manipulate the specific lines, like below:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n #!/usr/bin/python\n\nimport os,sys\nimport glob\nimport commands\nimport gzip\n\npath= '/home/xxx/scratch/'\nfastqfiles1=glob.glob(path+'*_1.recal.fastq.gz')\n\nfor fastqfile1 in fastqfiles1:\n    filename = os.path.basename(fastqfile1)\n    job_id = filename.split('_')[0]\n    fastqfile2 = os.path.join(path+job_id+'_2.recal.fastq.gz') \n\n    newfastq1 = os.path.join(path+job_id+'_1.fastq.gz') \n    newfastq2 = os.path.join(path+job_id+'_2.fastq.gz') \n\n    l1= gzip.open(fastqfile1,'r').readlines()\n    l2= gzip.open(fastqfile2,'r').readlines()\n    f1=[]\n    f2=[]\n    for i in range(0,len(l1)):\n        if i % 4 == 3:\n           b1=[ord(x) for x in l1[i]]\n           ave1=sum(b1)/float(len(l1[i]))\n           b2=[ord(x) for x in str(l2[i])]\n           ave2=sum(b2)/float(len(l2[i]))\n           if (ave1 &gt;= 20 and ave2&gt;= 20):\n              f1.append(l1[i-3])\n              f1.append(l1[i-2])\n              f1.append(l1[i-1])\n              f1.append(l1[i])\n              f2.append(l2[i-3])\n              f2.append(l2[i-2])\n              f2.append(l2[i-1])\n              f2.append(l2[i])\n    output1=gzip.open(newfastq1,'w')\n    output1.writelines(f1)\n    output1.close()\n    output2=gzip.open(newfastq2,'w')\n    output2.writelines(f2)\n    output2.close()\n</code>\n</pre>\n", "senID": 3}, {"text": ["In general, I'm trying to read every 4th line of the whole text, but if the 4th line meets the desired condition, I'll append these 4 lines into the text.", "So can I avoid readlines() to achieve this?", "thx"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["EDIT:\nHi, actually I myself found a better way:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n import commands\n l1=commands.getoutput('zcat ' + fastqfile1).splitlines(True)\n l2=commands.getoutput('zcat ' + fastqfile2).splitlines(True)\n</code>\n</pre>\n", "senID": 6}, {"text": ["I think 'zcat' is super fast....", "It took around 15min to readlines, while only 1 minute to just zcat..."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]