[{"text": ["Unit Testing File Modifications"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["A common task in programs I've been working on lately is modifying a text file in some way.", "(Hey, I'm on Linux.", "Everything's a file.", "And I do large-scale system admin."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["But the file the code modifies may not exist on my desktop box.", "And I probably don't want to modify it if it IS on my desktop."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["I've read about unit testing in Dive Into Python, and it's pretty clear what I want to do when testing an app that converts decimal to Roman Numerals (the example in DintoP).", "The testing is nicely self-contained.", "You don't need to verify that the program PRINTS the right thing, you just need to verify that the functions are returning the right output to a given input."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["In my case, however, we need to test that the program is modifying its environment correctly.", "Here's what I've come up with:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["1) Create the \"original\" file in a standard location, perhaps /tmp."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["2) Run the function that modifies the file, passing it the path to the file in /tmp."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["3) Verify that the file in /tmp was changed correctly; pass/fail unit test accordingly."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["This seems kludgy to me.", "(Gets even kludgier if you want to verify that backup copies of the file are created properly, etc.", ")  Has anyone come up with a better way?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]