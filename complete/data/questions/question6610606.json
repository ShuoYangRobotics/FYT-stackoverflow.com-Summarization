[{"text": ["dict literal vs dict constructor - any preferred?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Using PyCharm, I noticed it offers to convert a dict literal .."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "dict literal", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n d = {\n    'one': '1',\n    'two': '2,\n}\n</code>\n</pre>\n", "senID": 2}, {"text": [".. into a dict constructor .."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "dict constructor", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n d = dict(one='1', two='2')\n</code>\n</pre>\n", "senID": 4}, {"text": [".. do these different approaches differ in some significant way?"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "do these different approaches differ in some significant way?", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["(While writing this question I noticed that using dict() it seems impossible to specify a numeric key .. d = {1: 'one', 2: 'two'} is possible, but, obviously, dict(1='one' ...) is not.", "Anything else?"], "childNum": 3, "tag": "p", "senID": 6, "childList": [{"text": "dict()", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "d = {1: 'one', 2: 'two'}", "childNum": 0, "tag": "code", "pos": -1, "childList": []}, {"text": "dict(1='one' ...)", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}]