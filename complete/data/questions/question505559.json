[{"text": ["Closures in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've been trying to learn Python, and while I'm enthusiastic about using closures in Python, I've been having trouble getting some code to work properly:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def memoize(fn):\n    def get(key):\n        return (False,)\n\n    def vset(key, value):\n        global get\n        oldget = get\n        def newget(ky):\n            if key==ky: return (True, value)\n            return oldget(ky)\n        get = newget\n\n    def mfun(*args):\n        cache = get(args)\n        if (cache[0]): return cache[1]\n\n        val = apply(fn, args)\n        vset(args, val)\n        return val\n\n    return mfun\n\ndef fib(x):\n    if x&lt;2: return x\n    return fib(x-1)+fib(x-2)\n\ndef fibm(x):\n    if x&lt;2: return x\n    return fibm(x-1)+fibm(x-2)\n\nfibm = memoize(fibm)\n</code>\n</pre>\n", "senID": 2}, {"text": ["Basically, what this is supposed to do is use closures to maintain the memoized state of the function.", "I realize there are probably many faster, easier to read, and in general more 'Pythonic' ways to implement this; however, my goal is to understand exactly how closures work in Python, and how they differ from Lisp, so I'm not interested in alternative solutions, just why my code doesn't work and what I can do (if anything) to fix it."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["The problem I'm running into is when I try to use fibm - Python insists that get isn't defined:"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "fibm", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "get", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n Python 2.6.1 (r261:67515, Feb  1 2009, 11:39:55) \n[GCC 4.0.1 (Apple Inc. build 5488)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import memoize\n&gt;&gt;&gt; memoize.fibm(35)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"memoize.py\", line 14, in mfun\n    cache = get(args)\nNameError: global name 'get' is not defined\n&gt;&gt;&gt;\n</code>\n</pre>\n", "senID": 5}, {"text": ["Seeing as I'm new to Python, I don't know if I've done something wrong, or if this is just a limitation of the language.", "I'm hoping it's the former.", ":-)"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]