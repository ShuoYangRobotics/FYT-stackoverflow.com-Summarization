[{"text": ["Python: How To copy function parameters into object's fields effortlessly?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Many times I have member functions that copy parameters into object's fields.", "For Example:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class NouveauRiches(object):\n  def __init__(self, car, mansion, jet, bling):\n    self.car = car\n    self.mansion = mansion\n    self.jet = jet\n    self.bling = bling\n</code>\n</pre>\n", "senID": 2}, {"text": ["Is there a python language construct that would make the above code less tedious?", "One could use *args:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n def __init__(self, *args):\n  self.car, self.mansion, self.jet, self.bling = args\n</code>\n</pre>\n", "senID": 4}, {"text": ["+: less tedious"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["-: function signature not revealing enough.", "need to dive into function code to know how to use function"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["-: does not raise a TypeError on call with wrong # of parameters (but does raise a ValueError)"], "childNum": 2, "tag": "p", "senID": 7, "childList": [{"text": "TypeError", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "ValueError", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["Any other ideas?", "(Whatever your suggestion, make sure the code calling the function does stays simple)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]