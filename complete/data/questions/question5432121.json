[{"text": ["Python method that is also a generator function?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm trying to build a method that also acts like a generator function, at a flip of a switch (want_gen below)."], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "want_gen", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Something like:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def optimize(x, want_gen):\n    # ... declaration and validation code\n    for i in range(100):\n        # estimate foo, bar, baz\n        # ... some code here\n\n        x = calculate_next_x(x, foo, bar, baz)\n\n        if want_gen:\n           yield x\n\n    if not want_gen:\n       return x\n</code>\n</pre>\n", "senID": 3}, {"text": ["But of course this doesn't work -- Python apparently doesn't allow yield and return in the same method, even though they cannot be executed simultaneously. "], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "yield", "childNum": 0, "tag": "code", "pos": 0, "childList": []}, {"text": "return", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["The code is quite involved, and refactoring the declaration and validation code doesn't make much sense (too many state variables -- I will end up with difficult-to-name helper routines of 7+ parameters, which is decidedly ugly).", "And of course, I'd like to avoid code duplication as much as possible."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Is there some code pattern that would make sense here to achieve the behaviour I want?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Why do I need that?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["I have a rather complicated and time-consuming optimization routine, and I'd like to get feedback about its current state during runtime (to display in e.g.", "GUI).", "The old behaviour needs to be there for backwards compatibility.", "Multithreading and messaging is too much work for too little additional benefit, especially when cross-platform operation is necessary."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Edit:\nPerhaps I should have mentioned that since each optimization step is rather lengthy (there are some numerical simulations involved as well), I'd like to be able to \"step in\" at a certain iteration and twiddle some parameters, or abort the whole business altogether.", "The generators seemed like a good idea, since I could launch another iteration at my discretion, fiddling in the meantime with some parameters."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}]