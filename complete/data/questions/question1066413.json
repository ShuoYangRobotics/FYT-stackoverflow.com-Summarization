[{"text": ["Eventdriven Webframework for Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Hy,\nis there any event-drive/event-based Webframework for Python?"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I mean something like NitroGen is for erlang."], "childNum": 1, "tag": "p", "senID": 2, "childList": [{"text": "NitroGen", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://www.nitrogenproject.com"}]}, {"text": ["You simply get some components you add to a website (like a button) and accociate a python-function to the \"onclick\"-handler of the button and it gets executed.", "It should generate all needed html and js core for me (just as nitrogen does) and support all needed components (like span, p, button, textbox, passwordfield...)\nLike the following code:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n from pyjamas.ui.RootPanel import RootPanel\nfrom pyjamas.ui.Button import Button\nfrom pyjamas import Window\n\ndef greet(fred):\n    Window.alert(\"Hello, AJAX!\")\n\nif __name__ == '__main__':\n    b = Button(\"Click me\", greet)\n    RootPanel().add(b)\n</code>\n</pre>\n", "senID": 4}, {"text": ["which gets this."], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "this", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyjs.org/examples/helloworld/output/Hello.html"}]}, {"text": ["The only framework I found is PyJamas but it is made for Web-Applications (so things like Webmailers) and not for Web-Pages (where google needs content to index and which should be readable without js, with limited functionality).", "So is there something similar like PyJamas or Nitrogen?"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "PyJamas", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://pyjs.org/"}]}, {"text": ["Thanks!"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]