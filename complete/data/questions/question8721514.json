[{"text": ["How to use regex to find functions call themself?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a code.py:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "code.py", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n def funA():\n    print('A')\n    funA()\n\ndef funB():\n    print('B')\n\ndef funC():\n    print('C')\n    funB()\n    funC()\n</code>\n</pre>\n", "senID": 2}, {"text": ["I want to find all functions call themself:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n funA\nfunC\n</code>\n</pre>\n", "senID": 4}, {"text": ["How to write the regex? "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "regex", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"text": ["Constraint:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Constraint:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 3, "lis": [{"text": "All function call is normal: ", "tag": "none", "senID": 7}, {"text": "No obfuscated ways(such as ", "tag": "none", "senID": 8}, {"text": "No indirect recursion", "tag": "none", "senID": 9}]}]