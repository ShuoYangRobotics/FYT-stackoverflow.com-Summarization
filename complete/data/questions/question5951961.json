[{"text": ["How can I remove all instances of a single set item in set A from set B?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["As you can see below, when I open test.txt and put the words into a set, the difference of the set with the common_words set is returned.", "However, it is only removing a single instance of the words in the common_words set rather than all occurrences of them.", "How can I achieve this?", "I want to remove ALL instances of items in common_words from title_words"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n from string import punctuation\nfrom operator import itemgetter\n\nN = 10\nwords = {}\n\nlinestring = open('test.txt', 'r').read()\n\n//set A, want to remove these from set B\ncommon_words = set((\"if\", \"but\", \"and\", \"the\", \"when\", \"use\", \"to\", \"for\"))\n\ntitle = linestring\n\n//set B, want to remove ALL words in set A from this set and store in keywords\ntitle_words = set(title.lower().split())\n\nkeywords = title_words.difference(common_words)\n\nwords_gen = (word.strip(punctuation).lower() for line in keywords\n                                             for word in line.split())\n\nfor word in words_gen:\n    words[word] = words.get(word, 0) + 1\n\ntop_words = sorted(words.iteritems(), key=itemgetter(1), reverse=True)[:N]\n\nfor word, frequency in top_words:\n    print \"%s: %d\" % (word, frequency)\n</code>\n</pre>\n", "senID": 2}]