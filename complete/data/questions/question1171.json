[{"text": ["What is the most efficient graph data structure in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to be able to manipulate a large (10^7 nodes) graph in python.", "The data corresponding to each node/edge is minimal, say, a small number of strings.", "What is the most efficient, in terms of memory and speed, way of doing this? "], "childNum": 2, "tag": "p", "senID": 1, "childList": [{"text": "memory and speed", "childNum": 1, "tag": "strong", "pos": 2, "childList": [{"text": "memory and speed", "tag": "em"}]}, {"text": "memory and speed", "childNum": 0, "tag": "em", "childList": []}]}, {"text": ["A dict of dicts is more flexible and simpler to implement, but I intuitively expect a list of lists to be faster.", "The list option would also require that I keep the data separate from the structure, while dicts would allow for something of the sort:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["graph[I][J][\"Property\"]=\"value\""], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["What would you suggest?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Yes, I should have been a bit clearer on what I mean by efficiency.", "In this particular case I mean it in terms of random access retrieval."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Loading the data in to memory isn't a huge problem.", "That's done once and for all.", "The time consuming part is visiting the nodes so I can extract the information and measure the metrics I'm interested in."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I hadn't considered making each node a class (properties are the same for all nodes) but it seems like that would add an extra layer of overhead?", "I was hoping someone would have some direct experience with a similar case that they could share.", "After all, graphs are one of the most common abstractions in CS."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]