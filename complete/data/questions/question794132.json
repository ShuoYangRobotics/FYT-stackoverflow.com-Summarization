[{"text": ["Returning an object vs returning a tuple"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I am developing in python a file class that can read and write a file, containing a list of xyz coordinates.", "In my program, I already have a Coord3D class to hold xyz coordinates. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["My question is relative to the design of a getCoordinate(index) method.", "Should I return a tuple of floats, or a Coord3D object?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["In the first case, I get very low coupling, but then I will probably have to instantiate a Coord3D object with the obtained values anyway, although outside of the file class.", "In the second case, I will have the file class tightly coupled with the Coord3D class."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Please note that I think there's not a huge difference between the two solutions, but I would like to read your answer and the reason behind it."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"tag": "hr", "senID": 5}, {"text": ["Edit: to recap the answers I got until now, it looks like there's no clearcut choice.", "It has been said (appropriately) that python is not Java, and you don't need a specialized class for everything just because you need it by language architecture.", "In my case, however, I have the following conditions:"], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "Edit", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["On the other hand, using a tuple has the following advantages:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["further comments very welcome!"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}]