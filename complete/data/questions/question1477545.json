[{"text": ["How was the syntax chosen for static methods in Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've been working with Python for a while and I find the syntax for declaring methods as static to be peculiar."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["A regular method would be declared:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n def mymethod(self, params)\n   ...\n   return\n</code>\n</pre>\n", "senID": 3}, {"text": ["A static method is declared:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n def mystaticethod(params)\n   ...\n   return\nmystaticmethod = staticmethod(mystaticmethod)\n</code>\n</pre>\n", "senID": 5}, {"text": ["If you don't add the static method line, the compiler complains about self missing."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["This is a very complex way of doing something very simple that in other languages simply use a keyword and a declaration grammar to.", "Can anyone tell me about the evolution of this syntax?", "Is this merely because classes were added into the existing language? "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Since I can move the staticmethod line to later in the class, it also suggests that the \nparser is working extra hard on bookkeeping."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Note that I'm aware of the decorator syntax that was added later, I'm interested to know how the original syntax came about from a language design perspective.", "The only think I can think of is that the staticmethod application invokes an operation that transforms the function object into a static method. "], "childNum": 0, "tag": "p", "senID": 9, "childList": []}]