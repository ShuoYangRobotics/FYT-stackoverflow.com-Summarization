[{"text": ["Change Django Templates Based on User-Agent"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I've made a Django site, but I've drank the Koolaid and I want to make an IPhone version.", "After putting much thought into I've come up with two options:"], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "IPhone", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}, {"text": ["I'd really prefer option #2, however; I have some reservations, mainly because the Django documentation discourages changing settings on the fly.", "I found a snippet that would do the what I'd like.", "My main issue is having it as seamless as possible, I'd like it to be automagic and transparent to the user."], "childNum": 2, "tag": "p", "senID": 2, "childList": [{"text": "discourages changing settings on the fly", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.djangoproject.com/en/dev/topics/settings/"}, {"text": "snippet", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.djangosnippets.org/snippets/1098/"}]}, {"text": ["Has anyone else come across the same issue?", "Would anyone care to share about how they've tackled making IPhone versions of Django sites?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["Update"], "childNum": 1, "tag": "p", "senID": 4, "childList": [{"text": "Update", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I went with a combination of middleware and tweaking the template call."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["For the middleware, I used minidetector.", "I like it because it detects a plethora of mobile user-agents.", "All I have to do is check request.mobile in my views."], "childNum": 2, "tag": "p", "senID": 6, "childList": [{"text": "minidetector", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://code.google.com/p/minidetector/"}, {"text": "plethora", "tag": "a", "pos": 1, "childList": [], "childNum": 0, "href": "http://www.youtube.com/watch?v=b6E682C7Jj4"}]}, {"text": ["For the template call tweak:"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"code": "<pre>\n<code>\n def check_mobile(request, template_name):\n     if request.mobile:\n         return 'mobile-%s'%template_name\n     return template_name\n</code>\n</pre>\n", "senID": 8}, {"text": ["I use this for any view that I know I have both versions."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"text": ["TODO:"], "childNum": 1, "tag": "p", "senID": 10, "childList": [{"text": "TODO:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"tag": "ul", "num": 2, "lis": [{"text": "Figure out how to access ", "tag": "none", "senID": 11}, {"text": "Using the previous automagically fallback to the regular template if no mobile version exists.", "tag": "none", "senID": 12}]}]