[{"text": ["Python: Should I use a class or dictionary?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a class that contains only fields and no methods, like this:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n class Request(object):\n\n    def __init__(self, environ):\n        self.environ = environ\n        self.request_method = environ.get('REQUEST_METHOD', None)\n        self.url_scheme = environ.get('wsgi.url_scheme', None)\n        self.request_uri = wsgiref.util.request_uri(environ)\n        self.path = environ.get('PATH_INFO', None)\n        # ...\n</code>\n</pre>\n", "senID": 2}, {"text": ["This could easily be translated to a dict.", "The class is more flexible for future additions and could be fast with __slots__.", "So would there be a benefit of using a dict instead?", "Would a dict be faster than a class?", "And faster than a class with slots?"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "__slots__", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}]