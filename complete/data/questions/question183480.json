[{"text": ["Is this the best way to get unique version of filename w/ Python?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Still 'diving in' to Python, and want to make sure I'm not overlooking something.", "I wrote a script that extracts files from several zip files, and saves the extracted files together in one directory.", "To prevent duplicate filenames from being over-written, I wrote this little function - and I'm just wondering if there is a better way to do this?", "Thanks!"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def unique_filename(file_name):\ncounter = 1\nfile_name_parts = os.path.splitext(file_name) # returns ('/path/file', '.ext')\nwhile os.path.isfile(file_name): \n    file_name = file_name_parts[0] + '_' + str(counter) + file_name_parts[1]\n    counter += 1\nreturn file_name\n</code>\n</pre>\n", "senID": 2}, {"text": ["I really do require the files to be in a single directory, and numbering duplicates is definitely acceptable in my case, so I'm not looking for a more robust method (tho' I suppose any pointers are welcome), but just to make sure that what this accomplishes is getting done the right way."], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "do", "childNum": 0, "tag": "em", "pos": 0, "childList": []}]}]