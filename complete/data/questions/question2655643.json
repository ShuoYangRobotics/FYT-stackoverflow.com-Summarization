[{"text": ["ungetc in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Some file read (readlines()) functions in Python\ncopy the file contents to memory (as a list)  "], "childNum": 1, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"text": ["I need to process a file that's too large to\nbe copied in memory and as such need to use\na file pointer (to access the file one byte\nat a time) -- as in C getc().  "], "childNum": 3, "tag": "p", "senID": 2, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["The additional requirement I have is that\nI'd like to rewind the file pointer to previous\nbytes like in C ungetc().  "], "childNum": 2, "tag": "p", "senID": 3, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}]}, {"text": ["Is there a way to do this in Python?  "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Also, in Python, I can read one line at a\ntime with readline()  "], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}, {"text": ["Is there a way to read the previous line\ngoing backward?  "], "childNum": 1, "tag": "p", "senID": 6, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}]}]