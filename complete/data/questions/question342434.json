[{"text": ["Python logging in Django"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I'm developing a Django app, and I'm trying to use Python's logging module for error/trace logging.", "Ideally I'd like to have different loggers configured for different areas of the site.", "So far I've got all of this working, but one thing has me scratching my head."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I have the root logger going to sys.stderr, and I have configured another logger to write to a file.", "This is in my settings.py file:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n sviewlog = logging.getLogger('MyApp.views.scans')\nview_log_handler = logging.FileHandler('C:\\\\MyApp\\\\logs\\\\scan_log.log')\nview_log_handler.setLevel(logging.INFO)\nview_log_handler.setFormatter(logging.Formatter('%(asctime)s %(name)-12s %(levelname)-8s %(message)s'))\nsviewlog.addHandler(view_log_handler)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Seems pretty simple.", "Here's the problem, though: whatever I write to the sviewlog gets written to the log file twice.", "The root logger only prints it once.", "It's like addHandler() is being called twice.", "And when I put my code through a debugger, this is exactly what I see.", "The code in settings.py is getting executed twice, so two FileHandlers are created and added to the same logger instance.", "But why?", "And how do I get around this?"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Can anyone tell me what's going on here?", "I've tried moving the sviewlog logger/handler instantiation code to the file where it's used (since that actually seems like the appropriate place to me), but I have the same problem there.", "Most of the examples I've seen online use only the root logger, and I'd prefer to have multiple loggers."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]