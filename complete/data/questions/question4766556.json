[{"text": ["Repeat Python function call on exception?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Hey everybody I'm working on a data scraping project and I'm looking for a clean way to repeat a function call if an exception is raised."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["Pseudo-code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n try:\n    myfunc(x)\nexcept myError:\n    ###try to call myfunc(x) again Y number of times, \n        until success(no exceptions raised) otherwise raise myError2\n</code>\n</pre>\n", "senID": 3}, {"text": ["I realize this isn't best practice at all but I'm working through a number of different code/network layers that aren't reliable and I can't realistically debug them."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Right now I'm accomplishing this with a huge set of try\\except blocks and it's making my eyes bleed."], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Elegant ideas anyone?"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}]