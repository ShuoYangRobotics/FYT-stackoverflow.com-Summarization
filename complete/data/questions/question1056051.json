[{"text": ["How do you call Python code from C code?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to extend a large C project with some new functionality, but I really want to write it in Python.", "Basically, I want to call Python code from C code.", "However, Python->C wrappers like SWIG allow for the OPPOSITE, that is writing C modules and calling C from Python."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm considering an approach involving IPC or RPC (I don't mind having multiple processes); that is, having my pure-Python component run in a separate process (on the same machine) and having my C project communicate with it by writing/reading from a socket (or unix pipe).", "my python component can read/write to socket to communicate.", "Is that a reasonable approach?", "Is there something better?", "Like some special RPC mechanism?"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["Thanks for the answer so far - however, i'd like to focus on IPC-based approaches since I want to have my Python program in a separate process as my C program.", "I don't want to embed a Python interpreter.", "Thanks!"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "however, i'd like to focus on IPC-based approaches since I want to have my Python program in a separate process as my C program.  I don't want to embed a Python interpreter.  Thanks!", "childNum": 0, "tag": "strong", "pos": -1, "childList": []}]}]