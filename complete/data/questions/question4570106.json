[{"text": ["How to generate an alternating range?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I need to search for an item in a list around a given index with in a given radius.", "Currently I use this function to generate alternating offsets for the search:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def generateSearchIndizes(radius):\n    for i in range(1, radius + 1):\n        yield i\n        yield -i\n</code>\n</pre>\n", "senID": 2}, {"text": ["The code that does the search looks something like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n for i in generateSearchIndizes():\n    if pred(myList[baseIndex + i]):\n        result = myList[baseIndex + i]\n        break # terminate search when first item is found\n</code>\n</pre>\n", "senID": 4}, {"text": ["My question is, is there a more elegant way to generate the search indizes, maybe without defining a special function?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}]