[{"text": ["Pythonic loops--how to get multiple elements while iterating a list"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I want to iterate over my list and do something with multiple elements, not just one element.", "I want to take the first element and some elements after it (they could be sequential or maybe the 3rd element from the one returned)."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n l = ['a', 'b', 'c', 'd', 'e']\n  for items in l:\n    print items[:3]\n</code>\n</pre>\n", "senID": 2}, {"text": ["The output should be:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n ['a', 'b', 'c'], ['b', 'c', 'd'], ['c', 'd', 'e']\n</code>\n</pre>\n", "senID": 4}, {"text": ["There are a lot of good answers, what if want to skip elements?", "Say, get an element, skip the next element, and get the 3rd element?"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["Output:"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"code": "<pre>\n<code>\n ('a', 'c'), ('b','d'), ('c', 'e')\n</code>\n</pre>\n", "senID": 7}, {"text": ["I guess enumerate is the best way to handle this?"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Iterating through lists so simple and elegant I hoped similar syntax would allow you to use it inside a for loop on the element itself and not use range or enumerate."], "childNum": 0, "tag": "p", "senID": 9, "childList": []}, {"code": "<pre>\n<code>\n l = ['a', 'b', 'c', 'd', 'e']\n  for items in l:\n    print (items[0], items[2])\n</code>\n</pre>\n", "senID": 10}, {"text": ["(Yes, I know this code would give different results if the original list was a list containing lists.", "[ [1, 2, 3], [4, 5, 6], [7, 8, 9] ] would return [1, 3], [4, 6], [7, 9])"], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]