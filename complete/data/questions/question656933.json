[{"text": ["Communicating with a running python daemon"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I wrote a small Python application that runs as a daemon.", "It utilizes threading and queues. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"text": ["I'm looking for general approaches to altering this application so that I can communicate with it while it's running.", "Mostly I'd like to be able to monitor its health."], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"text": ["In a nutshell, I'd like to be able to do something like this:"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n python application.py start  # launches the daemon\n</code>\n</pre>\n", "senID": 4}, {"text": ["Later, I'd like to be able to come along and do something like:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n python application.py check_queue_size  # return info from the daemonized process\n</code>\n</pre>\n", "senID": 6}, {"text": ["To be clear, I don't have any problem implementing the Django-inspired syntax.", "What I don't have any idea how to do is to send signals to the daemonized process (start), or how to write the daemon to handle and respond to such signals."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Like I said above, I'm looking for general approaches.", "The only one I can see right now is telling the daemon constantly log everything that might be needed to a file, but I hope there's a less messy way to go about it."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["UPDATE: Wow, a lot of great answers.", "Thanks so much.", "I think I'll look at both Pyro and the web.py/Werkzeug approaches, since Twisted is a little more than I want to bite off at this point.", "The next conceptual challenge, I suppose, is how to go about talking to my worker threads without hanging them up."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "UPDATE:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["Thanks again."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}]