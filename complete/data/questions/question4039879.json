[{"text": ["Best way to find the months between two dates (in python)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have the need to be able to accurately find the months between two dates in python.", "I have a solution that works but its not very good (as in elegant) or fast. "], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n dateRange = [datetime.strptime(dateRanges[0], \"%Y-%m-%d\"), datetime.strptime(dateRanges[1], \"%Y-%m-%d\")]\nmonths = [] \n\ntmpTime = dateRange[0]\noneWeek = timedelta(weeks=1)\ntmpTime = tmpTime.replace(day=1)\ndateRange[0] = tmpTime\ndateRange[1] = dateRange[1].replace(day=1)\nlastMonth = tmpTime.month\nmonths.append(tmpTime)\nwhile tmpTime &lt; dateRange[1]:\n    if lastMonth != 12:\n        while tmpTime.month &lt;= lastMonth:\n            tmpTime += oneWeek\n        tmpTime = tmpTime.replace(day=1)\n        months.append(tmpTime)\n        lastMonth = tmpTime.month\n\n    else:\n        while tmpTime.month &gt;= lastMonth:\n            tmpTime += oneWeek\n        tmpTime = tmpTime.replace(day=1)\n        months.append(tmpTime)\n        lastMonth = tmpTime.month\n</code>\n</pre>\n", "senID": 2}, {"text": ["So just to explain, what I'm doing here is taking the two dates and converting them from iso format into python datetime objects.", "Then I loop through adding a week to the start datetime object and check if the numerical value of the month is greater (unless the month is December then it checks if the date is less), If the value is greater I append it to the list of months and keep looping through until I get to my end date."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["It works perfectly it just doesn't seem like a good way of doing it..."], "childNum": 0, "tag": "p", "senID": 4, "childList": []}]