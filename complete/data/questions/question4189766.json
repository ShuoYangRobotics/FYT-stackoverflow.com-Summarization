[{"text": ["Python: range with step of type float"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["The documentation basically says that range must behave exactly as this implementation (for positive step):"], "childNum": 3, "tag": "p", "senID": 1, "childList": [{"text": "The documentation", "tag": "a", "pos": 0, "childList": [], "childNum": 0, "href": "http://docs.python.org/library/functions.html#range"}, {"text": "range", "childNum": 0, "tag": "code", "childList": []}, {"text": "step", "childNum": 0, "tag": "code", "childList": []}]}, {"code": "<pre>\n<code>\n def range(start, stop, step):\n  x = start\n  while True:\n    if x &gt;= stop: return\n    yield x\n    x += step\n</code>\n</pre>\n", "senID": 2}, {"text": ["It also says that its arguments must be integers.", "Why is that?", "Isn't that definition also perfectly valid if step is a float?"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["In my case, I am esp.", "needing a range function which accepts a float type as its step argument.", "Is there any in Python or do I need to implement my own?"], "childNum": 2, "tag": "p", "senID": 4, "childList": [{"text": "range", "childNum": 0, "tag": "code", "pos": 1, "childList": []}, {"text": "step", "childNum": 0, "tag": "code", "pos": -1, "childList": []}]}, {"text": ["More specific: How would I translate this C code directly to Python in a nice way (i.e.", "not just doing it via a while-loop manually):"], "childNum": 1, "tag": "p", "senID": 5, "childList": [{"text": "while", "childNum": 0, "tag": "code", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n for(float x = 0; x &lt; 10; x += 0.5f) { /* ... */ }\n</code>\n</pre>\n", "senID": 6}]