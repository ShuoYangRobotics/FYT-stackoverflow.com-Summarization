[{"text": ["How do I reverse an itertools.chain object?"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["My function creates a chain of generators:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n def bar(num):\n    import itertools\n    some_sequence = (x*1.5 for x in range(num))\n    some_other_sequence = (x*2.6 for x in range(num))\n    chained = itertools.chain(some_sequence, some_other_sequence)\n    return chained\n</code>\n</pre>\n", "senID": 2}, {"text": ["My function sometimes needs to return chained in reversed order.", "Conceptually, the following is what I would like to be able to do:"], "childNum": 1, "tag": "p", "senID": 3, "childList": [{"text": "chained", "childNum": 0, "tag": "code", "pos": 0, "childList": []}]}, {"code": "<pre>\n<code>\n if num &lt; 0:\n    return reversed(chained)\nreturn chained\n</code>\n</pre>\n", "senID": 4}, {"text": ["Unfortunately:"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n &gt;&gt;&gt; reversed(chained)\nTypeError: argument to reversed() must be a sequence\n</code>\n</pre>\n", "senID": 6}, {"text": ["What are my options?"], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["This is in some realtime graphic rendering code so I don't want to make it too complicated/slow."], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["EDIT:\nWhen I first posed this question I hadn't thought about the reversibility of generators.", "As many have pointed out, generators can't be reversed."], "childNum": 1, "tag": "p", "senID": 9, "childList": [{"text": "EDIT", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}]}, {"text": ["I do in fact want to reverse the flattened contents of the chain; not just the order of the generators."], "childNum": 0, "tag": "p", "senID": 10, "childList": []}, {"text": ["Based on the responses, there is no single call I can use to reverse an itertools.chain, so I think the only solution here is to use a list, at least for the reverse case, and perhaps for both."], "childNum": 0, "tag": "p", "senID": 11, "childList": []}]