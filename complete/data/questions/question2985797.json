[{"text": ["Tips for making a fraction calculator code more optimized (faster and using less memory)"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["Basicly, what I need for the program to do is to act a as simple fraction calculator (for addition, subtraction, multiplication and division) for the a single line of input, for example:\n-input: 1/7 + 3/5\n-output: 26/35"], "childNum": 4, "tag": "p", "senID": 1, "childList": [{"text": "", "childNum": 0, "tag": "br", "pos": 0, "childList": []}, {"text": "1/7 + 3/5", "childNum": 0, "tag": "code", "childList": []}, {"text": "", "childNum": 0, "tag": "br", "childList": []}, {"text": "26/35", "childNum": 0, "tag": "code", "childList": []}]}, {"text": ["My initial code:"], "childNum": 0, "tag": "p", "senID": 2, "childList": []}, {"code": "<pre>\n<code>\n import sys\n\ndef euclid(numA, numB):\n    while numB != 0:\n        numRem = numA % numB\n        numA = numB\n        numB = numRem\n    return numA\n\nfor wejscie in sys.stdin:\n    wyjscie = wejscie.split(' ')\n    a, b = [int(x) for x in wyjscie[0].split(\"/\")]\n    c, d = [int(x) for x in wyjscie[2].split(\"/\")]\n    if wyjscie[1] == '+':\n        licz = a * d + b * c\n        mian= b * d\n        nwd = euclid(licz, mian)\n        konA = licz/nwd\n        konB = mian/nwd\n        wynik = str(konA) + '/' + str(konB)\n        print(wynik)\n    elif wyjscie[1] == '-':\n        licz= a * d - b * c\n        mian= b * d\n        nwd = euclid(licz, mian)\n        konA = licz/nwd\n        konB = mian/nwd\n        wynik = str(konA) + '/' + str(konB)\n        print(wynik)\n    elif wyjscie[1] == '*':\n        licz= a * c\n        mian= b * d\n        nwd = euclid(licz, mian)\n        konA = licz/nwd\n        konB = mian/nwd\n        wynik = str(konA) + '/' + str(konB)\n        print(wynik)\n    else:\n        licz= a * d\n        mian= b * c\n        nwd = euclid(licz, mian)\n        konA = licz/nwd\n        konB = mian/nwd\n        wynik = str(konA) + '/' + str(konB)\n        print(wynik)\n</code>\n</pre>\n", "senID": 3}, {"text": ["Which I reduced to:"], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"code": "<pre>\n<code>\n import sys\n\ndef euclid(numA, numB):\n    while numB != 0:\n        numRem = numA % numB\n        numA = numB\n        numB = numRem\n    return numA\n\nfor wejscie in sys.stdin:\n    wyjscie = wejscie.split(' ')\n    a, b = [int(x) for x in wyjscie[0].split(\"/\")]\n    c, d = [int(x) for x in wyjscie[2].split(\"/\")]\n    if wyjscie[1] == '+':\n        print(\"/\".join([str((a * d + b * c)/euclid(a * d + b * c, b * d)),str((b * d)/euclid(a * d + b * c, b * d))]))\n    elif wyjscie[1] == '-':\n        print(\"/\".join([str((a * d - b * c)/euclid(a * d - b * c, b * d)),str((b * d)/euclid(a * d - b * c, b * d))]))\n    elif wyjscie[1] == '*':\n        print(\"/\".join([str((a * c)/euclid(a * c, b * d)),str((b * d)/euclid(a * c, b * d))]))\n    else:\n        print(\"/\".join([str((a * d)/euclid(a * d, b * c)),str((b * c)/euclid(a * d, b * c))]))\n</code>\n</pre>\n", "senID": 5}, {"text": ["Any advice on how to improve this futher is welcome."], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["Edit: one more thing that I forgot to mention - the code can not make use of any libraries apart from sys."], "childNum": 0, "tag": "p", "senID": 7, "childList": []}]