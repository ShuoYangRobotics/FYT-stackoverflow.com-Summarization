[{"text": ["Script to convert Huge Three column table into table"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["I have a set of data (csv files) in the following 3 column format:"], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n A, B, C\n3277,4733,54.1 \n3278,4741,51.0 \n3278,4750,28.4 \n3278,4768,36.0 \n3278,4776,50.1 \n3278,4784,51.4 \n3279,4792,82.6 \n3279,4806,78.2 \n3279,4814,36.4\n</code>\n</pre>\n", "senID": 2}, {"text": ["And I need to get a three-way contingency table like: (sorry, this doesn't look completely good)"], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"code": "<pre>\n<code>\n A /B     4733      4741      4750      4768      4776      4784      4792      4806      4814\n3277   C 54.1                                                \n3278                 51      28.4        36      50.1      51.4                  \n3279                                                                 82.6      78.2      36.4\n</code>\n</pre>\n", "senID": 4}, {"text": ["Similarly to an excel \"pivot table\", OpenOffice data pilot, or R \"table(x,y,z)\" "], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"text": ["The problem is that my dataset is HUGE (more than 500,000 total rows, with about 400 different factors in A and B.", "(OOo, MSO and R limits prevent from achieving this)"], "childNum": 0, "tag": "p", "senID": 6, "childList": []}, {"text": ["I am sure a Python script could be used to create such a table.", "both A and B are numbers (but can be treated as strings). "], "childNum": 0, "tag": "p", "senID": 7, "childList": []}, {"text": ["Anyone has dealt with this?", "(pseudocode or code in C or Java is also welcomed ... but I prefer python as it is faster to implement :)"], "childNum": 0, "tag": "p", "senID": 8, "childList": []}, {"text": ["Edit: \nAlmost have it, thanks to John Machin.", "The following Python script almost provides what I am looking for, however, when writing the output file I can see that the values in the \"headers\" I am writing (taken from the first row) do not correspond to the other rows. "], "childNum": 2, "tag": "p", "senID": 9, "childList": [{"text": "Edit:", "childNum": 0, "tag": "strong", "pos": 0, "childList": []}, {"text": "almost", "childNum": 0, "tag": "em", "pos": 1, "childList": []}]}, {"code": "<pre>\n<code>\n from collections import defaultdict as dd\nd = dd(lambda: dd(float))\n\ninput =  open(\"input.txt\")\noutput = open(\"output.txt\",\"w\")\nwhile 1:\n    line = input.readline()\n    if not line:\n        break\n    line = line.strip('\\n').strip('\\r')\n    splitLine = line.split(',')\n    if (len(splitLine) &lt;3):\n        break\n    d[splitLine[0]][splitLine[1]] = splitLine[2]\n\noutput.write(\"\\t\")\nfor k,v in d.items()[0][1].items():\n    output.write(str(k)+\"\\t\")\noutput.write(\"\\n\")\nfor k,v in d.items():\n    output.write(k+\"\\t\")\n    for k2,v2 in v.items():\n        output.write(str(v2)+\"\\t\")\n    output.write(\"\\n\")\n</code>\n</pre>\n", "senID": 10}]