[{"text": ["Iterating through a range of dates in Python"], "childNum": 0, "tag": "h2", "senID": 0, "childList": []}, {"text": ["This is working fine, but I'm looking for any feedback on how to do it better.", "Right now I think it's better than nested loops, but it starts to get Perl-one-linerish when you have a generator in a list comprehension.", "Any suggestions are welcome."], "childNum": 0, "tag": "p", "senID": 1, "childList": []}, {"code": "<pre>\n<code>\n day_count = (end_date - start_date).days + 1\nfor single_date in [d for d in (start_date + timedelta(n) for n in range(day_count)) if d &lt;= end_date]:\n    print strftime(\"%Y-%m-%d\", single_date.timetuple())\n</code>\n</pre>\n", "senID": 2}, {"text": ["Notes: \n    I'm not actually using this to print; that's just for demo purposes.", "The variables start_date and end_date are datetime.date objects, because I don't need the timestamps (they're going to be used to generate a report)."], "childNum": 0, "tag": "p", "senID": 3, "childList": []}, {"text": ["I checked the StackOverflow questions which were similar before posting this, but none were exactly the same. "], "childNum": 0, "tag": "p", "senID": 4, "childList": []}, {"text": ["Sample Output (for a start date of 2009-05-30 and an end date of 2009-06-09):"], "childNum": 0, "tag": "p", "senID": 5, "childList": []}, {"code": "<pre>\n<code>\n 2009-05-30\n2009-05-31\n2009-06-01\n2009-06-02\n2009-06-03\n2009-06-04\n2009-06-05\n2009-06-06\n2009-06-07\n2009-06-08\n2009-06-09\n</code>\n</pre>\n", "senID": 6}]