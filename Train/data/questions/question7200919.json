[{"text": ["Best practice to detect two simultaneous signals on two input pins"], "tag": "h2", "senID": 0}, {"text": ["I need to do the following: I have 2 input pins on a microcontroller, and it is possible, that a signal is received on one or the other, but it is also possible that the two will be physically connected on the outside, and the signal arrives on both at the same time."], "tag": "p", "senID": 1}, {"text": ["The problem: if I use something like "], "tag": "p", "senID": 2}, {"code": "<pre>\n<code>\n if (PINB.1 &amp;&amp; PINB.2)\n{\n  // ...\n}\n</code>\n</pre>\n", "senID": 3}, {"text": ["there is the one in a million chance, that the signal arrives between when the two values are loaded into the registers for the logical AND operation to be performed.", "When I leave the if, both the pins are high, but I still detected that only the second one was high."], "tag": "p", "senID": 4}, {"text": ["I tried out different solutions, and the best so far seems to be to start a very short countdown when either of the inputs is high, and when the timer (a few milliseconds at most) runs down, I check again."], "tag": "p", "senID": 5}, {"text": ["Does anyone know a simpler or better solution?", "I thought this problem was very common, but I could not find any \"tried and true\" methods so far."], "tag": "p", "senID": 6}, {"text": ["Edit: I know from the hardware, that after an edge the pin will hold its value for at least a few dozen milliseconds.", "Noise is already been taken care of."], "tag": "p", "senID": 7}, {"text": ["PINB.1 and PINB.2 were just examples.", "They might possibly be on different ports, so bitmasking the whole port might have the risk of not being flexible enough."], "tag": "p", "senID": 8}]