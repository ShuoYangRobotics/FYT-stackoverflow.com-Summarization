[{"text": ["How do you name your filter methods?", "Do you use \"By\" or \"With\"?"], "tag": "h2", "senID": 0}, {"text": ["I am working on a library that will contain many filter methods."], "tag": "p", "senID": 1}, {"text": ["I have seen many project that use this syntax for filters"], "tag": "p", "senID": 2}, {"code": "<pre>\n<code>\n public Foo GetFooByBar(bar);\n</code>\n</pre>\n", "senID": 3}, {"text": ["In other project people use this syntax"], "tag": "p", "senID": 4}, {"code": "<pre>\n<code>\n public Foo GetFooWithBar(bar);\n</code>\n</pre>\n", "senID": 5}, {"text": ["Since this library will be reused by many other developers I wanted to know which one developers feel more comfortable with."], "tag": "p", "senID": 6}, {"text": ["Please let me know which you prefer and if possible why."], "tag": "p", "senID": 7}, {"text": ["Thanks"], "tag": "p", "senID": 8}, {"text": ["EDIT:\nThe first few answers suggest just overloading a GetFoo method to accept various arguments.", "This works well for a standard interface in a language that supports overloading.", "But in my case some I will also have some more fluent apis so I will want to link various filters like this"], "tag": "p", "senID": 9}, {"code": "<pre>\n<code>\n Foo GetFoo().ByBar(bar).ByBaz(Baz); or Foo GetFoo().WithBar(bar).WithBaz(baz);\n</code>\n</pre>\n", "senID": 10}]