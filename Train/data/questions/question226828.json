[{"text": ["C++ constructs replacing C constructs"], "tag": "h2", "senID": 0}, {"text": ["After discussing with a newly arrived developer in my team, I realized that there are still, in C++, habits of using C constructs because they are supposed to be better (i.e.", "faster, leaner, prettier, pick your reason)."], "tag": "p", "senID": 1}, {"text": ["What are the examples worth sharing, showing a C constructs, compared to the similar C++ construct?"], "tag": "p", "senID": 2}, {"text": ["For each example, I need to read the reasons the C++ construct is as good as or even better the original C construct.", "The aim is to offer alternatives to some C constructs that are considered somewhat dangerous/unsafe in C++ code (C++0x valid only answers are accepted as long as clearly marked as C++0x only)."], "tag": "p", "senID": 3}, {"text": ["I'll post below an answer (struct inline initialization) as an example."], "tag": "p", "senID": 4}, {"text": ["Note 1: Please, one answer per case.", "If you have multiple cases, please post multiple answers"], "tag": "p", "senID": 5}, {"text": ["Note 2:This is not a C question.", "Do not add the \"C\" tag to this question.", "This is not supposed to become a fight between C++ and C. Only the study of some constructs of the C subset of C++, and their alternative in other C++ \"toolkits\""], "tag": "p", "senID": 6}, {"text": ["Note 3: This is not a C-bashing question.", "I want reasons.", "Boasting, bashing, and unproven comparisons will be downmodded.", "Mentioning C++ features without a C equivalent could be considered out of topic: I want the put side by side a C feature against a C++ feature."], "tag": "p", "senID": 7}]