[{"text": ["What output and recording ports does the Java Sound API find on your computer?"], "tag": "h2", "senID": 0}, {"text": ["I'm working with the Java Sound API, and it turns out if I want to adjust recording volumes I need to model the hardware that the OS exposes to Java.", "Turns out there's a lot of variety in what's presented. "], "tag": "p", "senID": 1}, {"text": ["Because of this I'm humbly asking that anyone able to help me run the following on their computer and post back the results so that I can get an idea of what's out there. "], "tag": "p", "senID": 2}, {"text": ["A thanks in advance to anyone that can assist :-)"], "tag": "p", "senID": 3}, {"code": "<pre>\n<code>\n import javax.sound.sampled.*;\npublic class SoundAudit {\n  public static void main(String[] args) { try {\n    System.out.println(\"OS: \"+System.getProperty(\"os.name\")+\" \"+\n      System.getProperty(\"os.version\")+\"/\"+\n      System.getProperty(\"os.arch\")+\"\\nJava: \"+\n      System.getProperty(\"java.version\")+\" (\"+\n      System.getProperty(\"java.vendor\")+\")\\n\");\n      for (Mixer.Info thisMixerInfo : AudioSystem.getMixerInfo()) {\n        System.out.println(\"Mixer: \"+thisMixerInfo.getDescription()+\n          \" [\"+thisMixerInfo.getName()+\"]\");\n        Mixer thisMixer = AudioSystem.getMixer(thisMixerInfo);\n        for (Line.Info thisLineInfo:thisMixer.getSourceLineInfo()) {\n            if (thisLineInfo.getLineClass().getName().equals(\n              \"javax.sound.sampled.Port\")) {\n              Line thisLine = thisMixer.getLine(thisLineInfo);\n              thisLine.open();\n              System.out.println(\"  Source Port: \"\n                +thisLineInfo.toString());\n              for (Control thisControl : thisLine.getControls()) {\n                System.out.println(AnalyzeControl(thisControl));}\n              thisLine.close();}}\n        for (Line.Info thisLineInfo:thisMixer.getTargetLineInfo()) {\n          if (thisLineInfo.getLineClass().getName().equals(\n            \"javax.sound.sampled.Port\")) {\n            Line thisLine = thisMixer.getLine(thisLineInfo);\n            thisLine.open();\n            System.out.println(\"  Target Port: \"\n              +thisLineInfo.toString());\n            for (Control thisControl : thisLine.getControls()) {\n              System.out.println(AnalyzeControl(thisControl));}\n            thisLine.close();}}}\n  } catch (Exception e) {e.printStackTrace();}}\n  public static String AnalyzeControl(Control thisControl) {\n    String type = thisControl.getType().toString();\n    if (thisControl instanceof BooleanControl) {\n      return \"    Control: \"+type+\" (boolean)\"; }\n    if (thisControl instanceof CompoundControl) {\n      System.out.println(\"    Control: \"+type+\n        \" (compound - values below)\");\n      String toReturn = \"\";\n      for (Control children:\n        ((CompoundControl)thisControl).getMemberControls()) {\n        toReturn+=\"  \"+AnalyzeControl(children)+\"\\n\";}\n      return toReturn.substring(0, toReturn.length()-1);}\n    if (thisControl instanceof EnumControl) {\n      return \"    Control:\"+type+\" (enum: \"+thisControl.toString()+\")\";}\n    if (thisControl instanceof FloatControl) {\n      return \"    Control: \"+type+\" (float: from \"+\n        ((FloatControl) thisControl).getMinimum()+\" to \"+\n        ((FloatControl) thisControl).getMaximum()+\")\";}\n    return \"    Control: unknown type\";}\n}\n</code>\n</pre>\n", "senID": 4}, {"text": ["All the application does is print out a line about the OS, a line about the JVM, and a few lines about the hardware found that may pertain to recording hardware.", "For example on my PC at work I get the following:"], "tag": "p", "senID": 5}, {"text": ["OS: Windows XP 5.1/x86\nJava: 1.6.0_07 (Sun Microsystems Inc.)"], "tag": "p", "senID": 6}, {"code": "<pre>\nMixer: Direct Audio Device: DirectSound Playback [Primary Sound Driver]\nMixer: Direct Audio Device: DirectSound Playback [SoundMAX HD Audio]\nMixer: Direct Audio Device: DirectSound Capture [Primary Sound Capture Driver]\nMixer: Direct Audio Device: DirectSound Capture [SoundMAX HD Audio]\nMixer: Software mixer and synthesizer [Java Sound Audio Engine]\nMixer: Port Mixer [Port SoundMAX HD Audio]\n  Source Port: MICROPHONE source port\n    Control: Microphone (compound - values below)\n      Control: Select (boolean)\n      Control: Microphone Boost (boolean)\n      Control: Front panel microphone (boolean)\n      Control: Volume (float: from 0.0 to 1.0)\n  Source Port: LINE_IN source port\n    Control: Line In (compound - values below)\n      Control: Select (boolean)\n      Control: Volume (float: from 0.0 to 1.0)\n      Control: Balance (float: from -1.0 to 1.0)\n</pre>\n", "senID": 7}]