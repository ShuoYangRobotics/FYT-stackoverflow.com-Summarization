[{"text": ["Most pythonic way of counting matching elements in something iterable"], "tag": "h2", "senID": 0}, {"text": ["I have an iterable of entries on which I would like to gather some simple statistics, say the count of all numbers divisible by two and the count of all numbers divisible by three."], "tag": "p", "senID": 1}, {"text": ["My first alternative, While only iterating through the list once and avoiding the list expansion (and keeping the split loop refactoring in mind), looks rather bloated:"], "tag": "p", "senID": 2}, {"text": ["(alt 1)"], "tag": "p", "senID": 3}, {"code": "<pre>\n<code>\n r = xrange(1, 10)\n\ntwos = 0\nthrees = 0\n\nfor v in r:\n  if v % 2 == 0:\n    twos+=1\n  if v % 3 == 0:\n    threes+=1\n\nprint twos\nprint threes\n</code>\n</pre>\n", "senID": 4}, {"text": ["This looks rather nice, but has the drawback of expanding the expression to a list:"], "tag": "p", "senID": 5}, {"text": ["(alt 2)"], "tag": "p", "senID": 6}, {"code": "<pre>\n<code>\n r = xrange(1, 10)\n\nprint len([1 for v in r if v % 2 == 0])\nprint len([1 for v in r if v % 3 == 0])\n</code>\n</pre>\n", "senID": 7}, {"text": ["What I would really like is something like a function like this:"], "tag": "p", "senID": 8}, {"text": ["(alt 3)"], "tag": "p", "senID": 9}, {"code": "<pre>\n<code>\n def count(iterable):\n  n = 0\n  for i in iterable:\n    n += 1\n  return n\n\nr = xrange(1, 10)\n\nprint count(1 for v in r if v % 2 == 0)\nprint count(1 for v in r if v % 3 == 0)\n</code>\n</pre>\n", "senID": 10}, {"text": ["But this looks a lot like something that could be done without a function.", "The final variant is this:"], "tag": "p", "senID": 11}, {"text": ["(alt 4)"], "tag": "p", "senID": 12}, {"code": "<pre>\n<code>\n r = xrange(1, 10)\n\nprint sum(1 for v in r if v % 2 == 0)\nprint sum(1 for v in r if v % 3 == 0)\n</code>\n</pre>\n", "senID": 13}, {"text": ["and while the smallest (and in my book probably the most elegant) it doesn't feel like it expresses the intent very well."], "tag": "p", "senID": 14}, {"text": ["So, my question to you is:"], "tag": "p", "senID": 15}, {"text": ["Which alternative do you like best to gather these types of stats?", "Feel free to supply your own alternative if you have something better."], "tag": "p", "senID": 16}, {"text": ["To clear up some confusion below:"], "tag": "p", "senID": 17}, {"tag": "ul", "num": 3, "lis": [{"text": "In reality my filter predicates are more complex than just this simple test.", "tag": "none", "senID": 18}, {"text": "The objects I iterate over are larger and more complex than just numbers", "tag": "none", "senID": 19}, {"text": "My filter functions are more different and hard to parameterize into one predicate", "tag": "none", "senID": 20}]}]